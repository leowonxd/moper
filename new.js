$config = {
  gameVersion: 277,
  isTestingMode: true,
  env: "staging",
  isBetaMode: false,
  isProduction: true,
  useDevAccountServer: true,
  devAccountServerUrl: "https://edge-accounts.mope.io",
  turnstileKey: "0x4AAAAAAAxNgd99O5KdPkC7",
  authentication: {
    discord: "1282395552033669223",
    facebook: "482002344741952",
    google: "621635022753-n0ibkufm9ssukvk7c77rjv2ubn2abk80.apps.googleusercontent.com",
    apple: "io.mope.live.auth"
  },
  gameServers: [{
    id: "staging-mope-us",
    name: "Mope Staging US",
    url: "edge-gameserver.mope.io",
    region: "New York, USA",
    gm: 0
  }]
};
$bus = {
  emit: (_0x20095c, ..._0x6b9f7f) => {},
  use: (_0x1458d0, ..._0x497b67) => {},
  on: (_0x14e8b6, _0x4ec57f) => {},
  CONSTANTS: {
    AD_SCREEN_LAYOUTS: {
      UPGRADE: "UPGRADE",
      ARENA: "ARENA",
      MENU: "MENU",
      NONE: "NONE"
    },
    AD_PROVIDERS: {},
    AD_IDS: {},
    PROVIDER_PRIORITY: [],
    AD_PLACEMENT_IDS: {}
  },
  EVENTS: {
    UPDATES_TEXT: "UPDATES_TEXT",
    XSOLLA_PAYMENT_FINISHED: "XSOLLA_PAYMENT_FINISHED",
    SHOP_SETTING_CHANGED: "SHOP_SETTING_CHANGED",
    UI_SELECTED_IN_APP_PURCHASE_ITEM: "UI_SELECTED_IN_APP_PURCHASE_ITEM",
    UI_ELEMENT_CLICKED: "UI_ELEMENT_CLICKED",
    UI_SPECTATE: "UI_SPECTATE",
    UI_SHOP_SETTING_ACTION: "UI_SHOP_SETTING_ACTION",
    UI_OPEN_XSOLLA_SHOP: "UI_OPEN_XSOLLA_SHOP",
    UI_PURCHASE_SHOP_ITEM: "UI_PURCHASE_SHOP_ITEM",
    UI_PRESS_LOGOUT: "UI_PRESS_LOGOUT",
    UI_PRESS_SETTING: "UI_PRESS_SETTING",
    UI_CHANGE_SERVER: "UI_CHANGE_SERVER",
    UI_PRESS_PLAY: "UI_PRESS_PLAY",
    UI_SET_GRAPHICS: "UI_SET_GRAPHICS",
    UI_SET_NO_ANIMAL_IMAGES_FLAG: "UI_SET_NO_ANIMAL_IMAGES_FLAG",
    UI_SET_NO_NAMES_FLAG: "UI_SET_NO_NAMES_FLAG",
    UI_SET_NO_XP_POPUP_FLAG: "UI_SET_NO_XP_POPUP_FLAG",
    UI_SET_SOUND_FLAG: "UI_SET_SOUND_FLAG",
    UI_SET_SNOWFALL: "UI_SET_SNOWFALL",
    UI_START_SERVER_SELECT: "UI_START_SERVER_SELECT",
    UI_SELECT_SERVER: "UI_SELECT_SERVER",
    UI_SELECT_GAMEMODE: "UI_SELECT_GAMEMODE",
    UI_LOGIN_WITH_TEST_ACCOUNT: "UI_LOGIN_WITH_TEST_ACCOUNT",
    UI_SET_NO_JOYSTICK: "UI_SET_NO_JOYSTICK",
    UI_SET_LEFT_HANDED: "UI_SET_LEFT_HANDED",
    UI_SET_NO_TEXTURES: "UI_SET_NO_TEXTURES",
    UI_SET_SHOW_GRID: "UI_SET_SHOW_GRID",
    UI_TEST_BUTTON_CLICKED_ADD_COINS: "UI_TEST_BUTTON_CLICKED_ADD_COINS",
    UI_TEST_BUTTON_CLICKED_RESET_PURCHASES: "UI_TEST_BUTTON_CLICKED_RESET_PURCHASES",
    UI_TEST_BUTTON_CLICKED_USE_TEST_ACCOUNT: "UI_TEST_BUTTON_CLICKED_USE_TEST_ACCOUNT",
    UI_CHOSE_ANIMAL: "UI_CHOSE_ANIMAL",
    UI_PRESS_ABILITY_BUTTON: "UI_PRESS_ABILITY_BUTTON",
    UI_PRESSED_ENTER: "UI_PRESSED_ENTER",
    SET_OWN_SCORE: "SET_OWN_SCORE",
    SET_LEADERBOARD: "SET_LEADERBOARD",
    SHOW_UPDATES: "SHOW_UPDATES",
    FOOTER_STATE: "FOOTER_STATE",
    START_GAME: "START_GAME",
    CONNECTING_TO_GAME: "CONNECTING_TO_GAME",
    CONNECTED_TO_GAME: "CONNECTED_TO_GAME",
    JOINING_GAME: "JOINING_GAME",
    JOINED_GAME: "JOINED_GAME",
    ENDED_GAME: "ENDED_GAME",
    STARTED_GAME: "STARTED_GAME",
    RESET_GAME: "RESET_GAME",
    PLAYER_ACCOUNT_DATA: "PLAYER_ACCOUNT_DATA",
    TOGGLE_MENU_VISIBILITY: "TOGGLE_MENU_VISIBILITY",
    START_SOCIAL_AUTHENTICATION: "START_SOCIAL_AUTHENTICATION",
    FINISH_SOCIAL_AUTHENTICATION: "FINISH_SOCIAL_AUTHENTICATION",
    LOGIN_SUCCESS: "LOGIN_SUCCESS",
    LOGIN_FAILED: "LOGIN_FAILED",
    LOGOUT_FAILED: "LOGOUT_FAILED",
    LOADED_SHOP_DATA: "LOADED_SHOP_DATA",
    IN_APP_PURCHASE_GO_TO_PROCESSING: "IN_APP_PURCHASE_GO_TO_PROCESSING",
    LOGOUT: "LOGOUT",
    LOGOUT_COMPLETE: "LOGOUT_COMPLETE",
    FAILED_TO_LOAD_SHOP_DATA: "FAILED_TO_LOAD_SHOP_DATA",
    NEW_COINS_AMOUNT: "NEW_COUNS_AMOUNT",
    PING_TEST_FINISH: "PING_TEST_FINISH",
    CLIENT_UPDATED_PLAYERNAME: "CLIENT_UPDATED_PLAYERNAME",
    UI_UPDATED_PLAYERNAME: "UI_UPDATED_PLAYERNAME",
    PURCHASE_ITEM_RESPONSE: "PURCHASE_ITEM_RESPONSE",
    LOADED_XSOLLA_IFRAME_SRC: "LOADED_XSOLLA_IFRAME_SRC",
    SERVER_SET: "SERVER_SET",
    SET_SERVER_LIST: "SET_SERVER_LIST",
    SET_GAME_MODES: "SET_GAME_MODES",
    ENABLE_TESTING: "ENABLE_TESTING",
    INITIALIZED_SETTINGS_PREFS: "INITIALIZED_SETTINGS_PREFS",
    INITIALIZE_DEFAULT_GRAPHICS_LEVEL: "INITIALIZE_DEFAULT_GRAPHICS_LEVEL",
    START_VIDEO_AD: "START_VIDEO_AD",
    END_VIDEO_AD: "END_VIDEO_AD",
    SET_AD_VISIBILITY: "SET_AD_VISIBILITY",
    HIDE_ALL_ADS: "HIDE_ALL_ADS",
    PLAY_CLICK_SOUND: "PLAY_CLICK_SOUND",
    RECEIVED_IN_APP_PURCHASE_DATA: "RECEIVED_IN_APP_PURCHASE_DATA",
    IN_APP_PURCHASE_SUCCESS: "IN_APP_PURCHASE_SUCCESS",
    IN_APP_PURCHASE_FAILED: "IN_APP_PURCHASE_FAILED",
    IN_APP_PURCHASE_CANCELLED: "IN_APP_PURCHASE_CANCELLED",
    FINISH_AUTHENTICATION_RESTORE_CHECK: "FINISH_AUTHENTICATION_RESTORE_CHECK",
    HIDE_ANIMAL_CHOICE: "HIDE_ANIMAL_CHOICE",
    ANIMAL_CHOICE_START: "ANIMAL_CHOICE_START",
    ANIMAL_CHOICE_CONFIRMED: "ANIMAL_CHOICE_CONFIRMED",
    INITIALIZED_MOBILE_FLAGS: "INITIALIZED_MOBILE_FLAGS",
    GAME_NEXT_LEVEL_UP_AT_EXPERIENCE_UPDATED: "GAME_NEXT_LEVEL_UP_AT_EXPERIENCE_UPDATED",
    GAME_CURRENT_EXPERIENCE_UPDATED: "GAME_CURRENT_EXPERIENCE_UPDATED",
    GAME_WATER_UPDATED: "GAME_WATER_UPDATED",
    GAME_WATER_TYPE_UPDATED: "GAME_WATER_TYPE_UPDATED",
    GAME_SET_PLAYER_ALIVE: "GAME_SET_PLAYER_ALIVE",
    UPDATED_EXPERIENCE_BAR_POSITION: "UPDATED_EXPERIENCE_BAR_POSITION",
    SET_MAIN_ABILITY_USABILITY: "SET_MAIN_ABILITY_USABILITY",
    SET_RIGHT_CLICK_ABILITY: "SET_RIGHT_CLICK_ABILITY",
    SHOW_ANIMAL_TUTORIAL: "SHOW_ANIMAL_TUTORIAL",
    SET_PLAYER_TEAM: "SET_PlAYER_TEAM",
    SET_APOCALYPSE_ONGOING: "SET_APOCALYPSE_ONGOING",
    SET_STONE_BUFFS: "SET_STONE_BUFFS",
    ENABLE_PLAY_BUTTON: "ENABLE_PLAY_BUTTON",
    ENABLE_SERVER_CONTROLS: "ENABLE_SERVER_CONTROLS",
    DISABLE_PLAY_BUTTON: "DISABLE_PLAY_BUTTON",
    DISABLE_SERVER_CONTROLS: "DISABLE_SERVER_CONTROLS",
    HANDLE_INCENTIVIZED_AD: "HANDLE_INCENTIVZED_AD",
    SHOW_INCENTIVIZED_AD_POPUP: "SHOW_INCENTIVIZED_AD_POPUP",
    GET_INCENTIVIZED_AD_SKINS: "GET_INCENTIVIZED_AD_SKINS",
    SET_INCENTIVIZED_AD_SKINS: "GET_INCENTIVIZED_AD_SKINS",
    REQUEST_INCENTIVIZED_AD: "REQUEST_INCENTIVIZED_AD",
    PLAYING_WEBSITE_INCENTIVIZED_AD: "PLAYING_WEBSITE_INCENTIVIZED_AD",
    FINISHED_INCENTIVIZED_AD: "FINISHED_INCENTIVIZED_AD",
    ADD_SHOP_ITEM: "ADD_SHOP_ITEM",
    SHOW_VIDEO_AD: "SHOW_VIDEO_AD",
    HIDE_VIDEO_AD: "HIDE_VIDEO_AD",
    UI_INITIALIZE_MINI_MAP: "UI_INITIALIZE_MINI_MAP",
    UI_UPDATE_MINI_MAP: "UI_UPDATE_MINI_MAP",
    UI_SET_PLAYERS_ONLINE: "UI_SET_PLAYERS_ONLINE",
    UI_SET_FPS: "UI_SET_FPS",
    UI_SET_PING: "UI_SET_PING",
    UI_SET_SESSION_COINS: "UI_SET_SESSION_COINS",
    UI_SET_PLAYER_POWERUPS: "UI_SET_PLAYER_POWERUPS",
    SET_ABILITY_W: "SET_ABILITY_W",
    SET_ABILITY_W_COOLDOWN: "SET_ABILITY_W_COOLDOWN",
    SET_ABILITY_W_ASSET: "SET_ABILITY_W_ASSET",
    SET_ABILITY_S: "SET_ABILITY_S",
    SET_ABILITY_S_COOLDOWN: "SET_ABILITY_S_COOLDOWN",
    SET_ABILITY_S_ASSET: "SET_ABILITY_S_ASSET",
    ABILITY_PRESS: "ABILITY_PRESS",
    TOGGLE_CHAT: "TOGGLE_CHAT",
    SHOW_ONE_V_ONE_BUTTON: "SHOW_ONE_V_ONE_BUTTON",
    ONE_V_ONE: "ONE_V_ONE",
    SET_ONE_V_ONE_COOLDOWN: "SET_ONE_V_ONE_COOLDOWN",
    BLOCK_PLAYER_MOVEMENT: "BLOCK_PLAYER_MOVEMENT",
    SET_SPECTATOR_MODE: "SET_SPECTATOR_MODE",
    CLAIM_REWARD: "CLAIM_REWARD",
    UI_DELETE_ACCOUNT: "UI_DELETE_ACCOUNT",
    CLEAR_LOCAL_DATA: "CLEAR_LOCAL_DATA",
    PLAYER_POWERUPS: "PLAYER_POWERUPS",
    PURCHASE_POWERUP: "PURCHASE_POWERUP",
    ACTIVATE_POWERUP: "ACTIVATE_POWERUP",
    PLAYER_POWERUPS_HIDE: "PLAYER_POWERUPS_HIDE"
  }
};
console.log("\n\n\n");
console.log("--------------------------------------------");
console.log("");
console.log("#    #  ####  #####  ######     #  ####");
console.log("##  ## #    # #    # #          # #    #");
console.log("# ## # #    # #    # #####      # #    #");
console.log("#    # #    # #####  #      ### # #    #");
console.log("#    # #    # #      #      ### # #    #");
console.log("#    #  ####  #      ###### ### #  ####");
console.log("___ Mope.ioâ„¢ Copyright (2017-present) Mopeio Ltd. ___");
console.log("--------------------------------------------");
const a0_0x185235 = typeof localStorage !== "undefined" && !!localStorage;
const a0_0xd28650 = $config.isTestingMode && a0_0x5c9ce1;
let a0_0x2a914b = a0_0xd28650;
if (a0_0xd28650) {
  const a0_0x4912b1 = document.createElement("div");
  a0_0x4912b1.style.zIndex = "999999999";
  a0_0x4912b1.style.zIndex = "999999999";
  a0_0x4912b1.style.left = "0px";
  a0_0x4912b1.style.bottom = "0px";
  a0_0x4912b1.style.width = "100%";
  a0_0x4912b1.style.position = "fixed";
  a0_0x4912b1.style.position = "fixed";
  a0_0x4912b1.style.height = "150px";
  a0_0x4912b1.style.maxHeight = "150px";
  const a0_0x59cde0 = document.createElement("div");
  const a0_0x12353d = document.createElement("div");
  a0_0x4912b1.appendChild(a0_0x59cde0);
  a0_0x4912b1.appendChild(a0_0x12353d);
  const a0_0x3c8cc8 = "25px";
  a0_0x59cde0.style.position = "absolute";
  a0_0x59cde0.style.right = "1px";
  a0_0x59cde0.style.backgroundColor = "rgba(255, 255, 255, .9)";
  a0_0x59cde0.style.color = "black";
  a0_0x59cde0.style.top = "-" + a0_0x3c8cc8;
  a0_0x59cde0.style.cursor = "pointer";
  a0_0x59cde0.style.width = a0_0x3c8cc8;
  a0_0x59cde0.style.height = a0_0x3c8cc8;
  a0_0x59cde0.style.minWidth = a0_0x3c8cc8;
  a0_0x59cde0.style.minHeight = a0_0x3c8cc8;
  a0_0x59cde0.style.maxWidth = a0_0x3c8cc8;
  a0_0x59cde0.style.maxHeight = a0_0x3c8cc8;
  a0_0x59cde0.style.display = "flex";
  a0_0x59cde0.style.justifyContent = "center";
  a0_0x59cde0.style.alignItems = "center";
  a0_0x59cde0.textContent = "-";
  const a0_0x4490fc = () => {
    a0_0x2a914b = !a0_0x2a914b;
    if (a0_0x2a914b) {
      a0_0x4912b1.style.bottom = "0px";
      a0_0x59cde0.textContent = "-";
    } else {
      a0_0x4912b1.style.bottom = "-150px";
      a0_0x59cde0.textContent = "+";
    }
  };
  a0_0x59cde0.addEventListener("pointerup", () => {
    a0_0x4490fc();
  });
  document.body.appendChild(a0_0x4912b1);
  a0_0x12353d.style.left = "0px";
  a0_0x12353d.style.bottom = "0px";
  a0_0x12353d.style.position = "absolute";
  a0_0x12353d.style.width = "100%";
  a0_0x12353d.style.height = "150px";
  a0_0x12353d.style.maxHeight = "150px";
  a0_0x12353d.style.opacity = ".6";
  a0_0x12353d.style.backgroundColor = "black";
  a0_0x12353d.style.color = "white";
  a0_0x12353d.style.display = "flex";
  a0_0x12353d.style.flexDirection = "column";
  a0_0x12353d.style.overflowX = "scroll";
  a0_0x12353d.style.pointerEvents = "auto";
  const a0_0x5a5d8d = console.log.bind(console);
  const a0_0x4f6a01 = console.error.bind(console);
  const a0_0x59da96 = [];
  const a0_0x21afb3 = _0x5033eb => {
    if (a0_0x59da96.length > 100) {
      const _0x54790a = a0_0x59da96[0];
      _0x54790a.remove();
      a0_0x59da96.shift();
    }
    const _0x4abe97 = document.createElement("DIV");
    _0x4abe97.innerText = _0x5033eb.join(" ");
    _0x4abe97.style.fontSize = "10px";
    _0x4abe97.style.marginBottom = "3px";
    const _0x2a653a = a0_0x12353d.scrollHeight <= a0_0x12353d.scrollTop + a0_0x12353d.getBoundingClientRect().height || a0_0x12353d.scrollHeight == 0;
    a0_0x12353d.appendChild(_0x4abe97);
    if (_0x2a653a) {
      a0_0x12353d.scrollTop = a0_0x12353d.scrollHeight;
    }
    a0_0x59da96.push(_0x4abe97);
    return _0x4abe97;
  };
  console.log = function () {
    var _0x1718f1 = Array.prototype.slice.call(arguments);
    a0_0x21afb3(_0x1718f1);
    a0_0x5a5d8d.apply(console, _0x1718f1);
  };
  console.error = function () {
    var _0xc22f02 = Array.prototype.slice.call(arguments);
    const _0x18e8cf = a0_0x21afb3(_0xc22f02);
    _0x18e8cf.style.color = "red";
    a0_0x4f6a01.apply(console, _0xc22f02);
  };
  a0_0x4490fc();
}
const a0_0x3ee1ec = $config.gameVersion;
const a0_0x8418ab = $config.isTestingMode;
console.log("Is Testing mode: ", a0_0x8418ab);
const a0_0x4bd42e = $config.isBetaMode;
console.log("Is beta mode: ", a0_0x4bd42e);
const a0_0x39c864 = true;
console.log("-----------Game Version " + a0_0x3ee1ec + (a0_0x4bd42e ? " (BETA)" : "") + " ----------------");
try {
  const a0_0xfaa5d0 = document.getElementById("mope-footer");
  const a0_0x1576c4 = document.getElementById("mope-app-store-btn-apple");
  const a0_0x58b0f0 = a0_0xfaa5d0 && a0_0x1576c4;
  if (a0_0x58b0f0) {
    if (!a0_0x952d77 && !a0_0x53e40a) {
      a0_0x1576c4.style.visibility = "visible";
    } else {
      a0_0x1576c4.remove();
      const a0_0x2b6f3b = document.getElementsByClassName("Footer__social-media");
      if (a0_0x2b6f3b && a0_0x2b6f3b[0]) {
        a0_0x2b6f3b[0].style.minWidth = "524px";
        a0_0x2b6f3b[0].style.width = "524px";
        a0_0x2b6f3b[0].style.maxWidth = "524px";
      }
    }
  }
} catch (a0_0x444159) {}
window.onerror = function (_0x3ffd29, _0x13f998, _0x4cd4da) {
  if (a0_0x8418ab) {}
};
let a0_0x4cde34 = "https://mope-accountserver-do.mope.io";
const a0_0x45f126 = $config.useDevAccountServer ? $config.devAccountServerUrl : a0_0x4cde34;
console.log("Account server domain became:", a0_0x45f126);
const a0_0x30b084 = 2;
const a0_0x4db98f = 1;
const a0_0x50c536 = 3;
var a0_0x1bed8b = 0;
var a0_0x2f0085 = 1;
var a0_0x5fac87 = 2;
var a0_0x282b9e = 3;
var a0_0xc64a03 = 4;
var a0_0x3938a2 = 5;
const a0_0x8fdced = 1000;
const a0_0x57833e = false;
const a0_0x3e3f1c = true;
const a0_0xd978fe = 120;
const a0_0x15a58b = 1000 / a0_0xd978fe;
function a0_0x41d402() {
  reg = "SANDBOX";
  a0_0x3c4364("LOCAL", "localhost", reg);
}
var a0_0x8754c5 = 1;
var a0_0x4cdd2f = 2;
var a0_0x3b18ad = 3;
var a0_0x4a0c49 = 4;
var a0_0x3e8260 = 5;
var a0_0x28a121 = 6;
var a0_0x4c5411 = 7;
var a0_0x16d87e = 8;
var a0_0x9ffcd6 = 9;
var a0_0x4adb89 = 10;
var a0_0x58f06c = 11;
var a0_0x500922 = 12;
var a0_0x3d337b = 13;
var a0_0x266c4a = 14;
var a0_0x1b6465 = 15;
var a0_0x25cdba = 16;
var a0_0x503f03 = 17;
var a0_0x411f81 = 18;
var a0_0x48788e = 19;
var a0_0x27993e = 20;
const a0_0x55ca43 = 1;
const a0_0x19900a = 2;
const a0_0x52c990 = 3;
const a0_0x42f375 = 4;
const a0_0x1cc33a = 5;
const a0_0x269819 = 6;
const a0_0x216be2 = 7;
const a0_0xf57be7 = 8;
const a0_0x31f050 = 9;
const a0_0x2867fc = 10;
const a0_0x319850 = 11;
const a0_0x5969f9 = 12;
const a0_0x4a19f0 = 13;
const a0_0xc501b = 14;
const a0_0x4591ac = 15;
const a0_0x5f28ca = 16;
const a0_0x5bcdd7 = 17;
const a0_0x7780d0 = 18;
const a0_0xceb0b8 = 19;
const a0_0x4ffebc = 20;
const a0_0x1b73d8 = 21;
const a0_0x30ff74 = 22;
const a0_0x7caebd = 23;
const a0_0x59b565 = 24;
const a0_0x494c09 = 25;
const a0_0x27f3ba = 26;
const a0_0x560144 = 27;
const a0_0x329353 = 28;
const a0_0x1eed6c = 29;
const a0_0x8634d6 = 30;
const a0_0x60249e = 31;
const a0_0x245b40 = 32;
const a0_0x11e112 = 33;
const a0_0x3b1f31 = 34;
const a0_0x36b49c = 35;
const a0_0x31a989 = 36;
const a0_0x3a611b = 37;
const a0_0x10c2f0 = 38;
const a0_0x55939c = 39;
const a0_0xb41eb3 = 40;
const a0_0x5cf592 = 41;
const a0_0x172853 = 42;
const a0_0x40d85e = 43;
const a0_0x3d96e0 = 44;
const a0_0xc9f5b0 = 45;
const a0_0xbbca08 = 46;
const a0_0x4a5266 = 47;
const a0_0x308313 = 48;
const a0_0x4bec60 = 49;
const a0_0x4398ce = 50;
const a0_0xee74c1 = 51;
const a0_0x12b74d = 52;
const a0_0x34181a = 53;
const a0_0x502537 = 54;
const a0_0x3c2a27 = 55;
const a0_0x356073 = 56;
const a0_0x45c9c9 = 57;
const a0_0x5e1684 = 58;
const a0_0x474313 = 59;
const a0_0x1d1d38 = 60;
const a0_0xc1c42a = 61;
const a0_0x3a13d0 = 62;
const a0_0x1ed0cc = 63;
const a0_0x45e360 = 64;
const a0_0x3b8b53 = 65;
const a0_0x41a115 = 66;
const a0_0x1a4262 = 67;
const a0_0x1d0725 = 68;
const a0_0x1ade75 = 69;
const a0_0x46e595 = 70;
const a0_0x1bcd6d = 71;
const a0_0x381f26 = 72;
const a0_0x112239 = 73;
const a0_0x10d897 = 74;
const a0_0x115b85 = 75;
const a0_0x11dd56 = 76;
const a0_0x1a7750 = 77;
const a0_0x39950f = 78;
const a0_0x34cceb = 79;
const a0_0x2677b6 = 80;
const a0_0x5f5215 = 81;
const a0_0x530c63 = 82;
const a0_0x27c36a = 83;
const a0_0x594129 = 84;
const a0_0x185bca = 85;
const a0_0x44ec4c = 86;
const a0_0x417eac = 87;
const a0_0x1304ff = 88;
const a0_0x5cd13d = 89;
const a0_0x256382 = 90;
const a0_0x1ffef4 = 91;
const a0_0x3eec29 = 92;
const a0_0x41aa15 = 93;
const a0_0x40b66c = 94;
const a0_0x288550 = 95;
const a0_0x41ccdf = 96;
const a0_0x1660e3 = 97;
const a0_0x992197 = 98;
const a0_0x1627e5 = 99;
const a0_0x635674 = 100;
const a0_0x403267 = 101;
const a0_0x196eb0 = 102;
const a0_0x54473e = 103;
const a0_0x1c0681 = 104;
const a0_0x2d9877 = 105;
const a0_0x5f54ce = 106;
const a0_0x297a9b = 107;
const a0_0x3863ba = 108;
const a0_0x5b4728 = 109;
const a0_0x5a5765 = 110;
const a0_0x2d5395 = 111;
const a0_0x41580c = 112;
const a0_0x39b6fe = 113;
const a0_0x1ba735 = 114;
const a0_0x1581d8 = 115;
const a0_0x503b51 = 116;
const a0_0x10bf48 = 117;
const a0_0x40365c = 118;
const a0_0x46b48e = 119;
const a0_0x2b1fd1 = 120;
const a0_0x1b6e23 = 121;
const a0_0x1d5438 = 122;
var a0_0x37feb7 = 1;
var a0_0x1370b8 = 2;
var a0_0x225e01 = 3;
var a0_0x9b2337 = 4;
var a0_0x21686d = 5;
var a0_0x5d72fa = 6;
var a0_0x129130 = 7;
var a0_0x38253a = 8;
var a0_0x579937 = 9;
var a0_0x1fa0cc = 10;
var a0_0x11bb63 = 11;
var a0_0x6632a8 = 12;
var a0_0x1344db = 13;
var a0_0x20e6c5 = 14;
var a0_0x52c53f = 15;
var a0_0x30fa27 = 16;
var a0_0xcc5001 = 17;
var a0_0xb5f095 = 18;
var a0_0x4cf953 = 19;
var a0_0x26d26c = 20;
var a0_0x5f1003 = 21;
var a0_0x4733ad = 22;
var a0_0x7fd6bc = 23;
var a0_0x5ca180 = 24;
var a0_0x331924 = 25;
var a0_0x4a0860 = 26;
var a0_0x18b147 = 27;
var a0_0x105313 = 28;
var a0_0x46c550 = 29;
var a0_0xd897ba = 30;
var a0_0xdd316d = 31;
var a0_0x3b275c = 32;
var a0_0x308061 = 33;
var a0_0x239558 = 34;
var a0_0x4243b3 = 35;
var a0_0x4f9ab6 = 36;
var a0_0x502c51 = 37;
var a0_0xe5fc06 = 38;
var a0_0x557e7b = 39;
var a0_0x585d48 = 40;
var a0_0x241128 = 42;
var a0_0x3e2601 = 43;
var a0_0x572af7 = 44;
var a0_0x4230b4 = 46;
var a0_0x4459f0 = 47;
var a0_0x54352a = 48;
var a0_0x33ec82 = 49;
var a0_0x29dfd6 = 50;
var a0_0x1be211 = 51;
var a0_0x4d8272 = 52;
var a0_0x2537f6 = 53;
var a0_0x138652 = 54;
var a0_0x220ae1 = 55;
var a0_0x5124d4 = 56;
var a0_0x4b80cb = 57;
var a0_0x120b7c = 58;
var a0_0x48c314 = 59;
var a0_0x377b38 = 60;
var a0_0x512954 = 61;
var a0_0x4c7c24 = 62;
var a0_0x23ce82 = 63;
var a0_0x1523e3 = 64;
var a0_0x1b54d5 = 65;
var a0_0x53d1e5 = 66;
var a0_0x2068b8 = 67;
var a0_0x38c409 = 68;
var a0_0x4b40ca = 69;
var a0_0x23c396 = 70;
var a0_0x383432 = 71;
var a0_0x77e380 = 72;
var a0_0x16d4d2 = 73;
var a0_0x4ece86 = 74;
var a0_0x2be05c = 75;
var a0_0x1de546 = 76;
var a0_0x1374ac = 77;
var a0_0x44bd21 = 78;
var a0_0x2cd8a2 = 79;
var a0_0x32cc03 = 80;
var a0_0x29c115 = 81;
var a0_0xc65734 = 82;
var a0_0x440a0a = 83;
var a0_0x2001d2 = 84;
var a0_0x2e4522 = 85;
var a0_0x40223a = 86;
var a0_0x6e79ef = 87;
var a0_0x447d2a = 88;
var a0_0xb6eb9e = 89;
var a0_0x380b7 = 90;
var a0_0x8061ff = 91;
var a0_0x53272b = 92;
var a0_0x538c88 = 93;
var a0_0x26f502 = 94;
var a0_0x1dd92a = 95;
var a0_0x1f7a07 = 96;
var a0_0x1eff53 = 97;
var a0_0x592fe7 = 98;
var a0_0x2d0828 = 99;
var a0_0x2ecc74 = 100;
var a0_0x3e3fb1 = 101;
var a0_0x180b81 = 102;
var a0_0x5d1ea1 = 103;
var a0_0x5d6cd8 = 104;
var a0_0x380492 = 105;
var a0_0xdc6575 = 106;
var a0_0x187466 = 107;
var a0_0x2e633f = 108;
var a0_0x3d3e1a = 109;
var a0_0x3ed524 = 110;
var a0_0x340346 = 111;
var a0_0x2f9861 = 112;
var a0_0x4c8a27 = 113;
var a0_0x5c2f42 = 114;
var a0_0x41f90c = 115;
var a0_0x144ab2 = 116;
var a0_0x5ec541 = 117;
var a0_0x26b566 = 118;
var a0_0x2a8089 = 119;
var a0_0x534c05 = 122;
var a0_0x10c87b = 123;
var a0_0xf03a9e = 125;
var a0_0x10c81e = 150;
var a0_0xa5d548 = {
  customClassesForOType: {},
  setClassForAnimalType: function (_0x34f6a5, _0x206459) {
    this.setCustomClassForGameObjType(_0x34f6a5, a0_0x1370b8, _0x206459);
  },
  setClassForAnimalBodyType: function (_0xebc216, _0x4818ed) {
    this.setCustomClassForGameObjType(_0xebc216, a0_0x5ec541, _0x4818ed);
  },
  setCustomClassForGameObjType: function (_0x5f2d08, _0x42625f, _0x18f038) {
    if (!this.customClassesForOType[_0x42625f]) {
      this.customClassesForOType[_0x42625f] = {
        oTypeMainClass: null,
        secondaryTypeClasses: {}
      };
    }
    var _0x259ec3 = this.customClassesForOType[_0x42625f];
    if (_0x18f038 == null) {
      if (_0x259ec3.oTypeMainClass != null) {
        console.log("ERROR 'GameObjType.setCustomClassForGameObjType': a class (" + this.customClassesForOType[_0x42625f] + ") is already set for oType " + _0x42625f + "! Check for duplicate calls!");
      }
      _0x259ec3.oTypeMainClass = _0x5f2d08;
    } else {
      if (_0x18f038 in _0x259ec3.secondaryTypeClasses) {
        console.log("ERROR 'GameObjType.setCustomClassForGameObjType': a class is already set for oType " + _0x42625f + " AND secondaryType (eg. animalType) " + _0x18f038 + "! Check for duplicate calls!");
      }
      _0x259ec3.secondaryTypeClasses[_0x18f038] = _0x5f2d08;
    }
    this.onClassSet(_0x5f2d08, _0x42625f, _0x18f038);
  },
  getClassForGameObjType: function (_0x5e1efc, _0x33e29a) {
    if (_0x5e1efc in this.customClassesForOType) {
      var _0x263b65 = this.customClassesForOType[_0x5e1efc];
      if (_0x33e29a == null || _0x33e29a == 0) {
        return _0x263b65.oTypeMainClass;
      } else if (_0x33e29a in _0x263b65.secondaryTypeClasses) {
        return _0x263b65.secondaryTypeClasses[_0x33e29a];
      } else {
        return _0x263b65.oTypeMainClass;
      }
    } else {
      return a0_0x12658e;
    }
  },
  newlyVis_createGameObjFromMsg: function (_0x4b68e7) {
    var _0x252578 = _0x4b68e7.readUInt16();
    var _0x3bcc5e = null;
    if (a0_0x3636bd[_0x252578] != null && a0_0x3636bd[_0x252578] !== undefined) {
      _0x3bcc5e = _0x4b68e7.readUInt16();
    }
    var _0x4b5841 = a0_0xa5d548.createGameObjOfOType(_0x252578, _0x3bcc5e);
    _0x4b5841.worldUpd_readMsgNewlyVisible(_0x4b68e7, _0x252578, _0x3bcc5e);
    return _0x4b5841;
  },
  hasCustomClasses: function (_0x193bcd) {},
  createGameObjOfOType: function (_0x328ea2, _0x194052) {
    var _0x46d23f = this.getClassForGameObjType(_0x328ea2, _0x194052);
    var _0x3571c9 = new _0x46d23f(_0x328ea2, _0x194052);
    return _0x3571c9;
  },
  onClassSet: function (_0x5e47fa) {},
  addCustomClassType: function (_0x3abe50) {
    if (a0_0x3636bd[_0x3abe50] == undefined) {
      a0_0x3636bd[_0x3abe50] = _0x3abe50;
    }
  }
};
var a0_0x3636bd = {};
a0_0xa5d548.addCustomClassType(a0_0x1370b8);
a0_0xa5d548.addCustomClassType(a0_0x5ec541);
a0_0xa5d548.addCustomClassType(a0_0x20e6c5);
var a0_0x4083f6 = 1;
var a0_0x151054 = 2;
var a0_0x3d5a13 = 3;
var a0_0x2d73e5 = 4;
var a0_0x31131a = 5;
var a0_0x2347de = 6;
var a0_0x4f39e9 = 7;
var a0_0x1a694e = 8;
var a0_0x54d85e = 9;
var a0_0x5a613b = 10;
var a0_0x20917b = 11;
var a0_0x32eb58 = 12;
var a0_0x93d1ea = 13;
var a0_0x256160 = 14;
var a0_0x722c30 = 15;
var a0_0x5e41c4 = 16;
var a0_0xce170f = 17;
var a0_0x464b86 = 18;
var a0_0x30aa6a = 19;
var a0_0x56d530 = 20;
var a0_0x58bf2a = 21;
var a0_0x1f8603 = 22;
var a0_0x574c01 = 23;
var a0_0x4e6cde = 24;
var a0_0x265cfd = 25;
var a0_0x434da0 = 26;
var a0_0x9f5ea7 = 27;
var a0_0x18ddf3 = 28;
var a0_0x2aaf90 = 29;
var a0_0x3bbebf = 30;
var a0_0x1218ca = 31;
var a0_0x38090e = 32;
var a0_0x31fe5e = 33;
var a0_0x1f838c = 34;
var a0_0x254dfc = 35;
var a0_0x162473 = 36;
var a0_0x34beb5 = 37;
var a0_0x1b4543 = 38;
var a0_0x6e4e18 = 39;
var a0_0x563df4 = 40;
var a0_0x1a160c = 41;
var a0_0x40cc4c = 42;
var a0_0x2a957c = 43;
var a0_0x41fd5c = 44;
var a0_0x101193 = 45;
var a0_0x257f12 = 46;
var a0_0x5510d8 = 47;
var a0_0x4efb3c = 48;
var a0_0x1132a8 = 49;
var a0_0x1bc37e = 50;
var a0_0xbfada = 51;
var a0_0x252dcd = 52;
var a0_0xbf4f2c = 53;
var a0_0x31e688 = 54;
var a0_0x2adefe = 55;
var a0_0x52cd8c = 56;
var a0_0x313367 = 57;
var a0_0x15a05e = 58;
var a0_0x224417 = 59;
var a0_0x1d5499 = 60;
var a0_0x5f3a6f = 61;
var a0_0x3b5f85 = 62;
var a0_0x33fa19 = 63;
var a0_0x4e94e8 = 64;
var a0_0x1c0686 = 65;
var a0_0xdf5a75 = 66;
var a0_0x1e152a = 67;
var a0_0x472c8a = 68;
var a0_0x4cfb89 = 69;
var a0_0x30bc31 = 70;
var a0_0x1b4846 = 71;
var a0_0x415f2f = 72;
var a0_0x15fd74 = 73;
var a0_0xc48b6 = 74;
var a0_0x22e8ad = 75;
var a0_0x2d643d = 76;
var a0_0x17136b = 77;
var a0_0x562756 = 78;
var a0_0x402d5a = 79;
var a0_0xe8222c = 80;
var a0_0x4a36ac = 81;
var a0_0x2995a9 = 82;
var a0_0x33a740 = 83;
var a0_0x33cfa9 = 84;
var a0_0x4b0faa = 85;
var a0_0x4a9541 = 86;
var a0_0xffe9fd = 87;
var a0_0x303d9b = 88;
var a0_0x1ce2e4 = 89;
var a0_0x4450f0 = 90;
var a0_0x240c0c = 91;
var a0_0x69c437 = 92;
var a0_0x32203e = 93;
var a0_0x25f6dd = 94;
var a0_0x527dbe = 95;
var a0_0x47c97f = 96;
var a0_0x1487f6 = 97;
var a0_0x2ed274 = 98;
var a0_0x14a39f = 99;
var a0_0x9fe8e0 = 100;
var a0_0xb93d7c = 101;
var a0_0x351b92 = 102;
var a0_0x4ed524 = 103;
var a0_0x5bce2e = 104;
var a0_0x59b734 = 105;
var a0_0x579a5b = 106;
var a0_0x1f99ed = 107;
var a0_0x5ab1f8 = 108;
var a0_0x559bf8 = 109;
var a0_0x3ce38d = 110;
var a0_0x20cf30 = 111;
var a0_0x322c99 = 122;
function a0_0x1753d3(_0x13ef8f) {
  var _0x559258 = {};
  switch (_0x13ef8f) {
    case a0_0x101193:
      _0x559258.aniName = "Snail";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "You're a super slow snail!";
      _0x559258.aniCol = "#fcc02b";
      _0x559258.skinName = "snail";
      break;
    case a0_0x4083f6:
      _0x559258.aniName = "Mouse";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "";
      _0x559258.aniCol = "#9BA9B9";
      _0x559258.skinName = "mouse";
      break;
    case a0_0x151054:
      _0x559258.aniName = "Rabbit";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to RABBIT! \nPress W to burrow a hole to hide in!";
      _0x559258.aniCol = "#AA937E";
      _0x559258.skinName = "rabbit";
      break;
    case a0_0x3d5a13:
      _0x559258.aniName = "Pig";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to PIG!\n Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      _0x559258.aniCol = "#DD6BD4";
      _0x559258.skinName = "pig";
      break;
    case a0_0x2d73e5:
      _0x559258.aniName = "Fox";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to FOX! ,\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
      _0x559258.aniCol = "#FF9D43";
      _0x559258.skinName = "fox";
      break;
    case a0_0x31131a:
      _0x559258.aniName = "Deer";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to DEER! \nPress W to dig up food! \nDig in mud for better food!\n Hint:Check water areas for new food sources!";
      _0x559258.aniCol = "#C4773E";
      _0x559258.skinName = "deer";
      break;
    case a0_0x2347de:
      _0x559258.aniName = "Mole";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to MOLE!\n Hold W to dig underground!\nGo under anything, do surprise attacks!";
      _0x559258.aniCol = "#4C4A45";
      _0x559258.skinName = "mole";
      break;
    case a0_0x4f39e9:
      _0x559258.aniName = "Zebra";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to ZEBRA! \nPress W to kick side ways!";
      _0x559258.aniCol = "#FFFFFF";
      _0x559258.skinName = "zebra";
      break;
    case a0_0x1a694e:
      _0x559258.aniName = "Lion";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to LION!\n Press W to release a mighty ROAR (Rawr!)!";
      _0x559258.aniCol = "#f8c923";
      _0x559258.skinName = "lion";
      break;
    case a0_0x54d85e:
      _0x559258.aniName = "CHEETAH";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to CHEETAH!\n Press W to get a speed boost! (Every 8 seconds)!";
      _0x559258.aniCol = "#CAC05B";
      _0x559258.skinName = "bigcat/cheetah";
      break;
    case a0_0x5a613b:
      _0x559258.aniName = "Bear";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to BEAR!\n Bears climb through green hills! (Press W to use your claw!)";
      _0x559258.aniCol = "#99591C";
      _0x559258.skinName = "bear";
      break;
    case a0_0x20917b:
      _0x559258.aniName = "Croc";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to CROCODILE!\n Press W to bite and drag around animals! \n+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!";
      _0x559258.aniCol = "#30F51C";
      _0x559258.skinName = "croc";
      break;
    case a0_0x93d1ea:
      _0x559258.aniName = "Hippo";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to HIPPO!\nHippos are great swimmers, dominate the Lakes/Oceans/Mud!";
      _0x559258.aniCol = "#945A99";
      _0x559258.skinName = "hippo";
      break;
    case a0_0x32eb58:
      _0x559258.aniName = "Rhino";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to RHINO!\n Press W to CHARGE with your mighty horn!";
      _0x559258.aniCol = "#94a3a9";
      _0x559258.skinName = "rhino";
      break;
    case a0_0x722c30:
      _0x559258.aniName = "Shrimp";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "";
      _0x559258.aniCol = "#f88e37";
      _0x559258.skinName = "shrimp";
      break;
    case a0_0x5e41c4:
      _0x559258.aniName = "Trout";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to TROUT!\nHint: Hold Left-click to RUN! (Uses extra water)";
      _0x559258.aniCol = "#ac8686";
      _0x559258.skinName = "trout";
      break;
    case a0_0xce170f:
      _0x559258.aniName = "Crab";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to CRAB!\n Crabs can survive on dry land!\n (On land, Press W to go into your shell!)";
      _0x559258.aniCol = "#bf2408";
      _0x559258.skinName = "crab";
      break;
    case a0_0x464b86:
      _0x559258.aniName = "Squid";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to SQUID!\n Squids can use INK when injured (press W!) \n+ you can hide in plankton bushes!";
      _0x559258.aniCol = "#40dda4";
      _0x559258.skinName = "squid";
      break;
    case a0_0x30aa6a:
      _0x559258.aniName = "Shark";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to SHARK!\n A vicious predator of the oceans!";
      _0x559258.aniCol = "#999fc6";
      _0x559258.skinName = "shark";
      break;
    case a0_0x1f8603:
      _0x559258.aniName = "Sea-horse";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to SEA HORSE!\n An agile hunter!";
      _0x559258.aniCol = "#73BE2F";
      _0x559258.skinName = "seahorse";
      break;
    case a0_0x574c01:
      _0x559258.aniName = "Jellyfish";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to JELLYFISH!\n A slowly-turning animal that can grow quite large!";
      _0x559258.aniCol = "#FDB9BA";
      _0x559258.skinName = "jellyfish";
      break;
    case a0_0x58bf2a:
      _0x559258.aniName = "Turtle";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to TURTLE!\n Lives well on land & water! (On land, Press W to go into your shell!)";
      _0x559258.aniCol = "#502E1A";
      _0x559258.skinName = "turtle";
      break;
    case a0_0x56d530:
      _0x559258.aniName = "Stingray";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to STINGRAY!\n Use electic shock (Release W key!) to shock animals! \n(Takes time to recharge)";
      _0x559258.aniCol = "#164336";
      _0x559258.skinName = "stingray";
      break;
    case a0_0x4e6cde:
      _0x559258.aniName = "The Kraken";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to THE KRAKEN!\n Terrorize the oceans, and be feared by all!\n (Release W to use whirlpool ability!)";
      _0x559258.aniCol = "#64a034";
      _0x559258.skinName = "kraken";
      break;
    case a0_0x265cfd:
      _0x559258.aniName = "Pufferfish";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to PUFFERFISH!\n (Hold W to inflate- become spiky, and dangerous to touch!)";
      _0x559258.aniCol = "#6C5C2C";
      _0x559258.skinName = "pufferfish";
      break;
    case a0_0x434da0:
      _0x559258.aniName = "Killer Whale";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Killer Whale! \nWhales blow out water when diving! (And sometimes other loot!)";
      _0x559258.aniCol = "#141414";
      _0x559258.skinName = "killerwhale";
      break;
    case a0_0x9f5ea7:
      _0x559258.aniName = "Swordfish";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n (Press W to rush with your sharp nose!)";
      _0x559258.aniCol = "#689CD7";
      _0x559258.skinName = "swordfish";
      break;
    case a0_0x18ddf3:
      _0x559258.aniName = "Gorilla";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Gorillas are very fast on hills/trees!\n Press W to throw bananas! (from trees)";
      _0x559258.aniCol = "#323232";
      _0x559258.skinName = "gorilla";
      break;
    case a0_0x2aaf90:
      _0x559258.aniName = "Octopus";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Octopus!\nHold W to use your 'Disguise' ability!\n(Hint: wait for prey to bite you- they get stunned!)";
      _0x559258.aniCol = "#ff8340";
      _0x559258.skinName = "octopus";
      break;
    case a0_0x256160:
      _0x559258.aniName = "Dragon";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n (You're amazing!) \nFly over everything, Hold W to shoot fire!";
      _0x559258.aniCol = "#22FF8A";
      _0x559258.skinName = "dragon";
      break;
    case a0_0x257f12:
      _0x559258.aniName = "Black Dragon";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!";
      _0x559258.aniCol = "black";
      _0x559258.skinName = "blackdragon";
      break;
    case a0_0x252dcd:
      _0x559258.aniName = "Giant Spider";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Place web around the game to catch prey!";
      _0x559258.aniCol = "black";
      _0x559258.skinName = "giantSpider";
      break;
    case a0_0x1bc37e:
      _0x559258.aniName = "Cobra";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Hold W to Spit venom, and poison animals with your bite!";
      _0x559258.aniCol = "black";
      _0x559258.skinName = "cobra";
      break;
    case a0_0xbfada:
      _0x559258.aniName = "Boa Constrictor";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Coil and suffocate other animals!";
      _0x559258.aniCol = "black";
      _0x559258.skinName = "boaConstrictor";
      break;
    case a0_0xbf4f2c:
      _0x559258.aniName = "T-REX";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + " The Dinosaur!\n This ancient dinosaur has powerful jaws that can drag prey around!!";
      _0x559258.aniCol = "#862A2A";
      _0x559258.skinName = "trex";
      break;
    case a0_0x31e688:
      _0x559258.aniName = "Tiger";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Tiger!\n Tigers can launch an ambush attack (HOLD W to grow a bush) Release to attack!";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "tiger";
      break;
    case a0_0x2adefe:
      _0x559258.aniName = "Giraffe";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Giraffe!\nGiraffe have huge legs and stomp anyone in their way!";
      _0x559258.aniCol = "#E9BD23";
      _0x559258.skinName = "giraffe";
      break;
    case a0_0x52cd8c:
      _0x559258.aniName = "Eagle";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Eagle!\nEagles can fly up other animals in the air! !\n";
      _0x559258.aniCol = "#5b400d";
      _0x559258.skinName = "eagle";
      break;
    case a0_0x1a160c:
      _0x559258.aniName = "Arctic Fox";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
      _0x559258.aniCol = "#CFCFCF";
      _0x559258.skinName = "arctic/arcticfox";
      break;
    case a0_0x1218ca:
      _0x559258.aniName = "Arctic Hare";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n \nPress W to burrow a hole to hide in!";
      _0x559258.aniCol = "#D5D5D5";
      _0x559258.skinName = "arctic/arctichare";
      break;
    case a0_0x38090e:
      _0x559258.aniName = "The Yeti!";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n So it really exists... \n Hold W to turn into snow, release W to freeeeeze!";
      _0x559258.aniCol = "#839eb5";
      _0x559258.skinName = "arctic/yeti";
      break;
    case a0_0x31fe5e:
      _0x559258.aniName = "Chipmunk";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "";
      _0x559258.aniCol = "#A77C30";
      _0x559258.skinName = "arctic/chipmunk";
      break;
    case a0_0x1f838c:
      _0x559258.aniName = "Muskox";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Press W to charge with your horns! \nPlus move decently on ice!";
      _0x559258.aniCol = "#231f18";
      _0x559258.skinName = "arctic/muskox";
      break;
    case a0_0x254dfc:
      _0x559258.aniName = "Penguin";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Left-click to run!\n (HOLD W to slide FAST on ice)!";
      _0x559258.aniCol = "#FFFFFF";
      _0x559258.skinName = "arctic/penguin";
      break;
    case a0_0x162473:
      _0x559258.aniName = "Polar Bear";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Polar bears can climb hills! \n+ They're amazing swimmers!";
      _0x559258.aniCol = "#e4e4e4";
      _0x559258.skinName = "arctic/bear/bear";
      break;
    case a0_0x34beb5:
      _0x559258.aniName = "Seal";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Seals can slide on ice (Hold W) + can climb hills (rocks too!)";
      _0x559258.aniCol = "#cfcfcf";
      _0x559258.skinName = "arctic/seal";
      break;
    case a0_0x1b4543:
      _0x559258.aniName = "Snow leopard";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Press W to get a speed boost! (Every 8 seconds)!";
      _0x559258.aniCol = "#cfcfcf";
      _0x559258.skinName = "arctic/snowleopard";
      break;
    case a0_0x6e4e18:
      _0x559258.aniName = "Walrus";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n You can slide on ice (Hold W) + can climb hills (rocks too!)";
      _0x559258.aniCol = "#633838";
      _0x559258.skinName = "arctic/walrus";
      break;
    case a0_0x563df4:
      _0x559258.aniName = "Reindeer";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Press W to dig up food! \n Your sharp hooves let you turn very well on ice!";
      _0x559258.aniCol = "#a68976";
      _0x559258.skinName = "arctic/reindeer";
      break;
    case a0_0x3bbebf:
      _0x559258.aniName = "Wolf";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Wolf paws turn very well on ice!\n Press W to howl!";
      _0x559258.aniCol = "#6B6B6B";
      _0x559258.skinName = "arctic/wolf";
      break;
    case a0_0x40cc4c:
      _0x559258.aniName = "Wolverine";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Press W to Let out a Powerful GROWL! (Knocks back prey!)";
      _0x559258.aniCol = "#843A0F";
      _0x559258.skinName = "arctic/wolverine";
      break;
    case a0_0x2a957c:
      _0x559258.aniName = "Mammoth";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Press W to roll snowballs with your trunk!\n The bigger the snowball gets, the longer the freeze!";
      _0x559258.aniCol = "#9d4717";
      _0x559258.skinName = "arctic/mammoth";
      break;
    case a0_0x41fd5c:
      _0x559258.aniName = "Donkey";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Press W to Kick any animal behind you";
      _0x559258.aniCol = "#8c7c64";
      _0x559258.skinName = "donkey";
      break;
    case a0_0x5510d8:
      _0x559258.aniName = "Sabertooth Tiger";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Sabertooth Tiger!\nSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!";
      _0x559258.aniCol = "#945A99";
      _0x559258.skinName = "sabertoothtiger";
      break;
    case a0_0x4efb3c:
      _0x559258.aniName = "Elephant";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to " + _0x559258.aniName + "!\n Use your long trunk to attack and eat food!";
      _0x559258.aniCol = "#945A99";
      _0x559258.skinName = "elephant";
      break;
    case a0_0x1132a8:
      _0x559258.aniName = "Blue Whale";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Blue Whale!\n Smash with your powerful tail!";
      _0x559258.aniCol = "#945A99";
      _0x559258.skinName = "bluewhale";
      break;
    case a0_0x224417:
      _0x559258.aniName = "Duckling";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to a DUCK!";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "duck/duckling";
      break;
    case a0_0x313367:
      _0x559258.aniName = "Hedgehog";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Hedgehog!\n (Hold W to become spiky, and dangerous to touch!)";
      _0x559258.aniCol = "#5b400d";
      _0x559258.skinName = "hedgehog";
      break;
    case a0_0x5f3a6f:
      _0x559258.aniName = "King Crab";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to a KING CRAB!";
      _0x559258.aniCol = "#971f0e";
      _0x559258.skinName = "kingcrab";
      break;
    case a0_0x1d5499:
      _0x559258.aniName = "Lemming";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "";
      _0x559258.aniCol = "#A77C30";
      _0x559258.skinName = "arctic/lemming";
      break;
    case a0_0x3b5f85:
      _0x559258.aniName = "Frog";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Frog!!";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "frog/frog";
      break;
    case a0_0x33fa19:
      _0x559258.aniName = "Ostrich";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Ostrich! Lay eggs to hatch babies! \nCommand babies by placing your crosshair (right-click/W)-\n They can attack prey!";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "ostrich/ostrich";
      break;
    case a0_0x4e94e8:
      _0x559258.aniName = "Pelican";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Pelican! \nPick up water (and prey!) in your mouth,\nfly, and drop water on prey! (press W again)";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "pelican/pelican";
      break;
    case a0_0x1c0686:
      _0x559258.aniName = "Falcon";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Falcon! \nFly, and do a powerful dive attack! Aim it well.";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "falcon/falcon";
      break;
    case a0_0xdf5a75:
      _0x559258.aniName = "Snowy Owl";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Snowy Owl!\n Aim the crosshair, \n right click/W when it's on top of prey, to attack!";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "snowyowl/snowyowl";
      break;
    case a0_0x4cfb89:
      _0x559258.aniName = "Baby Ostrich";
      _0x559258.aniDesc = "";
      _0x559258.upgradeText = "UPGRADED to Baby Ostrich!!";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "ostrich/baby-ostrich";
      break;
    case a0_0x472c8a:
      _0x559258.aniName = "Phoenix";
      _0x559258.upgradeText = "UPGRADED to Phoenix!\nCreate powerful fire tornados to burn your enemies alive!";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "phoenix/phoenix";
      break;
    case a0_0x30bc31:
      _0x559258.aniName = "Sea Monster";
      _0x559258.upgradeText = "UPGRADED to Sea Monster!";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "seamonster";
      break;
    case a0_0x1b4846:
      _0x559258.aniName = "Land Monster";
      _0x559258.upgradeText = "UPGRADED to Land Monster!";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "landmonster";
      break;
    case a0_0x415f2f:
      _0x559258.aniName = "Ice Monster";
      _0x559258.upgradeText = "UPGRADED to Ice Monster!";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "icemonster";
      break;
    case a0_0x15fd74:
      _0x559258.aniName = "Dino Monster";
      _0x559258.upgradeText = "UPGRADED to Dino Monster!";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "dinomonster";
      break;
    case a0_0xc48b6:
      _0x559258.aniName = "Pigeon";
      _0x559258.upgradeText = "UPGRADED to Pigeon!\nHold W to fly around. ";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "pigeon/pigeon";
      break;
    case a0_0x22e8ad:
      _0x559258.aniName = "Toucan";
      _0x559258.upgradeText = "UPGRADED to Toucan!\nHold W to fly around. ";
      _0x559258.aniCol = "#FF9000";
      _0x559258.skinName = "toucan/toucan";
      break;
    default:
      _0x559258.aniName = "(Animal)";
      _0x559258.aniDesc = "";
      _0x559258.aniCol = "#000000";
      _0x559258.upgradeText = "UPGRADED!";
  }
  return _0x559258;
}
function a0_0x4d2fba() {}
function a0_0x920efe(_0x14687f) {
  let _0x352a02 = Array.isArray(_0x14687f) ? _0x14687f : [_0x14687f];
  _0x352a02 = _0x352a02.map(_0x5d80a2 => {
    return {
      ..._0x5d80a2,
      abilImg: "assets/" + _0x5d80a2.abilImg
    };
  });
  if (_0x352a02.length === 1 && _0x352a02[0].abilImg !== "assets/abilities/Dash-Boost.svg") {
    _0x352a02.unshift({
      abilName: "Dash",
      abilImg: "assets/abilities/Dash-Boost.svg"
    });
  }
  return _0x352a02;
}
var a0_0x3cbe52 = 101;
var a0_0x4e83df = 0;
var a0_0x4a0b88 = 1;
var a0_0x3d16ed = 2;
var a0_0x1f44d4 = 3;
var a0_0x36620c = 4;
var a0_0x2e50bd = 5;
var a0_0x40337b = 6;
var a0_0x141836 = 7;
var a0_0x4969d6 = 8;
var a0_0x435922 = 9;
var a0_0x5ed406 = 10;
var a0_0x374ec3 = 11;
var a0_0x10e305 = 12;
var a0_0x331fae = 13;
var a0_0x229aba = 14;
var a0_0x22bfe1 = 15;
var a0_0x356ec0 = 16;
var a0_0x54668f = 17;
var a0_0x506cd3 = 18;
var a0_0x3cb5c9 = 19;
var a0_0x48a0da = 20;
var a0_0x33cb9a = 21;
var a0_0x361d59 = 22;
var a0_0x41465a = 23;
var a0_0x257856 = 24;
var a0_0x3ecb4d = 25;
var a0_0xd8b4b0 = 26;
var a0_0x4545f3 = 27;
var a0_0x51d86b = 28;
var a0_0x14200b = 30;
var a0_0x2bf9f2 = 31;
var a0_0x1a4b45 = 32;
var a0_0x472eb5 = 33;
var a0_0x3ef526 = 34;
var a0_0x311871 = 35;
var a0_0x3b106d = 36;
var a0_0x497bb5 = 37;
var a0_0x7ee841 = 38;
var a0_0x4b6a8d = 39;
var a0_0x5f59ee = 40;
var a0_0x280d51 = 41;
var a0_0x358a26 = 42;
var a0_0x34d16a = 43;
var a0_0xd60826 = 46;
var a0_0x1b4732 = 47;
var a0_0x3960f7 = 48;
var a0_0xd4c6b3 = 49;
var a0_0x30ab4d = 51;
var a0_0xb1da6a = 54;
var a0_0x29be15 = 55;
var a0_0x49eb72 = 56;
var a0_0x146d68 = 57;
var a0_0x3131d7 = 58;
var a0_0x1733da = 59;
var a0_0x2fc2ee = 60;
var a0_0x34967a = 61;
var a0_0x18e3d8 = 62;
var a0_0x42cffb = 63;
var a0_0x2d4f41 = 64;
var a0_0x3b16f1 = 65;
var a0_0x1dbaa2 = 66;
var a0_0x35cbe3 = 67;
var a0_0x30802b = 68;
var a0_0x1bb2d6 = 69;
var a0_0xd64e6a = 70;
var a0_0x4dfca9 = 71;
var a0_0x1c61f3 = 72;
var a0_0x3922f2 = 73;
var a0_0x1511f0 = 74;
var a0_0x292808 = 75;
var a0_0x400689 = 76;
var a0_0x24b52e = 77;
var a0_0x2f33d7 = 78;
var a0_0x75aa4e = 79;
var a0_0x5c0777 = 80;
var a0_0xa30c41 = 81;
var a0_0x237c47 = 82;
var a0_0x34da24 = 83;
var a0_0x17f20b = 86;
var a0_0x5ba657 = 87;
var a0_0x23050e = 88;
var a0_0x4fc48b = 89;
var a0_0x509ce9 = 90;
var a0_0x57a82c = 91;
var a0_0x181c87 = 92;
var a0_0x1fca7a = 93;
var a0_0x362cb0 = 94;
var a0_0x112884 = 95;
var a0_0x77eb7b = 93;
var a0_0x10bb2c = 97;
var a0_0x23d5ed = 98;
var a0_0x24b87d = 99;
var a0_0x418e06 = 101;
var a0_0x3bf8ba = 102;
var a0_0x5da225 = 103;
var a0_0x1956f9 = 104;
var a0_0x5ac466 = 105;
var a0_0x6ac54f = 106;
var a0_0x5a17e7 = 107;
var a0_0x4c2a55 = 108;
var a0_0xba2a4f = 112;
var a0_0x274071 = 128;
var a0_0x326735 = 144;
var a0_0x89ae20 = 145;
var a0_0x5e972f = 147;
function a0_0x471a99(_0x2c7520) {
  var _0x54c202 = {};
  var _0x2c6966 = "";
  var _0x392f8f = a0_0x3d5ac5[a0_0x1c918d];
  switch (_0x2c7520) {
    case a0_0x237c47:
      _0x54c202.abilName = "Bear Attack";
      _0x54c202.abilImg = "skins/desert/gobibear/gobibear_attack.png";
      break;
    case a0_0x34da24:
      _0x54c202.abilName = "Spit!";
      _0x54c202.abilImg = "skins/desert/camel/spit.png";
      break;
      a0_0x112884 = 95;
    case a0_0x1a4b45:
      _0x54c202.abilName = "Tail Slap";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x2bf9f2:
      _0x54c202.abilName = "Trunk Hit";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x3cbe52:
      _0x54c202.abilName = "Dive";
      _0x54c202.abilImg = "img/ability_dive.png";
      break;
    case a0_0x3ecb4d:
      _0x54c202.abilName = "Dig For Food";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x3d16ed:
      _0x54c202.abilName = "Shell";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + "2.png";
      break;
    case a0_0x33cb9a:
      _0x54c202.abilName = "Bite Drag";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x3b106d:
      _0x54c202.abilName = "Suffocate prey";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x29be15:
      _0x54c202.abilName = "Fly with water";
      _0x54c202.abilImg = "skins/pelican/ability_pelican.png";
      break;
    case a0_0x141836:
      _0x54c202.abilName = "Disguise";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x361d59:
      _0x54c202.abilName = "Burrow Hole";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x41465a:
      _0x54c202.abilName = "Pull from Hole";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x435922:
      _0x54c202.abilName = "Charge";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x54668f:
      _0x54c202.abilName = "Roll snow";
      _0x54c202.abilImg = "img/snowball.png";
      break;
    case a0_0x3ef526:
      _0x54c202.abilName = "Venom Spit";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x311871:
      _0x54c202.abilName = "Spin Web";
      _0x54c202.abilImg = "img/spiderWeb.png";
      break;
    case a0_0x331fae:
      _0x54c202.abilName = "Throw Snow";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x356ec0:
      _0x54c202.abilName = "Drop Snow";
      _0x54c202.abilImg = "img/snowball.png";
      break;
    case a0_0x506cd3:
      _0x54c202.abilName = "Loud Noise";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x229aba:
      _0x54c202.abilName = "Claw Slash";
      _0x54c202.abilImg = "img/ability_claw.png";
      break;
    case a0_0x36620c:
      _0x54c202.abilName = "Ink";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x1f44d4:
      _0x54c202.abilName = "Shock";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x4a0b88:
      _0x54c202.abilName = "Hold to Dig";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x10e305:
      _0x54c202.abilName = "Howl";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x257856:
      _0x54c202.abilName = "Throw Banana";
      _0x54c202.abilImg = "skins/" + +_0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x51d86b:
      _0x54c202.abilName = "Cause Wave";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x22bfe1:
      _0x54c202.abilName = "Extra Boost";
      if (a0_0x3a86ef == a0_0x54d85e) {
        if (_0x392f8f) {
          var _0x2f0b66 = _0x392f8f.animalInfo();
          _0x54c202.abilImg = "skins/" + _0x2c6966 + _0x2f0b66.skinName + ".png";
        }
      } else {
        _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      }
      break;
    case a0_0x4969d6:
      _0x54c202.abilName = "Slide on ice";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x5ed406:
      _0x54c202.abilName = "Inflate";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0xd4c6b3:
      _0x54c202.abilName = "Spikes";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + "2.png";
      break;
    case a0_0x3cb5c9:
      _0x54c202.abilName = "Fire";
      _0x54c202.abilImg = "img/fire.png";
      break;
    case a0_0x14200b:
      _0x54c202.abilName = "Fire";
      _0x54c202.abilImg = "img/fire.png";
      break;
    case a0_0x30ab4d:
      _0x54c202.abilName = "Arm Smash";
      _0x54c202.abilImg = "img/ability_crabSmashSkin.png";
      break;
    case a0_0x497bb5:
      _0x54c202.abilName = "Jaws Bite";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0xd60826:
      _0x54c202.abilName = "Jaws Bite";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0xb1da6a:
      _0x54c202.abilName = "Command Babies";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + "ostrich/ostrich-baby.png";
      break;
    case a0_0x3131d7:
      _0x54c202.abilName = "Target prey";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x146d68:
      _0x54c202.abilName = "Sky dive";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x7ee841:
      _0x54c202.abilName = "Ambush Attack";
      var _0x392f8f = a0_0x3d5ac5[a0_0x1c918d];
      if (_0x392f8f) {
        var _0x2f0b66 = _0x392f8f.animalInfo();
        _0x54c202.abilImg = "skins/" + _0x2c6966 + _0x2f0b66.skinName + ".png";
      }
      break;
    case a0_0x358a26:
      _0x54c202.abilName = "Stomp";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x1b4732:
      _0x54c202.abilName = "Fly with prey";
      if (_0x392f8f) {
        var _0x2f0b66 = _0x392f8f.animalInfo();
      }
      break;
    case a0_0x3960f7:
      _0x54c202.abilName = "Stink";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x2d4f41:
    case a0_0x3b16f1:
      _0x54c202.abilName = "HOLD to fly";
      var _0x392f8f = a0_0x3d5ac5[a0_0x1c918d];
      if (_0x392f8f) {
        var _0x2f0b66 = _0x392f8f.animalInfo();
        _0x54c202.abilImg = "skins/" + _0x2c6966 + _0x2f0b66.skinName + ".png";
      }
      break;
    case a0_0x4dfca9:
      _0x54c202.abilName = "HOLD to fly\n& Mimic Animals";
      var _0x392f8f = a0_0x3d5ac5[a0_0x1c918d];
      if (_0x392f8f) {
        var _0x2f0b66 = _0x392f8f.animalInfo();
        _0x54c202.abilImg = "skins/" + _0x2c6966 + _0x2f0b66.skinName + ".png";
      }
      break;
    case a0_0x1c61f3:
      _0x54c202.abilName = "HOLD in water\n(find food)";
      _0x54c202.abilImg = "skins/flamingo/flamingo.png";
      break;
    case a0_0x292808:
      _0x54c202.abilName = "HOLD to Peck\n/ Fly";
      _0x54c202.abilImg = "skins/woodpecker/woodpecker.png";
      break;
    case a0_0x400689:
      _0x54c202.abilName = "HOLD to Hypnotize\n/ Fly from hills";
      _0x54c202.abilImg = "skins/peacock/peacock_ability.png";
      break;
    case a0_0x24b52e:
      _0x54c202.abilName = "HOLD to Jump High\n";
      _0x54c202.abilImg = "skins/desert/gazelle/gazelle1.png";
      break;
    case a0_0x2f33d7:
      _0x54c202.abilName = "HOLD to ROLL";
      _0x54c202.abilImg = "skins/desert/armadillo/armadillo1.png";
      break;
    case a0_0x5c0777:
      _0x54c202.abilName = "HOLD to Dig";
      _0x54c202.abilImg = "skins/desert/meerkat/meerkat1.png";
      break;
    case a0_0x75aa4e:
      _0x54c202.abilName = "Spits Food!";
      _0x54c202.abilImg = "skins/desert/chipmunk/chipmunk1.png";
      break;
    case a0_0xa30c41:
      _0x54c202.abilName = "Whine!";
      _0x54c202.abilImg = "skins/desert/fennecfox/fennecfox1.png";
      break;
    case a0_0x3922f2:
      _0x54c202.abilName = "Front Kick\n(HOLD to Charge)";
      _0x54c202.abilImg = "skins/cassowary/cassowary1.png";
      break;
    case a0_0x34967a:
      _0x54c202.abilName = "Fire Tornado";
      _0x54c202.abilImg = "img/firetornado.png";
      break;
    case a0_0x1dbaa2:
      _0x54c202.abilName = "Sink Hole";
      _0x54c202.abilImg = "skins/" + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0x42cffb:
      _0x54c202.abilName = "Giant Whirlpool";
      _0x54c202.abilImg = "skins/" + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
    case a0_0xd64e6a:
      _0x54c202.abilName = "Knock In Air";
      _0x54c202.abilImg = "skins/monsters/dinomonster/dinomonster.png";
      break;
    case a0_0x1bb2d6:
      _0x54c202.abilName = "Freeze Prey";
      _0x54c202.abilImg = "skins/monsters/icemonster/icemonster.png";
      break;
    default:
      _0x54c202.abilName = "Ability";
      _0x54c202.abilImg = "skins/" + _0x2c6966 + a0_0x1753d3(a0_0x3a86ef).skinName + ".png";
      break;
  }
  return _0x54c202;
}
function a0_0x290f57(_0x36091c, _0x3cd16d) {
  return Math.random() * (_0x3cd16d - _0x36091c) + _0x36091c;
}
function a0_0x1b6404(_0x5b3fac) {
  var _0x15d704 = "";
  var _0x31ab6a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  var _0x5ef626 = _0x31ab6a.length;
  for (var _0x416405 = 0; _0x416405 < _0x5b3fac; _0x416405++) {
    _0x15d704 += _0x31ab6a.charAt(Math.floor(Math.random() * _0x5ef626));
  }
  return _0x15d704;
}
function a0_0x13f8d7(_0x4eeb95, _0x5bd372) {
  return Math.floor(Math.random() * (_0x5bd372 - _0x4eeb95 + 1)) + _0x4eeb95;
}
function a0_0x58266e(_0x367a77) {
  var _0x367a77 = Math.trunc(_0x367a77) % 360 + (_0x367a77 - Math.trunc(_0x367a77));
  if (_0x367a77 > 0) {
    return _0x367a77;
  } else {
    return _0x367a77 + 360;
  }
}
function a0_0x5b2c3e(_0x17d5a8) {
  var _0x31f9ef = _0x17d5a8.split(".");
  return ((+_0x31f9ef[0] * 256 + +_0x31f9ef[1]) * 256 + +_0x31f9ef[2]) * 256 + +_0x31f9ef[3];
}
function a0_0x6c3004(_0x463c86) {
  var _0x19a9a4 = _0x463c86 % 256;
  for (var _0x8ccae9 = 3; _0x8ccae9 > 0; _0x8ccae9--) {
    _0x463c86 = Math.floor(_0x463c86 / 256);
    _0x19a9a4 = _0x463c86 % 256 + "." + _0x19a9a4;
  }
  return _0x19a9a4;
}
function a0_0x167d81(_0x1418a4, _0x2d21a8) {
  var _0x5d7cfa = _0x2d21a8.split("?")[0];
  var _0x44f61d;
  var _0x271aa6 = [];
  var _0x29a5ca = _0x2d21a8.indexOf("?") !== -1 ? _0x2d21a8.split("?")[1] : "";
  if (_0x29a5ca !== "") {
    _0x271aa6 = _0x29a5ca.split("&");
    for (var _0x3f1f14 = _0x271aa6.length - 1; _0x3f1f14 >= 0; _0x3f1f14 -= 1) {
      _0x44f61d = _0x271aa6[_0x3f1f14].split("=")[0];
      if (_0x44f61d === _0x1418a4) {
        _0x271aa6.splice(_0x3f1f14, 1);
      }
    }
    _0x5d7cfa = _0x5d7cfa + "?" + _0x271aa6.join("&");
  }
  return _0x5d7cfa;
}
function a0_0x46008a(_0xd4adcb) {
  return _0xd4adcb * (180 / Math.PI);
}
function a0_0x844a6b(_0x29a98f) {
  return _0x29a98f * (Math.PI / 180);
}
function a0_0x1fdaa8(_0x9d3a21, _0x5e1298, _0x3170c3, _0x461ca4) {
  return Math.atan2(_0x461ca4 - _0x5e1298, _0x3170c3 - _0x9d3a21);
}
function a0_0xba2ee9(_0x48cef3, _0x4e003d) {
  return (_0x48cef3 >> _0x4e003d) % 2 != 0;
}
function a0_0x333281(_0x18790c, _0x3f80f1, _0x1c6833) {
  if (_0x1c6833) {
    return _0x18790c | 1 << _0x3f80f1;
  } else {
    return _0x18790c & ~(1 << _0x3f80f1);
  }
}
function a0_0x56c3ae(_0xe3c0ea, _0x2ae2b4) {
  var _0x445f61 = _0x2ae2b4 - _0xe3c0ea;
  var _0x5b0c42 = a0_0x58266e(a0_0x46008a(_0x445f61));
  if (_0x5b0c42 > 180) {
    _0x5b0c42 = _0x5b0c42 - 360;
  }
  return a0_0x844a6b(_0x5b0c42);
}
function a0_0x870f2b(_0x2eea3c, _0x288e2c, _0x144be2) {
  return Math.min(_0x144be2, Math.max(_0x288e2c, _0x2eea3c));
}
function a0_0x5162d0(_0xcf0a64) {
  return unescape(encodeURIComponent(_0xcf0a64));
}
function a0_0x1f9029(_0x1e5cca) {
  return decodeURIComponent(escape(_0x1e5cca));
}
function a0_0x1347c1(_0x9eb5ed, _0xc6e07a, _0xe40aa9) {
  var _0x11ba82 = a0_0x4ef4f3.measureText("M").width * 1.2;
  var _0x129d40 = _0x9eb5ed.split("\n");
  for (var _0x3d424f = 0; _0x3d424f < _0x129d40.length; ++_0x3d424f) {
    a0_0x4ef4f3.fillText(_0x129d40[_0x3d424f], _0xc6e07a, _0xe40aa9);
    _0xe40aa9 += _0x11ba82;
  }
}
function a0_0x1a7262(_0x439fcc) {
  var _0x118df4 = parseInt(_0x439fcc, 10);
  var _0x2af648 = Math.floor(_0x118df4 / 3600);
  var _0x33398c = Math.floor((_0x118df4 - _0x2af648 * 3600) / 60);
  var _0x5db507 = _0x118df4 - _0x2af648 * 3600 - _0x33398c * 60;
  if (_0x5db507 < 10) {
    _0x5db507 = "0" + _0x5db507;
  }
  return _0x33398c + ":" + _0x5db507;
}
function a0_0x248f5f(_0x49bea1) {
  return _0x49bea1.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}
function a0_0x4cf280(_0x57c8fc) {
  return a0_0x5b294b(_0x57c8fc, 0);
}
function a0_0x5b294b(_0x181b3e, _0x2f068d) {
  if (_0x181b3e === null || _0x181b3e === 0) {
    return "0";
  }
  _0x2f068d = !_0x2f068d || _0x2f068d < 0 ? 0 : _0x2f068d;
  var _0x5d5288 = _0x181b3e.toPrecision(2).split("e");
  var _0x4d3caa = _0x5d5288.length === 1 ? 0 : Math.floor(Math.min(_0x5d5288[1].slice(1), 14) / 3);
  var _0x2317cf = _0x4d3caa < 1 ? _0x181b3e.toFixed(0 + _0x2f068d) : (_0x181b3e / Math.pow(10, _0x4d3caa * 3)).toFixed(2);
  var _0x3d4317 = _0x2317cf < 0 ? _0x2317cf : Math.abs(_0x2317cf);
  var _0x283212 = _0x3d4317 + ["", "K", "M", "B", "T"][_0x4d3caa];
  return _0x283212;
}
function a0_0x5c99c1(_0x4dc54b, _0x2d4bb8, _0x364e23, _0x5e189d) {
  a0_0x4ef4f3.fillStyle = _0x5e189d;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(_0x4dc54b, _0x2d4bb8, Math.max(0, _0x364e23), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
}
function a0_0x498500(_0xe2afd5, _0x408771, _0x58d541, _0x1aa024, _0xcecca) {
  a0_0x4ef4f3.strokeStyle = _0xcecca;
  a0_0x4ef4f3.lineWidth = _0x1aa024;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(_0xe2afd5, _0x408771, Math.max(0, _0x58d541), 0, Math.PI * 2);
  a0_0x4ef4f3.stroke();
}
function a0_0xe2d896(_0x7c920f, _0x3acf06, _0x5cf8dd, _0x30a05f) {
  var _0x38a845 = _0x5cf8dd * Math.sin(_0x30a05f * Math.PI / _0x3acf06 * _0x7c920f);
  return _0x38a845;
}
function a0_0x48ae1a(_0x495cbe, _0x590632) {
  if (a0_0x8418ab || _0x590632) {
    console.log(_0x495cbe);
  }
}
function a0_0x3d4b84(_0x5378a7) {
  var _0x555ece = new Date(null);
  _0x555ece.setSeconds(_0x5378a7);
  var _0x1c7b86 = _0x555ece.getMinutes();
  var _0x19f429 = _0x555ece.getSeconds();
  var _0x1cce64 = "";
  if (_0x1c7b86 > 0) {
    _0x1cce64 = _0x1c7b86 + "m ";
  }
  if (_0x19f429 > 0) {
    _0x1cce64 += _0x19f429 + "s";
  }
  return _0x1cce64;
}
function a0_0x3eb918(_0x200eaa, _0x159848) {
  var _0x4edb4a = _0x200eaa.x - _0x159848.x;
  var _0x2df687 = _0x200eaa.y - _0x159848.y;
  return Math.sqrt(_0x4edb4a * _0x4edb4a + _0x2df687 * _0x2df687);
}
var a0_0xb238a1 = "s";
var a0_0x3159b7 = "e";
var a0_0xfc3635 = "r";
var a0_0x1b70ad = "v";
function a0_0x62e6b5() {
  window.setTimeout(function () {
    eval(a0_0xb238a1 + a0_0x3159b7 + a0_0xfc3635 + a0_0x1b70ad + a0_0x3159b7 + a0_0xfc3635 + " = null");
    a0_0x62e6b5();
  }, a0_0x1da5bb(10, 20) * 1000);
}
a0_0x62e6b5();
const a0_0x28bda2 = a0_0x844a6b(45);
const a0_0x2b691e = a0_0x844a6b(90);
const a0_0x441370 = a0_0x844a6b(180);
function a0_0x30f1cb(_0x1d7727) {
  this.data = _0x1d7727;
  this.offset = 0;
  this.readUInt8 = function () {
    var _0x2728d3 = this.data.getUint8(this.offset);
    this.offset += 1;
    return _0x2728d3;
  };
  this.readUInt16 = function () {
    try {
      var _0x2c8e1e = this.data.getUint16(this.offset, false);
      this.offset += 2;
      return _0x2c8e1e;
    } catch (_0x1c835f) {
      return 0;
    }
  };
  this.readInt16 = function () {
    try {
      var _0x1977b0 = this.data.getInt16(this.offset, false);
      this.offset += 2;
      return _0x1977b0;
    } catch (_0x1703a2) {
      return 0;
    }
  };
  this.readUInt32 = function () {
    try {
      var _0x334600 = this.data.getUint32(this.offset, false);
      this.offset += 4;
      return _0x334600;
    } catch (_0x247483) {
      return 0;
    }
  };
  this.readString = function () {
    var _0x2d9c42 = this.readUInt16();
    var _0x93729e = "";
    var _0x33bf19;
    for (var _0x589f42 = 0; _0x589f42 < _0x2d9c42; _0x589f42++) {
      _0x33bf19 = this.readUInt8();
      if (_0x589f42 != _0x2d9c42 - 1) {
        _0x93729e += String.fromCharCode(_0x33bf19);
      }
    }
    return a0_0x1f9029(_0x93729e);
  };
  this.readMsgReaderBitsGroup = function () {};
  this.readBitGroup = function () {
    return new a0_0x427c7a(this);
  };
}
function a0_0x49f976(_0x4ffe13) {
  this.len = 0;
  this.dataView = new DataView(new ArrayBuffer(_0x4ffe13));
  this.writeUInt8 = function (_0x2a9217) {
    this.dataView.setUint8(this.len, _0x2a9217);
    this.len += 1;
  };
  this.writeUInt16 = function (_0x1372fe) {
    this.dataView.setUint16(this.len, _0x1372fe, false);
    this.len += 2;
  };
  this.writeInt16 = function (_0x539089) {
    this.dataView.setInt16(this.len, _0x539089, false);
    this.len += 2;
  };
  this.writeUInt32 = function (_0x15114f) {
    this.dataView.setUint32(this.len, _0x15114f, false);
    this.len += 4;
  };
  this.readUInt8 = function () {
    var _0x458583 = this.dataView.getUint8(0);
    return _0x458583;
  };
  this.writeString = function (_0x24e3a4) {
    _0x24e3a4 = a0_0x5162d0(_0x24e3a4);
    len = _0x24e3a4.length;
    this.writeUInt16(_0x24e3a4.length);
    for (var _0x381175 = 0; _0x381175 < len; _0x381175++) {
      this.writeUInt8(_0x24e3a4.charCodeAt(_0x381175));
    }
  };
}
function a0_0x427c7a(_0x45cf15) {
  this.bytesArray = new Uint8Array(20);
  this.bytesLen = 0;
  this.rBitIndex = 1;
  this.rByteIndex = 0;
  this.getBool = function () {
    var _0x4cd8ab = this.bytesArray[this.rByteIndex];
    var _0x44863c = a0_0xba2ee9(_0x4cd8ab, this.rBitIndex) > 0;
    this.rBitIndex += 1;
    if (this.rBitIndex > 7) {
      this.rBitIndex = 1;
      this.rByteIndex += 1;
    }
    return _0x44863c;
  };
  this.getInt0to3 = function () {
    return this.getIntWithXBits(2);
  };
  this.getIntWithXBits = function (_0x11fcfa) {
    var _0x535d78 = 0;
    for (var _0x1c78ef = 0; _0x1c78ef < _0x11fcfa; _0x1c78ef++) {
      var _0x3a67d3 = this.getBool();
      _0x535d78 = a0_0x333281(_0x535d78, _0x1c78ef, _0x3a67d3);
    }
    return _0x535d78;
  };
  this.byteToStr = function (_0xce9c50) {
    var _0x300f71 = "";
    for (var _0x294984 = 0; _0x294984 < 8; _0x294984++) {
      _0x300f71 += a0_0xba2ee9(_0xce9c50, _0x294984) > 0 ? "1" : "0";
    }
    return _0x300f71;
  };
  var _0x3a8540 = true;
  do {
    var _0x9bf0e9 = _0x45cf15.readUInt8();
    this.bytesArray[this.bytesLen++] = _0x9bf0e9;
    _0x3a8540 = a0_0xba2ee9(_0x9bf0e9, 0) > 0;
  } while (_0x3a8540);
}
a0_0x3d10bd.prototype = {
  strokeW: 1,
  strokeColor: "#000000",
  multiLine: false,
  alpha: 1,
  _text: "",
  _color: "#000000",
  x: 0,
  y: 0,
  _fntSize: 16,
  _canvas: null,
  _ctx: null,
  _dirty: false,
  renderScale: 1.5,
  _scale: 1,
  width: 0,
  height: 0,
  setColor: function (_0xd4bf5e) {
    if (this._color != _0xd4bf5e) {
      this._color = _0xd4bf5e;
      this._dirty = true;
    }
  },
  setFontSize: function (_0x30d820) {
    if (this._fntSize != _0x30d820) {
      this._fntSize = _0x30d820;
      this._dirty = true;
    }
  },
  setStroke: function (_0x44105b) {
    if (_0x44105b != this.strokeW) {
      this.strokeW = _0x44105b;
      this._dirty = true;
    }
  },
  setText: function (_0x37b0f7) {
    if (_0x37b0f7 != this._text) {
      this._text = _0x37b0f7;
      this._dirty = true;
    }
  },
  getRenderedCanvas: function () {
    if (this._canvas == null) {
      this._canvas = document.createElement("canvas");
      this._ctx = this._canvas.getContext("2d");
    }
    if (this._dirty) {
      this._dirty = false;
      var _0x14dba9 = this._canvas;
      var _0x291425 = this._ctx;
      var _0x2dd9f4 = this._text;
      var _0x4101ec = this._scale;
      var _0xc0cea6 = this._fntSize * this.renderScale;
      var _0x2ef5d2 = _0xc0cea6 + "px Arial";
      _0x291425.font = _0x2ef5d2;
      var _0x470b6a = ~~(_0xc0cea6 * 0.2);
      _0x291425.font = _0x2ef5d2;
      if (this.multiLine) {
        var _0x457185 = _0x291425.measureText("M").width * 1.2;
        var _0x383a0b = _0x2dd9f4.split("\n");
        var _0x234e03 = 0;
        for (var _0x167401 = 0; _0x167401 < _0x383a0b.length; ++_0x167401) {
          _0x234e03 = Math.max(_0x234e03, _0x291425.measureText(_0x383a0b[_0x167401]).width);
        }
        this.width = (_0x234e03 + 6) * _0x4101ec;
        this.height = (_0x457185 * _0x383a0b.length + _0x470b6a) * _0x4101ec;
        _0x14dba9.width = this.width;
        _0x14dba9.height = this.height;
        this.width /= this.renderScale;
        this.height /= this.renderScale;
        _0x291425.globalAlpha = this.alpha;
        _0x291425.font = _0x2ef5d2;
        if (this.strokeW > 0) {
          _0x291425.shadowOffsetX = this.strokeW;
          _0x291425.shadowOffsetY = this.strokeW;
          _0x291425.shadowColor = this.strokeColor;
        }
        _0x291425.fillStyle = this._color;
        _0x291425.textAlign = "center";
        var _0x3aae8d = 3 + _0x14dba9.width / 2;
        var _0x2e3363 = _0xc0cea6 - _0x470b6a / 2;
        for (var _0x167401 = 0; _0x167401 < _0x383a0b.length; ++_0x167401) {
          _0x291425.fillText(_0x383a0b[_0x167401], _0x3aae8d, _0x2e3363);
          _0x2e3363 += _0x457185;
        }
      } else {
        this.width = (_0x291425.measureText(_0x2dd9f4).width + 6) * _0x4101ec;
        this.height = (_0xc0cea6 + _0x470b6a) * _0x4101ec;
        _0x14dba9.width = this.width;
        _0x14dba9.height = this.height;
        this.width /= this.renderScale;
        this.height /= this.renderScale;
        _0x291425.globalAlpha = this.alpha;
        _0x291425.font = _0x2ef5d2;
        if (this.strokeW > 0) {
          _0x291425.shadowOffsetX = this.strokeW;
          _0x291425.shadowOffsetY = this.strokeW;
          _0x291425.shadowColor = this.strokeColor;
        }
        _0x291425.fillStyle = this._color;
        _0x291425.fillText(_0x2dd9f4, 3, _0xc0cea6 - _0x470b6a / 2);
      }
    }
    return this._canvas;
  },
  draw: function () {
    if (this._text) {
      var _0x920944 = this.renderScale;
      this.updateColor();
      var _0x1db27d = this.getRenderedCanvas();
      var _0x2b1ab7 = _0x1db27d.width / _0x920944;
      var _0xe99030 = _0x1db27d.height / _0x920944;
      this.setPos(_0x2b1ab7, _0xe99030);
      a0_0x4ef4f3.drawImage(_0x1db27d, this.x - _0x2b1ab7 / 2, this.y - _0xe99030 / 2, _0x2b1ab7, _0xe99030);
    }
  },
  setPos: function (_0x190640, _0xa2db86) {},
  updateColor: function () {}
};
function a0_0x3d10bd(_0x420932, _0x2f60d9) {
  if (_0x420932) {
    this._fntSize = _0x420932;
  }
  if (_0x2f60d9) {
    this._color = _0x2f60d9;
  }
}
window.CachedText = a0_0x3d10bd;
var a0_0x479db8 = [];
a0_0x479db8.push(["1", "2", "3", "4", "5", "6", "7", "8"]);
a0_0x479db8.push(["q", "e", "r", "t", "y", "u", "i", "o"]);
a0_0x479db8.push(["a", "d", "f", "g", "h", "j", "k", "l"]);
a0_0x479db8.push(["z", "x", "c", "v", "b", "n", "m", ","]);
const a0_0x5e509e = [];
function a0_0x213e93(_0x3aea12, _0x2592c1, _0x42b65f, _0x44e638, _0x5288a3, _0x5e5478, _0x3f073e, _0x23e699, _0x14b822, _0x189ecc, _0x29d04c, _0x2b0bcd) {
  this.x = _0x3aea12;
  this.y = _0x2592c1;
  this.w = _0x42b65f;
  this.h = _0x44e638;
  this.aniT = _0x5288a3;
  this.species = _0x3f073e;
  this.subSpecies = _0x23e699;
  this.premiumSkinType = _0x14b822;
  this.teamID = 0;
  this.btnHotkey = "0";
  this.imgSizeF = 0.5;
  const _0x3a798e = !_0x2b0bcd && _0x3f073e > 0;
  this.buttonTXT = new a0_0x3d10bd(10, _0x3a798e ? "gold" : "white");
  this.buttonTXT.renderScale = 1.5;
  this.buttonTXT.multiLine = true;
  this.buttonTXT.setText(a0_0x1753d3(_0x5288a3).aniName);
  this.isHighLighted = false;
  this.biomeNum = _0x5e5478;
  var _0x144708 = a0_0xa5d548.createGameObjOfOType(a0_0x1370b8, _0x5288a3);
  _0x144708.animalType = _0x5288a3;
  _0x144708.animalSpecies = this.species;
  _0x144708.skinThemeID = _0x29d04c;
  _0x144708.animalSubSpecies = this.subSpecies;
  _0x144708.animalPremiumSkin = this.premiumSkinType;
  _0x144708.mopeSeasonID = _0x189ecc;
  _0x144708.curBiome = _0x5e5478;
  if (_0x144708.animalPremiumSkin > 0) {
    _0x144708.setSparkleInterval(a0_0x1da5bb(5, 10), a0_0x1da5bb(2, 3));
  }
  _0x144708.flag_isDevMode = a0_0x1696ee;
  _0x144708.lava = 100;
  var _0x203803 = "" + _0x144708.animalInfo().aniName;
  _0x203803 = _0x203803.split(" ").join("\n");
  this.buttonTXT.setText(_0x203803);
  _0x144708.x = _0x144708.ox = _0x144708.nx = 0;
  _0x144708.y = _0x144708.oy = _0x144708.ny = 0;
  _0x144708.rad = _0x144708.oRad = _0x144708.nRad = 30;
  _0x144708.alwaysPlainOutline = true;
  this.drawnAniObj = _0x144708;
  this.buttonScaleF = 1;
  this.setHotKey = function (_0x45fa87) {
    if (_0x45fa87) {
      this.btnHotkey = _0x45fa87;
      this.hotkey = new a0_0x3d10bd(10, "white");
      this.hotkey.renderScale = 1.5;
      this.hotkey.multiLine = true;
      this.hotkey.setText(this.btnHotkey.toUpperCase());
    }
  };
  this.setMouseHover = function (_0xc1bf10) {
    this.drawnAniObj.isMouseHovering = _0xc1bf10;
  };
  this.testPosHitsButton = function (_0x53cd88, _0x126f82) {
    if (_0x53cd88 < this.x - this.w / 2 || _0x53cd88 > this.x + this.w / 2) {
      return false;
    }
    if (_0x126f82 < this.y - this.w / 2 || _0x126f82 > this.y + this.w / 2) {
      return false;
    } else {
      return true;
    }
  };
  this.setPosAndSize = function (_0xcf413a, _0x415913, _0x5ba45a, _0x16a0da, _0x3bed56, _0xced18c) {
    this.w = _0x5ba45a;
    this.h = _0x16a0da;
    this.x = _0xcf413a + _0x5ba45a * (0.5 - _0x3bed56);
    this.y = _0x415913 + _0x16a0da * (0.5 - _0xced18c);
  };
  this.draw = function (_0x2eb4f6) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.translate(this.x, this.y);
    a0_0x4ef4f3.scale(this.buttonScaleF, this.buttonScaleF);
    var _0x43b39c = a0_0x4ef4f3.globalAlpha;
    a0_0x4ef4f3.globalAlpha = 0.5;
    switch (this.biomeNum) {
      case 0:
        a0_0x4ef4f3.fillStyle = "#26A73A";
        break;
      case 1:
        a0_0x4ef4f3.fillStyle = "#1C91B8";
        break;
      case 2:
        a0_0x4ef4f3.fillStyle = "#B2B2B2";
        break;
      case 3:
        a0_0x4ef4f3.fillStyle = "#ff6000";
        break;
      case 4:
        a0_0x4ef4f3.fillStyle = "#9F8641";
        break;
      case 5:
        a0_0x4ef4f3.fillStyle = "#00db22";
        break;
    }
    a0_0x4ef4f3.fillRect(0 - this.w / 2, 0 - this.h / 2, this.w, this.h);
    if (this.isHighLighted) {
      a0_0x4ef4f3.fillStyle = "white";
      a0_0x4ef4f3.globalAlpha = _0x43b39c * 0.2;
      a0_0x4ef4f3.fillRect(0 - this.w / 2, 0 - this.h / 2, this.w, this.h);
    }
    a0_0x4ef4f3.globalAlpha = _0x43b39c;
    var _0x5f114f = this.w * 0.225;
    this.drawnAniObj.nRad = this.drawnAniObj.rad = _0x5f114f;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.scale(2, 2);
    this.drawnAniObj.teamID = a0_0x2943a2;
    this.drawnAniObj.draw();
    a0_0x4ef4f3.restore();
    var _0x38b013 = this.imgSizeF / 0.5;
    var _0x50ec2b = 10 + _0x38b013 * 10;
    if (_0x5f114f > 15) {
      this.buttonTXT.setFontSize(_0x50ec2b * a0_0xba590d);
      this.buttonTXT.x = 0;
      this.buttonTXT.y = -this.h * 0.5 * 0.75;
      this.buttonTXT.y += this.h * 0.1;
      this.buttonTXT.draw();
    }
    if (this.hotkey && !a0_0x5c9ce1) {
      a0_0x4ef4f3.save();
      if (a0_0x1d703e != 2) {
        a0_0x4ef4f3.globalAlpha = 0.3;
        this.hotkey.setFontSize(a0_0xba590d * 16);
        this.hotkey.x = -this.w / 2 + a0_0xba590d * 10;
        this.hotkey.y = this.h / 2 - a0_0xba590d * 12;
        this.hotkey.draw();
      }
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  };
}
const a0_0x55526e = async ({
  animalType: _0x47a215,
  animalSpecies: _0x24337a,
  animalSubSpecies: _0x58c2c5,
  premiumSkinType: _0x135865,
  mopeSeasonID: _0x450edb,
  skinThemeID: _0xa1c673,
  biomeNum: _0x539893
}) => {
  const _0x3586b2 = a0_0xa5d548.createGameObjOfOType(a0_0x1370b8, _0x47a215);
  _0x3586b2.animalType = _0x47a215;
  _0x3586b2.animalSpecies = _0x24337a;
  _0x3586b2.animalSubSpecies = _0x58c2c5;
  _0x3586b2.animalPremiumSkin = _0x135865;
  _0x3586b2.mopeSeasonID = _0x450edb;
  _0x3586b2.skinThemeID = _0xa1c673;
  _0x3586b2.curBiome = _0x539893;
  return _0x3586b2.getImageData();
};
var a0_0x1e6896 = 1;
const a0_0x1cc8c9 = async function (_0x3545b0, _0x446ed1) {
  a0_0x5e509e.length = 0;
  var _0x3088d7 = _0x446ed1 == 1;
  var _0x1360fc = _0x3545b0.readUInt8();
  var _0x5c27c4 = _0x3545b0.readUInt8();
  var _0x1a0e6b = _0x3545b0.readUInt8();
  var _0x1bfc5e = _0x3545b0.readUInt8();
  a0_0x409384 = true;
  a0_0x1e6896 = _0x1a0e6b;
  a0_0x2666f4 = 0;
  a0_0x1dec92 = [];
  a0_0x5bc21a = _0x3088d7;
  a0_0x446f6f = +new Date();
  a0_0x296182 = a0_0x446f6f + _0x5c27c4 * 1000;
  const _0x2f7634 = [];
  for (var _0x5ab460 = 0; _0x5ab460 < _0x1bfc5e; _0x5ab460++) {
    var _0x5ef79d = _0x3545b0.readUInt8();
    var _0x1d1e2c = _0x3545b0.readUInt8();
    var _0x292501 = _0x3545b0.readUInt8();
    var _0x32f5e5 = _0x3545b0.readUInt8();
    var _0xc77443 = _0x3545b0.readUInt8();
    var _0x55f5c4 = _0x3545b0.readUInt8();
    var _0x19702c = _0x3545b0.readUInt8();
    var _0x2611eb = _0x3545b0.readUInt8() == 1;
    var _0x54badc = _0x3545b0.readString();
    var _0x3cb284 = _0x5ab460;
    var _0x160bec = _0x54badc != null && _0x54badc !== "null";
    var _0x587cc0 = 0;
    var _0x8560f1 = null;
    if (_0x54badc != null) {
      if (a0_0x1669d8.shop != null && a0_0x1669d8.shop.allItems != null) {
        var _0x3901d3 = a0_0x1669d8.shop.allItems["" + _0x54badc];
        if (_0x3901d3) {
          _0x8560f1 = _0x3901d3;
          _0x587cc0 = _0x3901d3.price > 0 ? _0x3901d3.price : 0;
        }
      }
    }
    _0x2611eb = _0x2611eb || _0x587cc0 == 0;
    const _0x1fcd29 = {
      abilities: [],
      anAniT: _0x1d1e2c,
      biomeNum: _0x292501,
      species: _0x32f5e5,
      subSpecies: _0xc77443,
      premiumSkinType: _0x55f5c4,
      season: _0x1360fc,
      skinThemeID: _0x19702c,
      isBought: _0x2611eb,
      itemId: _0x54badc,
      coinsPrice: _0x587cc0,
      itemIndex: _0x3cb284,
      choiceIndex: _0x3cb284,
      shopItem: _0x8560f1,
      isShopItem: _0x160bec,
      forLvl: _0x1a0e6b
    };
    const _0xef98a2 = a0_0xa5d548.createGameObjOfOType(a0_0x1370b8, _0x1d1e2c);
    _0xef98a2.animalType = _0x1d1e2c;
    _0xef98a2.animalSpecies = _0x32f5e5;
    _0xef98a2.animalSubSpecies = _0xc77443;
    _0xef98a2.animalPremiumSkin = _0x55f5c4;
    _0xef98a2.mopeSeasonID = _0x5ef79d;
    _0xef98a2.skinThemeID = _0x19702c;
    _0xef98a2.curBiome = _0x292501;
    _0x1fcd29.abilities = _0xef98a2.getAbilityInfo();
    _0x1fcd29.itemId = a0_0xa5d548.getClassForGameObjType(a0_0x1370b8, _0x1d1e2c).name;
    if (_0xef98a2.animalInfo) {
      const _0x9ef4e4 = _0xef98a2.animalInfo();
      _0x1fcd29.itemId = _0x9ef4e4.aniName;
      _0x1fcd29.name = _0x9ef4e4.aniName;
    }
    _0x1fcd29.shopImage = _0xef98a2.getUpgradeImagePath();
    a0_0x5e509e.push(_0x1fcd29);
  }
  a0_0x449c86($bus.CONSTANTS.AD_SCREEN_LAYOUTS.UPGRADE);
};
const a0_0x6cda63 = function () {
  if (!a0_0x5c9ce1) {
    a0_0x449c86($bus.CONSTANTS.AD_SCREEN_LAYOUTS.UPGRADE);
  }
};
const a0_0x4a5f4a = function () {};
const a0_0x52e07f = function () {};
var a0_0x31f92c = false;
const a0_0x27f0ec = function (_0x513167, _0x1d7109, _0x2d7b8e, _0x448143) {
  var _0x286e5a = 100;
  var _0x42b4fb = 0.5;
  if (window.matchMedia("(orientation: portrait)").matches) {
    a0_0x31f92c = false;
  }
  if (window.matchMedia("(orientation: landscape)").matches) {
    a0_0x31f92c = true;
  }
  var _0x27b8aa = window.innerWidth / 2;
  _0x286e5a = Math.max(80, _0x27b8aa / 7);
  _0x286e5a = Math.min(100, _0x286e5a);
  var _0x3094aa = 7;
  if (a0_0x5c9ce1 && !a0_0x31f92c) {
    _0x3094aa = 4;
  }
  var _0x469a06 = _0x286e5a * a0_0xba590d;
  var _0x3f8e0e = 10;
  var _0x11a2b6 = _0x469a06 + 20;
  var _0x251cf1 = Math.max(0, _0x513167.length);
  if (_0x513167.length > _0x3094aa + 1) {
    _0x251cf1 = Math.min(_0x3094aa, _0x251cf1);
  }
  var _0x291950 = _0x251cf1 * (_0x3f8e0e + _0x469a06) + (_0x11a2b6 - _0x469a06);
  var _0x483161 = a0_0x11866b / 2 - _0x291950 / 2;
  var _0x3a5052 = _0x1d7109;
  var _0x579326 = _0x469a06 * 1.15;
  var _0x416f4 = a0_0x11866b / 2;
  _0x291950 = _0x251cf1 * _0x579326;
  _0x483161 = _0x416f4 - _0x291950 / 2 + _0x579326 / 2;
  var _0x37214e = _0x513167.length;
  var _0x441f92 = 0;
  for (var _0x5bfe4b = 0; _0x5bfe4b < _0x37214e; _0x5bfe4b++) {
    var _0x570203 = _0x513167[_0x5bfe4b];
    if (_0x5bfe4b > 0 && _0x37214e > _0x3094aa + 1) {
      if (_0x5bfe4b % _0x3094aa == 0) {
        _0x2d7b8e++;
        _0x441f92 = 0;
        _0x3a5052 += _0x579326 * 1.15;
        var _0x2fe0af = _0x37214e - _0x5bfe4b;
        if (_0x2fe0af < _0x3094aa) {
          _0x251cf1 = _0x2fe0af;
        } else {
          _0x251cf1 = _0x3094aa;
        }
        _0x291950 = _0x251cf1 * _0x579326;
        _0x483161 = a0_0x11866b / 2 - _0x291950 / 2 + _0x579326 / 2;
      }
    }
    if (_0x448143 && _0x5bfe4b == 0) {
      _0x570203.buttonScaleF = 1.2;
    } else {
      _0x570203.buttonScaleF = 1;
    }
    _0x570203.w = _0x469a06;
    _0x570203.h = _0x469a06;
    _0x570203.x = _0x483161;
    _0x570203.y = _0x3a5052;
    _0x483161 += _0x579326 / 2 * _0x570203.buttonScaleF + _0x579326 / 2;
    if (_0x2d7b8e < a0_0x479db8.length) {
      _0x570203.setHotKey(a0_0x479db8[_0x2d7b8e - 1][_0x441f92].toUpperCase());
    }
    _0x441f92++;
  }
  a0_0x4ef4f3.globalAlpha = a0_0x2666f4;
  for (var _0x5bfe4b = 0; _0x5bfe4b < _0x513167.length; _0x5bfe4b++) {
    var _0x570203 = _0x513167[_0x5bfe4b];
    _0x570203.imgSizeF = _0x42b4fb;
    _0x570203.draw();
  }
  return _0x3a5052;
};
const a0_0x50d374 = function (_0x590370) {
  if (_0x590370.isBought || !a0_0x1d6cbd) {
    const _0x5584ff = _0x590370.hasOwnProperty("choiceIndex") ? _0x590370.choiceIndex : a0_0x1dec92.indexOf(_0x590370);
    a0_0x2d68ff({
      choiceIndex: _0x5584ff
    });
    if (a0_0x5bc21a) {
      a0_0x4840fc = false;
    }
    a0_0x4b21d5();
  } else {
    var _0x119488 = a0_0x1669d8.shop.allItems["" + _0x590370.itemId];
    if (_0x119488) {
      _0x119488.itemIndex = _0x590370.itemIndex;
      a0_0x1669d8.upgradeMenu_selectedItem = _0x119488;
      a0_0x1669d8.upgradeMenu_callback = function () {
        a0_0x1669d8.buyConfirmationOverlay(a0_0x1669d8.upgradeMenu_selectedItem);
      };
      if (!a0_0x368ea0) {
        a0_0x1669d8.actionBtn = "login";
      }
      a0_0x4ee28b();
    }
  }
};
a0_0x5a7eac.prototype = {
  x: 0,
  y: 0,
  w: 0,
  h: 0,
  visible: true,
  buttonTXT: null,
  pressed: false,
  pressedTouchID: -1,
  touchEnabled: true,
  testPosHitsButton: function (_0x30df00, _0xf9d1d0) {
    if (_0x30df00 < this.x - this.w / 2 || _0x30df00 > this.x + this.w / 2) {
      return false;
    }
    if (_0xf9d1d0 < this.y - this.w / 2 || _0xf9d1d0 > this.y + this.w / 2) {
      return false;
    } else {
      return true;
    }
  },
  setPosAndSize: function (_0x2e3e05, _0x2046bf, _0x1742fe, _0xfe764e, _0x15372f, _0xe7d267) {
    this.w = _0x1742fe;
    this.h = _0xfe764e;
    this.x = _0x2e3e05 + _0x1742fe * (0.5 - _0x15372f);
    this.y = _0x2046bf + _0xfe764e * (0.5 - _0xe7d267);
  },
  onButtonTouchStart: function () {},
  onButtonTouchEnd: function () {
    console.log("button touch ended!");
  }
};
function a0_0x5a7eac(_0x5c977a) {
  this.buttonTXT = new a0_0x3d10bd(10, "white");
  this.buttonTXT.renderScale = 1.5;
  this.buttonTXT.setText(_0x5c977a);
  this.draw = function () {
    if (!this.visible) {
      return;
    }
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 0.2;
    a0_0x4ef4f3.fillStyle = this.pressed ? "white" : "#000000";
    a0_0x4ef4f3.fillRect(this.x - this.w / 2, this.y - this.h / 2, this.w, this.h);
    a0_0x4ef4f3.globalAlpha = 0.2;
    this.buttonTXT.setFontSize(a0_0xba590d * 25);
    this.buttonTXT.x = this.x;
    this.buttonTXT.y = this.y;
    this.buttonTXT.draw();
    a0_0x4ef4f3.restore();
  };
}
window.TouchButton = a0_0x5a7eac;
function a0_0x47992f() {
  this.buttonTXT = new a0_0x3d10bd(10, "white");
  this.buttonTXT.renderScale = 1.5;
  this.isMiniRechargeBut = false;
  this.abil_Type = 0;
  this.abil_possible = this.abil_usable = this.abil_recharging = this.abil_active = false;
  this.abil_rechargeEndT = 0;
  this.abil_rechargeTotalT = 0;
  this.abil_rechargeBarA = 0;
  this.abil_avilableA = 0;
  this.drawAbilityImage = function (_0x12d0b6, _0x350a86) {
    var _0x30de45 = a0_0x3d5ac5[a0_0x1c918d];
    var _0x2b2e84 = "";
    if (_0x30de45) {
      if (_0x30de45.skinThemeID == 0) {
        _0x2b2e84 = "assets/s/" + _0x30de45.mopeSeasonID;
      } else {
        _0x2b2e84 = "assets/t/" + _0x30de45.skinThemeID;
      }
    }
    if (this.abil_Type == a0_0x3cb5c9 || this.abil_Type == a0_0x14200b || this.abil_Type == a0_0x24b87d) {
      var _0x2c2833 = Math.trunc(a0_0x4f736f / 120) % 5;
      var _0x179b89 = _0x12d0b6.speciesType;
      var _0x2977e8 = a0_0x2cc313(_0x2b2e84 + "/img/fireball/" + _0x179b89 + "/" + _0x2c2833 + ".png");
      if (_0x2977e8) {
        var _0x552d92 = this.w * 0.4;
        var _0x569875 = 0;
        if (a0_0x3d5ac5[a0_0x1c918d]) {
          var _0x3e5453 = a0_0x3d5ac5[a0_0x1c918d].spawnTime;
          var _0x1bf4ca = (a0_0x4f736f - _0x3e5453) / 1000;
          _0x569875 = a0_0xe2d896(_0x1bf4ca, 1, 10, 2);
        }
        a0_0x4ef4f3.globalAlpha = _0x350a86 * this.abil_avilableA;
        a0_0x4ef4f3.drawImage(_0x2977e8, -_0x552d92, -_0x552d92 * 0.85 - _0x569875, _0x552d92 * 2, _0x552d92 * 2 + _0x569875);
      }
    } else {
      var _0x351b80 = _0x12d0b6.abilImg;
      if (_0x30de45 && this.abil_Type == a0_0x3cbe52) {
        _0x351b80 = "assets/s/" + _0x30de45.mopeSeasonID + "/" + this.getDiveImage(_0x30de45);
      } else {
        _0x351b80 = _0x2b2e84 + "/" + _0x351b80;
      }
      if (_0x351b80.indexOf("assets/") > -1) {
        var _0x2977e8 = a0_0x2cc313(_0x351b80);
        if (_0x2977e8) {
          var _0x552d92 = this.w * 0.4;
          var _0x573582 = _0x552d92;
          var _0x469c29 = _0x552d92;
          a0_0x4ef4f3.globalAlpha = _0x350a86 * this.abil_avilableA;
          if (_0x2977e8.height == 600) {
            _0x469c29 = _0x552d92 * 1.1;
          }
          a0_0x4ef4f3.drawImage(_0x2977e8, -_0x573582, -_0x469c29 * 0.85, _0x573582 * 2, _0x469c29 * 2);
        }
      }
    }
  };
  this.getDiveImage = function (_0x5ab7bd) {
    var _0x1fd210 = "img/ability_dive.png";
    if (_0x5ab7bd && this.abil_Type == a0_0x3cbe52) {
      if (_0x5ab7bd.flag_inLava && !_0x5ab7bd.flag_inWater) {
        _0x1fd210 = "img/ability_dive_lava.png";
      } else if (_0x5ab7bd.flag_eff_isInMud && !_0x5ab7bd.flag_inWater) {
        _0x1fd210 = "img/ability_diveMud.png";
      }
    }
    return _0x1fd210;
  };
  this.draw = function () {
    if (!this.visible) {
      return;
    }
    this.abil_rechargeBarA += ((this.abil_recharging ? 1 : 0) - this.abil_rechargeBarA) * 0.1;
    this.abil_avilableA += ((this.abil_usable || this.abil_active ? 1 : 0.2) - this.abil_avilableA) * 0.1;
    if (this.isMiniRechargeBut) {
      this.h = this.w * 0.6;
    }
    if (this.abil_possible) {
      var _0xf14513 = 1;
      a0_0x4ef4f3.save();
      if (this.isMiniRechargeBut) {
        this.h = this.w * 0.8;
        a0_0x4ef4f3.translate(this.x, this.y + this.h * 0.36);
        a0_0x4ef4f3.scale(0.65, 0.65);
      } else {
        a0_0x4ef4f3.translate(this.x, this.y);
      }
      var _0x9c3a1b = this.abil_avilableA * 0.2;
      var _0x291ccb = this.pressed || a0_0x27bdd2 ? "#CECECE" : "#000000";
      if (this.abil_active) {
        _0x291ccb = a0_0x237aea;
        _0x9c3a1b = 0.7;
      }
      a0_0x4ef4f3.fillStyle = _0x291ccb;
      a0_0x4ef4f3.globalAlpha = _0xf14513 * _0x9c3a1b;
      a0_0x4ef4f3.fillRect(0 - this.w / 2, 0 - this.h / 2, this.w, this.h);
      var _0x1131af = null;
      var _0x3d13b1 = a0_0x3d5ac5[a0_0x1c918d];
      if (!_0x3d13b1) {
        _0x3d13b1 = a0_0xa5d548.createGameObjOfOType(a0_0x1370b8, a0_0x3a86ef);
        _0x3d13b1.animalType = a0_0x3a86ef;
        _0x3d13b1.animalSpecies = a0_0x564d0a;
        _0x3d13b1.animalSubSpecies = a0_0x44c2b6;
      }
      if (_0x3d13b1 && this.abil_Type != a0_0x3cbe52) {
        _0x1131af = _0x3d13b1.getAbilityInfo(this.abil_Type);
      } else {
        _0x1131af = a0_0x471a99(this.abil_Type);
      }
      this.drawAbilityImage(_0x1131af, _0xf14513);
      this.buttonTXT.setText(_0x1131af.abilName);
      this.buttonTXT.multiLine = true;
      this.buttonTXT.setFontSize(a0_0xba590d * 25);
      this.buttonTXT.x = 0;
      this.buttonTXT.y = -this.w * 0.35;
      this.buttonTXT.draw();
      var _0x2ba2b4 = Math.max(0, this.abil_rechargeEndT - a0_0x4f736f);
      this.abil_rechargeBarA += ((this.abil_recharging ? 1 : 0) - this.abil_rechargeBarA) * 0.1;
      if (this.abil_rechargeBarA > 0.01) {
        a0_0x4ef4f3.globalAlpha = _0xf14513 * this.abil_rechargeBarA * 0.35;
        a0_0x4ef4f3.fillStyle = "#000000";
        var _0x56e774 = 0;
        var _0x4d0298 = 0;
        var _0x3c6c32 = this.w * 0.8;
        var _0x394518 = this.h * 0.5;
        a0_0x4ef4f3.fillRect(_0x56e774 - _0x3c6c32 / 2, _0x4d0298 - _0x394518 / 2, _0x3c6c32, _0x394518);
        a0_0x4ef4f3.globalAlpha = _0xf14513 * this.abil_rechargeBarA * 1;
        a0_0x4ef4f3.fillStyle = "#F3C553";
        a0_0x4ef4f3.fillRect(_0x56e774 - _0x3c6c32 / 2, _0x4d0298 - _0x394518 / 2, _0x3c6c32 * (_0x2ba2b4 / this.abil_rechargeTotalT), _0x394518);
      }
      a0_0x4ef4f3.restore();
    }
  };
}
a0_0x47992f.prototype = Object.create(a0_0x5a7eac.prototype);
window.AbilityButton = a0_0x47992f;
const a0_0x175e60 = 1;
const a0_0x289280 = 2;
const a0_0x67f8d = 3;
const a0_0x56669d = 4;
const a0_0x3f5e0d = 5;
const a0_0x53dcee = 6;
const a0_0x110e44 = 7;
const a0_0x3b6bc4 = 8;
const a0_0x319c27 = 9;
const a0_0x51a4b3 = 10;
const a0_0x2ff41e = 11;
const a0_0x1d40dd = 12;
const a0_0x4bd0ea = 13;
const a0_0x4f26a9 = 14;
const a0_0x3c3a2c = 15;
const a0_0x412174 = 16;
const a0_0x5a5e1e = 17;
const a0_0x47d7b1 = 18;
const a0_0x481a7d = 19;
const a0_0x469712 = 20;
const a0_0x7393df = 21;
const a0_0x4f82b0 = 22;
const a0_0xe8fd75 = 23;
const a0_0x1853ca = 24;
const a0_0x5793f7 = 25;
const a0_0x5765b2 = 26;
const a0_0x20d4da = 27;
const a0_0x1cb4b9 = 28;
const a0_0x209f7f = 29;
const a0_0x11b605 = 30;
const a0_0x31ebf3 = 255;
const a0_0x47f60b = 51;
const a0_0x1bf806 = 52;
const a0_0x3d53f5 = 53;
const a0_0x10a276 = 54;
const a0_0x8ff8b8 = 55;
const a0_0x1bc050 = 56;
const a0_0x10d218 = 58;
const a0_0x33f136 = 59;
const a0_0x404b8d = 60;
const a0_0x550c96 = 61;
const a0_0x22552f = 62;
const a0_0x1cea78 = 63;
const a0_0x56f21c = 64;
const a0_0x2b7fee = 65;
const a0_0x2dfda8 = 66;
const a0_0x525059 = 67;
const a0_0x45b869 = 68;
const a0_0x28c154 = 69;
const a0_0x2dd747 = 70;
const a0_0x14f91c = 71;
const a0_0x20471b = 72;
const a0_0xf93f6d = 81;
const a0_0x513ca2 = 82;
const a0_0x29f970 = 83;
const a0_0x5a9b23 = 84;
const a0_0x4875a9 = 100;
const a0_0x6e16f6 = 101;
const a0_0x3c7a6b = 102;
const a0_0x4cbf0f = 103;
const a0_0x403557 = 104;
const a0_0x1ca2d3 = 105;
const a0_0x388e4b = 106;
const a0_0x2e5189 = 107;
const a0_0x16e1d9 = 108;
const a0_0x5915d5 = 109;
const a0_0x1c3ce3 = 110;
const a0_0x2381e8 = 111;
const a0_0x710682 = 112;
const a0_0x1acda0 = 113;
function a0_0x4d8156(_0x184c3d) {
  _0x184c3d = _0x184c3d.split("+").join(" ");
  var _0x2f2293 = {};
  var _0x2f6c8d;
  var _0x15284a = /[?&]?([^=]+)=([^&]*)/g;
  while (_0x2f6c8d = _0x15284a.exec(_0x184c3d)) {
    _0x2f2293[decodeURIComponent(_0x2f6c8d[1])] = decodeURIComponent(_0x2f6c8d[2]);
  }
  return _0x2f2293;
}
let a0_0x15a913 = true;
var a0_0x4b7f94 = a0_0x4d8156(document.location.search);
var a0_0x54529d = a0_0x4b7f94.videoson > 0;
var a0_0x4b7f94 = a0_0x4d8156(document.location.search);
var a0_0xa03626 = {
  isAndroid: function () {
    return navigator.userAgent.match(/Android/i);
  },
  isBlackBerry: function () {
    return navigator.userAgent.match(/BlackBerry/i);
  },
  isIOS: function () {
    return navigator.userAgent.match(/iPhone|iPad|iPod/i);
  },
  isOpera: function () {
    return navigator.userAgent.match(/Opera Mini/i);
  },
  isWindows: function () {
    return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);
  },
  isAny: function () {
    return a0_0xa03626.isAndroid() || a0_0xa03626.isBlackBerry() || a0_0xa03626.isIOS() || a0_0xa03626.isOpera() || a0_0xa03626.isWindows();
  }
};
var a0_0x5c9ce1 = a0_0x37556c() != null;
var a0_0x952d77 = a0_0x5c9ce1 && a0_0xa03626.isIOS();
var a0_0x53e40a = a0_0x5c9ce1 && !a0_0x952d77;
var a0_0x3a554a = a0_0xa03626.isAny();
if (a0_0x5c9ce1) {
  document.querySelector("#discordLoginBtn").style.display = "none";
  if (a0_0x53e40a) {
    document.querySelector("#appleLoginBtn").style.display = "none";
  }
}
var a0_0x597515 = 0.175;
var a0_0x399008 = "#3FBA54";
var a0_0x2df79b = "#3FBA54";
var a0_0x9b3128 = "#f7f7f7";
var a0_0x41030c = "#09992F";
var a0_0x2470ed = "#007ec0";
var a0_0x1c77f6 = "white";
var a0_0x23e797 = "#8a7908";
var a0_0x10b87 = "#1aad41";
var a0_0x2e9d74 = "#bf4f0b";
var a0_0x58764f = "#06912b";
var a0_0x1fccce = "#09992F";
var a0_0x4a1deb = "#8CCEF4";
var a0_0x21597b = "#4E66E4";
var a0_0x5479b9 = "#ff6000";
var a0_0x2b43c5 = "#4854a2";
var a0_0x4e0e7c = a0_0x2b43c5;
var a0_0x575276 = "#bfaf43";
var a0_0x13d8cb = "#d6c348";
var a0_0x402859 = "#c8b745";
var a0_0x580c23 = "#F35F53";
var a0_0x3e6389 = "#CF6259";
var a0_0x401c37 = "#FF911E";
var a0_0x25f9ca = "#C67019";
var a0_0x54589b = "#25b645";
var a0_0x5e88d6 = "#604729";
var a0_0x1f78e0 = "#8A681B";
var a0_0x75ca18 = "#EF3C31";
var a0_0x237aea = "#4AE05E";
var a0_0x6cfd3e = "#8C9688";
var a0_0x4b844f = "#878053";
var a0_0x580248 = "#328ca2";
var a0_0x26593c = "rgba(50,140,162,0.5)";
var a0_0x197b31 = "#ff884c";
var a0_0x58a4ce = "#007fa9";
var a0_0x52ac66 = "#b0a13b";
var a0_0xacaa8 = true;
var a0_0x102063 = true;
var a0_0x2f3184 = true;
var a0_0x55c235 = true;
var a0_0x2ee2b0 = true;
var a0_0x5acfd9 = true;
var a0_0x1f9ee8 = 1;
var a0_0x469e3a = false;
var a0_0x493f20 = null;
let a0_0x14c219 = false;
let a0_0x3ae16b = false;
let a0_0x54c255 = false;
let a0_0x5ebb03 = false;
let a0_0x597aef = false;
let a0_0x4b2287 = a0_0x4e83df;
let a0_0x611f0 = a0_0x4e83df;
let a0_0x4b7db7 = 400;
let a0_0x3f4153 = 0;
var a0_0x577ff3 = false;
var a0_0x393634 = 0;
var a0_0x5528e6 = "";
var a0_0x8b0c75 = 0;
var a0_0x105431 = {};
var a0_0x198b61 = 0;
var a0_0x1f9118 = 0;
var a0_0x5aae4e = 0;
function a0_0xd8cb85(_0x533a5d) {
  switch (_0x533a5d) {
    case a0_0x2f0085:
      return "ocean";
    case a0_0x5fac87:
      return "arctic";
    case a0_0xc64a03:
      return "desert";
    case a0_0x282b9e:
      return "volcano";
    case a0_0x3938a2:
      return "forest";
    case a0_0x1bed8b:
      return "land";
    default:
      return "land";
  }
}
function a0_0x28d4ea(_0x29d6b7) {
  switch (_0x29d6b7) {
    case a0_0x2f0085:
      return a0_0x2470ed;
    case a0_0x5fac87:
      return a0_0x1c77f6;
    case a0_0xc64a03:
      return a0_0x23e797;
    case a0_0x282b9e:
      return a0_0x2e9d74;
    case a0_0x3938a2:
      return a0_0x58764f;
    case a0_0x1bed8b:
    default:
      return a0_0x41030c;
  }
}
var a0_0x359700 = [];
var a0_0x4f736f = +new Date();
var a0_0x555079 = +new Date();
var a0_0x2943a2 = 0;
var a0_0x1528ea = false;
var a0_0x548917 = 0;
var a0_0x3dd5fb = null;
var a0_0x5557b5 = false;
var a0_0x5ee1a1 = false;
var a0_0x4b26cb = false;
var a0_0x18a433 = false;
var a0_0x314917 = null;
var a0_0xafa500 = 0;
var a0_0x48255a = 0;
var a0_0x266b4f = 0;
var a0_0x2e39dd = 0;
var a0_0xc85008 = 0;
var a0_0x9ecda1 = 0;
var a0_0x3fd275 = [];
var a0_0x136a54 = false;
var a0_0x537e7e = 0;
var a0_0x235d38 = null;
var a0_0x39882a = false;
var a0_0x25413a = 0;
var a0_0x1696ee = false;
var a0_0x55b7b5 = false;
var a0_0x4b104b = 0;
var a0_0x5e3eb6 = false;
var a0_0xd470cd = false;
var a0_0x43318e = document.getElementById("gCanvas");
var a0_0x45f685 = false;
var a0_0x3e3656 = null;
var a0_0x39a461 = null;
var a0_0x47046b = 0;
var a0_0x536016 = 0;
var a0_0x50b61 = 0;
var a0_0x550598 = 0;
var a0_0x4ef4f3 = null;
if (a0_0x43318e) {
  a0_0x4ef4f3 = a0_0x43318e.getContext("2d");
  a0_0x4ef4f3.shadowColor = "black";
}
var a0_0x1f2da9 = false;
var a0_0x24bc92 = Math.min(window.devicePixelRatio, 2);
var a0_0x15377d = ("ontouchstart" in window || navigator.maxTouchPoints) == true;
var a0_0xf5a12c = {};
function a0_0x3fed03(_0x2a6c28) {
  if (!a0_0xf5a12c.hasOwnProperty(_0x2a6c28) && !a0_0x115add) {
    var _0x55ad98 = new Audio(_0x2a6c28);
    a0_0xf5a12c[_0x2a6c28] = _0x55ad98;
    _0x55ad98.volume = 0.7;
    _0x55ad98.muted = a0_0x115add;
  }
  return a0_0xf5a12c[_0x2a6c28];
}
var a0_0x5adf93 = null;
var a0_0x46d0c4 = "";
var a0_0x47b465 = "audio/music_game.mp3";
function a0_0x32a93e(_0x270a73) {
  if (a0_0x5adf93) {
    a0_0x5adf93.pause();
    a0_0x5adf93.currentTime = 0;
  }
  a0_0x46d0c4 = _0x270a73;
  if (!a0_0x115add) {
    a0_0x5adf93 = a0_0x3fed03(_0x270a73, true);
    try {
      a0_0x5adf93.play();
    } catch (_0x13b051) {}
  }
}
var a0_0xcd261a = true;
var a0_0xd72e4a = false;
var a0_0x19baa9 = camzoom_n = 2.7;
var a0_0x19baa9 = 1;
var a0_0xaeda51 = 0;
var a0_0xfc3cb9 = 0;
var a0_0x4d6064 = 0;
var a0_0x23c6d3 = 0;
var a0_0x4fd957 = 0;
var a0_0x47981f = 0;
var a0_0xba590d = 1;
var a0_0x37bc1c = 0;
var a0_0x46dbb3 = 0;
var a0_0x5c2f2b = 0;
var a0_0x50fcd3 = 0;
var a0_0x45d875 = 0;
var a0_0x488897 = 0;
var a0_0x561d8a = false;
var a0_0x27bdd2 = false;
var a0_0x11866b = 0;
var a0_0x8379e6 = 0;
var a0_0x425049 = 0;
var a0_0xe585d7 = 0;
var a0_0x556707 = 0;
var a0_0x26c3b8 = 1;
var a0_0x5bd4ac = 2;
var a0_0x16237b = 3;
var a0_0x2a4d6d = 4;
var a0_0x342dbf = 5;
var a0_0x518474 = 6;
var a0_0xe92752 = a0_0x556707;
var a0_0x417918 = 0;
var a0_0x4af0f9 = {};
async function a0_0x4f6812(_0xad12b4) {
  if (!a0_0x4af0f9.hasOwnProperty(_0xad12b4)) {
    const _0xb964af = new Image();
    var _0x19104a = "?v=" + a0_0x3ee1ec + (a0_0x4bd42e ? "." + a0_0x5be67c : "");
    _0xb964af.src = _0xad12b4 + _0x19104a;
    return new Promise((_0x4153f1, _0x2f342c) => {
      _0xb964af.addEventListener("load", () => {
        a0_0x4af0f9[_0xad12b4] = _0xb964af;
        return _0x4153f1(_0xb964af);
      }, {
        once: true
      });
      _0xb964af.addEventListener("error", _0x17e748 => {
        _0x2f342c(_0x17e748);
      }, {
        once: true
      });
    });
  }
  console.log("returning the img");
  return a0_0x4af0f9[_0xad12b4];
}
function a0_0x2cc313(_0x1bbbf7, _0x2eb98c) {
  if (!a0_0x4af0f9.hasOwnProperty(_0x1bbbf7)) {
    a0_0x4af0f9[_0x1bbbf7] = new Image();
    var _0x2cd49b = "?v=" + a0_0x3ee1ec + (a0_0x4bd42e ? "." + a0_0x5be67c : "");
    a0_0x4af0f9[_0x1bbbf7].src = _0x1bbbf7 + _0x2cd49b;
  }
  if (a0_0x4af0f9[_0x1bbbf7].width != 0 && a0_0x4af0f9[_0x1bbbf7].complete) {
    return a0_0x4af0f9[_0x1bbbf7];
  } else {
    return null;
  }
}
var a0_0x5101af = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
var a0_0x523435 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
var a0_0xc40a5e = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
var a0_0x21a85a = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
var a0_0x4840fc = false;
var a0_0x13f254 = [];
var a0_0x3d5ac5 = {};
var a0_0x45e0de = [];
var a0_0x23330e = [];
var a0_0x3071b7 = false;
var a0_0x5bb949 = 0;
var a0_0x5771b2 = 1;
var a0_0x4b6f05 = false;
var a0_0x28c7d0 = 0;
var a0_0x4ecca8 = 1;
var a0_0x220216 = false;
var a0_0x4d1426 = 0;
var a0_0x41f910 = 1;
var a0_0x53b4b6 = false;
var a0_0x2d9112 = +new Date();
var a0_0x36dadf = false;
var a0_0x36b495 = false;
var a0_0x3d2c66 = false;
var a0_0x1b259d = false;
var a0_0x268b89 = false;
var a0_0x56e2b7 = false;
var a0_0x115add = false;
var a0_0x1f3584 = false;
var a0_0x1d703e = 3;
var a0_0x2b92f6 = false;
var a0_0x13220b = false;
var a0_0x59a0a0 = true;
let a0_0x32e036 = 0;
var a0_0x219ed4 = document.getElementById("button_mute");
if (a0_0x219ed4) {
  a0_0x219ed4.onclick = function () {
    a0_0x115add = !a0_0x115add;
    a0_0x27384d();
    try {
      window.localStorage.setItem("options_muted", a0_0x115add ? 1 : 0);
    } catch (_0x48d29b) {}
  };
}
function a0_0x47263a(_0x141793, _0x218617, _0x4fe631) {
  _0x218617 = _0x218617 || _0x218617 === 0 || _0x218617 === "0" ? _0x218617 : null;
  const _0x2c4081 = _0x1853fb => {
    try {
      if (_0x218617 !== null) {
        _0x1853fb.volume = _0x218617;
      }
      if (_0x4fe631) {
        sound_click.playbackRate = _0x4fe631;
      }
      _0x1853fb.play();
      return true;
    } catch (_0x1df6ed) {
      return false;
    }
  };
  if (_0x2c4081(a0_0x3fed03(_0x141793))) {
    return;
  }
  _0x2c4081(new Audio(_0x141793));
}
function a0_0x54d114(_0x59d439) {
  a0_0x47263a("audio/click.mp3", _0x59d439);
}
function a0_0x24c5c7() {
  var _0x5604ed = document.getElementById("optionsDiv");
  _0x5604ed.style.display = _0x5604ed.style.display == "block" ? "none" : "block";
  var _0x269ca4 = a0_0x3fed03("audio/click.mp3");
  if (_0x269ca4) {
    try {
      _0x269ca4.play();
    } catch (_0x4bdba5) {}
  }
}
var a0_0x584896 = false;
var a0_0x4002a7 = -1;
var a0_0x3ce8a6 = 100;
var a0_0x1eb910 = -1;
var a0_0x552e19 = curBarPerc_n = 100;
var a0_0x3b61a8 = -1;
var a0_0x24cc63 = -1;
const a0_0x5b69a3 = _0x49c6d8 => {
  if (_0x49c6d8 != a0_0x1eb910) {
    a0_0x3ce8a6 = _0x49c6d8;
  }
};
a0_0x5b69a3(a0_0x3ce8a6);
const a0_0x3782a9 = _0x542bbe => {
  if (_0x542bbe != a0_0x4002a7) {
    a0_0x4002a7 = _0x542bbe;
  }
};
a0_0x3782a9(a0_0x4002a7);
const a0_0x20a216 = _0x2eaf75 => {
  if (_0x2eaf75 != a0_0x3b61a8) {
    a0_0x3b61a8 = _0x2eaf75;
  }
};
a0_0x20a216(100);
const a0_0x249c78 = _0x41cf77 => {
  if (_0x41cf77 != a0_0x24cc63) {
    a0_0x24cc63 = _0x41cf77;
  }
};
a0_0x20a216(0);
a0_0x249c78(0);
var a0_0x3296b0 = 0;
var a0_0x44a2d1 = 0;
var a0_0x23c04e = infectionBarPerc_n = 100;
var a0_0x430197 = new a0_0x3d10bd(16, "yellow");
var a0_0x44f982 = new a0_0x3d10bd(16, "white");
var a0_0x49260d = new a0_0x3d10bd(16, "white");
var a0_0x3bcfdd = new a0_0x3d10bd(16, "white");
var a0_0x508a22 = new a0_0x3d10bd(16, "white");
var a0_0xb8f1f9 = new a0_0x3d10bd(10, "white");
var a0_0xdd13ac = new a0_0x3d10bd(16, "white");
var a0_0xfc4e40 = new a0_0x3d10bd(26, "white");
var a0_0x4bc86b = new a0_0x3d10bd(10, "white");
var a0_0x79f66d = new a0_0x3d10bd(16, "white");
a0_0xdd13ac.multiLine = true;
a0_0x79f66d.renderScale = 1;
a0_0xdd13ac.renderScale = 1;
a0_0xb8f1f9.renderScale = 1;
var a0_0x50c22c = true;
var a0_0x26f850 = 0;
var a0_0x4cbeca = 0;
var a0_0x58f640 = "";
var a0_0x57390d = [];
var a0_0x3b4c01 = new a0_0x47992f(null, "W");
a0_0x3b4c01.onButtonTouchStart = function () {
  a0_0x448dc4(a0_0x19264d, true);
};
a0_0x3b4c01.onButtonTouchEnd = function () {
  a0_0x448dc4(a0_0x19264d, false);
  if (a0_0x17b4b5.pressed && a0_0x17b4b5.pressedTouchID == -1) {
    a0_0x17b4b5.pressed = false;
    a0_0x448dc4(a0_0x1ef8d7, false);
  }
};
a0_0x57390d.push(a0_0x3b4c01);
var a0_0x5d6549 = new a0_0x47992f(null, "W");
a0_0x5d6549.isMiniRechargeBut = true;
a0_0x5d6549.touchEnabled = false;
a0_0x57390d.push(a0_0x5d6549);
var a0_0x17b4b5 = new a0_0x5a7eac("HOLD TO RUN");
a0_0x17b4b5.onButtonTouchStart = function () {
  a0_0x448dc4(a0_0x1ef8d7, true);
};
a0_0x17b4b5.onButtonTouchEnd = function () {
  a0_0x448dc4(a0_0x1ef8d7, false);
};
a0_0x57390d.push(a0_0x17b4b5);
var a0_0x522925 = new a0_0x5a7eac("CHAT");
a0_0x522925.onButtonTouchStart = function () {
  a0_0x5043b2();
};
a0_0x57390d.push(a0_0x522925);
var a0_0x306715 = new a0_0x5a7eac("S");
a0_0x306715.onButtonTouchStart = function () {
  a0_0x448dc4(a0_0x2e399b, true);
};
a0_0x306715.onButtonTouchEnd = function () {
  a0_0x448dc4(a0_0x2e399b, false);
};
a0_0x57390d.push(a0_0x306715);
var a0_0x1027bb = false;
var a0_0x4532e5 = -1;
var a0_0x2013cd = 0;
var a0_0x481c9c = 0;
var a0_0x1cac72 = 0;
var a0_0x5cb2dd = 0;
var a0_0x872c13 = 50;
var a0_0x298561 = 0;
var a0_0x5a4407 = 0;
var a0_0x599526 = 0;
var a0_0x4b05c9 = 0;
var a0_0x8863d9 = 0;
abil_possible = false;
var a0_0x5aec24 = false;
var a0_0x3071b7 = false;
var a0_0x238d98 = false;
var a0_0x555079 = +Date.now();
var a0_0xee3c71 = null;
function a0_0x1da5bb(_0x479b9d, _0x34921b) {
  _0x479b9d = Math.min(_0x479b9d, _0x34921b);
  _0x34921b = Math.max(_0x479b9d, _0x34921b);
  return _0x479b9d + Math.random() * (_0x34921b - _0x479b9d + 1);
}
var a0_0x252e67 = false;
var a0_0x56691c = false;
var a0_0x4517d2 = true;
function a0_0x4e8008(_0x2307f7, _0x59b3ad, _0x51803f, _0x3acd3f, _0x59a246, _0xb8de07) {
  _0x2307f7.strokeStyle = _0xb8de07;
  _0x2307f7.lineWidth = _0x59a246;
  _0x2307f7.beginPath();
  _0x2307f7.arc(_0x59b3ad, _0x51803f, Math.max(0, _0x3acd3f), 0, Math.PI * 2);
  _0x2307f7.stroke();
}
var a0_0x31c25e = 1;
const a0_0x44d991 = {
  undefined: () => 0,
  boolean: () => 4,
  number: () => 8,
  string: _0x244a8b => _0x244a8b.length * 2,
  object: _0x637aeb => !_0x637aeb ? 0 : Object.keys(_0x637aeb).reduce((_0x4447e4, _0x46909f) => a0_0x130fa8(_0x46909f) + a0_0x130fa8(_0x637aeb[_0x46909f]) + _0x4447e4, 0)
};
const a0_0x130fa8 = _0x30f9d0 => a0_0x44d991[typeof _0x30f9d0](_0x30f9d0);
function a0_0x58c339(_0x2b77dd, _0x2894b9, _0x29ec2c) {
  var _0x69a772 = _0x29ec2c * Math.PI / _0x2894b9 * _0x2b77dd;
  _0x69a772 = Math.sin(_0x69a772);
  return _0x69a772;
}
let a0_0x317bd5 = {};
function a0_0x4f344f(_0x7e092d, _0x5ce0f1, _0x104e2a, _0x3c018b, _0x46f4c7, _0x565230) {
  let _0x291648 = a0_0x317bd5[_0x7e092d];
  if (a0_0x317bd5[_0x7e092d] == undefined) {
    if (_0x46f4c7 !== undefined && _0x565230 !== undefined) {
      _0x291648 = new a0_0x36320a(_0x7e092d, _0x5ce0f1, _0x3c018b, _0x104e2a, _0x46f4c7, _0x565230);
    } else {
      _0x291648 = new a0_0x36320a(_0x7e092d, _0x5ce0f1, _0x3c018b, _0x104e2a);
    }
    a0_0x317bd5[_0x7e092d] = _0x291648;
    console.log("@@@@@@@@@@@@@@@ AnimFrame created for " + _0x7e092d + " @@@@@@@@@@@@@@@@@@@@@@@");
  }
  a0_0x3e0f26(a0_0x317bd5[_0x7e092d], 0);
}
function a0_0x29c274(_0x4ca8e5, _0x217a5f) {
  let _0x534b2c = a0_0x317bd5[_0x4ca8e5];
  if (_0x534b2c) {
    return _0x534b2c.getFrame(_0x217a5f);
  }
  return undefined;
}
function a0_0x51f62a(_0x1e4d43, _0x5351a9, _0x4e222c) {
  let _0x52691e = a0_0x317bd5[_0x1e4d43];
  if (_0x52691e) {
    return _0x52691e.getFrame(_0x5351a9) * _0x4e222c;
  }
  return undefined;
}
function a0_0x232cc7(_0x209e56, _0xd9ca85) {
  let _0x14e265 = a0_0x317bd5[_0x209e56];
  if (_0x14e265) {
    return _0x14e265.getShiftAmount(_0xd9ca85);
  }
  return undefined;
}
function a0_0x3e0f26(_0x56a0a5, _0x3c0582) {
  var _0x21a623 = _0x3c0582 / 1000;
  var _0x4608ed = _0x21a623;
  let _0x3a5cd0 = a0_0x58c339(_0x21a623, _0x56a0a5.period, _0x56a0a5.sine);
  let _0x3188a4 = _0x3a5cd0.toFixed(10);
  let _0x4f5b22 = _0x21a623.toFixed(3);
  _0x56a0a5.add(_0x4f5b22, _0x3188a4);
  if (_0x4608ed >= _0x56a0a5.period) {
    console.log("@@@@@@@@@@@@@@@@@ baking finished for " + _0x56a0a5.forObj);
    return;
  }
  _0x3c0582++;
  setTimeout(function () {
    a0_0x3e0f26(_0x56a0a5, _0x3c0582);
  }, 1);
}
class a0_0x36320a {
  constructor(_0x3b72f0, _0x28d0e2, _0x53e40c, _0x179f9a, _0x19e8b3, _0x895dcb) {
    this.forObj = _0x3b72f0;
    this.period = _0x28d0e2;
    this.sine = _0x53e40c;
    this.shiftAmount = _0x179f9a;
    this.frame = {};
    if (_0x19e8b3 !== undefined && _0x895dcb !== undefined) {
      this.startShift = _0x19e8b3;
      this.endShift = _0x895dcb;
      this.amplitude = this.shiftAmount * (this.endShift - this.startShift);
    }
  }
  getAnimalName() {
    return this.forAni;
  }
  add(_0x1e260f, _0x58e1f8) {
    this.frame[_0x1e260f] = _0x58e1f8;
  }
  getShiftAmount(_0x38ba76) {
    let _0x19a8a7 = this.getFrame(this.timeKey(_0x38ba76));
    if (_0x19a8a7) {
      if (this.amplitude !== undefined) {
        let _0x4ef61e = this.startShift + this.amplitude;
        return _0x4ef61e + this.amplitude * this.getFrame(_0x38ba76);
      } else {
        return _0x19a8a7 * this.shiftAmount;
      }
    }
    return null;
  }
  getFrame(_0x13cc12) {
    return this.frame[this.timeKey(_0x13cc12)];
  }
  timeKey(_0x432245) {
    let _0x4aaa77 = (a0_0x4f736f - _0x432245) / 1000 / this.period;
    let _0x5b4028 = (_0x4aaa77 - Math.floor(_0x4aaa77)) * this.period;
    return _0x5b4028.toFixed(3);
  }
}
let a0_0x430439 = {};
function a0_0xc5229b(_0x2cc4eb, _0x2d70a8, _0x598829, _0x184972 = 2, _0x375227 = 1) {
  console.log("---------------- started baking " + _0x2cc4eb);
  const _0x3be5db = performance.now();
  a0_0x430439[_0x2cc4eb] = [];
  const _0x980b0e = _0x2d70a8 * 1000;
  for (let _0x182c6f = 0; _0x182c6f < _0x980b0e; _0x182c6f += _0x375227) {
    a0_0x430439[_0x2cc4eb].push(a0_0xe2d896(_0x182c6f / 1000, _0x2d70a8, _0x598829, _0x184972));
  }
  console.log("---------------- finished baking " + _0x2cc4eb + " time taken: " + (performance.now() - _0x3be5db).toFixed(4) + "ms");
}
a0_0x4f344f("bird", 0.5, 0.5, 2);
a0_0x4f344f("eagle", 0.9, 0.3, 2);
a0_0x4f344f("volcano", 6, 1.5, 2);
a0_0x4f344f("lake", 4, 5.5, 2);
a0_0x4f344f("lavalake", 4, 2.5, 2);
a0_0x4f344f("fennecfox", 0.5, 5, 1);
a0_0x4f344f("fireball", 1, 0.5, 2, 0.85, 1);
a0_0xc5229b("objects", 1.5, 0.1);
a0_0xc5229b("objects_slow", 2.5, 0.04);
a0_0xc5229b("honeybee", 0.2, 0.3);
a0_0x4f344f("kd", 5, 1, 1);
a0_0x100d8b.wave = 1;
a0_0x100d8b.halfWave = 2;
a0_0x100d8b.arc = 3;
a0_0x100d8b.quad = 4;
a0_0x100d8b.bow = 5;
a0_0x100d8b.bounce = 6;
a0_0x100d8b.elastic = 7;
a0_0x100d8b.bounceEaseOut = 8;
a0_0x100d8b.bounceEaseInOut = 9;
function a0_0x100d8b(_0xe67983, _0x1d126f, _0x1593f0, _0x8038ea) {
  this.forObj = _0xe67983;
  this.duration = _0x1d126f;
  this.animation = _0x1593f0;
  this.startTime = null;
  this.frame = 0;
  this.frameRate = 1000;
  this.timePassed = 0;
  this.generate = true;
  this.stopWhenDurationPassed = true;
  this.state = 0;
  this.accelerateEnd = 0;
  this.hasStopped = false;
  this.img = null;
  this.vars = _0x8038ea;
  this.keepLastFrame = false;
  this.loop = false;
  this.setImage = function (_0x21f484) {
    this.img = a0_0x2cc313(_0x21f484);
  };
  this.run = function () {
    if (this.startTime == null) {
      this.startTime = a0_0x4f736f;
    }
    if (this.startTime != null) {
      if (this.state == 2 && !this.hasStopped) {
        this.hasStopped = true;
        this.onStop();
      }
      if (!this.hasStopped) {
        this.calcTimePassed();
        this.generateFrame();
        this.onFrameEntered(this.frame);
        if (this.timePassed >= this.duration && this.stopWhenDurationPassed) {
          this.state = 2;
        }
      }
      if (this.hasStopped) {
        if (this.keepLastFrame) {
          this.onFrameEntered(this.frame);
        }
        if (this.loop) {
          this.reset();
        }
      }
    }
  };
  this.reset = function () {
    this.timestamp = null;
    this.hasStopped = false;
    this.state = 0;
  };
  this.generateFrame = function () {
    if (this.generate) {
      this.state = 1;
      switch (this.animation) {
        case a0_0x100d8b.wave:
          this.frame = this.wave(this.timePassed);
          break;
        case a0_0x100d8b.halfWave:
          this.frame = this.halfWave(this.timePassed);
          break;
        case a0_0x100d8b.arc:
          this.frame = this.arc(this.timePassed);
          break;
        case a0_0x100d8b.quad:
          this.frame = this.quad(this.timePassed);
          break;
        case a0_0x100d8b.bow:
          if (this.vars == undefined) {
            this.vars = {
              v1: 1
            };
          }
          this.frame = this.bow(this.timePassed);
          break;
        case a0_0x100d8b.bounce:
          this.frame = this.bounce(this.timePassed);
          break;
        case a0_0x100d8b.elastic:
          if (this.vars == undefined) {
            this.vars = {
              v1: 1
            };
          }
          this.frame = this.elastic(this.timePassed);
          break;
        case a0_0x100d8b.bounceEaseOut:
          this.frame = this.bounceEaseOut(this.timePassed);
          break;
        case a0_0x100d8b.bounceEaseInOut:
          this.frame = this.bounceEaseInOut(this.timePassed);
          break;
        default:
          break;
      }
    }
  };
  this.timing = function (_0x4d1da7) {
    return _0x4d1da7;
  };
  this.halfWave = function (_0x1f268e) {
    return Math.sin(Math.PI * 0.5 / this.duration * _0x1f268e) * 1;
  };
  this.wave = function (_0x92ba58) {
    return Math.sin(Math.PI * 1 / this.duration * _0x92ba58) * 1;
  };
  this.arc = function (_0x3461b3) {
    return 1 - Math.sin(Math.acos(_0x3461b3));
  };
  this.quad = function (_0x4f3933) {
    return Math.pow(_0x4f3933, 2);
  };
  this.bow = function (_0x4e095f) {
    var _0x38c222 = this.vars.v1;
    return Math.pow(_0x4e095f, 2) * ((_0x38c222 + 1) * _0x4e095f - _0x38c222);
  };
  this.bounce = function (_0x5cc06e) {
    for (let _0x27c2e6 = 0, _0x456a27 = 1, _0xbe1b1c; 1; _0x27c2e6 += _0x456a27, _0x456a27 /= 2) {
      if (_0x5cc06e >= (7 - _0x27c2e6 * 4) / 11) {
        return -Math.pow((11 - _0x27c2e6 * 6 - _0x5cc06e * 11) / 4, 2) + Math.pow(_0x456a27, 2);
      }
    }
  };
  this.elastic = function (_0x2d85c3) {
    var _0x3142d4 = this.vars.v1;
    return Math.pow(2, (_0x2d85c3 - 1) * 10) * Math.cos(Math.PI * 20 * _0x3142d4 / 3 * _0x2d85c3);
  };
  this.bounceEaseOut = function (_0x472133) {
    return 1 - this.bounce(1 - _0x472133);
  };
  this.bounceEaseInOut = function (_0x360eb7) {
    if (_0x360eb7 < 0.5) {
      return this.bounce(_0x360eb7 * 2) / 2;
    } else {
      return (2 - this.bounce((1 - _0x360eb7) * 2)) / 2;
    }
  };
  this.calcTimePassed = function () {
    this.timePassed = (a0_0x4f736f - this.startTime) / this.frameRate;
  };
  this.onFrameEntered = function (_0x5dab7c) {};
  this.onStop = function () {};
}
const a0_0x4bf4d2 = ["anus", "anus plug", "apeshit", "apeshite", "ar5e", "b00bz", "b1+ch", "b17ch", "b1otch", "b1otchs", "b1tch", "b1tch1ng", "b1tch35", "b1tch3s", "b1tchees", "b1tches", "b1tchez", "b1tchin", "b1tching", "b1tchs", "b1tchy", "baby batter", "ballbag", "bangbros", "bassturd", "bastard", "bastardish", "bastards", "basterd", "bastid", "bastinado", "basturd", "bater", "bates", "beeotch", "bell end", "bellend", "bender", "bewbs", "beyoch", "beyotch", "bi + ch", "bi+ch", "biatch", "biches", "biotch", "biotches", "biotchez", "bishes", "bitch", "bitch3s", "bitchass", "bitchasses", "bitched", "bitcher", "bitchers", "bitches", "bitchez", "bitchfuck", "bitchhole", "bitchin", "bitchin'", "bitching", "bitchlike", "bitchness", "bitchs", "kys", "bitchslap", "bitchtits", "bitchy", "bitchy ass", "bizzach", "blacky", "blumpkin boy", "boll0ck", "bollock", "bollockchops", "bollocks", "bollocktician", "bollox", "bondage", "boner", "bonk juice", "boobs", "booty", "breasticles", "breasts", "bugger", "bugger off", "bull shit", "bullshi", "bullshit", "bullshite", "bum-bandits", "bum-driller", "bumhole", "bung hole", "butt fuck", "butt fucker", "butt hole", "butt pirate", "butt-fucker", "butt-fuckers", "butt-fucking-bandit", "butt-munchers", "buttermilk", "buttfuck", "buttfucker", "buttfuckers", "butthole", "butthole boy", "bwc", "c*nt", "c*ntface", "c*nts", "c*nty", "c00n", "c00nies", "c0ck", "c0ckhead", "c0cks", "c0cksuccer", "c0cksucked", "c0cksucker", "c0cksuckers", "c0x", "c0xux0r", "caaak", "caca", "cack", "cagone", "cajones", "cawk", "cawkmuncher", "cawks", "cawksucker", "ch1nk", "chesticles", "chingchong", "chink", "chinky", "chocha", "cholo", "clitlickers", "clusterfuck", "clusterfucked", "clusterfucker", "clusterfucking", "clusterfucks", "cock", "cock-face", "cock-gobbler", "cock-head", "cock-sucker", "cock-suckers", "cockboy", "cockeater", "cockface", "cockgobbler", "cockh3ad", "cockhead", "cockheads", "cockhed", "cockless", "cocklicker", "cockmonger", "cockmunch", "cockmuncher", "cocks", "cockshit", "cockskin", "cocksmoker", "cocksucc", "cocksuccas", "cocksuccer", "cocksuccers", "cocksuck", "cocksuckas", "cocksucked", "cocksucker", "cocksuckers", "cocksucking", "cocksucking mothafuckers", "cocksucks", "cocksuk", "cocksuka", "cocksukka", "cocsuck", "cokmuncher", "coksucka", "coolie", "coon", "coon1es", "cooni3s", "coonie", "coonies", "coons", "coot", "coot coot", "cooter", "cooter shooting", "cooterpuffing", "cooties", "cotton picker", "crazy mofos", "crazy sob", "creampie", "crotch", "crotch fiddler", "crotchy", "crow", "crows", "cuksuker", "cuksukka", "cum goon", "cumball", "cumdumpster", "cumming", "cums", "cumslut", "cumz", "cunnilingus", "cunt", "cunt ass", "cunt fart", "cunt lick", "cunt licker", "cunt lips", "cuntasaurus rex", "cuntbag", "cuntbollock", "cuntelope", "cuntits", "cuntless", "cuntlick", "cuntlicker", "cuntlickers", "cuntness", "cunts", "cunty", "cuntz", "cuunt", "cyberfck", "cyberfcks", "cyberfuccs", "cyberfucks", "cyberfucs", "cyberfukk", "cyberfukks", "cyberfvcks", "d!ck", "d!cks", "d!ld0", "d!ldo", "d0ggy style", "d1ck", "d1ckhead", "d1ckheads", "d1cks", "d1cksucker", "d1cksukka", "d1ckz", "d1ldo", "dafuq", "dago", "darkass", "darkfuck", "darkie", "darkshit", "darktard", "darky", "dick breath", "dick face", "dick fucker", "dick head", "dick licker", "dick milker", "dick nibbler", "dick smoker", "dick sucker", "dick-face", "dick-gobbler", "dick-head", "dickface", "dickfucker", "dickhead", "dickheads", "dickjockies", "dickless", "dicklicker", "dickmuncher", "dicks", "dickskin", "dickslapper", "dicksmoker", "dicksucker", "dickvag", "dickz", "diddle", "dikhead", "diks", "dild0", "dipsh1t", "dipsh1tty", "dipshat", "dipshidiot", "dipshit", "dipshite", "dipshits", "dipshitter", "dipshitty", "dipstick", "dirty sanchez", "dix", "dlck", "dlcks", "dog fuck", "dog fucker", "dog fucking", "dog shit", "dog-fucker", "dog's bollocks", "doggo style", "doggy style", "doggy_style", "dogie style", "dogsh1t", "dogsh1ts", "dogshit", "dogshits", "dogstyle", "dolt", "dong", "doosh", "dothead", "double dick", "double dicking", "double pen", "double-dong", "douche", "douche bag", "douche canoe", "douchebag", "dumasses", "dumb bastard", "dumb fucker", "dumb@ss", "dumbarrassed", "dumbass", "dumbass fucker", "dumbass mofoes", "dumbass mothafuckers", "dumbass son-of-a-bitch", "dumbasses", "dumbfucks", "dumbshit", "dump a load", "dune coon", "dyke", "erectoplasm", "f_u_c_k", "f'ed", "f'er", "f@ck", "f@cker bunny", "f@g", "f@gg0t", "f@gging", "f@ggot", "f@gs", "f@gshit", "f@k", "f0ck", "f0cked", "f0cker", "f0ckers", "face fuck", "fack", "fackuhs", "fag", "fag asses", "fag bag", "fag hag", "fag queen", "fag0t", "faget", "fagg0t", "fagging", "faggo", "faggot", "faggot mofoes", "faggot mothafuckers", "faggot nob jokeys", "faggot nobjockies", "faggot son-of-a-bitch", "faggoting", "faggots", "faggs", "faggy", "fagot", "fags", "fagshit", "fart-fucker", "fatass", "fatasses", "fccuker", "fck", "fck you", "fcka", "fckahz", "fcked", "fckedup", "fcker", "fckin", "fcking", "Fckk", "fckked", "fckking", "fcks", "fcktard", "fckyeah", "fcuk", "fcuked", "fcuker", "fcukers", "fcuking", "fcukker", "fcuks", "fcvking", "feck", "feck arse", "fecker", "feg", "fellatio aficionado", "fellator", "fick", "finger", "finger fuck", "fingerbanged", "fingerpop", "fk bunny", "fkbny", "fked", "fker", "fking", "fkings", "fkker", "flamer", "flamers", "focker", "fook", "fooker", "fookuh", "forked", "fothermuckers", "fuc", "fucc", "fucca", "fuccers", "fuccing", "fuccs", "Fuck", "fuck arse", "fuck face", "fuck faces", "fuck goblin", "fuck head", "fuck off", "fuck up", "fuck y0u", "fuck you", "fuck your", "fuck your mother", "fucka", "fuckahs", "fuckass", "fuckasses", "fuckaz", "fuckbag", "fuckboy", "fucked", "fucked up", "fuckem", "fucker", "fucker off", "fuckers", "fuckface", "fuckfaces", "fuckhead", "fuckheaded", "fuckheads", "fuckin", "fucking", "fucking A", "fucking asshole", "fucking bastard", "fucking hell", "fucking me", "retard", "fucking retard", "fucking shit", "fuckk", "fuckless", "fuckmachine", "fucknuckle", "fucks", "fuckshit", "fuckshitface", "fuckshithead", "fuckstar", "fuckster", "fuckstick", "fucktard", "fucktards", "fuckup", "fuckwad", "fuckwhore", "fucs", "fucx", "fudgefucker", "fudgepacker", "fudgepackers", "fudgepackershitter", "fudgepacking fucker", "fugged", "fugger", "fuggerz", "fuggings", "fugly", "fuk", "fuk1n", "fuk1ng", "fukcs", "fuker", "fukheads", "fukin", "fuking", "fukk", "fukka", "fukked", "fukker", "fukkers", "fukking", "fukkings", "fukkuh", "fuks", "fuku", "fukwhore", "fukwit", "full of shit", "funbags", "fuq", "futhamucka", "fux", "fux0r", "fvck", "fvck you", "fvcka", "fvckbunny", "fvcker", "fvckers", "fvckin", "fvcking", "fvckker bunny", "fvckwhi", "fxck", "fxcked", "fxcker", "fxcking", "gin jockey", "girlieboy", "gook", "gowl", "greaser", "groid", "groper", "gyp", "harry palms", "heeb", "higg@", "higg3r", "higga", "higger", "higgers", "hoar", "jewboy", "jigaboo", "jigaboos", "jigga", "jiggaboo", "jiggabooboo", "jiggaboos", "jiggabu", "jiggas", "jigger", "jiggerboo", "jiggerboos", "jiggs", "jiggyboo", "jigro", "jim crow", "jizz", "jizz eater", "jizz licker", "jizz-jockey", "jizzbags", "jizzed", "jizzes", "jizzfucker", "jizzing", "jizzsacks", "jizzstain", "jizzy", "k!k3", "k!ke", "k..!ke", "k1k3", "k1ke", "kid diddler", "kiddy touch", "kike", "kikes", "kiss ass", "kiss my ass", "kitty puncher", "kkk", "klan", "klitoris", "kneegrows", "knickers", "knob", "knob eater", "knob gobbler", "knob jockey", "knob-face", "knob-gobbler", "knob-head", "knob3d", "knob3nd", "knobd", "knobe", "knobead", "knobeads", "knobed", "knobeds", "knobend", "knobender", "knobends", "knobendy", "knobendz", "knober", "knobes", "knobgobbler", "knobhead", "knobheads", "knobjockies", "knobjocky", "knobjokey", "knobjokeys", "ku kluxer", "kyke", "l@dyb0i", "l@dyb0y", "l@dyboy", "l3i + ch", "l3i+ch", "l3itch", "l3itches", "ladboys", "ladboyz", "ladiboy", "lady-boy", "ladyb0i", "ladyb0y", "ladyboy", "ladyboys", "ladyboyz", "lesbo", "loose woman", "m@asterbated", "m@derfaker", "m@derfuck", "m@derfuckers", "m0f0", "m0f0s", "m0fo", "m0foes", "m0fos", "m0ng0l0id", "m0ngoloid", "m0thafucked", "m0thafucker", "m0thafucking", "m0therfuckeds", "m0therfucker", "m0therfucking", "m0therfvcker", "man chowder", "man meat", "man seed", "markasses", "meat curtains", "meat-sword", "mecha fag", "mega fag", "mf'er", "mf'ers", "mf'ing", "mfckers", "MFer", "MFers", "mfing", "mfk", "mfs", "mfukk", "mfukker", "milf", "mindfuck", "mof0es", "mof0s", "mofcker", "mofo", "mofo ass", "mofoes", "mofos", "mofoshit", "mofuccers", "mofucckers", "mofuck", "mofucker", "mofuckkas", "mofuk", "mofukkas", "molester", "mong", "mongoloid", "mongrel", "motha fucka", "motha fucker", "motha fuckers", "mothaf@cked", "mothafcked", "mothafcking", "Mothafucc", "mothafucced", "mothafuccer", "mothafuccing", "mothafuck", "mothafucka", "mothafuckas", "mothafuckasses", "mothafuckaz", "mothafuckazzes", "mothafucked", "mothafuckeds", "mothafucker", "mothafuckers", "mothafuckin", "mothafucking", "mothafuckings", "mothafuckins", "mothafucks", "mothafuckz", "mothafvcked", "mother effer", "mother fuck", "mother fuck you", "mother fucka", "mother fucker", "mother fuckers", "mother fucking", "mothercker", "motherf@kka", "motherfacking", "motherfcked", "motherfckin", "motherfcking", "motherfcks", "motherfckshit", "hitler", "motherfecka", "motherfecker", "motherfk", "motherfucca", "motherfuccas", "motherfuccers", "motherfuck", "motherfucked", "motherfuckeds", "motherfucker", "motherfuckers", "motherfuckin", "motherfucking", "motherfuckings", "motherfuckingshit", "motherfuckins", "motherfuckka", "motherfuckkas", "motherfuckkers", "motherfucks", "motherfukka", "motherfukker", "motherfukkings", "motherfvck", "motherfvcked", "motherfvckeds", "motherfvcker", "motherfvckers", "motherfvcking", "motherfxck", "motherfxcking", "mothfck", "mothter fuck", "mtherfuker", "mthrfcker", "muddafukkas", "mudderfuk", "mudderfukker", "mufdive", "mufdivin", "muff", "muffdiving", "muffdivings", "muffindivin", "muffindiving", "muhfucking", "mushroom tip", "mutha fucka", "mutha fucker", "muthafecker", "muthafeckers", "muthafucka", "muthafuckers", "muthafuckings", "muthafuckker", "muthafuckkers", "muthafukka", "mutherfucker", "mutherfuckers", "n0bhead", "n0bj0cky", "n1ckker", "ngger", "ngge", "ngga", "n1g3r", "n1g3rz", "n1gg@", "n1gg@hs", "n1gg3r", "n1gg3rs", "n1gga", "n1ggah", "n1ggahs", "n1ggas", "n1ggazes", "n1gger", "n1ggers", "n1gguh", "n3gro", "negga", "neggar", "negr0", "negro", "negroes", "negroid", "niccer", "nicka", "nickas", "nicker", "nickk3r", "nickker", "nig-nog", "niga", "nigah", "nigasses", "nigers", "kys", "kill yourself", "nigg@", "nigg@hs", "nigg@s", "nigg@z", "nigg@zzes", "nigg3r", "nigg3rs", "nigg4h", "nigg4hs", "nig ger", "niger", "niga", "niggÐ°", "niggÐµr", "nigga", "nigga lover", "niggah", "niggahs", "niggahz", "niggas", "niggger", "niggass", "niggaz", "niggazzes", "nigger", "niggers", "niggerz", "nigge", "niggir", "niggress", "nigguh", "nigguhs", "nigguhz", "nigg", "n@gga", "n@gg@", "ni@@a", "niglet", "nignigs", "nignog", "nigra", "nigre", "nigs", "niguh", "nikk3r", "nikkas", "nikker", "pussylickers", "pussys", "pussywhipped", "puta", "puussy", "puzzies", "puzzy", "queerasses", "S&M", "sack", "salad tosser", "sambo", "sand nigger", "sausage jockey", "scamfuck", "schlong", "scumfuck", "scumfucker", "scumfvck", "scummy", "shytfeisterfuck", "sissy", "snatch licker", "soab", "soppy bollucks", "sphincter", "spic", "spicfuck", "spick", "spics", "spicshit", "spig", "spik", "spix", "spook", "spooks", "spunk", "stump chewer", "stupid fucker", "stupidasses", "sum of a bitch", "sumbitch", "swine", "swine fucker", "tacohead", "tadger", "tallywacker", "tar-baby", "throater", "tits", "tosser", "tossing salad", "towelhead", "towelheads", "towelshithead", "trashybitches", "trouser snake", "trousersnake", "turdcutter", "turdhead", "tw@t", "twa+", "twat", "twat waffle", "twatface", "twats", "twatt", "twattish", "twatzilla", "twink", "upskirts", "vag", "vulva", "w@nker", "w@nkers", "w4nk3r", "w4nker", "wang", "wang wrangler", "wank", "wank off", "wank3r", "wank3rs", "wankbastard", "wanked", "wanker", "wankers", "wankies", "wanking", "wanks", "we1back", "weenie", "weiner", "wet back", "wetback", "wetbacks", "wh0r3", "wh0re"];
const a0_0x3c8764 = function (_0x54e4ed, _0x44a8e3, _0x50ef0c) {
  let _0x309dae = _0x44a8e3;
  let _0x526e38 = _0x50ef0c;
  var _0x5e6a37 = _0x54e4ed.split("");
  for (var _0x3b37a9 = _0x309dae; _0x3b37a9 < _0x526e38; _0x3b37a9++) {
    _0x5e6a37[_0x3b37a9] = "*";
  }
  return _0x5e6a37.join("");
};
const a0_0x4014cf = function (_0x19cd1a) {
  if (a0_0x2b92f6) {
    return _0x19cd1a;
  }
  for (var _0x226305 in a0_0x4bf4d2) {
    _0x19cd1a = a0_0x53ca75(_0x19cd1a, a0_0x4bf4d2[_0x226305]);
  }
  return _0x19cd1a;
};
const a0_0x53ca75 = function (_0x164a63, _0x339637) {
  let _0xd20ad4 = _0x164a63.normalize("NFKC");
  let _0xc40465 = _0xd20ad4.toLowerCase();
  let _0x1f0458 = _0xc40465.indexOf(_0x339637);
  if (_0x1f0458 >= 0) {
    _0x164a63 = a0_0x3c8764(_0x164a63, _0x1f0458, _0x1f0458 + _0x339637.length);
    _0x164a63 = a0_0x53ca75(_0x164a63, _0x339637);
  }
  return _0x164a63;
};
var a0_0x22650f = window.innerWidth;
class a0_0x5941e8 {
  constructor(_0x1cc7cd) {
    this.season = _0x1cc7cd;
  }
  loadMiniMap(_0x182e44) {}
  static create(_0x49bd24) {
    let _0x54a4dd = _0x49bd24.readUInt8();
    this.season = _0x54a4dd;
    switch (_0x54a4dd) {
      case 1:
      case 2:
        let _0x620507 = new a0_0x1c8b97();
        _0x620507.loadMiniMap(_0x49bd24);
        return _0x620507;
    }
    return null;
  }
}
class a0_0x1c8b97 extends a0_0x5941e8 {
  constructor() {
    super(1);
  }
  loadMiniMap(_0x4a28d0) {
    let _0x3c77a7 = _0x4a28d0.readUInt16() * 1;
    let _0x9a24f = _0x4a28d0.readUInt16() * 1;
    let _0xd2a5d8 = _0x4a28d0.readUInt16();
    let _0x11f002 = _0x4a28d0.readUInt16();
    let _0x47bc2c = _0x4a28d0.readUInt16();
    let _0x4fc4bc = _0x4a28d0.readUInt16();
    let _0x3879e5 = _0x4a28d0.readUInt16();
    let _0x7c3915 = 1;
    let _0x4f88e1 = 1;
    let _0x36339e = {
      scale: _0x3c77a7,
      objScale: _0x9a24f,
      mapWidth: _0xd2a5d8,
      mapHeight: _0x11f002,
      width: a0_0x22650f,
      height: a0_0x22650f,
      gameWidth: _0x47bc2c,
      gameHeight: _0x4fc4bc,
      scaleX: _0x7c3915,
      scaleY: _0x4f88e1,
      totalObjects: _0x3879e5,
      objects: []
    };
    for (let _0x3592a7 = 0; _0x3592a7 < _0x3879e5; _0x3592a7++) {
      let _0xef5db4 = _0x4a28d0.readUInt16();
      for (let _0x2ec735 = 0; _0x2ec735 < _0xef5db4; _0x2ec735++) {
        let _0x246d4c = _0x4a28d0.readUInt16();
        let _0x1fa349 = _0x4a28d0.readUInt16();
        let _0xd431cc = _0x4a28d0.readUInt8() == 1;
        let _0x1424cd = {
          isRect: _0xd431cc,
          objType: _0x246d4c
        };
        if (_0x246d4c == a0_0x44bd21) {
          _0x1424cd.teamID = _0x4a28d0.readUInt8();
          _0x1424cd.outline = "black";
        }
        if (_0xd431cc) {
          let _0x5a7bb0 = _0x4a28d0.readUInt16();
          let _0x5ba150 = _0x4a28d0.readUInt16();
          let _0x332633 = _0x4a28d0.readUInt16();
          let _0x502556 = _0x4a28d0.readUInt16();
          _0x1424cd.w = _0x332633;
          _0x1424cd.h = _0x502556;
          _0x1424cd.x = _0x5a7bb0;
          _0x1424cd.y = _0x5ba150;
        } else {
          let _0x5a8af6 = _0x4a28d0.readUInt16();
          let _0x26e45c = _0x4a28d0.readUInt16();
          let _0x414190 = _0x4a28d0.readUInt16();
          _0x1424cd.r = _0x5a8af6;
          _0x1424cd.x = _0x26e45c;
          _0x1424cd.y = _0x414190;
        }
        _0x1424cd.c = this.getColorForObjType(_0x246d4c, _0x1fa349);
        _0x1424cd.biome = _0x1fa349;
        _0x36339e.objects.push(_0x1424cd);
      }
    }
    a0_0x25d08e = new a0_0x22140b(_0x36339e);
    a0_0x25d08e.setPlayersCount(a0_0x47046b);
  }
  getColorForObjType(_0x445995, _0x3f42e1) {
    switch (_0x445995) {
      case a0_0x6632a8:
        return a0_0x4e0e7c;
      case a0_0x37feb7:
        return a0_0x10b87;
      case a0_0x2cd8a2:
        return "#c8b745";
      case a0_0x30fa27:
        return "white";
      case a0_0x241128:
        return a0_0x5e88d6;
      case a0_0x572af7:
        return a0_0x5479b9;
      case a0_0x4459f0:
        return a0_0x5e88d6;
      case a0_0x26b566:
        return "#07631f";
      case a0_0x585d48:
        return a0_0x4e0e7c;
      case a0_0x1fa0cc:
        return a0_0x4e0e7c;
      case a0_0x129130:
        return "#907A33";
      case a0_0xcc5001:
        return "#7BB7BB";
      case a0_0x225e01:
        return a0_0x10b87;
      case a0_0x38253a:
        return a0_0x6cfd3e;
      case a0_0x52c53f:
        return a0_0x41030c;
      case a0_0x11bb63:
        return a0_0x52ac66;
      case a0_0x18b147:
        return a0_0x580c23;
      case a0_0x9b2337:
        return a0_0x21597b;
      case a0_0x2d0828:
        return a0_0x52ac66;
      case a0_0x2ecc74:
        return a0_0x58a4ce;
      case a0_0x308061:
        return a0_0x575276;
      case a0_0x206d63:
      case a0_0x343756:
        if (_0x3f42e1 == a0_0xc64a03) {
          return "#8f822e";
        } else if (_0x3f42e1 == a0_0x5fac87) {
          return "red";
        } else if (_0x3f42e1 == a0_0x2f0085) {
          return "#198ebd";
        }
        return "brown";
      case a0_0x3e3fb1:
        if (_0x3f42e1 == a0_0xc64a03) {
          return "#8f822e";
        } else if (_0x3f42e1 == a0_0x5fac87) {
          return "white";
        }
        return "#00b01a";
      default:
        return "green";
    }
  }
}
let a0_0x3ca63f = null;
let a0_0x25d08e = null;
var a0_0xc38c87 = [];
var a0_0x582ad7 = {};
var a0_0xab4233 = null;
function a0_0x375ba6(_0x5b7ac2) {
  var _0x59a954 = _0x5b7ac2.readUInt32();
  if (_0x59a954 > 0) {
    a0_0xab4233 = {
      id: _0x59a954,
      x: _0x5b7ac2.readUInt32(),
      y: _0x5b7ac2.readUInt32(),
      rad: 3
    };
  }
}
function a0_0x3dc204(_0x40f422, _0x58d669, _0x14946a) {
  if (_0x40f422) {
    var _0x157d47 = a0_0x24bc92 * 3;
    a0_0x4ef4f3.save();
    if (a0_0x1c918d == _0x40f422.id) {
      a0_0x4ef4f3.globalAlpha = 1;
    } else {
      a0_0x4ef4f3.globalAlpha = 0.7;
      _0x157d47 = 2;
    }
    var _0x44d42f = a0_0x11866b - (a0_0x24bc92 * 10 + a0_0x25d08e.miniMapCanvas.width * a0_0xba590d) + _0x40f422.x * (a0_0x25d08e.miniMapCanvas.width * a0_0xba590d) / a0_0x425049;
    var _0x223a2a = a0_0x24bc92 * 10 + _0x40f422.y * (a0_0x25d08e.miniMapCanvas.height * a0_0xba590d) / a0_0xe585d7;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.fillStyle = _0x58d669;
    a0_0x4ef4f3.arc(_0x44d42f, _0x223a2a, _0x157d47, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.restore();
  }
}
class a0_0x3a1eba {
  constructor() {
    this.subscribers = {};
  }
  subscribe(_0x1abd0c, _0xb7b4c5) {
    if (!this.subscribers[_0x1abd0c]) {
      this.subscribers[_0x1abd0c] = [];
    }
    this.subscribers[_0x1abd0c].push(_0xb7b4c5);
  }
  emit(_0x2115f6, _0x30d1cd) {
    const _0x43e4ca = this.subscribers[_0x2115f6];
    if (_0x43e4ca) {
      _0x43e4ca.forEach(_0x29a5f5 => _0x29a5f5(_0x30d1cd));
    }
  }
}
class a0_0x12d103 {
  constructor() {}
  static type = 0;
  send() {}
}
class a0_0x500ad3 {
  constructor() {}
  static type = 0;
  static validate() {}
  static handle() {}
}
class a0_0x56ab40 {
  constructor() {}
  static type = 0;
  static send() {}
  static validate() {}
  static handle() {}
}
class a0_0x4823d5 extends a0_0x12d103 {
  constructor() {
    super();
  }
  static type = 1;
  static send(_0x63a889, _0x12c982) {
    let _0x5eceae = 11;
    if (_0x12c982 && _0x12c982.length) {
      _0x5eceae += _0x12c982.length;
    }
    const _0x790fbd = new a0_0x49f976(_0x5eceae);
    _0x790fbd.writeUInt8(a0_0x4823d5.type);
    _0x790fbd.writeUInt16(a0_0x11866b);
    _0x790fbd.writeUInt16(a0_0x8379e6);
    _0x790fbd.writeUInt16(a0_0x22650f);
    if (_0x12c982) {
      _0x790fbd.writeString(_0x12c982);
    } else {
      _0x790fbd.writeString("");
    }
    _0x63a889.send(_0x790fbd.dataView.buffer);
  }
}
class a0_0x2c3940 extends a0_0x500ad3 {
  constructor() {}
  static type = 2;
  static handle(_0x2edc2b) {
    const _0x27be78 = _0x2edc2b.readString();
    const _0x397f83 = _0x2edc2b.readUInt16();
    const _0x2d5d76 = _0x2edc2b.readUInt8();
    const _0x33167e = _0x2edc2b.readUInt8();
    const _0x13c651 = _0x2edc2b.readString();
    return {
      sessionId: _0x27be78,
      gameVersion: _0x397f83,
      gameMode: _0x2d5d76,
      season: _0x33167e,
      serverId: _0x13c651
    };
  }
}
class a0_0xac4ae5 extends a0_0x500ad3 {
  constructor() {
    super();
  }
  static type = 17;
  static handle(_0x3e04bb) {
    const _0x3aae2b = _0x3e04bb.readUInt16();
    const _0x4e3247 = _0x3e04bb.readUInt16();
    const _0x807ca2 = _0x3e04bb.readUInt16();
    const _0x2819c3 = _0x3e04bb.readUInt16();
    const _0xbfacdc = _0x3e04bb.readUInt16();
    return {
      gameWidth: _0x3aae2b,
      gameHeight: _0x4e3247,
      camX: _0x807ca2,
      camY: _0x2819c3,
      camZoom: _0xbfacdc
    };
  }
}
class a0_0x4b5ba4 extends a0_0x12d103 {
  constructor() {
    super();
  }
  static type = 113;
  static send(_0xd1f389, _0x56896c, _0x5c1024, _0x3b2046) {
    if (!_0x56896c) {
      _0x56896c = "mope.io";
    }
    const _0x3e1e04 = 33 + _0x56896c.length;
    const _0xf602a4 = new a0_0x49f976(_0x3e1e04);
    _0xf602a4.writeUInt8(a0_0x4b5ba4.type);
    _0xf602a4.writeUInt16(_0x5c1024);
    _0xf602a4.writeUInt16(_0x3b2046);
    _0xf602a4.writeString(_0x56896c);
    _0xd1f389.send(_0xf602a4.dataView.buffer);
  }
}
class a0_0x1a9edb extends a0_0x56ab40 {
  constructor() {
    super();
  }
  static type = 24;
  static readUpgradeMenu(_0xbd9289) {
    const _0x70fdd2 = _0xbd9289.readUInt8();
    const _0x3b80ab = _0xbd9289.readUInt8();
    const _0x34abcf = _0xbd9289.readUInt8();
    console.log("timeout on message: " + _0x34abcf);
    const _0x55e9c7 = _0xbd9289.readUInt8();
    const _0x280f6d = _0xbd9289.readUInt8();
    const _0x11fa90 = [];
    for (var _0x329824 = 0; _0x329824 < _0x280f6d; _0x329824++) {
      let _0x5c5e05 = _0xbd9289.readUInt8();
      const _0x53220e = _0xbd9289.readUInt8();
      const _0x4209df = _0xbd9289.readUInt8();
      const _0x2e6338 = _0xbd9289.readUInt8();
      const _0x30e540 = _0xbd9289.readUInt16();
      const _0xdb1de8 = _0xbd9289.readUInt8();
      const _0x126bd1 = _0xbd9289.readUInt8();
      let _0x5624cb = _0xbd9289.readUInt8() == 1;
      const _0x249436 = _0xbd9289.readString();
      const _0x1a6de2 = _0x329824;
      const _0xdf15d3 = _0x249436 != null && _0x249436 !== "null";
      let _0x2180f0 = 0;
      let _0x4f4405 = null;
      if (_0x249436) {
        if (a0_0x1669d8.shop != null && a0_0x1669d8.shop.allItems != null) {
          var _0xe259f9 = a0_0x1669d8.shop.allItems["" + _0x249436];
          if (_0xe259f9) {
            _0x4f4405 = _0xe259f9;
            _0x2180f0 = _0xe259f9.price > 0 ? _0xe259f9.price : 0;
          }
        }
      }
      _0x5624cb = _0x5624cb || _0x2180f0 == 0;
      const _0x4396ab = {
        forLvl: _0x55e9c7,
        abilities: [],
        anAniT: _0x53220e,
        biomeNum: _0x4209df,
        species: _0x2e6338,
        subSpecies: _0x30e540,
        premiumSkinType: _0xdb1de8,
        season: _0x5c5e05,
        skinThemeID: _0x126bd1,
        isBought: _0x5624cb,
        itemId: _0x249436,
        itemIndex: _0x1a6de2,
        isShopItem: _0xdf15d3,
        coinsPrice: _0x2180f0,
        shopItem: _0x4f4405,
        choiceIndex: _0x1a6de2
      };
      const _0xc3540b = a0_0xa5d548.createGameObjOfOType(a0_0x1370b8, _0x53220e);
      _0xc3540b.animalType = _0x53220e;
      _0xc3540b.animalSpecies = _0x2e6338;
      _0xc3540b.animalSubSpecies = _0x30e540;
      _0xc3540b.animalPremiumSkin = _0xdb1de8;
      _0xc3540b.mopeSeasonID = _0x5c5e05;
      _0xc3540b.skinThemeID = _0x126bd1;
      _0xc3540b.curBiome = _0x4209df;
      if (_0xc3540b.animalInfo) {
        const _0x3be40f = _0xc3540b.animalInfo();
        _0x4396ab.itemId = _0x3be40f.aniName;
        _0x4396ab.name = _0x3be40f.aniName;
      }
      _0x4396ab.abilities = _0xc3540b.getAbilityInfo();
      _0x4396ab.itemId = a0_0xa5d548.getClassForGameObjType(a0_0x1370b8, _0x53220e).name;
      if (_0xc3540b.animalInfo) {
        const _0x264831 = _0xc3540b.animalInfo();
        _0x4396ab.itemId = _0x264831.aniName;
        _0x4396ab.name = _0x264831.aniName;
      }
      _0x4396ab.shopImage = _0xc3540b.getUpgradeImagePath();
      _0x11fa90.push(_0x4396ab);
    }
    return {
      isSpectator: _0x70fdd2,
      gameSession: _0x3b80ab,
      timeout: _0x34abcf,
      upgradeLevel: _0x55e9c7,
      animalChoices: _0x11fa90
    };
  }
  static handle(_0x5f550f) {
    const {
      isSpectator: _0x3c4cb3,
      gameSession: _0x61d46b,
      timeout: _0x53ae8d,
      upgradeLevel: _0x36ad52,
      animalChoices: _0xe824
    } = a0_0x1a9edb.readUpgradeMenu(_0x5f550f);
    console.log("select timeout: " + _0x53ae8d);
    return {
      isSpectator: _0x3c4cb3,
      gameSession: _0x61d46b,
      timeout: _0x53ae8d,
      upgradeLevel: _0x36ad52,
      animalChoices: _0xe824
    };
  }
  static send(_0x1bbc3b, _0x23ebaf) {
    const _0x1ad9f0 = 2;
    const _0xe1055e = new a0_0x49f976(_0x1ad9f0);
    _0xe1055e.writeUInt8(a0_0x1a9edb.type);
    _0xe1055e.writeUInt8(_0x23ebaf);
    _0x1bbc3b.send(_0xe1055e.dataView.buffer);
  }
}
class a0_0x9bc3eb extends a0_0x12d103 {
  constructor() {
    super();
  }
  static type = 11;
  static send(_0x3513ad) {
    const _0x552b14 = new a0_0x49f976(1);
    _0x552b14.writeUInt8(a0_0x9bc3eb.type);
    _0x3513ad.send(_0x552b14.dataView.buffer);
  }
}
class a0_0x4a0312 extends a0_0x56ab40 {
  constructor() {
    super();
  }
  static type = 114;
  static handle(_0x1f20f0) {
    let _0x401292 = [];
    const _0x4ffccf = _0x1f20f0.readUInt8();
    for (var _0x47e224 = 0; _0x47e224 < _0x4ffccf; _0x47e224++) {
      const _0x458dfe = _0x1f20f0.readUInt8();
      const _0x5b1e41 = _0x1f20f0.readString();
      const _0x4bac83 = _0x1f20f0.readUInt8() == 1;
      if (_0x4bac83) {
        const _0x46e1cf = _0x1f20f0.readUInt8() == 1;
        const _0x2a7076 = _0x1f20f0.readUInt8() == 1;
        const _0x2128c2 = _0x1f20f0.readString();
        const _0x4f440c = _0x1f20f0.readString();
        _0x401292.push({
          buffType: _0x458dfe,
          name: _0x5b1e41,
          itemId: _0x4f440c,
          bought: _0x4bac83,
          active: _0x46e1cf,
          paused: _0x2a7076,
          buffTier: _0x2128c2
        });
      } else {
        _0x401292.push({
          buffType: _0x458dfe,
          name: _0x5b1e41
        });
      }
    }
    _0x401292 = a0_0x554b18(_0x401292);
    console.log("UserBuffsMsgType =>", _0x401292);
    $bus.emit($bus.EVENTS.PLAYER_POWERUPS, _0x401292);
  }
}
function a0_0x35aa4e(_0x5c35ef) {
  if (!_0x5c35ef) {
    return _0x5c35ef;
  }
  return _0x5c35ef.toUpperCase();
}
function a0_0x554b18(_0x3d39d0) {
  const _0x5448a3 = a0_0x1669d8.shop.buffs;
  _0x3d39d0.forEach(_0x476c31 => {
    let _0x79af93 = new Array();
    _0x5448a3.forEach(_0x18ec7d => {
      if (_0x476c31.itemId !== undefined) {
        if (_0x18ec7d.itemId === _0x476c31.itemId && _0x79af93.length == 0) {
          _0x79af93.push(_0x18ec7d);
        }
      } else if (_0x18ec7d.buffType === _0x476c31.buffType) {
        _0x79af93.push(_0x18ec7d);
      }
    });
    _0x476c31.icon = "assets/powerups/powerup-" + _0x476c31.name + ".png";
    _0x476c31.buffLabel = a0_0x35aa4e(_0x476c31.name) + " BUFF";
    _0x476c31.itemId = _0x79af93[0].itemId;
    _0x476c31.duration = _0x79af93[0].duration;
    _0x476c31.progress = "";
    if (_0x476c31.bought === undefined) {
      _0x476c31.status = "buy";
      _0x476c31.action = "BUY";
    } else if (_0x476c31.bought == true && _0x476c31.active == false) {
      _0x476c31.status = "activate";
      _0x476c31.action = "ACTIVATE";
      _0x476c31.progress = _0x79af93[0].tier;
      _0x476c31.duration = _0x79af93[0].duration;
    } else if (_0x476c31.bought == true && _0x476c31.active == true) {
      _0x476c31.status = "in-progress";
      _0x476c31.action = _0x79af93[0].duration + "m";
      _0x476c31.progress = _0x79af93[0].tier;
    }
    _0x476c31.label = _0x79af93.length == 1 ? _0x79af93[0].tier : "";
    _0x476c31.options = new Array();
    _0x79af93.forEach(_0x18396e => {
      _0x476c31.options.push({
        itemId: _0x18396e.itemId,
        icon: _0x476c31.icon,
        label: _0x18396e.tier,
        cost: _0x18396e.price,
        duration: _0x18396e.duration
      });
    });
  });
  return _0x3d39d0;
}
class a0_0x3980f0 extends a0_0x56ab40 {
  constructor() {
    super();
  }
  static type = 115;
  static handle(_0x17584f) {
    const _0x3607f2 = [];
    const _0x3457f8 = _0x17584f.readUInt8();
    for (var _0x5aef82 = 0; _0x5aef82 < _0x3457f8; _0x5aef82++) {
      const _0x261f20 = _0x17584f.readUInt8();
      _0x3607f2.push({
        buffType: _0x261f20
      });
    }
  }
}
var a0_0x325e0f = ["Team Mode", "Wild Mope"];
var a0_0x20de58 = false;
var a0_0x15c740 = false;
var a0_0x2126e2;
var a0_0x329637 = [];
var a0_0x5879ae = null;
var a0_0x5dbf9a = null;
var a0_0x3b84a2 = {};
function a0_0x12a76f(_0x2a459f) {
  if (_0x2a459f in a0_0x3b84a2) {
    return Math.round(a0_0x3b84a2[_0x2a459f]);
  } else {
    return "?";
  }
}
function a0_0x4b1fb1(_0x54e31b) {
  this.serverObj = _0x54e31b;
  var _0x2c9d30 = window.location.protocol === "https:" ? "wss://" : "ws://";
  var _0xb808d4 = window.location.protocol === "https:" ? 443 : 80;
  var _0x4b7cc6 = _0x2c9d30 + this.serverObj.serverConnURL + ":" + _0xb808d4 + "/ping";
  this.testWs = new WebSocket(_0x4b7cc6);
  this.startT = +new Date();
  this.testWs.binaryType = "arraybuffer";
  var _0x787725 = this;
  this.pingsRec = 0;
  this.pingsDelayMsTot = 0;
  this.testWs.onopen = function () {
    _0x787725.sendPing();
  };
  this.sendPing = function () {
    var _0x285230 = new a0_0x49f976(1);
    _0x285230.writeUInt8(255);
    _0x787725.testWs.send(_0x285230.dataView.buffer);
    this.startT = +new Date();
  };
  this.testWs.onmessage = function (_0x5829e6) {
    var _0x5829e6 = new a0_0x30f1cb(new DataView(_0x5829e6.data));
    if (_0x5829e6.readUInt8() == 255) {
      var _0x14517f = +new Date() - _0x787725.startT;
      _0x787725.pingsRec += 1;
      _0x787725.pingsDelayMsTot += _0x14517f;
      if (_0x787725.pingsRec >= 4) {
        _0x787725.serverObj.ping = _0x787725.pingsDelayMsTot / _0x787725.pingsRec;
        a0_0x3b84a2[_0x787725.serverObj.region] = _0x787725.serverObj.ping;
        _0x787725.testWs.close();
        a0_0x347907(_0x787725);
      } else {
        _0x787725.sendPing();
      }
    }
  };
  this.testWs.onerror = function (_0x244c6e) {
    console.log("TestWS: error connecting to server " + _0x787725.serverObj.name + " IP " + _0x787725.serverObj.ip + _0x244c6e);
  };
  this.testWs.onclose = function (_0x2e881e) {};
}
var a0_0x4c0ab4 = 0;
function a0_0x3f0716(_0x52202c) {
  if (a0_0x20de58) {
    return;
  }
  a0_0x4c0ab4 = 0;
  a0_0x5dbf9a = _0x52202c;
  a0_0x20de58 = true;
  a0_0x5879ae = a0_0xa68ef0;
  for (var _0x413636 in a0_0x4a10b5) {
    if (a0_0x4a10b5.hasOwnProperty(_0x413636) && a0_0x4a10b5[_0x413636].length > 0 && !a0_0x45d276(_0x413636)) {
      var _0xe689cb = a0_0x4a10b5[_0x413636][0];
      a0_0x329637.push(new a0_0x4b1fb1(_0xe689cb));
    }
  }
  a0_0x2126e2 = setTimeout(function () {
    if (a0_0x4c0ab4 == 0) {
      console.log("Doing slower ping test...");
      a0_0x2126e2 = setTimeout(function () {
        for (var _0x3db3f7 = 0; _0x3db3f7 < a0_0x329637.length; _0x3db3f7++) {
          a0_0x329637[_0x3db3f7].testWs.close();
        }
        a0_0x922842();
      }, 5000);
    } else {
      for (var _0x53648e = 0; _0x53648e < a0_0x329637.length; _0x53648e++) {
        a0_0x329637[_0x53648e].testWs.close();
      }
      a0_0x922842();
    }
  }, 1200);
}
function a0_0x5e8860(_0x57691e) {}
function a0_0x347907(_0x130a79) {
  if (_0x130a79.serverObj.ping < a0_0x5879ae.ping) {
    a0_0x5879ae = _0x130a79.serverObj;
  }
  var _0x10ecf1 = a0_0x329637.indexOf(_0x130a79);
  if (_0x10ecf1 != -1) {
    a0_0x329637.splice(_0x10ecf1, 1);
  }
  a0_0x4c0ab4 += 1;
  if (a0_0x329637.length == 0) {
    if (a0_0x2126e2) {
      clearTimeout(a0_0x2126e2);
    }
    a0_0x922842();
  }
}
function a0_0x922842() {
  if (a0_0x20de58) {
    a0_0x15c740 = true;
  }
  a0_0x20de58 = false;
  console.log("@@@@  Fastest region is " + a0_0x5879ae.region + " with ping " + a0_0x5879ae.ping + "ms ");
  a0_0x18c01c = a0_0x5879ae.region;
  a0_0x5dbf9a();
}
function a0_0x45d276(_0x37f4d4) {
  for (var _0x3c2ded = 0; _0x3c2ded <= a0_0x325e0f.length; _0x3c2ded++) {
    if (a0_0x325e0f[_0x3c2ded] == _0x37f4d4) {
      return true;
    }
  }
  return false;
}
var a0_0x351787 = 0;
var a0_0x228bce = false;
var a0_0x624a39 = false;
var a0_0x49d687;
var a0_0x496c0a = window.innerWidth;
var a0_0x544f0d = window.innerHeight;
var a0_0x496c0a = window.innerWidth;
var a0_0x544f0d = window.innerHeight;
var a0_0x52400a = {};
var a0_0x1905d6 = false;
a0_0x52400a[$bus.CONSTANTS.AD_IDS.LEFT] = false;
a0_0x52400a[$bus.CONSTANTS.AD_IDS.RIGHT] = false;
a0_0x52400a[$bus.CONSTANTS.AD_IDS.HOME] = false;
function a0_0x69a949() {
  const _0xfd2851 = document.getElementById("eg-ccpa-msg-id");
  if (_0xfd2851) {
    _0xfd2851.remove();
  }
}
const a0_0x2145b8 = () => new Promise(_0x3c0869 => {
  const _0x5b1b04 = "https://api.adinplay.com/libs/aiptag/pub/LBS/mope.io/tag.min.js";
  fetch(new Request(_0x5b1b04)).then(_0x37fabc => _0x3c0869(false)).catch(_0xb2f446 => _0x3c0869(true));
});
async function a0_0x30f033() {
  a0_0x228bce = false;
  const _0x3cd97f = "https://api.adinplay.com/libs/aiptag/pub/LBS/mope.io/tag.min.js";
  try {
    await fetch(new Request(_0x3cd97f)).catch(_0x37ea69 => a0_0x228bce = true);
  } catch (_0x35bf13) {
    a0_0x228bce = true;
  } finally {
    console.log("AdBlock Enabled: " + a0_0x228bce);
  }
}
if (!a0_0x5c9ce1) {
  if (document.getElementById("xTRbLiXhOoyu_adsbl0ck")) {
    a0_0x30f033();
  } else {
    a0_0x228bce = true;
  }
  console.log("ad block enabled:", a0_0x228bce);
}
function a0_0x164e61() {
  var _0xa0ca3f = navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);
  if (_0xa0ca3f) {
    return parseInt(_0xa0ca3f[2], 10);
  } else {
    return false;
  }
}
var a0_0x634ab2 = !a0_0x5c9ce1 && a0_0x164e61() && (a0_0x164e61() == 84 || a0_0x164e61() == 85);
var a0_0x2df386 = false;
if (a0_0x634ab2 && !a0_0x2df386) {
  console.log("slow chrome!");
  var a0_0x2e29f4 = document.getElementById("chromebugdiv");
  if (a0_0x2e29f4) {
    a0_0x2e29f4.style.display = "block";
  }
  var a0_0x2e29f4 = document.getElementById("chromebugp");
  if (a0_0x2e29f4) {
    a0_0x2e29f4.innerHTML = "Your browser (Chrome V " + a0_0x164e61() + ") has a bug, which can make mope.io laggy!";
  }
  var a0_0x2e29f4 = document.getElementById("chromebug_closebut");
  if (a0_0x2e29f4) {
    a0_0x2e29f4.onclick = function () {
      var _0xe6bdfe = document.getElementById("chromebugdiv");
      if (_0xe6bdfe) {
        _0xe6bdfe.parentNode.removeChild(_0xe6bdfe);
      }
      if (window.localStorage) {
        try {
          window.localStorage.setItem("chromeBug_closed", true);
        } catch (_0x889e99) {}
      }
    };
  }
} else {
  var a0_0x2e29f4 = document.getElementById("chromebugdiv");
  if (a0_0x2e29f4) {
    a0_0x2e29f4.parentNode.removeChild(a0_0x2e29f4);
  }
}
console.log("Chrome version " + a0_0x164e61());
var a0_0x4b7f94 = a0_0x4d8156(document.location.search);
var a0_0x3ae2c9 = a0_0x4b7f94.y8BannerModify > 0;
if (a0_0x5c9ce1 || a0_0x3ae2c9) {
  var a0_0x2e29f4;
  var a0_0x2e29f4 = document.getElementById("appsDiv");
  if (a0_0x2e29f4) {
    a0_0x2e29f4.parentNode.removeChild(a0_0x2e29f4);
  }
}
var a0_0x504574 = 0;
var a0_0x3a09d4 = 0;
if (window.localStorage) {
  var a0_0x3c885c = window.localStorage.getItem("lastAdShowT") * 1 || 0;
  var a0_0x225f25 = +new Date() - a0_0x3c885c;
  a0_0x3a09d4 = a0_0x225f25 > 0 ? a0_0x3c885c : 0;
  a0_0x504574 = window.localStorage.getItem("gamesSinceAd") * 1;
  if (a0_0x504574 < 0) {
    a0_0x504574 = 0;
  }
  console.log("videoAd: " + a0_0x504574 + " games since last ad!");
}
var a0_0x45fe31 = false;
var a0_0x1b01f2 = () => new Promise(async _0x148e39 => {
  a0_0x228bce = await a0_0x2145b8();
  _0x148e39(!a0_0x228bce && !a0_0x624a39 && !a0_0x5c9ce1);
});
function a0_0x144cc0() {
  try {
    console.log("::: ad-tech ::: Refreshing banner ads");
    a0_0x449c86($bus.CONSTANTS.AD_SCREEN_LAYOUTS.MENU);
  } catch (_0x375b82) {
    console.log("::: ad-tech ::: Error refreshing banner ads" + _0x375b82);
  }
  a0_0x44511b();
  a0_0x12b93();
}
function a0_0x418b9f() {
  a0_0x5871e6($bus.CONSTANTS.AD_IDS.LEFT);
  a0_0x5871e6($bus.CONSTANTS.AD_IDS.RIGHT);
  a0_0x5871e6($bus.CONSTANTS.AD_IDS.HOME);
}
function a0_0x480f5e(_0x2b45cf) {
  console.log("::: ad-tech ::: destroy ad", _0x2b45cf);
  window.aiptag.cmd.display.push(function () {
    aipDisplayTag.destroy(_0x2b45cf);
  });
}
function a0_0x43bc87(_0x308a9e) {
  console.log("::: ad-tech ::: create ad", _0x308a9e);
  window.aiptag.cmd.display.push(function () {
    aipDisplayTag.display(_0x308a9e);
  });
}
function a0_0x5871e6(_0x56a362) {
  if (a0_0x52400a[_0x56a362]) {
    a0_0x52400a[_0x56a362] = false;
    a0_0x480f5e(_0x56a362);
  }
}
function a0_0x42d70c(_0x328251) {
  if (!a0_0x52400a[_0x328251]) {
    a0_0x52400a[_0x328251] = true;
    a0_0x43bc87(_0x328251);
  }
}
const a0_0x33ce65 = () => {
  if (window.innerWidth > 1024 && window.innerHeight > 730) {
    a0_0x42d70c($bus.CONSTANTS.AD_IDS.LEFT);
  } else {
    a0_0x5871e6($bus.CONSTANTS.AD_IDS.LEFT);
  }
  if (window.innerWidth > 1024 && window.innerHeight > 730) {
    a0_0x42d70c($bus.CONSTANTS.AD_IDS.RIGHT);
  } else {
    a0_0x5871e6($bus.CONSTANTS.AD_IDS.RIGHT);
  }
};
const a0_0x4975df = () => {
  if (window.innerWidth > 1609 && window.innerHeight > 730) {
    a0_0x42d70c($bus.CONSTANTS.AD_IDS.LEFT);
  } else {
    a0_0x5871e6($bus.CONSTANTS.AD_IDS.LEFT);
  }
  if (window.innerWidth > 1609 && window.innerHeight > 730) {
    a0_0x42d70c($bus.CONSTANTS.AD_IDS.RIGHT);
  } else {
    a0_0x5871e6($bus.CONSTANTS.AD_IDS.RIGHT);
  }
  if (window.innerWidth > 980 && window.innerHeight > 720) {
    a0_0x42d70c($bus.CONSTANTS.AD_IDS.HOME);
  } else {
    a0_0x5871e6($bus.CONSTANTS.AD_IDS.HOME);
  }
};
const a0_0x9baaf9 = () => {
  a0_0x42d70c($bus.CONSTANTS.AD_IDS.LEFT);
  a0_0x42d70c($bus.CONSTANTS.AD_IDS.RIGHT);
  a0_0x42d70c($bus.CONSTANTS.AD_IDS.HOME);
};
const a0_0x449c86 = function (_0xad74d4) {
  const {
    ARENA: _0xc3f265,
    UPGRADE: _0x412759,
    MENU: _0x3461d3,
    NONE: _0x5db622
  } = $bus.CONSTANTS.AD_SCREEN_LAYOUTS;
  console.log("::: ad-tech ::: Loading ads for loc", _0xad74d4);
  if (!_0xad74d4) {
    _0xad74d4 = $bus.CONSTANTS.AD_SCREEN_LAYOUTS.MENU;
  }
  switch (_0xad74d4) {
    case _0x412759:
      a0_0x33ce65();
      break;
    case _0xc3f265:
      if (a0_0x290640) {
        return;
      }
      a0_0x33ce65();
      break;
    case _0x3461d3:
      if (a0_0x290640) {
        return;
      }
      a0_0x4975df();
      break;
    case _0x5db622:
      a0_0x418b9f();
      break;
  }
  a0_0x49d687 = _0xad74d4;
};
var a0_0x46e611 = false;
var a0_0x16c25d = false;
var a0_0x260341 = new a0_0x3d10bd(10, "white");
a0_0x260341.setText("Connecting...");
a0_0x260341.renderScale = 1;
function a0_0x1a0b07() {
  if (a0_0x228bce || a0_0x624a39) {
    return;
  }
  a0_0x624a39 = true;
  const _0x11272a = document.getElementById("eg-video-player");
  if (_0x11272a) {
    window.show_videoad();
  } else {
    window.onVideoAdFinished(true);
  }
}
window.onVideoAdFinished = function (_0x1d2d79) {
  a0_0x45fe31 = false;
  a0_0x16c25d = false;
  a0_0x46e611 = false;
  a0_0x43318e.focus();
  if (_0x1d2d79) {
    a0_0x504574 = 0;
    a0_0x3a09d4 = +new Date();
    if (window.localStorage) {
      try {
        window.localStorage.setItem("lastAdShowT", a0_0x3a09d4);
        window.localStorage.setItem("gamesSinceAd", a0_0x504574);
      } catch (_0x2676e6) {
        console.log("localstorage error saving ads");
      }
    } else {
      console.log("no localstorage, cant save ad nums");
    }
  } else {
    console.log("not successful play, will play ad again");
  }
  if (_0x1d2d79 && (!a0_0x290640 || a0_0x290640 && a0_0x409384)) {
    console.log("VIDEOADS: Video done (success: " + _0x1d2d79 + "), joining game!");
    try {
      console.log("::: video ad played joining game :::");
      if (!a0_0x290640) {
        a0_0x3b4acc(false);
      }
    } catch (_0x33e7c2) {
      console.error("Error joining game after video ad:", _0x33e7c2);
    }
  } else if (!a0_0x290640 || a0_0x290640 && a0_0x409384) {
    try {
      console.log("::: video ad not played or skipped joining game :::");
      if (!a0_0x290640) {
        a0_0x3b4acc(false);
      }
    } catch (_0x172235) {
      console.error("Error joining game after video ad:", _0x172235);
    }
  }
};
function a0_0x17acac(_0x1e2a6b, _0x1382ae, _0x36e0c2) {
  var _0x268173 = document.head || document.getElementsByTagName("head")[0];
  var _0x5ec08 = document.createElement("script");
  var _0x34673f = true;
  _0x5ec08.async = "async";
  _0x5ec08.type = "text/javascript";
  _0x5ec08.charset = "UTF-8";
  _0x5ec08.src = _0x1e2a6b;
  _0x5ec08.onload = _0x5ec08.onreadystatechange = function () {
    if (_0x34673f && (!_0x5ec08.readyState || /loaded|complete/.test(_0x5ec08.readyState))) {
      _0x34673f = false;
      _0x1382ae();
      _0x5ec08.onload = _0x5ec08.onreadystatechange = null;
    }
  };
  _0x268173.appendChild(_0x5ec08);
}
try {
  a0_0x2145b8().then(_0x1725c1 => {
    a0_0x228bce = _0x1725c1;
  });
} catch (a0_0x50fcda) {
  console.error("Error initializing ads:", a0_0x50fcda);
}
const a0_0x4b21d5 = function () {
  a0_0x449c86($bus.CONSTANTS.AD_SCREEN_LAYOUTS.NONE);
};
a0_0x4b21d5();
var a0_0x363675;
function a0_0x37556c() {
  return window.ReactNativeWebView;
}
const a0_0x5bff55 = (_0x5aa7bb, _0x5222c2) => {
  const _0x4edf2a = a0_0x37556c();
  if (!_0x4edf2a) {
    a0_0x1fcf24("Failed to call mobile authentication handler. Bridge doesn't exist!", "error", 10);
    return;
  }
  window.ReactNativeWebView.postMessage(JSON.stringify({
    event: _0x5aa7bb,
    data: _0x5222c2
  }));
};
window.addEventListener("native-code", _0x5a1e0f => {
  const _0x1fb3f9 = JSON.parse(JSON.stringify(_0x5a1e0f.detail));
  a0_0xe757e1(_0x1fb3f9.event, _0x1fb3f9.data);
});
const a0_0xe757e1 = (_0x33f2e0, _0x5b99b5) => {
  switch (_0x33f2e0) {
    case "alert":
      alert(_0x5b99b5);
      break;
    case "error":
      console.error("Something happened with the native bridge...", _0x5b99b5);
      break;
    case "user-login":
      a0_0x19b269(_0x5b99b5);
      break;
    default:
      console.error("Event not found " + _0x33f2e0 + " with data: " + _0x5b99b5);
      break;
  }
};
function a0_0x19b269(_0x5c3333) {
  const {
    provider: _0x1867cb,
    accessToken: _0x11e32f
  } = _0x5c3333;
  if (!_0x11e32f || _0x11e32f == "") {
    return a0_0x1fcf24("Error happened when trying to login you in! [Mobile_NoAT]", "error", 15);
  }
  a0_0x30079e(_0x11e32f, "mobile", _0x1867cb);
}
async function a0_0x5a173b() {
  console.log("showing mobile ad......");
}
var a0_0x4c4bf9 = !!navigator.userAgent.platform && /iPad|iPhone|iPod/.test(navigator.userAgent.platform);
var a0_0xe05a92 = navigator.userAgent.toLowerCase().indexOf("android") > -1;
if ((a0_0x4c4bf9 || a0_0xe05a92) && !a0_0x5c9ce1) {
  var a0_0x1c5277 = false;
  if (window.localStorage) {
    a0_0x1c5277 = window.localStorage.getItem("oldVisitor") > 0;
    try {
      window.localStorage.setItem("oldVisitor", 1);
    } catch (a0_0xd7ec0d) {
      a0_0x1c5277 = true;
    }
  }
  if (!a0_0x1c5277) {
    if (a0_0x4c4bf9) {
      window.location.href = "https://itunes.apple.com/us/app/mope.io/id1086471119?ls=1&mt=8";
    }
  } else {}
}
document.getElementById("serverSelect").onchange = a0_0x405e74;
document.getElementById("serverSelect").onclick = function () {
  a0_0x569152();
};
function a0_0x405e74() {
  var _0x11bacc = document.getElementById("serverSelect");
  console.log("Changed- Selected index " + _0x11bacc.selectedIndex);
  var _0x44cc0f = null;
  for (var _0x38956a = 0; _0x38956a < a0_0x5b5315.length; _0x38956a++) {
    let _0x11dd5b = a0_0x5b5315[_0x38956a];
    if (_0x11dd5b.optionListIndex == _0x11bacc.selectedIndex) {
      _0x44cc0f = _0x11dd5b;
      break;
    }
  }
  if (a0_0xa68ef0 && a0_0xa68ef0.sessionId) {
    a0_0xa68ef0.sessionId = null;
  }
  if (_0x44cc0f) {
    a0_0xa68ef0 = _0x44cc0f;
  } else {
    console.log("Error finding matching server for selected 'option' index " + _0x11bacc.selectedIndex);
    a0_0xa68ef0 = a0_0x5b5315[0];
  }
  a0_0x44d7ee();
  console.log("Server changed to " + a0_0xa68ef0.name + "...");
  var _0x31b829 = document.getElementById("spawnXpLabel");
  _0x31b829.style.opacity = 0;
  partyLinkIP = null;
  partyLinkKey = null;
  a0_0x6c945c(a0_0xa68ef0);
}
function a0_0x44d7ee() {
  var _0x426503 = document.getElementById("serverSelect");
  _0x426503.selectedIndex = a0_0xa68ef0.optionListIndex;
}
function a0_0x432e99() {
  var _0x2bdbc7 = document.getElementById("serverSelect");
  if (_0x2bdbc7) {
    while (_0x2bdbc7.lastChild) {
      _0x2bdbc7.removeChild(_0x2bdbc7.lastChild);
    }
  }
  var _0x50c306 = 0;
  for (var _0x5ce6e3 = 0; _0x5ce6e3 < a0_0x585f35.length; _0x5ce6e3++) {
    var _0x32cfdd = a0_0x585f35[_0x5ce6e3];
    var _0x1006d2 = document.createElement("optgroup");
    _0x1006d2.label = _0x32cfdd + " (Ping " + a0_0x12a76f(_0x32cfdd) + "ms)";
    _0x2bdbc7.appendChild(_0x1006d2);
    var _0x5e596d = false;
    var _0x35f9d0 = a0_0x4a10b5[_0x32cfdd];
    for (var _0x197f14 = 0; _0x197f14 < _0x35f9d0.length; _0x197f14++) {
      var _0xd84272 = _0x35f9d0[_0x197f14];
      _0xd84272.optionListIndex = _0x50c306;
      _0x50c306 += 1;
      var _0x1ba1f8 = document.createElement("option");
      _0x1ba1f8.gameServer = _0xd84272;
      _0x1ba1f8.text = _0xd84272.getServerListString();
      if (_0xd84272.ip == a0_0xa68ef0.ip) {
        foundIndex = _0x197f14;
      }
      _0x1006d2.appendChild(_0x1ba1f8);
    }
    if (!_0x5e596d) {
      _0x2bdbc7.selectedIndex = 0;
    }
  }
  a0_0x44d7ee();
}
var a0_0xbf9dbf = "...";
var a0_0x9e571c = 0;
var a0_0x1c918d = 0;
var a0_0x3a86ef = a0_0x4083f6;
var a0_0x564d0a = 0;
var a0_0x44c2b6 = 0;
var a0_0x290640 = false;
var a0_0x51a46a = false;
var a0_0x14f2df = false;
var a0_0x42d7bf = false;
var a0_0x4f6538 = +new Date();
var a0_0x95d5a0 = false;
let a0_0x110ed5 = false;
var a0_0x5732ca = false;
var a0_0x1ff564 = {};
var a0_0x3e3009 = 0;
var a0_0x167b07 = 0;
var a0_0x5a720f = 156454;
var a0_0x5b5315 = [];
var a0_0x585f35 = [];
var a0_0x4a10b5 = {};
function a0_0x4074a0(_0x41ba0d) {
  a0_0x585f35.push(_0x41ba0d);
  a0_0x4a10b5[_0x41ba0d] = [];
}
async function a0_0x1f0751() {
  try {
    const _0x3cd91c = await a0_0x559386($config.turnstileKey);
    const _0xcb4c32 = new a0_0x49f976(1 + a0_0x5162d0(_0x3cd91c.length) + 2);
    _0xcb4c32.writeUInt8(a0_0x56f21c);
    _0xcb4c32.writeString(_0x3cd91c);
    a0_0x217e77(_0xcb4c32);
  } catch (_0x5244d1) {
    console.error(_0x5244d1);
    a0_0x1fcf24("There was an issue with the captcha. Please check your internet connection!", "error", 10);
  }
}
a0_0x35b61b.prototype = {
  name: "Server",
  ip: "0.0.0.0",
  serverConnURL: "0.0.0.0",
  region: "",
  playersCount: -2,
  gameMode: 0,
  BR_waitingForPlayers: false,
  ping: 10000,
  domOptionIndex: 0,
  getServerListString: function () {
    var _0x521b02 = "";
    if (this.gameMode == 2) {
      _0x521b02 = this.BR_waitingForPlayers ? " -STARTING NEW GAME" : " -GAME IN PROGRESS";
    }
    var _0x377ac5 = this.playersCount < 0 ? "..." : this.playersCount;
    var _0x51d431 = this.name + " [" + _0x377ac5 + " players " + (this.playersCount >= a0_0x4c8476 ? "-FULL!" : "") + "]" + _0x521b02;
    return _0x51d431;
  }
};
function a0_0x35b61b(_0xa24fbc, _0x4cf402, _0x409392, _0x2a842d, _0xf027b2) {
  this.name = _0xa24fbc;
  this.id = _0x4cf402;
  this.ip = _0x409392;
  this.serverConnURL = _0x409392;
  this.region = _0x2a842d;
  this.gm = _0xf027b2;
}
function a0_0x3c4364(_0x208945, _0x43aeb4, _0xc4c749, _0x54edd7, _0x4df6de = 0) {
  var _0xdc3983 = new a0_0x35b61b(_0x208945, _0x43aeb4, _0xc4c749, _0x54edd7, _0x4df6de);
  a0_0x5b5315.push(_0xdc3983);
  if (!(_0x54edd7 in a0_0x4a10b5)) {
    a0_0x4074a0(_0x54edd7);
  }
  a0_0x4a10b5[_0x54edd7].push(_0xdc3983);
  return _0xdc3983;
}
const a0_0x374606 = function () {
  a0_0x5b5315 = [];
  a0_0x585f35 = [];
  a0_0x4a10b5 = {};
  for (let _0x4d2a01 = 0; _0x4d2a01 < $config.gameServers.length; _0x4d2a01++) {
    const _0x35b68c = $config.gameServers[_0x4d2a01];
    a0_0x3c4364(_0x35b68c.name, _0x35b68c.id, _0x35b68c.url, _0x35b68c.region, _0x35b68c.gm);
  }
};
a0_0x374606();
var a0_0x18c01c = a0_0x8418ab ? a0_0x585f35[0] : a0_0x585f35[a0_0x13f8d7(0, Math.max(0, a0_0x585f35.length - 1 - 1))];
var a0_0xa68ef0 = a0_0x4a10b5[a0_0x18c01c][0];
var a0_0x18c01c = a0_0xa68ef0.region;
var a0_0x21dc04 = a0_0x4bd42e ? 900 : 400;
var a0_0x4c8476 = a0_0x4bd42e ? 1000 : 500;
function a0_0x1958c3() {
  console.log("Joining best server...");
  var _0x4517ab = a0_0x4a10b5[a0_0x18c01c].slice();
  for (var _0x3ec8d2 = 0; _0x3ec8d2 < a0_0x3d2d9a.length; _0x3ec8d2++) {
    var _0x46cfb5 = _0x4517ab.indexOf(a0_0x3d2d9a[_0x3ec8d2]);
    if (_0x46cfb5 != -1) {
      _0x4517ab.splice(_0x46cfb5, 1);
    }
  }
  var _0x22ded4 = _0x4517ab;
  if (_0x4517ab.length >= 1) {
    function _0x10f2c5(_0x2effea, _0x5cacb9) {
      if (_0x2effea.playersCount < _0x5cacb9.playersCount) {
        return 1;
      }
      if (_0x2effea.playersCount > _0x5cacb9.playersCount) {
        return -1;
      }
      return 0;
    }
    _0x22ded4.sort(_0x10f2c5);
    for (var _0x3ec8d2 = 0; _0x3ec8d2 < _0x22ded4.length; _0x3ec8d2++) {
      var _0x5989a4 = _0x22ded4[_0x3ec8d2];
      if (_0x5989a4.playersCount < a0_0x21dc04) {
        return _0x5989a4;
      }
    }
  }
  console.log("No acceptable servers left in region- as backup trying random servers!");
  return a0_0x5b5315[a0_0x13f8d7(0, a0_0x5b5315.length - 1)];
}
function a0_0x23f59b() {
  var _0x33758c = a0_0x1958c3();
  a0_0x6c945c(_0x33758c);
}
function a0_0x5d73f7() {
  if (a0_0x15c740) {
    a0_0x23f59b();
    return;
  } else if (!a0_0x20de58) {
    a0_0x3f0716(function () {
      a0_0x23f59b();
    });
  }
}
var a0_0x5aa2a0;
var a0_0x194b8f = 0;
var a0_0x88b183 = null;
function a0_0x1655ad(_0x590493) {
  for (var _0x3a3ace = 0; _0x3a3ace < a0_0x5b5315.length; _0x3a3ace++) {
    var _0xfd1832 = a0_0x5b5315[_0x3a3ace];
    if (_0xfd1832.ip == _0x590493) {
      return _0xfd1832;
    }
  }
  return null;
}
function a0_0x14ed4d() {
  return a0_0xee3c71 && a0_0xee3c71.readyState === WebSocket.OPEN;
}
function a0_0x217e77(_0x8722d9) {
  if (a0_0x3e3f1c) {
    setTimeout(function () {
      if (a0_0x14ed4d()) {
        a0_0xee3c71.send(_0x8722d9.dataView.buffer);
      }
    }, 1);
  } else if (a0_0x14ed4d()) {
    a0_0xee3c71.send(_0x8722d9.dataView.buffer);
  }
}
mygamesession = 0;
function a0_0x4ffe2f() {
  if (a0_0x14ed4d()) {
    console.log("---Cleanly closing WS connection (instantly deletes player in-game)");
    a0_0x274ec9 = false;
    a0_0x555009 = null;
    var _0x41c0ff = new a0_0x49f976(1);
    _0x41c0ff.writeUInt8(a0_0x2ff41e);
    a0_0x217e77(_0x41c0ff);
    oldWS = a0_0xee3c71;
    a0_0xee3c71 = null;
    oldWS.close();
  } else {
    console.log("---not closing ws: no existing gameserver connection, .");
  }
}
function a0_0x45e7eb() {
  document.getElementById("onPlayReadyWrap").style.display = "block";
  document.getElementById("connecting").style.display = "none";
}
function a0_0x3b4acc(_0x8243c1) {
  if (!a0_0x39882a) {
    a0_0x3e8b56();
    a0_0x4b5ba4.send(a0_0xee3c71, a0_0x478314, a0_0x11866b, a0_0x8379e6);
  } else {
    console.log("### PLAYER IS IN SPECTATE MODE ###");
  }
}
function a0_0x6c945c(_0x37591e, _0xb49402 = false) {
  if (a0_0x5732ca) {
    console.log("@@@@@@@@@@@@@@@@@@@@@@@@");
    console.log("server disconnected this client: ");
    console.log("new server: " + _0x37591e);
    console.log("old server: " + a0_0xa68ef0);
    console.log("@@@@@@@@@@@@@@@@@@@@@@@@");
    return;
  }
  autoClickPlayOnJoin = _0xb49402;
  a0_0xa68ef0 = _0x37591e;
  a0_0x18c01c = _0x37591e.region;
  a0_0x44d7ee();
  a0_0x4ffe2f();
  if (_0x37591e != a0_0x88b183) {
    a0_0x194b8f = 0;
    a0_0x88b183 = _0x37591e;
  }
  a0_0x3ffc72 = false;
  a0_0x5732ca = false;
  if (a0_0x274ec9) {
    a0_0x10bd3d = true;
    console.log("-----------Reconnecting to session " + a0_0x555009);
    a0_0x1fcf24("Reconnecting to game session on connection loss...", "success", 3, function () {});
  } else {
    a0_0x10bd3d = false;
    console.log("opening ws, not reconnecting session" + a0_0x10bd3d);
  }
  if (!a0_0x274ec9) {
    document.getElementById("onPlayReadyWrap").style.display = "none";
    document.getElementById("connecting").style.display = "block";
    document.getElementById("txtServer").innerHTML = "(" + a0_0xa68ef0.name + ")";
  }
  var _0xcd13b7 = window.location.protocol === "https:" ? "wss://" : "ws://";
  var _0x4d3a98 = "";
  var _0x5a09f4 = _0xcd13b7 + a0_0xa68ef0.serverConnURL + ":" + _0x4d3a98;
  console.log("Connecting to " + _0x5a09f4);
  a0_0xee3c71 = new WebSocket(_0x5a09f4);
  a0_0xee3c71.binaryType = "arraybuffer";
  a0_0xee3c71.onopen = function () {
    a0_0x4823d5.send(a0_0xee3c71, a0_0xa68ef0.sessionId);
    a0_0x194b8f = 0;
    a0_0x467f99();
    document.getElementById("startMenu").style.visibility = "visible";
  };
  a0_0xee3c71.onmessage = function (_0x34889f) {
    if (this == a0_0xee3c71) {
      a0_0xea2900(new DataView(_0x34889f.data));
    } else {
      console.log("old ws message! ");
    }
  };
  a0_0xee3c71.onclose = function (_0x5a000d) {
    if (this == a0_0xee3c71) {
      console.log("socket ws.onclose!");
      a0_0x4b1c45();
    } else {}
  };
  a0_0xee3c71.onerror = function () {
    console.log("socket error!");
  };
}
a0_0x5d73f7();
const a0_0x467f99 = () => {
  a0_0x274ec9 = true;
};
const a0_0x43561c = _0x686eee => {
  const {
    success: _0x7b2cda
  } = _0x686eee;
  if (_0x7b2cda) {
    const {
      serverInfo: _0x5bf41f
    } = _0x686eee;
    if (_0x5bf41f.sessionId) {
      a0_0x51a46a = true;
      if (_0x5bf41f.sessionId !== a0_0xa68ef0.sessionId && a0_0x10bd3d) {
        a0_0x467f99();
        a0_0x290640 = false;
        a0_0xbf47e6();
        a0_0x1fcf24("Failed to reconnect to your session.", "success", 10);
      }
      a0_0x10bd3d = false;
      a0_0x140fa5 = 0;
    }
    a0_0xe92752 = _0x5bf41f.gameMode;
    a0_0x55dea9();
    a0_0x1f9ee8 = _0x5bf41f.season;
  }
};
const a0_0x3a60ae = ({
  gameWidth: _0x581f38,
  gameHeight: _0x2376f9,
  camX: _0x4f3fb1,
  camY: _0x52de1c,
  camZoom: _0x3060c2
}) => {
  a0_0x425049 = _0x581f38;
  a0_0xe585d7 = _0x2376f9;
  a0_0xaeda51 = a0_0x4fd957 = a0_0x4d6064 = _0x4f3fb1 / 4;
  a0_0xfc3cb9 = a0_0x47981f = a0_0x23c6d3 = _0x52de1c / 4;
  camzoom_n = _0x3060c2 / 1000;
  a0_0x19baa9 = camzoom_n * 1.2;
};
const a0_0x55a398 = ({
  isSpectator: _0x1a6ca9,
  timeout: _0x33be04,
  upgradeLevel: _0x4ec5d,
  animalChoices: _0x35330e
}) => {
  a0_0x4b95c7(false);
  const _0x3fcfdc = _0x1a6ca9;
  a0_0x409384 = true;
  a0_0x1e6896 = _0x4ec5d;
  a0_0x2666f4 = 0;
  a0_0x1dec92 = [];
  a0_0x5bc21a = _0x3fcfdc;
  a0_0x446f6f = +new Date();
  a0_0x296182 = a0_0x446f6f + _0x33be04 * 1000;
  for (let _0x1f5fd9 = 0; _0x1f5fd9 < _0x35330e.length; _0x1f5fd9++) {
    const _0x93068a = _0x35330e[_0x1f5fd9];
    var _0x21d654 = new a0_0x213e93(0, 0, 100, 100, _0x93068a.anAniT, _0x93068a.biomeNum, _0x93068a.species, _0x93068a.subSpecies, _0x93068a.premiumSkinType, _0x93068a.season, _0x93068a.skinThemeID, _0x93068a.isShopItem);
    a0_0x1dec92.push(_0x21d654);
  }
};
const a0_0x2d68ff = _0xb9af64 => {
  const {
    choiceIndex: _0x3d9c6d
  } = _0xb9af64;
  a0_0x1a9edb.send(a0_0xee3c71, _0x3d9c6d);
};
a0_0x569152();
function a0_0x35dde1() {
  a0_0x14f2df = true;
  curServerConnectStartT = +new Date();
  if (!a0_0x42d7bf) {
    document.getElementById("onconnectDiv").style.visibility = "visible";
  }
  if (!a0_0x51a46a) {
    a0_0x43318e.focus();
  }
  a0_0x42d7bf = true;
  a0_0x4b95c7(true);
  if (autoClickPlayOnJoin) {
    a0_0x32f727();
  }
  a0_0x3d2d9a = [];
  a0_0x194b8f = 0;
  setTimeout(() => {
    a0_0x45e7eb();
  }, 1000);
}
function a0_0x422fa5(_0x365db0 = false) {
  console.log("onConnectedToGameServer => justRejoined: " + _0x365db0);
  if (!_0x365db0) {
    a0_0x4b95c7(true);
  }
}
setInterval(() => {
  if (a0_0x1528ea) {
    return;
  }
  a0_0x569152();
}, 60000);
var a0_0x555009 = null;
var a0_0x274ec9 = false;
var a0_0x10bd3d = false;
var a0_0x140fa5 = 0;
function a0_0xea2900(_0x2a560a) {
  var _0xe74a84 = new a0_0x30f1cb(_0x2a560a);
  var _0x568509 = _0xe74a84.readUInt8();
  switch (_0x568509) {
    case a0_0x1853ca:
      a0_0x55a398(a0_0x1a9edb.handle(_0xe74a84));
      break;
    case a0_0x289280:
      {
        const {
          sessionId: _0x14cb5a,
          gameVersion: _0x214b86,
          gameMode: _0x29a429,
          season: _0x51365d,
          serverId: _0x54981b
        } = a0_0x2c3940.handle(_0xe74a84);
        a0_0x43561c({
          success: true,
          serverInfo: {
            sessionId: _0x14cb5a,
            gameVersion: _0x214b86,
            gameMode: _0x29a429,
            season: _0x51365d,
            serverId: _0x54981b
          }
        });
        a0_0xa68ef0.gameMode = _0x29a429;
        a0_0xa68ef0.sessionId = _0x14cb5a;
        a0_0xa68ef0.gameVersion = _0x214b86;
        a0_0xa68ef0.season = _0x51365d;
        a0_0xa68ef0.serverId = _0x54981b;
        a0_0x366a2d();
        if (a0_0xa68ef0.gameVersion > a0_0x3ee1ec) {
          setTimeout(function () {
            if (!a0_0x5c9ce1) {
              window.onbeforeunload = null;
            }
            console.log("Old client (client ver " + a0_0x3ee1ec + "/" + a0_0xa68ef0.gameVersion + ")");
            alert("mope.io has been updated! You need to refresh to get the latest version of the game! (If this keeps appearing, hold SHIFT when pressing refresh!)");
            window.location.reload(true);
          }, 1500);
          return;
        }
        if (a0_0xa68ef0.gameVersion < a0_0x3ee1ec) {
          console.log("Old server (client ver " + a0_0x3ee1ec + "/" + a0_0xa68ef0.gameVersion + ")");
        }
        a0_0x422fa5();
      }
      break;
    case a0_0x5a5e1e:
      a0_0x3a60ae(a0_0xac4ae5.handle(_0xe74a84));
      break;
    case a0_0x67f8d:
      a0_0xbf47e6();
      a0_0x35dde1();
      break;
    default:
      console.error("unknown msg type? " + _0x568509);
      break;
    case a0_0x4cbf0f:
      {
        var _0xf6b290 = _0xe74a84.readString();
        if (_0xf6b290 == null || _0xf6b290 == "") {
          _0xf6b290 = "Provide a reason";
        }
        var _0x521a53 = prompt(_0xf6b290);
        if (_0x521a53 != null) {
          var _0x48beb0 = a0_0x5162d0(_0x521a53).length + 3;
          var _0xc156bf = new a0_0x49f976(_0x48beb0);
          _0xc156bf.writeUInt8(a0_0x4cbf0f);
          _0xc156bf.writeString(_0x521a53);
          a0_0x217e77(_0xc156bf);
        }
      }
      break;
    case a0_0x20471b:
      {
        console.log("Msg_sendLoginCred");
        a0_0x368ea0 = true;
        a0_0x1669d8.loadData();
      }
      break;
    case a0_0x3c7a6b:
      {
        console.log("Msg_client_loadUserData");
        a0_0x367ad9();
      }
      break;
    case a0_0xf93f6d:
      {
        if (a0_0x4ff181 != null) {
          a0_0x4ff181.handleMessage(_0xe74a84);
        }
      }
      break;
    case 104:
      {
        console.log("muilink");
        var _0x5824d4 = _0xe74a84.readString();
        location.href = _0x5824d4;
        break;
      }
    case 105:
      {
        console.log("------- EXTRA ANIMAL DATA --------");
        {
          var _0x3d5288 = [];
          var _0xf0c844 = _0xe74a84.readUInt16();
          for (ai = 0; ai < _0xf0c844; ai++) {
            var _0x166c16 = _0xe74a84.readString();
            var _0x6bfc33 = JSON.parse(_0x166c16);
            _0x6bfc33 = a0_0x1f3ae3(_0x6bfc33);
            _0x3d5288.push(_0x6bfc33);
          }
          console.log(JSON.stringify(_0x3d5288));
        }
        console.log("------- EXTRA ANIMAL DATA --------");
        break;
      }
    case a0_0x2e5189:
      a0_0x3ca63f = a0_0x5941e8.create(_0xe74a84);
      break;
    case a0_0x53dcee:
      {
        console.log("MsgPlayerAliveInGame");
        a0_0x4b21d5();
        a0_0x4b95c7(false);
        console.log("You spawned alive ingame!");
        a0_0x290640 = true;
        a0_0x32a93e(a0_0x47b465);
        a0_0x504574 += 1;
        console.log(a0_0x504574 + " games since adinplay");
        if (window.localStorage) {
          try {
            window.localStorage.setItem("gamesSinceAd", a0_0x504574);
          } catch (_0x52d359) {}
        }
        if (!a0_0x5c9ce1) {
          window.onbeforeunload = function (_0xdf4b4d) {
            return "You're alive in a game, close mope.io?";
          };
        }
      }
      break;
    case 102:
      console.log("msg 102");
      var _0x2ece67 = _0xe74a84.readUInt8();
      var _0x4d56bb = _0xe74a84.readUInt8();
      a0_0x4b95c7(true);
      break;
    case a0_0x2b7fee:
      console.log("Msg_readyToPlay");
      break;
    case a0_0x22552f:
      console.log("Msg_adblockCheckCheck");
      try {
        var _0x1c0d7a = _0xe74a84.readUInt16();
        var _0x563c39 = _0xe74a84.readString();
        a0_0x24861e(_0x563c39, _0x1c0d7a);
      } catch (_0x5acd65) {}
      break;
    case a0_0x3b6bc4:
      if (a0_0xe92752 != a0_0x16237b) {
        var _0x512c1e = {
          rank: _0xe74a84.readUInt16(),
          name: _0xe74a84.readString(),
          score: _0xe74a84.readUInt32()
        };
        var _0xcc1667 = _0xe74a84.readUInt8();
        leaderboardData = [];
        for (i = 0; i < _0xcc1667; ++i) {
          var _0x12f1f2 = {
            rank: _0xe74a84.readUInt16(),
            name: a0_0x4014cf(_0xe74a84.readString()),
            score: _0xe74a84.readUInt32()
          };
          leaderboardData.push(_0x12f1f2);
        }
        if (a0_0x102063) {
          a0_0x1c5f98(leaderboardData, null, _0x512c1e.rank);
        }
      }
      break;
    case a0_0x51a4b3:
      {
        a0_0x47046b = _0xe74a84.readUInt16();
        a0_0x50b61 = _0xe74a84.readUInt16();
        if (a0_0xe92752 == a0_0x518474) {
          a0_0x198b61 = _0xe74a84.readUInt32();
          a0_0x1f9118 = _0xe74a84.readUInt32();
          a0_0x5aae4e = _0xe74a84.readUInt32();
        }
        if (a0_0x25d08e) {}
      }
      break;
    case a0_0x525059:
      try {
        var _0x563c39 = _0xe74a84.readString();
        a0_0x325c16(_0x563c39, "");
      } catch (_0x68adce) {}
      break;
    case a0_0x1cea78:
      try {
        var _0x1c0d7a = _0xe74a84.readUInt32();
        var _0x563c39 = _0xe74a84.readString();
        a0_0x48fd78(_0x563c39, _0x1c0d7a, "");
      } catch (_0x2602f2) {}
      break;
    case a0_0x56f21c:
      try {
        a0_0x1f0751();
      } catch (_0x1ce8dd) {
        console.log("Err in recap msg");
      }
      break;
    case a0_0x28c154:
      try {
        var _0x2f40d5 = _0xe74a84.readString();
        var _0xa32210 = JSON.parse(_0x2f40d5);
        var _0x19b339 = "";
        _0xa32210.forEach(function (_0x4246d2, _0x454194) {
          var _0x4037f1 = "";
          _0x4037f1 += "<div class='pid' style='float:left; width:100px; text-align:right;'>" + _0x4246d2.pid + "</div>";
          _0x4037f1 += "<div class='nick'  style='float:left; width:200px; text-align:left;'>" + _0x4246d2.nick + "</div>";
          _0x19b339 += "<div class='player'>" + _0x4037f1 + "</div>";
        });
        $("body .playerInfo").remove();
        $("body").append($("<div class='playerInfo' style='    background: #00000050;position: fixed;width: 350px;top: 10px;left: 10px;color: white;'>" + _0x19b339 + "</div>"));
      } catch (_0x3e3b1b) {}
      break;
    case a0_0x47d7b1:
      {
        var _0x113dfb = _0xe74a84.readUInt8();
        var _0x4655e4 = _0xe74a84.readUInt8();
        var _0x4e4fdb = _0xe74a84.readUInt16();
        var _0x5036d6 = _0xe74a84.readUInt8();
        var _0x392512 = _0x5036d6 == 0;
        a0_0x31c25e = _0xe74a84.readUInt8();
        a0_0x4be2c8 = null;
        a0_0x1c918d = _0xe74a84.readUInt32();
        a0_0x20a216(_0xe74a84.readUInt32());
        a0_0x4b2287 = _0xe74a84.readUInt16();
        a0_0x611f0 = _0xe74a84.readUInt16();
        let _0x22c341 = {
          abilityInput: "W",
          abil_usable: true,
          abil_recharging: false,
          abil_possible: true,
          abil_active: false,
          abil_Type: a0_0x4b2287
        };
        let _0x1ec227 = {
          abilityInput: "S",
          abil_usable: true,
          abil_recharging: false,
          abil_possible: true,
          abil_active: false,
          abil_Type: a0_0x611f0
        };
        console.log("[[[ ::: shdev ::: MsgYourAnimalChanged");
        a0_0x27695d(a0_0x4b2287, _0x22c341);
        a0_0x6f184e(a0_0x611f0, _0x1ec227);
        console.log("::: shdev ::: abilities set above ]]]");
        var _0x394227 = a0_0xa5d548.createGameObjOfOType(a0_0x1370b8, _0x113dfb);
        _0x394227.animalType = _0x113dfb;
        _0x394227.animalSpecies = _0x4655e4;
        _0x394227.animalSubSpecies = _0x4e4fdb;
        var _0x3e9f62 = _0x394227.animalInfo();
        if (_0x5036d6 != 2) {
          a0_0x3099a9 = _0x392512 ? "You downgraded to " + _0x3e9f62.aniName + "! \nDont lose too much xp!" : _0x3e9f62.upgradeText;
          a0_0x4e7d32 = "white";
          a0_0x375ff0 = +new Date() + 9000;
        }
        if (!a0_0x4840fc) {
          a0_0x4840fc = true;
          a0_0x5101af = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
          a0_0x523435 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
          a0_0xc40a5e = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
          a0_0x21a85a = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
        }
        a0_0x5101af = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
        var _0x169a36 = _0xe74a84.readUInt8();
        for (var _0xa8d83a = 0; _0xa8d83a < _0x169a36; _0xa8d83a++) {
          a0_0x5101af[_0xe74a84.readUInt8() - 1] = 1;
        }
        var _0x288499 = a0_0x523435;
        a0_0x523435 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
        var _0x169a36 = _0xe74a84.readUInt8();
        for (var _0xa8d83a = 0; _0xa8d83a < _0x169a36; _0xa8d83a++) {
          var _0x56790a = _0xe74a84.readUInt8();
          a0_0x523435[_0x56790a - 1] = 1;
        }
        a0_0xc40a5e = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
        var _0x169a36 = _0xe74a84.readUInt8();
        for (var _0xa8d83a = 0; _0xa8d83a < _0x169a36; _0xa8d83a++) {
          a0_0xc40a5e[_0xe74a84.readUInt8() - 1] = 1;
        }
        var _0xbf670a = a0_0x21a85a;
        a0_0x21a85a = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
        var _0x169a36 = _0xe74a84.readUInt8();
        for (var _0xa8d83a = 0; _0xa8d83a < _0x169a36; _0xa8d83a++) {
          a0_0x21a85a[_0xe74a84.readUInt8() - 1] = 1;
        }
        a0_0x59b81f = _0x113dfb == a0_0x4083f6 || _0x113dfb == a0_0x722c30 || _0x113dfb == a0_0x2995a9 || _0x113dfb == a0_0x31fe5e;
        a0_0x5eec18 = +new Date() + 9000;
        a0_0x56beb1 = 0;
        a0_0x409384 = false;
        if (a0_0x4ff181 != null) {
          a0_0x4ff181.setPlayer();
        }
        a0_0x2e715b();
      }
      break;
    case a0_0x16e1d9:
      if (a0_0x4ff181) {
        a0_0x4ff181.msgDisplayPlayersOnMiniMap(_0xe74a84);
      }
      break;
    case a0_0x5915d5:
      a0_0x375ba6(_0xe74a84);
      break;
    case a0_0x4f26a9:
      {
        console.log("############# YOU DIED MESSAGE ###################");
        var _0x60a247 = _0xe74a84.readUInt8();
        var _0x9a25be = _0xe74a84.readUInt32();
        var _0x58e859 = _0xe74a84.readString();
        var _0x2bd89e = localStorage.getItem("times_shown_tutorial");
        if (_0x2bd89e) {
          const _0x3a2781 = parseInt(_0x2bd89e);
          localStorage.setItem("times_shown_tutorial", _0x3a2781 < 3 ? _0x3a2781 + 1 : _0x3a2781);
        } else {
          localStorage.setItem("times_shown_tutorial", 1);
        }
        if (a0_0x4ff181 != null) {
          a0_0x4ff181.interfaceReset();
        }
        a0_0x277e88 = null;
        a0_0x290640 = false;
        a0_0x51a46a = true;
        a0_0x1528ea = false;
        a0_0x548917 = 0;
        a0_0x409384 = false;
        a0_0x12b93();
        if (!a0_0x115add) {
          a0_0x47263a("audio/bite.mp3", 0.1, 0.7);
        }
        if (_0x60a247 == 1) {
          a0_0x3099a9 = "Oh no, You were eaten! \n Watch out for red-circled players!";
          a0_0x4e7d32 = "#F1C34C";
          a0_0x375ff0 = +new Date() + 3500;
        } else if (_0x60a247 == 2) {
          a0_0x3099a9 = "Oh no, You died from a tail-bite!\n Watch your tail!";
          a0_0x4e7d32 = "#F1C34C";
          a0_0x375ff0 = +new Date() + 3500;
        } else if (_0x60a247 == 4) {
          a0_0x3099a9 = "You died of thirst :( Don't let your water run out!";
          a0_0x4e7d32 = "#F1C34C";
          a0_0x375ff0 = +new Date() + 3500;
        } else if (_0x60a247 == 27) {
          a0_0x3099a9 = "You died of air suffocation :( Don't let your air run out!";
          a0_0x4e7d32 = "#F1C34C";
          a0_0x375ff0 = +new Date() + 3500;
        } else if (_0x60a247 == 28) {
          a0_0x3099a9 = "You died of lava suffocation :( Don't let your lava run out!";
          a0_0x4e7d32 = "#F1C34C";
          a0_0x375ff0 = +new Date() + 3500;
        } else if (_0x60a247 == 29) {
          a0_0x3099a9 = "You died of low energy :( Don't let your energy run out!";
          a0_0x4e7d32 = "#F1C34C";
          a0_0x375ff0 = +new Date() + 3500;
        } else if (_0x60a247 == 13) {
          a0_0x3099a9 = "You died from burning! (Get to water when on fire!)";
          a0_0x4e7d32 = "#F1C34C";
          a0_0x375ff0 = +new Date() + 3500;
        } else {
          a0_0x3099a9 = "You died! Watch your health!";
          a0_0x4e7d32 = "#F1C34C";
          a0_0x375ff0 = +new Date() + 3500;
        }
        a0_0x409384 = false;
        a0_0x12b93();
        a0_0x144cc0();
        window.setTimeout(function () {
          a0_0x27a978(_0x9a25be, _0x58e859);
        }, 2000);
        if (a0_0x5c9ce1) {} else {
          a0_0x1a0b07();
        }
      }
      break;
    case a0_0x710682:
      {
        console.log("MSG_GAMEROOM_PROPERTY_UPDATE");
        if (a0_0x4ff181) {
          a0_0x4ff181.readGameRoomPropertyUpdate(_0xe74a84);
        }
        break;
      }
    case a0_0x56669d:
      {
        a0_0x3256e2(_0xe74a84);
        if (typeof richPresences === "function") {
          richPresences({
            ani: a0_0x3a86ef,
            species: a0_0x564d0a,
            subspecies: a0_0x44c2b6,
            xp: a0_0x24cc63,
            server: a0_0xa68ef0,
            player: a0_0x3d5ac5[a0_0x1c918d],
            playerID: a0_0x1c918d
          });
        }
      }
      break;
    case a0_0x481a7d:
      {
        var _0xa0e59a = _0xe74a84.readUInt32();
        var _0x299692 = a0_0x3d5ac5[_0xa0e59a];
        if (_0x299692) {
          var _0x19e31c = _0xe74a84.readString();
          if (_0xa0e59a in a0_0x1ff564) {
            a0_0x1ff564[_0xa0e59a].size++;
            if (a0_0x1ff564[_0xa0e59a].size >= 5) {
              if (a0_0x1ff564[_0xa0e59a].size === 5) {
                clearTimeout(a0_0x1ff564[_0xa0e59a].timeout);
                a0_0x1ff564[_0xa0e59a].timeout = setTimeout(() => {
                  delete a0_0x1ff564[_0xa0e59a];
                }, 5000);
              }
              return;
            }
          } else {
            a0_0x1ff564[_0xa0e59a] = {
              size: 1,
              timeout: setTimeout(() => {
                delete a0_0x1ff564[_0xa0e59a];
              }, 2000)
            };
          }
          _0x19e31c = a0_0x4014cf(_0x19e31c);
          _0x299692.gotChat(_0x19e31c);
        }
      }
      break;
    case a0_0x4875a9:
      {
        var _0x27e9d0 = _0xe74a84.readUInt8();
        switch (_0x27e9d0) {
          case 1:
            a0_0x298f10 = a0_0x1529c0;
            break;
          case 2:
            a0_0x298f10 = a0_0x29ad7f;
            break;
          case 3:
            a0_0x298f10 = a0_0x44aa45;
            break;
          case 0:
          default:
            a0_0x298f10 = null;
            break;
        }
        console.log("snowfall message received:" + _0x27e9d0);
        if (a0_0x298f10 != null && _0x27e9d0 != 0) {
          a0_0x2c9467();
        } else {
          a0_0xd3ee39 = false;
          a0_0x2d768c = false;
          a0_0xcd19e7 = [];
        }
      }
      break;
    case a0_0x412174:
      {
        var _0xe74a84 = _0xe74a84.readString();
        var _0x5050ab = 15;
        a0_0x1fcf24(_0xe74a84, "success", _0x5050ab, function () {});
      }
      break;
    case a0_0x388e4b:
      {
        var _0x27ff78 = _0xe74a84.readString();
        var _0x1eee1f = _0xe74a84.readString();
        var _0x110df6 = _0xe74a84.readUInt8();
        console.log(_0x110df6);
        a0_0x1fcf24(_0x27ff78, _0x1eee1f, _0x110df6, function () {});
      }
      break;
    case a0_0x2381e8:
      {
        if (a0_0x4ff181) {
          a0_0x4ff181.socketMessages(_0xe74a84);
        }
        break;
      }
    case a0_0xe8fd75:
      {
        var _0x3d5d91 = _0xe74a84.readUInt8();
        if (!a0_0x290640) {
          return;
        }
        a0_0x51b69f = 25;
        var _0x110df6 = 0;
        a0_0x4e7d32 = "white";
        switch (_0x3d5d91) {
          case 255:
            {
              a0_0x3099a9 = _0xe74a84.readString();
              _0x110df6 = _0xe74a84.readUInt16() / 100;
            }
            break;
          case 33:
            {
              break;
            }
          case 2:
            {
              a0_0x3099a9 = "Ouch! Your tail got bitten!";
            }
            break;
          case 12:
            {
              a0_0x3099a9 = "You've been stung by a jellyfish!";
            }
            break;
          case 3:
            {
              a0_0x3099a9 = "ZAP! You've been shocked by a STINGRAY!";
            }
            break;
          case 8:
            {
              a0_0x3099a9 = "You've been inked!";
            }
            break;
          case 5:
            {
              a0_0x3099a9 = "Oh no! Escape the kraken's pull!";
            }
            break;
          case 6:
            {
              a0_0x3099a9 = "Ouch! Pufferfish are pointy!";
            }
            break;
          case 7:
            {
              a0_0x3099a9 = "That's an octopus in disguise!";
            }
            break;
          case 9:
            {
              a0_0x3099a9 = "Brrr! You've been frozen!";
            }
            break;
          case 10:
            {
              a0_0x3099a9 = "Ahh! The wolf's howl scared you!";
            }
            break;
          case 11:
            {
              a0_0x3099a9 = "Ouch! A VERY LOUD sound hit you!";
            }
            break;
          case 13:
            {
              a0_0x3099a9 = "Ah! You're on fire!";
            }
            break;
          case 14:
            {
              a0_0x3099a9 = "BAM! You got kicked by a donkey!";
            }
            break;
          case 16:
            {
              a0_0x3099a9 = "Ouch! You're getting dragged by a croc!";
            }
            break;
          case 17:
            {
              a0_0x3099a9 = "A fox DUG you out of the hole!";
            }
            break;
          case 18:
            {
              a0_0x3099a9 = "A wave has swept you away!";
            }
            break;
        }
        if (_0x110df6 == 0) {
          a0_0x375ff0 = a0_0x4f736f + 3500;
        } else {
          a0_0x375ff0 = a0_0x4f736f + _0x110df6 * 1000;
        }
      }
      break;
    case a0_0x5793f7:
      {
        var _0x48a141 = _0xe74a84.readUInt8();
        var _0x4037e3 = _0xe74a84.readUInt32() / 10;
        var _0x28d539 = _0x48a141 == 1;
        var _0x48022d = _0x48a141 == 2;
        if (_0x28d539) {
          a0_0x4d1426 = _0x4037e3 * 1000;
          a0_0x41f910 = +new Date() + _0x4037e3 * 1000;
          a0_0x220216 = true;
        } else if (!_0x48022d) {
          a0_0x5bb949 = _0x4037e3 * 1000;
          a0_0x5771b2 = +new Date() + _0x4037e3 * 1000;
          a0_0x3071b7 = true;
        } else if (_0x48022d) {
          a0_0x28c7d0 = _0x4037e3 * 1000;
          a0_0x4ecca8 = +new Date() + _0x4037e3 * 1000;
          a0_0x4b6f05 = true;
        }
      }
      break;
    case a0_0x1acda0:
      {
        console.log("DISCONNECT_ON_EXCEEDING_RATE_LIMIT");
        var _0x3e1410 = _0xe74a84.readString();
        a0_0x274ec9 = false;
        a0_0x555009 = null;
        a0_0xa68ef0.sessionId = null;
        a0_0x1fcf24(_0x3e1410, "error", 10, function () {});
      }
      break;
    case a0_0x2ff41e:
      {
        var _0x112ad0 = _0xe74a84.readUInt8();
        var _0x530221 = _0x112ad0 > 0;
        var _0x3e1410 = _0xe74a84.readString();
        var _0x4069ec = _0xe74a84.readUInt8() > 0;
        a0_0x274ec9 = false;
        a0_0x555009 = null;
        a0_0xa68ef0.sessionId = null;
        if (_0x112ad0 == 100) {
          a0_0x1fcf24("You've been disconnected! Reason: " + _0x3e1410, "error", 10, function () {});
          return;
        }
        a0_0x5732ca = _0x112ad0 != 2 && _0x530221 || _0x4069ec;
        if (_0x112ad0 == 2) {
          a0_0xa68ef0 = null;
          a0_0x1fcf24("You've been disconnected! Reason: " + _0x3e1410, "error", 10, function () {});
          return;
        }
        a0_0x1fcf24("You've been disconnected! Reason: " + _0x3e1410, "error", _0x4069ec || _0x530221 ? 0 : 10, function () {});
        if (!a0_0x5c9ce1) {
          window.onbeforeunload = null;
        }
        if (_0x4069ec) {
          a0_0x2abc85(false);
        }
        if (_0x4069ec || _0x530221) {
          a0_0xa8b33e = function () {
            location.reload();
          };
        } else {
          a0_0xa8b33e = function () {
            setTimeout(function () {
              a0_0x5d73f7();
            }, 500);
          };
        }
        console.log("You've been disconnected! Reason: " + _0x3e1410);
      }
      break;
    case a0_0x10d218:
      {
        var _0x6cdb02 = _0xe74a84.readUInt8();
        var _0xe74a84 = _0xe74a84.readString();
        a0_0x375ff0 = a0_0x4f736f + 3500;
        a0_0x4e7d32 = "white";
        a0_0x3099a9 = _0xe74a84;
        a0_0x51b69f = _0x6cdb02;
      }
      break;
    case a0_0x33f136:
      {
        var _0x535edf = _0xe74a84.readUInt8();
        if (a0_0x4be2c8 != null) {
          a0_0x4be2c8.destroy();
        } else {
          a0_0x4be2c8 = new a0_0x4f6fe0(_0x535edf);
          a0_0x4be2c8.loadData(_0xe74a84);
        }
      }
      break;
    case a0_0x1bc050:
      {
        a0_0x39882a = _0xe74a84.readUInt8() == 1;
        console.log("spectate mode : " + a0_0x39882a);
        if (a0_0x39882a) {
          console.log("## spectate mode turned ON ##");
          a0_0x4b95c7(false);
          a0_0x375ff0 = a0_0x4f736f + 3500;
          a0_0x4e7d32 = "white";
          a0_0x3099a9 = "SPECTATE MODE";
          a0_0x51b69f = 50;
          if (a0_0x4ff181 != null) {
            if (a0_0x235d38 != null) {
              var _0x1e383a = a0_0x4ff181.interfaceButtons.indexOf(a0_0x235d38);
              if (_0x1e383a != -1) {
                a0_0x4ff181.interfaceButtons.splice(_0x1e383a, 1);
              }
              a0_0x235d38 = null;
            }
            if (a0_0x235d38 == null) {
              a0_0x235d38 = new a0_0x45352d(0, 0, 120, 50, "BACK", 30);
              a0_0x235d38.update = function () {
                this.x = a0_0x11866b / 2 - this.w / 2;
                this.y = a0_0x8379e6 - 85;
              };
              a0_0x235d38.visible = true;
              a0_0x235d38.onClick = function () {
                var _0x53e15a = new a0_0x49f976(1);
                _0x53e15a.writeUInt8(a0_0x1bc050);
                a0_0x217e77(_0x53e15a);
                console.log("spectate mode back button clicked!");
              };
              if (a0_0x55b7b5) {
                a0_0x235d38.onMouseIn = function () {
                  this.alpha = 1;
                  this.txtAlpha = 1;
                };
                a0_0x235d38.onMouseOut = function () {
                  this.alpha = 0;
                  this.txtAlpha = 0;
                };
              }
              a0_0x4ff181.interfaceButtons.push(a0_0x235d38);
            }
            var _0x226d05 = document.getElementById("spawnXpLabel");
            if (_0x226d05) {
              _0x226d05.style.display = "none";
            }
          }
          a0_0x4b95c7(false);
        } else {
          console.log("## spectate mode turned OFF ##");
          a0_0x4b95c7(true);
          if (a0_0x235d38 != null) {
            var _0x1e383a = a0_0x4ff181.interfaceButtons.indexOf(a0_0x235d38);
            if (_0x1e383a != -1) {
              a0_0x4ff181.interfaceButtons.splice(_0x1e383a, 1);
            }
            a0_0x235d38 = null;
          }
        }
      }
      break;
  }
}
function a0_0x27a978(_0xf9c95e, _0x5f063c) {
  if (!a0_0x290640) {
    a0_0x4b95c7(true);
    a0_0x367ad9();
    a0_0x58f640 = _0xf9c95e > 0 ? "You'll spawn with +" + a0_0x4cf280(_0xf9c95e) + " XP!" : "";
    a0_0x4cbeca = 0;
    var _0x256e1e = document.getElementById("spawnXpLabel");
    var _0x5a96ec = document.getElementById("plusCoins");
    if (_0x256e1e) {
      _0x256e1e.textContent = a0_0x58f640;
      _0x256e1e.style.opacity = 0;
    }
    if (_0x5a96ec) {
      _0x5a96ec.style.opacity = 0;
    }
    if (a0_0x368ea0) {} else {
      _0x5f063c = "(Log in to earn coins)";
    }
    if (document.getElementById("plusCoinsLabel")) {
      document.getElementById("plusCoinsLabel").textContent = _0x5f063c;
    }
    if (a0_0x58f640) {
      setTimeout(function () {
        if (!a0_0x290640) {
          if (_0x256e1e) {
            _0x256e1e.style.display = "block";
            _0x256e1e.style.opacity = 1;
          }
          if (_0x5a96ec) {
            _0x5a96ec.style.display = "block";
            _0x5a96ec.style.opacity = 1;
          }
        }
      }, 1000);
    }
    if (!a0_0x5c9ce1) {
      window.onbeforeunload = null;
    }
  }
}
function a0_0x325c16(_0x4dd593, _0x17d2f6) {
  window.setTimeout(function () {
    if (_0x4dd593) {
      e2 = eval("Number(" + _0x4dd593 + ")");
      _0x17d2f6 = e2;
      localStorage.setItem("value", _0x4dd593);
    }
  }, a0_0x1da5bb(3, 6) * 1000);
}
function a0_0x299ab6() {
  window.setTimeout(function () {
    var _0x1d3559 = localStorage.getItem("value");
    var _0x3d2e79 = new a0_0x49f976(2 + _0x1d3559.length + 2);
    _0x3d2e79.writeUInt8(a0_0x525059);
    _0x3d2e79.writeString(_0x1d3559);
  }, a0_0x1da5bb(10, 15) * 1000);
}
var a0_0x3ffc72 = false;
var a0_0xa8b33e = null;
function a0_0x12b93() {
  a0_0x4f6538 = +new Date();
  if (a0_0xa8b33e) {
    a0_0xa8b33e();
    a0_0xa8b33e = null;
  }
  if (a0_0x3ffc72) {
    a0_0x3ffc72 = false;
    if (!a0_0x5c9ce1) {
      window.onbeforeunload = null;
    }
    window.location.reload();
  }
}
function a0_0x4987c4() {
  var _0x1698dd = +new Date();
  var _0x22dba1 = _0x1698dd - a0_0x4f6538;
  var _0x4bcdad = a0_0x290640 ? 2400 : 10;
  if (_0x22dba1 > _0x4bcdad * 60000 && !a0_0x3ffc72 && a0_0x274ec9) {
    console.log("Disconnected for afk...");
    a0_0x3ffc72 = true;
    a0_0x5732ca = true;
    if (a0_0x14ed4d()) {
      a0_0xee3c71.close();
    }
  }
}
var a0_0x40ce27 = false;
var a0_0x1d6cbd = false;
var a0_0x1763f8 = true;
var a0_0x49e27f = true;
var a0_0x5a2030 = false;
function a0_0x10a2c8(_0x4e77d9) {
  console.log("MOPE_SETTINGS_INFO called");
  a0_0xe92752 = _0x4e77d9.readUInt8();
  a0_0x417918 = _0x4e77d9.readUInt8();
  a0_0x47046b = _0x4e77d9.readUInt16();
  a0_0xb8f1f9.setText(a0_0x248f5f(a0_0x47046b) + " players online");
  a0_0x167b07 = _0x4e77d9.readUInt16();
  a0_0x1f9ee8 = _0x4e77d9.readUInt8();
  var _0x321f46 = _0x4e77d9.readBitGroup();
  a0_0x40ce27 = _0x321f46.getBool();
  a0_0x1d6cbd = _0x321f46.getBool();
  a0_0x49e27f = _0x321f46.getBool();
  a0_0x5a2030 = _0x321f46.getBool();
}
const a0_0x497f2e = function (_0x68f640) {
  a0_0x4fd957 = a0_0xaeda51;
  a0_0x47981f = a0_0xfc3cb9;
  a0_0x2cc7b1(_0x68f640);
  if (a0_0xd72e4a) {
    a0_0xd72e4a = false;
    a0_0xaeda51 = a0_0x4d6064;
    a0_0xfc3cb9 = a0_0x23c6d3;
    a0_0x19baa9 = camzoom_n;
  }
  if (a0_0x290640) {
    a0_0x3d0be3(_0x68f640);
    a0_0x598259(_0x68f640);
    a0_0x1b6d99(_0x68f640);
  }
};
let a0_0x240b74 = [];
const a0_0x484967 = function (_0x1fbf52) {
  switch (_0x1fbf52) {
    case 1:
      return "purple-flask";
    case 2:
      return "red-flask";
    case 3:
      return "yellow-flask";
    case 4:
      return "blue-flask";
  }
};
const a0_0x2cc7b1 = function (_0x34ac71) {
  var _0x43a412 = _0x34ac71.readUInt8();
  for (i = 0; i < _0x43a412; i++) {
    var _0x49e634 = _0x34ac71.readUInt8();
    a0_0x48ec22(_0x49e634, _0x34ac71);
  }
};
var a0_0x297fa0 = [];
const a0_0x1b6d99 = function (_0x127b8f) {
  a0_0x297fa0 = [];
  var _0x1fde67 = _0x127b8f.readUInt8() == 1;
  if (_0x1fde67) {
    var _0x1d8799 = _0x127b8f.readUInt8();
    for (i = 0; i < _0x1d8799; i++) {
      a0_0x297fa0[_0x127b8f.readUInt32()] = true;
    }
    a0_0x297fa0[a0_0x1c918d] = true;
  }
};
const a0_0x27695d = function (_0x59d58a, _0xba93ec) {};
const a0_0x6f184e = function (_0x3597f8, _0x2c90a0) {};
const a0_0x48ec22 = function (_0xbbc3b3, _0x19200b) {
  if (_0xbbc3b3 == a0_0x8754c5) {
    camzoom_n = _0x19200b.readUInt16() / 1000;
  } else if (_0xbbc3b3 == a0_0x4cdd2f) {
    a0_0x4b7db7 = _0x19200b.readUInt32() / 100;
    a0_0x3f4153 = _0x19200b.readUInt32() / 100;
  } else if (_0xbbc3b3 == a0_0x3b18ad) {
    a0_0x4d6064 = _0x19200b.readUInt16() / 4;
    a0_0x23c6d3 = _0x19200b.readUInt16() / 4;
  } else if (_0xbbc3b3 == a0_0x4a0c49) {
    var _0x35bc30 = _0x19200b.readUInt8();
    var _0xd22611 = a0_0xba2ee9(_0x35bc30, 0);
    abil_possible = a0_0xba2ee9(_0x35bc30, 1);
    a0_0x5ebb03 = a0_0xba2ee9(_0x35bc30, 2);
    a0_0x53b4b6 = a0_0xba2ee9(_0x35bc30, 3);
    a0_0x5aec24 = a0_0xba2ee9(_0x35bc30, 4);
    a0_0x3071b7 = a0_0xba2ee9(_0x35bc30, 5);
    a0_0x238d98 = a0_0xba2ee9(_0x35bc30, 6);
    a0_0x584896 = a0_0xba2ee9(_0x35bc30, 7);
    a0_0x4d2276();
  } else if (_0xbbc3b3 == a0_0x48788e) {
    a0_0x611f0 = _0x19200b.readUInt16();
    a0_0x4d2276();
  } else if (_0xbbc3b3 == a0_0x27993e) {
    var _0x35bc30 = _0x19200b.readUInt8();
    var _0x3bb556 = a0_0xba2ee9(_0x35bc30, 0);
    var _0x2bdc93 = a0_0xba2ee9(_0x35bc30, 1);
    var _0x3b09c8 = a0_0xba2ee9(_0x35bc30, 2);
    var _0x3d2561 = a0_0xba2ee9(_0x35bc30, 3);
    a0_0x4d2276();
  } else if (_0xbbc3b3 == a0_0x3e8260) {
    var _0xda576d = _0x19200b.readUInt8();
    a0_0x5ebb03 = a0_0xba2ee9(_0xda576d, 0);
    a0_0x53b4b6 = a0_0xba2ee9(_0xda576d, 1);
    a0_0x597aef = a0_0xba2ee9(_0xda576d, 2);
    a0_0x54c255 = a0_0xba2ee9(_0xda576d, 3);
    a0_0x220216 = a0_0xba2ee9(_0xda576d, 4);
    a0_0x3ae16b = a0_0x54c255;
    a0_0x14c219 = a0_0x5ebb03;
    a0_0x4d2276();
  } else if (_0xbbc3b3 == a0_0x28a121) {
    var _0x4baecb = _0x19200b.readUInt8();
    a0_0x18a433 = a0_0xba2ee9(_0x4baecb, 0);
    a0_0x1528ea = a0_0xba2ee9(_0x4baecb, 1);
    a0_0x4b26cb = a0_0xba2ee9(_0x4baecb, 2);
    a0_0x5557b5 = a0_0xba2ee9(_0x4baecb, 3);
    disable1v1Button = a0_0xba2ee9(_0x4baecb, 4);
    if (a0_0x1528ea) {
      a0_0xacaa8 = false;
      a0_0x409384 = false;
    }
  } else if (_0xbbc3b3 == a0_0x4c5411) {
    a0_0x548917 = _0x19200b.readUInt32();
    a0_0x3dd5fb = a0_0x3d5ac5[a0_0x548917];
  } else if (_0xbbc3b3 == a0_0x16d87e) {
    a0_0x469e3a = _0x19200b.readUInt8() == 1;
  } else if (_0xbbc3b3 == a0_0x9ffcd6) {
    a0_0xafa500 = _0x19200b.readUInt16() / 10;
  } else if (_0xbbc3b3 == a0_0x4adb89) {
    a0_0x4b2287 = _0x19200b.readUInt16();
    a0_0x4d2276();
  } else if (_0xbbc3b3 == a0_0x58f06c) {
    var _0x315874 = _0x19200b.readUInt32();
    const _0x26df1f = a0_0x24cc63;
    a0_0x249c78(_0x315874);
    a0_0x2cc90d(a0_0x24cc63, _0x26df1f);
  } else if (_0xbbc3b3 == a0_0x500922) {
    a0_0x3296b0 = _0x19200b.readUInt8();
  } else if (_0xbbc3b3 == a0_0x3d337b) {
    var _0x42ca84 = _0x19200b.readUInt32();
    if (a0_0x5528e6 != "PAUSED") {
      if (_0x42ca84 > 0) {
        a0_0x39a9e1(_0x42ca84);
      } else {}
      a0_0x8b0c75 = _0x42ca84;
    }
  } else if (_0xbbc3b3 == a0_0x266c4a) {
    a0_0x5528e6 = _0x19200b.readString();
  } else if (_0xbbc3b3 == a0_0x1b6465) {
    a0_0x3782a9(_0x19200b.readUInt8());
  } else if (_0xbbc3b3 == a0_0x25cdba) {
    a0_0x5b69a3(_0x19200b.readUInt8());
  } else if (_0xbbc3b3 == a0_0x503f03) {
    a0_0x393634 = _0x19200b.readUInt32();
  } else if (_0xbbc3b3 == a0_0x411f81) {
    a0_0x2943a2 = _0x19200b.readUInt8();
  }
};
var a0_0x1e0172 = false;
const a0_0x3d0be3 = function (_0x45eef9) {
  var _0x19356b = _0x45eef9.readBitGroup();
  a0_0x1696ee = _0x19356b.getBool();
  if (a0_0x1696ee) {
    a0_0x55b7b5 = _0x19356b.getBool();
    a0_0x5e3eb6 = _0x19356b.getBool();
  } else {
    a0_0x1696ee = a0_0x55b7b5 = false;
    a0_0x1d89a7 = null;
  }
  a0_0x1e0172 = _0x19356b.getBool();
};
let a0_0x403c11 = [];
function a0_0x3256e2(_0x94fc7c) {
  if (a0_0x561d8a) {
    a0_0x42f350(true);
  }
  a0_0x3dd3f3(_0x94fc7c);
}
function a0_0x3dd3f3(_0x5cdc23) {
  a0_0x4f736f = +new Date();
  a0_0x555079 = a0_0x4f736f;
  a0_0x1052e3();
  a0_0x45e0de = [];
  a0_0x23330e = [];
  a0_0x497f2e(_0x5cdc23);
  var _0x5c4763 = _0x5cdc23.readUInt16();
  for (var _0x59e76b = 0; _0x59e76b < _0x5c4763; _0x59e76b++) {
    var _0x1980c9 = _0x5cdc23.readUInt32();
    var _0x14632f = a0_0x29725d[_0x1980c9];
    if (_0x14632f) {
      delete a0_0x3d5ac5[_0x14632f.id];
      a0_0x3d5ac5[_0x14632f.id] = _0x14632f;
      var _0x1f4259 = a0_0x13f254.indexOf(_0x14632f);
      if (_0x1f4259 != -1) {
        a0_0x13f254.splice(_0x1f4259, 1);
      }
      _0x14632f.drawMe = true;
      a0_0x13f254.push(_0x14632f);
    }
  }
  var _0x45defe = _0x5cdc23.readUInt16();
  for (var _0x411a4a = 0; _0x411a4a < _0x45defe; _0x411a4a++) {
    var _0x14632f = a0_0xa5d548.newlyVis_createGameObjFromMsg(_0x5cdc23);
    var _0x457db3 = _0x14632f.id;
    if (_0x14632f && _0x14632f.id && a0_0x4f8c54(_0x14632f.oType) && a0_0x29725d[_0x14632f.id] === undefined) {
      a0_0x29725d[_0x14632f.id] = _0x14632f;
    }
    var _0x45c45f = a0_0x3d5ac5[_0x457db3];
    delete a0_0x3d5ac5[_0x457db3];
    var _0x1f4259 = a0_0x13f254.indexOf(_0x45c45f);
    if (_0x1f4259 != -1) {
      a0_0x13f254.splice(_0x1f4259, 1);
      if (_0x45c45f) {
        _0x45c45f.onRemovedFromGame();
      }
    }
    a0_0x3d5ac5[_0x457db3] = _0x14632f;
    a0_0x13f254.push(_0x14632f);
  }
  _0x45defe = _0x5cdc23.readUInt16();
  for (var _0x100733 = 0; _0x100733 < _0x45defe; _0x100733++) {
    var _0x457db3 = _0x5cdc23.readUInt32();
    var _0x14632f = a0_0x3d5ac5[_0x457db3];
    if (_0x14632f) {
      _0x14632f.worldUpd_readMsgUpdate(_0x5cdc23);
    } else {}
  }
  _0x45defe = _0x5cdc23.readUInt16();
  for (var _0x1a37f1 = 0; _0x1a37f1 < _0x45defe; _0x1a37f1++) {
    var _0x505ca0 = _0x5cdc23.readUInt32();
    var _0x14632f = a0_0x3d5ac5[_0x505ca0];
    if (_0x14632f) {
      _0x14632f.worldUpd_readMsgRemovedObj(_0x5cdc23);
    } else {}
  }
  var _0x5c4763 = _0x5cdc23.readUInt16();
  for (var _0x59e76b = 0; _0x59e76b < _0x5c4763; _0x59e76b++) {
    var _0x322dd8 = _0x5cdc23.readUInt32();
    var _0x14632f = a0_0x29725d[_0x322dd8];
    if (_0x14632f) {
      _0x14632f.drawMe = false;
    }
  }
  var _0x5c4763 = _0x5cdc23.readUInt16();
  for (var _0x59e76b = 0; _0x59e76b < _0x5c4763; _0x59e76b++) {
    var _0x322dd8 = _0x5cdc23.readUInt32();
    if (a0_0x29725d[_0x322dd8]) {
      delete a0_0x29725d[_0x322dd8];
    }
  }
  if (a0_0x4ff181 != null) {
    a0_0x4ff181.playerWorldUpdate(_0x5cdc23);
  }
  a0_0x203075();
}
var a0_0x298520 = [a0_0x225e01, a0_0x38253a, a0_0x572af7, a0_0x120b7c, a0_0x1de546, a0_0x308061];
let a0_0x24646a = [];
const a0_0x203075 = function () {
  a0_0x24646a = [];
  a0_0x24646a = a0_0x13f254.slice();
  for (_0x3d1cca = 0; _0x3d1cca < a0_0x24646a.length; _0x3d1cca++) {
    var _0x228be4 = a0_0x24646a[_0x3d1cca];
    if (!_0x228be4.drawMe) {
      continue;
    }
    if (a0_0x24646a[_0x3d1cca].clientBatchDraw) {
      var _0x276f34 = false;
      var _0x2cdd32 = a0_0x24646a[_0x3d1cca].clientBatchDrawID == 0 ? a0_0x24646a[_0x3d1cca].oType : a0_0x24646a[_0x3d1cca].clientBatchDrawID;
      for (j = 0; j < a0_0x298520.length; j++) {
        if (_0x2cdd32 == a0_0x298520[j]) {
          _0x276f34 = true;
          break;
        }
      }
      if (!_0x276f34) {
        a0_0x298520.push(_0x2cdd32);
      }
    }
  }
  var _0x343df1 = {};
  for (var _0x3d1cca = 0; _0x3d1cca < a0_0x298520.length; _0x3d1cca++) {
    var _0x53a9cb = new a0_0x1d74a2();
    _0x343df1[a0_0x298520[_0x3d1cca]] = _0x53a9cb;
    a0_0x24646a.push(_0x53a9cb);
  }
  for (d = a0_0x24646a.length - 1; d >= 0; d--) {
    var _0x5bb01d = a0_0x24646a[d];
    for (e = 0; e < a0_0x298520.length; e++) {
      var _0x2ecd60 = a0_0x298520[e];
      if ((_0x2ecd60 == _0x5bb01d.oType || _0x2ecd60 == _0x5bb01d.clientBatchDrawID) && !(_0x5bb01d instanceof a0_0x1d74a2)) {
        _0x343df1[_0x2ecd60].addBatchedObj(_0x5bb01d);
        a0_0x24646a.splice(d, 1);
        break;
      }
    }
  }
  for (d = 0; d < a0_0x24646a.length; d++) {
    var _0x228be4 = a0_0x24646a[d];
    _0x228be4.calculateZIndex();
  }
  a0_0x24646a.sort(function (_0x34df18, _0x2abc14) {
    if (_0x34df18.z == _0x2abc14.z) {
      return _0x34df18.id - _0x2abc14.id;
    } else {
      return _0x34df18.z - _0x2abc14.z;
    }
  });
};
const a0_0x412b9b = function () {
  for (d = 0; d < a0_0x24646a.length; d++) {
    var _0x141dd6 = a0_0x24646a[d];
    if (_0x141dd6) {
      _0x141dd6.draw();
    }
  }
  if (!a0_0x36b495) {
    for (d = 0; d < a0_0x24646a.length; d++) {
      if (typeof a0_0x24646a[d].chatLines != "undefined") {
        a0_0x24646a[d].drawChat();
      }
    }
  }
};
const a0_0x1052e3 = function () {
  for (d = 0; d < a0_0x45e0de.length; d++) {
    var _0x13cef2 = a0_0x45e0de[d];
    if (a0_0x3d5ac5.hasOwnProperty(_0x13cef2.id)) {
      delete a0_0x3d5ac5[_0x13cef2.id];
    }
    var _0x1bf967 = a0_0x13f254.indexOf(_0x13cef2);
    if (_0x1bf967 != -1) {
      a0_0x13f254.splice(_0x1bf967, 1);
    }
  }
  for (d = 0; d < a0_0x23330e.length; d++) {
    var _0x26b3b8 = a0_0x23330e[d];
    var _0x1bf967 = a0_0x13f254.indexOf(_0x26b3b8);
    if (_0x1bf967 != -1) {
      a0_0x13f254.splice(_0x1bf967, 1);
    }
  }
};
function a0_0x5458d7(_0x7ff945) {}
var a0_0x404fa5 = +new Date();
var a0_0x2af4e0 = 0;
var a0_0x4b906c = 0;
var a0_0x5d8a1f = 0;
var a0_0x5aa91f = 0;
var a0_0x3914a1 = 0.175;
var a0_0xb8477c = 600;
var a0_0x1b0278 = 40;
const a0_0x2a4132 = function () {
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.fillStyle = a0_0x399008;
  a0_0x4ef4f3.fillRect(0, -a0_0xb8477c, a0_0x425049, a0_0xb8477c + a0_0x1b0278);
  a0_0x4ef4f3.fillRect(0, a0_0xe585d7 - a0_0x1b0278, a0_0x425049, a0_0xb8477c + a0_0x1b0278);
  a0_0x4ef4f3.fillRect(-a0_0xb8477c, -a0_0xb8477c, a0_0xb8477c + a0_0x1b0278, a0_0xe585d7 + a0_0xb8477c * 2);
  a0_0x4ef4f3.fillRect(a0_0x425049 - a0_0x1b0278, -a0_0xb8477c, a0_0xb8477c, a0_0xe585d7 + a0_0x1b0278 + a0_0xb8477c * 2);
};
let a0_0x2e5c38 = [0];
function a0_0x36260a() {
  if (!a0_0x102063 || a0_0x1528ea) {
    return;
  }
  if (a0_0x4ff181 != null) {
    a0_0x4ff181.drawLeaderboard();
  }
}
const a0_0x3e0c6d = function (_0x7cbd92) {
  let _0x394d61 = performance.now();
  a0_0x4f736f = +new Date();
  if (a0_0x4ef4f3.globalAlpha != 1) {
    a0_0x4ef4f3.setTransform(1, 0, 0, 1, 0, 0);
    a0_0x4ef4f3.globalAlpha = 1;
  }
  a0_0x4ef4f3.clearRect(0, 0, a0_0x11866b, a0_0x8379e6);
  a0_0x582ad7 = [];
  var _0x4ab1a = (a0_0x4f736f - a0_0x555079) / 1000 / a0_0x3914a1;
  _0x4ab1a = _0x4ab1a < 0 ? 0 : _0x4ab1a > 1 ? 1 : _0x4ab1a;
  a0_0xaeda51 = _0x4ab1a * (a0_0x4d6064 - a0_0x4fd957) + a0_0x4fd957;
  a0_0xfc3cb9 = _0x4ab1a * (a0_0x23c6d3 - a0_0x47981f) + a0_0x47981f;
  a0_0x19baa9 = (a0_0x19baa9 * 25 + camzoom_n) / 26;
  a0_0x36f64f();
  a0_0x4ef4f3.save();
  var _0x556174 = a0_0x11866b / 2;
  var _0x14c62d = a0_0x8379e6 / 2;
  var _0x51bc06 = 0;
  var _0x39dca6 = 0;
  a0_0x4ef4f3.translate(_0x556174 * (1 - a0_0x19baa9) + (_0x556174 - a0_0xaeda51 - _0x39dca6) * a0_0x19baa9, _0x14c62d * (1 - a0_0x19baa9) + (_0x14c62d - a0_0xfc3cb9 - _0x51bc06) * a0_0x19baa9);
  a0_0x4ef4f3.scale(a0_0x19baa9, a0_0x19baa9);
  a0_0x4ef4f3.save();
  if (a0_0x42d7bf) {
    a0_0x2a4132();
  } else {
    a0_0x165516(a0_0x5c684e(0), a0_0x365eca(0), a0_0x5c684e(a0_0x11866b), a0_0x365eca(a0_0x8379e6), 0, 0);
  }
  a0_0x4ef4f3.restore();
  a0_0x412b9b();
  a0_0x4ef4f3.restore();
  if (a0_0x4ff181 != null) {
    a0_0x4ff181.drawMap();
    if (a0_0xacaa8 && !a0_0x409384) {
      a0_0x528092();
    }
  }
  a0_0x47aee9();
  a0_0x4c8f0a();
  a0_0x2e5c38.push(performance.now() - _0x394d61);
};
var a0_0xa5623b = 0;
var a0_0x122f21 = 0;
function a0_0x10faa5(_0x10cfea) {
  a0_0x598f1f(_0x10cfea);
  if (a0_0x57833e) {
    a0_0x122f21 = _0x10cfea - a0_0xa5623b;
    if (a0_0x122f21 < a0_0x15a58b) {
      requestAnimationFrame(a0_0x10faa5);
      return;
    }
  }
  a0_0xa5623b = _0x10cfea;
  if (a0_0x17f03d === null) {
    a0_0x17f03d = _0x10cfea;
  }
  a0_0x3e0c6d(_0x10cfea);
  requestAnimationFrame(a0_0x10faa5);
}
if (window.requestAnimationFrame) {
  window.requestAnimationFrame(a0_0x10faa5);
} else {
  setInterval(a0_0x10faa5, a0_0x15a58b);
}
let a0_0x2cd787 = false;
let a0_0x2bd905 = false;
let a0_0x4b1fee = false;
let a0_0x5bc46c = false;
function a0_0x530285() {
  if (a0_0x1696ee) {
    const _0x46e31d = setInterval(() => {
      if (a0_0x2cd787) {
        a0_0x189757();
      } else {
        a0_0x2bd905 = false;
        clearInterval(_0x46e31d);
      }
    }, 1);
  }
}
const a0_0x168d64 = function (_0x282e71) {
  a0_0x12b93();
  var _0x592933 = _0x282e71.keyCode || _0x282e71.which;
  if (_0x592933 == 9) {
    _0x282e71.preventDefault();
    return;
  }
  if (!a0_0x1ec8af && a0_0x290640 && !a0_0x45f685) {
    switch (_0x592933) {
      case 80:
        a0_0x2cd787 = true;
        if (a0_0x4b1fee) {
          a0_0x530285();
          if (!a0_0x2bd905) {
            console.log("SEND MOUSE COORDS INTERVAL: ON");
            a0_0x2bd905 = true;
          }
        }
        break;
      case 17:
      case 189:
        _0x282e71.preventDefault();
        break;
      case 73:
        a0_0x335f00(1, true);
        _0x282e71.preventDefault();
        break;
      case 74:
        a0_0x335f00(2, true);
        _0x282e71.preventDefault();
        break;
      case 75:
        a0_0x335f00(3, true);
        _0x282e71.preventDefault();
        break;
      case 76:
        a0_0x335f00(4, true);
        _0x282e71.preventDefault();
        break;
      case 49:
        {
          _0x282e71.preventDefault();
          a0_0x21f721(1, true);
        }
        break;
      case 50:
        _0x282e71.preventDefault();
        a0_0x21f721(2, true);
        break;
      case 51:
        _0x282e71.preventDefault();
        a0_0x21f721(3, true);
        break;
      case 52:
        _0x282e71.preventDefault();
        a0_0x21f721(4, true);
        break;
      case 32:
        {
          _0x282e71.preventDefault();
          a0_0x448dc4(a0_0x1ef8d7, true);
        }
        break;
      case 87:
        {
          _0x282e71.preventDefault();
          a0_0x448dc4(a0_0x19264d, true);
        }
        break;
      case 83:
        {
          _0x282e71.preventDefault();
          a0_0x448dc4(a0_0x2e399b, true);
        }
        break;
      case 27:
        {
          if (a0_0x8418ab || a0_0x1696ee) {
            _0x282e71.preventDefault();
            a0_0x2ca781 = !a0_0x2ca781;
            a0_0x574163("Movement Lock (ESC KEY): " + (a0_0x2ca781 ? "ON" : "OFF"), 2500);
          }
        }
        break;
      case 69:
        {
          _0x282e71.preventDefault();
          a0_0x448dc4(a0_0x1ccc80, true);
        }
        break;
      case 68:
        {
          _0x282e71.preventDefault();
          a0_0x448dc4(a0_0xa3cc6d, true);
        }
        break;
    }
  }
};
const a0_0x1d0324 = function (_0x34e488) {
  var _0x5cd118 = _0x34e488.keyCode || _0x34e488.which;
  if (_0x5cd118 == 9) {
    _0x34e488.preventDefault();
    return;
  }
  if (a0_0x409384) {
    if (_0x5cd118 == 13) {
      a0_0x50d374(a0_0x1dec92[0]);
      return;
    } else {
      var _0x4dc01d = -1;
      for (i = 0; i < a0_0x1dec92.length; i++) {
        if (a0_0x1dec92[i].btnHotkey.charCodeAt(0) == _0x5cd118) {
          _0x4dc01d = i;
          break;
        }
      }
      if (_0x4dc01d > -1) {
        a0_0x50d374(a0_0x1dec92[_0x4dc01d]);
        return;
      }
    }
  }
  if (a0_0x290640) {
    var _0x5cd118 = _0x34e488.keyCode || _0x34e488.which;
    if (_0x5cd118 == 17) {
      return;
    }
    if (_0x5cd118 == 13 && !a0_0xa31135) {
      a0_0x5043b2();
      return;
    }
    if (!a0_0x1ec8af && !a0_0x45f685 && a0_0x290640) {
      switch (_0x5cd118) {
        case 80:
          a0_0x2cd787 = false;
          console.log("SEND MOUSE COORDS INTERVAL: OFF");
          break;
        case 90:
          a0_0x340466();
          break;
        case 17:
        case 189:
          _0x34e488.preventDefault();
          break;
        case 73:
          a0_0x335f00(1, false);
          _0x34e488.preventDefault();
          break;
        case 74:
          a0_0x335f00(2, false);
          _0x34e488.preventDefault();
          break;
        case 75:
          a0_0x335f00(3, false);
          _0x34e488.preventDefault();
          break;
        case 76:
          a0_0x335f00(4, false);
          _0x34e488.preventDefault();
          break;
        case 81:
          _0x34e488.preventDefault();
          a0_0xc2da34();
          break;
        case 49:
          {
            _0x34e488.preventDefault();
            a0_0x21f721(1, false);
          }
          break;
        case 50:
          _0x34e488.preventDefault();
          a0_0x21f721(2, false);
          break;
        case 51:
          _0x34e488.preventDefault();
          a0_0x21f721(3, false);
          break;
        case 52:
          _0x34e488.preventDefault();
          a0_0x21f721(4, false);
          break;
        case 32:
          {
            _0x34e488.preventDefault();
            a0_0x448dc4(a0_0x1ef8d7, false);
          }
          break;
        case 87:
          {
            _0x34e488.preventDefault();
            a0_0x448dc4(a0_0x19264d, false);
          }
          break;
        case 38:
          {
            _0x34e488.preventDefault();
            a0_0x448dc4(a0_0x2b7c14, false);
          }
          break;
        case 40:
          {
            _0x34e488.preventDefault();
            a0_0x448dc4(a0_0x29b7e, false);
          }
          break;
        case 69:
          {
            _0x34e488.preventDefault();
            a0_0x448dc4(a0_0x1ccc80, false);
          }
          break;
        case 68:
          {
            _0x34e488.preventDefault();
            a0_0x448dc4(a0_0xa3cc6d, false);
          }
          break;
        case 83:
          {
            _0x34e488.preventDefault();
            a0_0x448dc4(a0_0x2e399b, false);
          }
          break;
      }
    }
  }
};
document.onkeydown = a0_0x168d64;
document.onkeyup = a0_0x1d0324;
function a0_0x36abc7(_0x16c4fc) {
  _0x16c4fc.canvas_handled = true;
  a0_0x37bc1c = _0x16c4fc.clientX * a0_0x24bc92;
  a0_0x46dbb3 = _0x16c4fc.clientY * a0_0x24bc92;
  a0_0x36f64f();
  if (!a0_0x3ffc72) {
    a0_0x12b93();
  }
  if (a0_0x409384 && a0_0x4f736f - a0_0x446f6f > 650) {
    for (var _0x50c3a8 = 0; _0x50c3a8 < a0_0x1dec92.length; _0x50c3a8++) {
      var _0xe3b71d = a0_0x1dec92[_0x50c3a8];
      _0xe3b71d.isHighLighted = _0xe3b71d.testPosHitsButton(a0_0x37bc1c, a0_0x46dbb3);
      _0xe3b71d.setMouseHover(_0xe3b71d.isHighLighted);
    }
  }
  if (a0_0x4ff181 != null && a0_0x4ff181.interfaceButtons && a0_0x4ff181.interfaceButtons.length > 0) {
    for (var _0x50c3a8 = 0; _0x50c3a8 < a0_0x4ff181.interfaceButtons.length; _0x50c3a8++) {
      var _0xe3b71d = a0_0x4ff181.interfaceButtons[_0x50c3a8];
      if (_0xe3b71d.isVisible) {
        _0xe3b71d.setMouseRawPos(a0_0x37bc1c, a0_0x46dbb3);
        if (_0xe3b71d.testPosHitsButton(a0_0x37bc1c, a0_0x46dbb3)) {
          _0xe3b71d.isHighLighted = true;
          _0xe3b71d.onMouseMove();
        } else {
          _0xe3b71d.isHighLighted = false;
        }
      }
    }
  }
}
function a0_0x2855e2(_0x307693) {
  a0_0x12b93();
  a0_0x5bc46c = true;
  if (_0x307693.which == 1) {
    a0_0x448dc4(a0_0x1ef8d7, true);
  }
  if (_0x307693.which == 3) {
    a0_0x448dc4(a0_0x19264d, true);
  }
}
function a0_0x420096(_0x214339) {
  a0_0x5bc46c = false;
  if (_0x214339.which == 1) {
    a0_0x448dc4(a0_0x1ef8d7, false);
    if (a0_0x409384 && a0_0x4f736f - a0_0x446f6f > 650) {
      a0_0x37bc1c = _0x214339.clientX * a0_0x24bc92;
      a0_0x46dbb3 = _0x214339.clientY * a0_0x24bc92;
      for (var _0x50172c = 0; _0x50172c < a0_0x1dec92.length; _0x50172c++) {
        var _0x3f6034 = a0_0x1dec92[_0x50172c];
        if (_0x3f6034.testPosHitsButton(a0_0x37bc1c, a0_0x46dbb3)) {
          a0_0x50d374(_0x3f6034);
          break;
        }
      }
    }
    if (a0_0x4ff181 != null && a0_0x4ff181.interfaceButtons && a0_0x4ff181.interfaceButtons.length > 0) {
      a0_0x37bc1c = _0x214339.clientX * a0_0x24bc92;
      a0_0x46dbb3 = _0x214339.clientY * a0_0x24bc92;
      for (var _0x50172c = 0; _0x50172c < a0_0x4ff181.interfaceButtons.length; _0x50172c++) {
        var _0x3f6034 = a0_0x4ff181.interfaceButtons[_0x50172c];
        if (_0x3f6034.isVisible && _0x3f6034.testPosHitsButton(a0_0x37bc1c, a0_0x46dbb3)) {
          _0x3f6034.onClick();
          break;
        }
      }
    }
  }
  if (_0x214339.which == 3) {
    a0_0x448dc4(a0_0x19264d, false);
  }
}
function a0_0x320f4f(_0x25333e) {
  if (_0x25333e.toElement == null && _0x25333e.relatedTarget == null) {
    a0_0x5bc46c = false;
    a0_0x448dc4(a0_0x1ef8d7, false);
    a0_0x448dc4(a0_0x19264d, false);
  }
}
window.onmousemove = function (_0x48f148) {
  if (_0x48f148.target !== a0_0x43318e && !_0x48f148.canvas_handled && a0_0x5bc46c) {
    a0_0x36abc7(_0x48f148);
    _0x48f148.preventDefault();
  }
};
a0_0x43318e.onmousemove = function (_0x4a1db1) {
  if (!_0x4a1db1.canvas_handled) {
    a0_0x36abc7(_0x4a1db1);
    _0x4a1db1.preventDefault();
  }
};
a0_0x43318e.onmousedown = function (_0x164d0d) {
  a0_0x2855e2(_0x164d0d);
  _0x164d0d.preventDefault();
};
a0_0x43318e.onmouseup = function (_0x19bf7f) {
  a0_0x420096(_0x19bf7f);
  _0x19bf7f.preventDefault();
};
window.onmouseout = function (_0x15fe34) {
  a0_0x320f4f(_0x15fe34);
};
const a0_0x335f00 = function (_0x1567cc, _0x135627) {
  if (a0_0x14ed4d() && a0_0x290640) {
    var _0x238af1 = new a0_0x49f976(3);
    _0x238af1.writeUInt8(a0_0x2dfda8);
    _0x238af1.writeUInt8(_0x135627 ? 1 : 0);
    _0x238af1.writeUInt8(_0x1567cc);
    a0_0x217e77(_0x238af1);
  }
};
var a0_0x344197 = null;
var a0_0x5e7e61 = 0;
function a0_0x21f721(_0x325643, _0x55b42c) {
  a0_0x344197 = _0x325643;
  if (!_0x55b42c) {
    if (a0_0x3326d1 > 0) {
      if (+new Date() > a0_0x5e7e61) {
        var _0x2efadb = new a0_0x49f976(5);
        _0x2efadb.writeUInt8(a0_0x45b869);
        _0x2efadb.writeUInt32(a0_0x3326d1);
        a0_0x217e77(_0x2efadb);
        a0_0x3326d1 = 0;
        a0_0x344197 = null;
      }
    }
  }
}
var a0_0x1894e1 = 1;
function a0_0x340466() {
  if (a0_0x1696ee) {
    a0_0x1894e1 = a0_0x1894e1 == 0 ? 1 : 0;
    if (a0_0x1894e1 == 0) {
      gGameServerClient.testDisconnect();
    } else {
      gGameServerClient.testReconnect();
    }
  }
}
const a0_0xd16111 = document.querySelector("#updatesDiv");
const a0_0x1031b6 = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
function a0_0x24cd1c(_0x2e1c9f) {
  const _0xabeb56 = [];
  for (let _0x2cc101 = 0; _0x2cc101 < _0x2e1c9f.length; _0x2cc101++) {
    const _0x244fc8 = _0x2e1c9f[_0x2cc101];
    const _0x1a624b = new Date(_0x244fc8.date);
    const _0x11c69e = a0_0x1031b6[_0x1a624b.getUTCMonth()] + " " + _0x1a624b.getUTCDate() + ": " + _0x244fc8.title;
    const _0x43ac40 = document.createElement("h2");
    _0x43ac40.innerText = _0x11c69e;
    const _0x5142c9 = document.createElement("br");
    const _0x3760d7 = document.createElement("ul");
    let _0x71b835 = [_0x43ac40, _0x5142c9, _0x3760d7];
    a0_0x5e7588(_0x244fc8.description, _0x3760d7);
    _0xabeb56.push(_0x71b835);
  }
  return _0xabeb56;
}
function a0_0x5e7588(_0x4bde34, _0x2c2227) {
  for (let _0x379415 = 0; _0x379415 < _0x4bde34.length; _0x379415++) {
    const _0x10ec25 = _0x4bde34[_0x379415];
    if (typeof _0x10ec25 == "string") {
      const _0x5e2b4d = document.createElement("li");
      _0x5e2b4d.innerHTML = _0x10ec25;
      _0x2c2227.appendChild(_0x5e2b4d);
    } else if (typeof _0x10ec25 == "object") {
      const _0x25b777 = document.createElement("li");
      const _0xe87059 = document.createElement("h2");
      const _0x179dac = document.createElement("ul");
      _0xe87059.innerText = _0x10ec25.title;
      _0x25b777.appendChild(_0xe87059);
      _0x25b777.appendChild(_0x179dac);
      _0x2c2227.appendChild(_0x25b777);
      a0_0x5e7588(_0x10ec25.description, _0x179dac);
    }
  }
}
function a0_0x149624(_0x331b06) {
  for (let _0x33b633 = 0; _0x33b633 < _0x331b06.length; _0x33b633++) {
    if (Array.isArray(_0x331b06[_0x33b633])) {
      for (let _0x5ddfe7 = 0; _0x5ddfe7 < _0x331b06[_0x33b633].length; _0x5ddfe7++) {
        if (Array.isArray(_0x331b06[_0x33b633][_0x5ddfe7])) {
          a0_0x149624(_0x331b06[_0x33b633][_0x5ddfe7]);
        } else {
          a0_0xd16111.appendChild(_0x331b06[_0x33b633][_0x5ddfe7]);
        }
      }
    } else {
      a0_0xd16111.appendChild(_0x331b06[_0x33b633]);
    }
  }
}
fetch("/updates.json?t=" + Date.now()).then(_0x4cbafe => _0x4cbafe.json()).then(_0x21bfff => {
  a0_0xd16111.innerHTML = "";
  a0_0x149624(a0_0x24cd1c(_0x21bfff.reverse()));
});
var a0_0x17c57a = {};
var a0_0xda0fce = null;
var a0_0x5685a2 = 100;
var a0_0x673f8f = a0_0xba590d * -15;
var a0_0x44371f = 0;
function a0_0x4f10e4(_0x195cb8, _0xca0008, _0x17254b, _0x353df7, _0x274b2e, _0x12c073, _0x486084, _0x118b25) {
  if (typeof _0x118b25 === "undefined") {
    _0x118b25 = true;
  }
  if (typeof _0x12c073 === "undefined") {
    _0x12c073 = 5;
  }
  if (typeof _0x12c073 === "number") {
    _0x12c073 = {
      tl: _0x12c073,
      tr: _0x12c073,
      br: _0x12c073,
      bl: _0x12c073
    };
  } else {
    var _0x603c1b = {
      tl: 0,
      tr: 0,
      br: 0,
      bl: 0
    };
    for (var _0x474bfc in _0x603c1b) {
      _0x12c073[_0x474bfc] = _0x12c073[_0x474bfc] || _0x603c1b[_0x474bfc];
    }
  }
  _0x195cb8.beginPath();
  _0x195cb8.moveTo(_0xca0008 + _0x12c073.tl, _0x17254b);
  _0x195cb8.lineTo(_0xca0008 + _0x353df7 - _0x12c073.tr, _0x17254b);
  _0x195cb8.quadraticCurveTo(_0xca0008 + _0x353df7, _0x17254b, _0xca0008 + _0x353df7, _0x17254b + _0x12c073.tr);
  _0x195cb8.lineTo(_0xca0008 + _0x353df7, _0x17254b + _0x274b2e - _0x12c073.br);
  _0x195cb8.quadraticCurveTo(_0xca0008 + _0x353df7, _0x17254b + _0x274b2e, _0xca0008 + _0x353df7 - _0x12c073.br, _0x17254b + _0x274b2e);
  _0x195cb8.lineTo(_0xca0008 + _0x12c073.bl, _0x17254b + _0x274b2e);
  _0x195cb8.quadraticCurveTo(_0xca0008, _0x17254b + _0x274b2e, _0xca0008, _0x17254b + _0x274b2e - _0x12c073.bl);
  _0x195cb8.lineTo(_0xca0008, _0x17254b + _0x12c073.tl);
  _0x195cb8.quadraticCurveTo(_0xca0008, _0x17254b, _0xca0008 + _0x12c073.tl, _0x17254b);
  _0x195cb8.closePath();
  if (_0x486084) {
    _0x195cb8.fill();
  }
  if (_0x118b25) {
    _0x195cb8.stroke();
  }
}
function a0_0x58b9e4() {
  a0_0x1eb910 += (a0_0x3ce8a6 - a0_0x1eb910) * 0.1;
  a0_0x44a2d1 += (a0_0x3296b0 - a0_0x44a2d1) * 0.03;
  if (a0_0xe92752 == a0_0x518474) {
    a0_0x1eb910 += (a0_0x3ce8a6 - a0_0x1eb910) * 0.015;
  }
}
const a0_0x47aee9 = function () {
  if (a0_0x363ebf) {
    return;
  }
  if (!a0_0x290640) {
    return;
  }
  a0_0x4ef4f3.save();
  a0_0x58b9e4();
  var _0xbd81f8 = a0_0x3d5ac5[a0_0x1c918d];
  if (_0xbd81f8) {
    a0_0x3a86ef = _0xbd81f8.animalType;
    a0_0x564d0a = _0xbd81f8.animalSpecies;
    a0_0x44c2b6 = _0xbd81f8.animalSubSpecies;
  }
  if (a0_0xe92752 != a0_0x518474) {
    a0_0x44371f = 30;
  }
  a0_0x4ef4f3.save();
  var _0xd0f1a = Math.min(450, a0_0x11866b * 0.9) * a0_0xba590d;
  var _0x918bfc = a0_0xba590d * 30;
  var _0x169104 = a0_0x11866b / 2;
  var _0x4953ef = a0_0x8379e6 - a0_0xba590d * 128;
  _0x4953ef += a0_0x44371f * a0_0xba590d;
  a0_0x4ef4f3.fillStyle = "black";
  var _0x1bb049 = "";
  if (a0_0x5528e6 != "null") {
    var _0x531cb0 = "";
    if (a0_0x5528e6.indexOf("BEGIN") == -1) {
      _0x531cb0 = "\nYOU COULD EARN " + a0_0x8b0c75 + " COINS";
    } else {
      _0x531cb0 = "\nPLEASE WAIT!";
    }
    _0x1bb049 = a0_0x5528e6 + _0x531cb0;
    a0_0x4ef4f3.globalAlpha = 0.05;
    a0_0x430197.alpha = 0.5;
    a0_0x430197.multiLine = true;
  } else {
    a0_0x430197.multiLine = false;
    _0x1bb049 = a0_0x8b0c75;
    a0_0x4ef4f3.globalAlpha = 0.3;
    a0_0x430197.alpha = 1;
  }
  a0_0x430197.setText(_0x1bb049);
  a0_0x430197.setFontSize(a0_0xba590d * 22);
  var _0x192cd1 = a0_0x430197.getRenderedCanvas();
  var _0xc209a1 = _0x192cd1.width + a0_0xba590d * 25;
  var _0x53f5ba = _0x192cd1.height / 2 + a0_0xba590d * 15;
  if (a0_0x5528e6 != "null") {
    _0xc209a1 = _0xd0f1a;
    _0x53f5ba = _0x192cd1.height / 2 + a0_0xba590d * 15;
  }
  var _0x47675e = _0x169104 - _0xc209a1 / 2;
  var _0x2597ef = _0x169104;
  if (a0_0x5528e6 == "null") {
    _0x47675e = _0x169104 + a0_0x673f8f - _0xc209a1 / 2;
    _0x2597ef = _0x47675e - a0_0x673f8f * 1.5;
  }
  a0_0x430197.x = _0x2597ef;
  a0_0x430197.y = _0x4953ef;
  a0_0x4ef4f3.fillRect(_0x47675e, _0x4953ef - _0x53f5ba / 2, _0xc209a1, _0x53f5ba);
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x430197.draw();
  a0_0x4ef4f3.restore();
  if (a0_0x5528e6 == "null") {
    a0_0x4ef4f3.save();
    var _0x426fda = a0_0x2cc313("./shop/mopecoin.png");
    if (_0x426fda) {
      var _0x22631c = a0_0xba590d * 30;
      var _0x24de9f = _0x22631c / _0x426fda.height * 1.25;
      var _0x311217 = _0x426fda.width * _0x24de9f;
      var _0x10a22a = _0x426fda.height * _0x24de9f;
      a0_0x4ef4f3.drawImage(_0x426fda, _0x169104, _0x4953ef - _0x10a22a / 2, _0x311217, _0x10a22a);
    }
    a0_0x4ef4f3.restore();
  }
  if (a0_0xe92752 == a0_0x518474) {
    a0_0x4ef4f3.save();
    _0x4953ef = a0_0x8379e6 - a0_0xba590d * 111;
    var _0x3fff6e = 1;
    var _0x4c98eb = false;
    if (isInfected) {
      _0x4c98eb = a0_0x1eb910 >= 20;
    } else {
      _0x4c98eb = a0_0x1eb910 <= 50;
    }
    if (_0x4c98eb) {
      var _0x2b8787 = 1.2;
      var _0x25d71a = 0.4;
      var _0x588652 = 1;
      var _0x495fcc = (_0x588652 - _0x25d71a) * 0.5;
      _0x3fff6e = _0x25d71a + _0x495fcc + _0x495fcc * Math.sin(Math.PI * 2 / _0x2b8787 * (a0_0x4f736f / 1000));
    }
    a0_0x4ef4f3.globalAlpha = _0x3fff6e * 0.35;
    a0_0x4ef4f3.fillStyle = "black";
    _0x4953ef = _0x4953ef - a0_0xba590d * 3;
    a0_0x4ef4f3.fillRect(_0x169104 - _0xd0f1a / 2, _0x4953ef, _0xd0f1a, _0x918bfc);
    a0_0x4ef4f3.globalAlpha = _0x3fff6e;
    a0_0x4ef4f3.fillStyle = isInfected ? "red" : "pink";
    var _0xba808c = _0xd0f1a / 2;
    a0_0x4ef4f3.fillRect(_0x169104 - _0xba808c, _0x4953ef, _0xd0f1a * (a0_0x1eb910 / 100), _0x918bfc);
    a0_0x4ef4f3.restore();
    var _0x55f930 = "";
    var _0x1050ae = "";
    if (a0_0x1eb910 > 70) {
      _0x55f930 = "SEVERE ";
    } else if (a0_0x1eb910 > 40) {
      _0x55f930 = "SERIOUS ";
    } else if (a0_0x1eb910 <= 40) {
      _0x55f930 = "MILD ";
    }
    if (a0_0x1eb910 > 50) {
      _0x1050ae = "STRONG ";
    } else {
      _0x1050ae = "WEAK ";
    }
    a0_0x44f982.setText(isInfected ? _0x55f930 + "INFECTION" : _0x1050ae + "IMMUNITY");
    a0_0x44f982.setFontSize(a0_0xba590d * 22);
    a0_0x44f982.x = _0x169104;
    a0_0x44f982.y = _0x4953ef + a0_0xba590d * 15;
    a0_0x4ef4f3.globalAlpha *= _0x4c98eb ? 1 : 0.5;
    a0_0x44f982.draw();
  }
  a0_0x4ef4f3.save();
  var _0x2ea83a = 1;
  var _0x35c28b = a0_0x1eb910 <= 25;
  if (_0x35c28b) {
    var _0x2b8787 = 1.2;
    var _0x25d71a = 0.4;
    var _0x588652 = 1;
    var _0x495fcc = (_0x588652 - _0x25d71a) * 0.5;
    _0x2ea83a = _0x25d71a + _0x495fcc + _0x495fcc * Math.sin(Math.PI * 2 / _0x2b8787 * (a0_0x4f736f / 1000));
  }
  _0x4953ef = a0_0x8379e6 - a0_0xba590d * 60;
  if (a0_0x55c235) {
    a0_0x4ef4f3.globalAlpha = _0x2ea83a * 0.35;
    a0_0x4ef4f3.fillStyle = "#000000";
    a0_0x4ef4f3.fillRect(_0x169104 - _0xd0f1a / 2, _0x4953ef - _0x918bfc / 2, _0xd0f1a, _0x918bfc);
    a0_0x4ef4f3.globalAlpha = _0x2ea83a;
    if (a0_0x4002a7 == 2) {
      a0_0x4ef4f3.fillStyle = a0_0x5479b9;
    } else if (a0_0x4002a7 == 3) {
      a0_0x4ef4f3.fillStyle = a0_0x197b31;
    } else {
      a0_0x4ef4f3.fillStyle = a0_0x584896 || a0_0x4002a7 == 1 ? a0_0x4a1deb : a0_0x21597b;
    }
    a0_0x4ef4f3.fillRect(_0x169104 - _0xd0f1a / 2, _0x4953ef - _0x918bfc / 2, _0xd0f1a * (a0_0x1eb910 / 100), _0x918bfc);
    a0_0x4ef4f3.fillStyle = a0_0x561d8a ? _0x35c28b ? a0_0x580c23 : "orange" : _0x35c28b ? a0_0x580c23 : "white";
    a0_0x4ef4f3.globalAlpha = _0x2ea83a * 1;
    var _0x25e524;
    if (a0_0x4002a7 == 1) {
      _0x25e524 = _0x35c28b ? "LOW AIR" : "AIR";
    } else if (a0_0x4002a7 == 2) {
      _0x25e524 = _0x35c28b ? "LOW LAVA" : "LAVA";
    } else if (a0_0x4002a7 == 3) {
      _0x25e524 = _0x35c28b ? "LOW ENERGY" : "ENERGY";
    } else {
      _0x25e524 = _0x35c28b ? "LOW WATER" : "WATER";
    }
    a0_0x49260d.setText(_0x25e524);
    a0_0x49260d.setFontSize(a0_0xba590d * 22);
    if (a0_0x4002a7 == 4) {
      a0_0x49260d.setColor("black");
    } else {
      a0_0x49260d.setColor(_0x35c28b ? a0_0x580c23 : "white");
    }
    a0_0x49260d.x = _0x169104;
    a0_0x49260d.y = _0x4953ef;
    a0_0x4ef4f3.globalAlpha *= _0x35c28b ? 1 : 0.5;
    a0_0x49260d.draw();
  }
  a0_0x4ef4f3.restore();
  _0x4953ef = a0_0x8379e6 - _0x918bfc / 2 - 5;
  _0xd0f1a = a0_0x11866b * 0.9;
  if (a0_0x2f3184) {
    a0_0x4ef4f3.globalAlpha = 0.35;
    a0_0x4ef4f3.fillStyle = "#000000";
    a0_0x4ef4f3.fillRect(_0x169104 - _0xd0f1a / 2, _0x4953ef - _0x918bfc / 2, _0xd0f1a, _0x918bfc);
    a0_0x4ef4f3.globalAlpha = 1;
    a0_0x4ef4f3.fillStyle = "#F3C553";
    a0_0x4ef4f3.fillRect(_0x169104 - _0xd0f1a / 2, _0x4953ef - _0x918bfc / 2, _0xd0f1a * (a0_0x44a2d1 / 100), _0x918bfc);
    a0_0x4ef4f3.globalAlpha = 1;
    a0_0x508a22.setText("" + a0_0x4cf280(a0_0x24cc63) + " xp  (" + a0_0x4cf280(a0_0x3b61a8) + " xp Next Animal)");
    a0_0x508a22.setFontSize(a0_0xba590d * 22);
    a0_0x508a22.x = _0x169104;
    a0_0x508a22.y = _0x4953ef;
    a0_0x508a22.draw();
  }
  a0_0x4ef4f3.globalAlpha = 1;
  if (a0_0x2ee2b0) {
    for (var _0xf8bf0a = 0; _0xf8bf0a < a0_0x57390d.length; _0xf8bf0a++) {
      var _0x2a19a8 = a0_0x57390d[_0xf8bf0a];
      _0x2a19a8.draw();
    }
  }
  if (a0_0x5acfd9) {
    a0_0x1a1da0();
  }
  if (a0_0x15377d) {
    if (!a0_0x1027bb && a0_0x5c9ce1) {
      var _0xbd81f8 = a0_0x3d5ac5[a0_0x1c918d];
      var _0x289152 = a0_0x11866b / 2;
      var _0x6393a8 = a0_0x8379e6 / 2;
      if (_0xbd81f8) {
        _0x289152 = a0_0x38cdab(_0xbd81f8.x);
        _0x6393a8 = a0_0x182133(_0xbd81f8.y);
      }
    }
    a0_0x298561 += ((a0_0x1027bb ? 1 : 0) - a0_0x298561) * 0.1;
    if (a0_0x298561 > 0.005 && a0_0x290640) {
      a0_0x4ef4f3.globalAlpha = a0_0x298561 * 0.3;
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(a0_0x2013cd, a0_0x481c9c, a0_0x872c13 * a0_0x24bc92, 0, Math.PI * 2);
      a0_0x4ef4f3.fillStyle = "#000000";
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.globalAlpha = a0_0x298561 * 0.5;
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(a0_0x1cac72, a0_0x5cb2dd, a0_0x872c13 * a0_0x24bc92 * 0.57, 0, Math.PI * 2);
      a0_0x4ef4f3.fillStyle = "#000000";
      a0_0x4ef4f3.fill();
      var _0x2a3662 = a0_0x599526 * 0.3;
      a0_0x599526 -= _0x2a3662;
      a0_0x5a4407 += _0x2a3662;
      a0_0x4b05c9 += (a0_0x8863d9 - a0_0x4b05c9) * 0.1;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.translate(a0_0x11866b / 2, a0_0x8379e6 / 2);
      a0_0x4ef4f3.rotate(a0_0x5a4407);
      a0_0x4ef4f3.globalAlpha = a0_0x298561 * 0.5;
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.fillStyle = "#000000";
      var _0x365226 = a0_0x24bc92 * 40;
      if (a0_0x3d5ac5[a0_0x1c918d]) {
        _0x365226 = (9 + a0_0x3d5ac5[a0_0x1c918d].rad) * a0_0x19baa9;
      }
      _0x365226 *= 0.1 + a0_0x4b05c9 * 0.9;
      var _0x3084e3 = a0_0x24bc92 * 15;
      var _0x539f7b = a0_0x24bc92 * 30 * (0.2 + a0_0x4b05c9 * 0.8);
      a0_0x4ef4f3.moveTo(_0x365226 + _0x539f7b, 0);
      a0_0x4ef4f3.lineTo(_0x365226, _0x3084e3 / 2);
      a0_0x4ef4f3.lineTo(_0x365226, -_0x3084e3 / 2);
      a0_0x4ef4f3.closePath();
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.restore();
    }
  }
  for (var _0xf8bf0a = a0_0x95c20e.length - 1; _0xf8bf0a >= 0; _0xf8bf0a--) {
    var _0x49cf85 = a0_0x95c20e[_0xf8bf0a];
    _0x49cf85.draw();
    if (_0x49cf85.timedOut) {
      a0_0x95c20e.splice(_0xf8bf0a, 1);
    }
  }
  a0_0x4ef4f3.restore();
  if (a0_0x277e88 != null) {
    a0_0x4ef4f3.save();
    if (a0_0x277e88.width) {
      a0_0x4ef4f3.drawImage(a0_0x277e88, a0_0x11866b / 2 - a0_0x277e88.width / 2, a0_0x5d4115, a0_0x277e88.width, a0_0x277e88.height);
    }
    a0_0x4ef4f3.restore();
  }
};
var a0_0x3099a9 = "Ready to survive!";
var a0_0x51b69f = 25;
var a0_0x4e7d32 = "white";
var a0_0x375ff0 = +new Date() + 0;
var a0_0x3aba7a = [];
var a0_0x5eec18 = +new Date() + 0;
var a0_0x56beb1 = 0;
var a0_0x12ce16 = 100;
var a0_0xe9b1a5 = 2;
var a0_0x59b81f = false;
var a0_0x409384 = false;
var a0_0x2666f4 = 0;
var a0_0x1dec92 = [];
var a0_0x5bc21a = false;
var a0_0x446f6f = 0;
var a0_0x296182 = 0;
function a0_0x574163(_0x1e2863, _0x21239b) {
  a0_0x3099a9 = _0x1e2863;
  a0_0x375ff0 = +new Date() + _0x21239b;
}
const a0_0x528092 = function () {
  if (!a0_0xacaa8 || a0_0x363ebf) {
    return;
  }
  a0_0xb8f1f9.setFontSize(a0_0xba590d * 18);
  a0_0x4bc86b.setFontSize(a0_0xba590d * 18);
  a0_0x79f66d.setFontSize(a0_0xba590d * 18);
  if (a0_0x290640) {
    playerCountX = a0_0x11866b - (20 + a0_0xb8f1f9.width) / 2;
    playerCountY = (a0_0x25d08e.miniMapCanvas.height + a0_0x24bc92 * 25) * a0_0xba590d;
  } else {
    playerCountX = a0_0x11866b - 5 - a0_0xb8f1f9.width / 2;
    playerCountY = a0_0x8379e6 - 2 - a0_0xb8f1f9.height / 2;
  }
  a0_0xb8f1f9.x = playerCountX;
  a0_0xb8f1f9.y = playerCountY;
  a0_0xb8f1f9.draw();
  playerCountY += a0_0x24bc92 * 20;
  a0_0x4bc86b.x = a0_0x11866b - (20 + a0_0x4bc86b.width) / 2;
  a0_0x4bc86b.y = playerCountY;
  a0_0x4bc86b.draw();
  a0_0x79f66d.x = a0_0x11866b - (20 + a0_0x79f66d.width) / 2;
  a0_0x79f66d.y = playerCountY;
  a0_0x79f66d.draw();
};
function a0_0x4c8f0a() {
  var _0x49b7b3 = 1;
  var _0x234f06 = (a0_0x375ff0 - a0_0x4f736f) / 1000 / _0x49b7b3;
  _0x234f06 = _0x234f06 < 0 ? 0 : _0x234f06 > 1 ? 1 : _0x234f06;
  if (_0x234f06 > 0) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = _0x234f06;
    a0_0xdd13ac.setText(a0_0x3099a9);
    a0_0xdd13ac.setColor(a0_0x4e7d32);
    if (a0_0x3099a9 == "SPECTATE MODE") {
      a0_0x51b69f = 50;
    } else {
      a0_0x51b69f = 25;
    }
    a0_0xdd13ac.setFontSize(a0_0x51b69f * a0_0xba590d);
    a0_0xdd13ac.x = a0_0x11866b / 2;
    a0_0xdd13ac.y = a0_0x8379e6 * 0.25;
    a0_0xdd13ac.draw();
    a0_0x4ef4f3.restore();
  }
  var _0x35cca6 = a0_0x5eec18 - a0_0x4f736f > 0 ? 1 : 0;
  a0_0x56beb1 += (_0x35cca6 - a0_0x56beb1) * 0.05;
  if (a0_0x56beb1 > 0.01 && a0_0x1d703e != a0_0x30b084) {
    if (a0_0x59b81f) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.translate(a0_0x11866b / 2, a0_0x8379e6 * (0.9 + (1 - a0_0x56beb1) * 0.3));
      var _0x247e2b = a0_0x2cc313("./img/howToPlay1.png");
      if (_0x247e2b) {
        var _0x1a41c8 = a0_0x8379e6 * 0.2;
        var _0x5a37c6 = _0x1a41c8 / _0x247e2b.height * a0_0x56beb1;
        a0_0x4ef4f3.drawImage(_0x247e2b, _0x247e2b.width * -0.5 * _0x5a37c6, _0x247e2b.height * -1.5 * _0x5a37c6, _0x247e2b.width * _0x5a37c6, _0x247e2b.height * _0x5a37c6);
      }
      a0_0x4ef4f3.restore();
    }
  }
  var _0x35cca6 = a0_0x409384 ? 1 : 0;
  a0_0x2666f4 += (_0x35cca6 - a0_0x2666f4) * 0.1;
  if (a0_0x2666f4 > 0.01) {
    if (a0_0x1dec92.length > 0) {
      a0_0x4ef4f3.save();
      var _0x2982a2 = 150;
      var _0x810eb4 = 0.5;
      var _0x6514a7 = false;
      if (window.matchMedia("(orientation: portrait)").matches) {
        _0x6514a7 = false;
      }
      if (window.matchMedia("(orientation: landscape)").matches) {
        _0x6514a7 = true;
      }
      if (!_0x6514a7) {
        var _0x3ce1f5 = window.innerWidth / 2;
        _0x2982a2 = Math.max(80, _0x3ce1f5 / 4);
      } else {}
      var _0x3e53b6 = _0x2982a2 * a0_0xba590d;
      var _0x5d19c1 = 10;
      var _0x5b541c = _0x3e53b6 + 20;
      var _0x3036cc = 7;
      var _0x57eb12 = Math.max(0, a0_0x1dec92.length);
      if (a0_0x1dec92.length > _0x3036cc + 1) {
        _0x57eb12 = Math.min(_0x3036cc, _0x57eb12);
      }
      var _0x59f5ea = _0x57eb12 * (_0x5d19c1 + _0x3e53b6) + (_0x5b541c - _0x3e53b6);
      var _0x5bafdf = a0_0x11866b / 2 - _0x59f5ea / 2;
      var _0x5afc7a = a0_0x8379e6 * 0.25;
      var _0x2a7a7a = _0x3e53b6 * 1.15;
      var _0x9429cf = a0_0x11866b / 2;
      _0x59f5ea = _0x57eb12 * _0x2a7a7a;
      _0x5bafdf = _0x9429cf - _0x59f5ea / 2 + _0x2a7a7a / 2;
      var _0x1c351c = 1;
      var _0x157473 = a0_0x1dec92.length;
      var _0x4eb976 = 0.5 + Math.floor(_0x157473 / _0x57eb12) / 10;
      _0x4eb976 = Math.max(0.5, _0x4eb976);
      _0x4eb976 = Math.min(0.9, _0x4eb976);
      a0_0x4ef4f3.translate(0, a0_0x8379e6 * (-_0x4eb976 * (1 - a0_0x2666f4)));
      var _0x432000 = 0;
      for (var _0x2d0dc1 = 0; _0x2d0dc1 < _0x157473; _0x2d0dc1++) {
        var _0x44221e = a0_0x1dec92[_0x2d0dc1];
        if (_0x2d0dc1 > 0 && _0x157473 > _0x3036cc + 1) {
          if (_0x2d0dc1 % _0x3036cc == 0) {
            _0x1c351c++;
            _0x432000 = 0;
            _0x5afc7a += _0x2a7a7a * 1.15;
            var _0x1c676e = _0x157473 - _0x2d0dc1;
            if (_0x1c676e < _0x3036cc) {
              _0x57eb12 = _0x1c676e;
            } else {
              _0x57eb12 = _0x3036cc;
            }
            _0x59f5ea = _0x57eb12 * _0x2a7a7a;
            _0x5bafdf = a0_0x11866b / 2 - _0x59f5ea / 2 + _0x2a7a7a / 2;
          }
        }
        if (_0x2d0dc1 == 0) {
          _0x44221e.buttonScaleF = 1.2;
        } else {
          _0x44221e.buttonScaleF = 1;
        }
        _0x44221e.w = _0x3e53b6;
        _0x44221e.h = _0x3e53b6;
        _0x44221e.x = _0x5bafdf;
        _0x44221e.y = _0x5afc7a;
        _0x5bafdf += _0x2a7a7a / 2 * _0x44221e.buttonScaleF + _0x2a7a7a / 2;
        if (_0x1c351c < a0_0x479db8.length) {
          _0x44221e.setHotKey(a0_0x479db8[_0x1c351c - 1][_0x432000].toUpperCase());
        }
        _0x432000++;
      }
      a0_0x4ef4f3.globalAlpha = a0_0x2666f4;
      for (var _0x2d0dc1 = 0; _0x2d0dc1 < a0_0x1dec92.length; _0x2d0dc1++) {
        var _0x44221e = a0_0x1dec92[_0x2d0dc1];
        _0x44221e.imgSizeF = _0x810eb4;
        _0x44221e.draw();
      }
    }
    var _0x23b8d7 = Math.max(0, a0_0x296182 - a0_0x4f736f) / 1000;
    var _0x31ebec = 1;
    if (_0x23b8d7 != 0 && _0x23b8d7 < 8) {
      var _0x4d9f4d = 1.2;
      var _0x1602d0 = 0.4;
      var _0x5ded3c = 1;
      var _0x4e2277 = (_0x5ded3c - _0x1602d0) * 0.5;
      _0x31ebec = _0x1602d0 + _0x4e2277 + _0x4e2277 * Math.sin(Math.PI * 2 / _0x4d9f4d * (a0_0x4f736f / 1000));
    }
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = a0_0x2666f4 * _0x31ebec;
    a0_0x4ef4f3.fillStyle = _0x23b8d7 != 0 && _0x23b8d7 < 8 ? "red" : "white";
    a0_0x4ef4f3.font = a0_0xba590d * 25 + "px Arial";
    a0_0x4ef4f3.lineWidth = 1;
    a0_0x4ef4f3.textAlign = "center";
    a0_0x4ef4f3.textBaseline = "middle";
    if (a0_0x1d703e != 2) {
      a0_0x4ef4f3.shadowOffsetX = 1;
      a0_0x4ef4f3.shadowOffsetY = 1;
      a0_0x4ef4f3.shadowColor = "black";
    }
    var _0x244d69 = a0_0x1dec92[0].y - a0_0x1dec92[0].w / 2;
    var _0x4fd901 = _0x23b8d7 > 0 ? " (auto in " + Math.trunc(_0x23b8d7) + "s)" : "";
    a0_0x4ef4f3.fillText(a0_0x5bc21a ? "Choose which animal to spawn as:" : "Choose an upgrade:" + _0x4fd901, a0_0x11866b / 2, _0x244d69 - a0_0x24bc92 * 25);
    a0_0x4ef4f3.restore();
    a0_0x4ef4f3.restore();
  }
  if (a0_0x4ff181 != null) {
    a0_0x4ff181.interface();
  }
  a0_0x3ffb61();
  a0_0x1e7751();
}
function a0_0x1e7751() {
  if (a0_0x4ff181 != null) {
    if (a0_0x4ff181.interfaceButtons) {
      for (var _0x511c3d = 0; _0x511c3d < a0_0x4ff181.interfaceButtons.length; _0x511c3d++) {
        var _0x45e46a = a0_0x4ff181.interfaceButtons[_0x511c3d];
        if (_0x45e46a.isVisible) {
          _0x45e46a.draw();
        }
      }
    }
  }
}
var a0_0x95c20e = [];
var a0_0x316bf2 = 0;
var a0_0x46d806 = 0;
function a0_0x2cc90d(_0x17820f, _0x172476) {
  var _0x1f155c = _0x17820f - a0_0x316bf2;
  if (_0x17820f - a0_0x316bf2 != 0 && (a0_0x4f736f - a0_0x46d806) / 1000 > 0.7) {
    a0_0x316bf2 = _0x17820f;
    a0_0x46d806 = a0_0x4f736f;
    var _0x137872 = new a0_0x24cbc0(_0x1f155c, " XP");
    a0_0x95c20e.push(_0x137872);
  }
}
var a0_0x4bf584 = 0;
function a0_0x39a9e1(_0x468201, _0x353c6a) {
  var _0x39cf95 = _0x468201 - a0_0x4bf584;
  if (_0x39cf95 > 0) {
    if (_0x468201 - a0_0x4bf584 != 0 && (a0_0x4f736f - a0_0x46d806) / 1000 > 0.7) {
      a0_0x4bf584 = _0x468201;
      a0_0x46d806 = a0_0x4f736f;
      var _0x100e73 = new a0_0x24cbc0(_0x39cf95, _0x39cf95 > 1 ? " COINS" : " COIN", "yellow");
      a0_0x95c20e.push(_0x100e73);
    }
  }
}
function a0_0xc3c819() {
  if (a0_0x520a42 && a0_0x520a42.length > 0) {
    for (i = 0; i < a0_0x520a42.length; i++) {
      var _0x8dac09 = a0_0x520a42[i];
      if (_0x8dac09.oType == a0_0x4a208d) {
        if (!_0x8dac09.droppedInHole) {
          a0_0x34033d(_0x8dac09, "brown", 2);
          a0_0x34033d(_0x8dac09, "orange", 1.5);
        }
      } else if (_0x8dac09.oType == a0_0x5d1ea1) {
        a0_0x3065b8(_0x8dac09, 3, 0.9);
      } else if (_0x8dac09.oType == a0_0x20e6c5) {
        a0_0x323130(_0x8dac09, 3, 0.9);
      } else {
        a0_0x34033d(_0x8dac09, "red", 2);
      }
    }
  }
}
function a0_0x271ca0(_0x3828c1) {
  switch (_0x3828c1) {
    case 0:
      return "tornado";
    case 1:
      return "waterspout";
    case 2:
      return "dustdevil";
    case 3:
      return "arcticwhirl";
    case 4:
      return "firedevil";
    case 5:
      return "deviltwister";
  }
  return "tornado";
}
function a0_0x3065b8(_0x2abe75, _0x584a07, _0x3205a7) {
  var _0x174296 = "/assets/s/" + a0_0x1f9ee8 + "/img/disasters/" + a0_0x271ca0(_0x2abe75.specType) + ".png";
  var _0x2a5a72 = a0_0x2cc313(_0x174296);
  if (_0x2a5a72) {
    var _0x1b1ff6 = Math.max(2, _0x2abe75.rad);
    var _0xe9e3fa = _0x1b1ff6 * _0x584a07;
    var _0x550ff5 = 0;
    if (a0_0x1d703e == a0_0x50c536) {
      var _0x5d0b1d = 1;
      var _0x21ae21 = 1000 / _0x5d0b1d;
      var _0x472acf = a0_0x4f736f % _0x21ae21 / _0x21ae21;
      _0x550ff5 = _0x472acf * 2 * Math.PI;
    }
    a0_0x582ad7.push({
      drawType: "image",
      alpha: _0x3205a7,
      x: _0x2abe75.x,
      y: _0x2abe75.y,
      rotation: _0x550ff5,
      params: [_0x2a5a72, 0 - _0xe9e3fa, 0 - _0xe9e3fa, _0xe9e3fa * 2, _0xe9e3fa * 2]
    });
  }
}
function a0_0x444657(_0x3d2c73) {
  switch (_0x3d2c73) {
    case a0_0x418e06:
      return "img/disasters/tsunami.png";
    case a0_0x3bf8ba:
      return "img/disasters/dustwave.png";
    case a0_0x5da225:
      return "img/disasters/heatwave.png";
    case a0_0x1956f9:
      return "img/disasters/heatwave.png";
    case a0_0x5ac466:
      return "img/disasters/coldwave.png";
  }
  return null;
}
function a0_0x323130(_0xfc2da5, _0x22a3ef, _0x4d026e) {
  var _0x4b265e = "/assets/s/" + a0_0x1f9ee8 + "/" + a0_0x444657(_0xfc2da5.abil);
  var _0x3bbe71 = a0_0x2cc313(_0x4b265e);
  if (_0x3bbe71) {
    var _0x457c11 = Math.max(2, _0xfc2da5.rad);
    var _0x30ea8c = _0x457c11 * _0x22a3ef;
    a0_0x582ad7.push({
      drawType: "image",
      alpha: _0x4d026e,
      x: _0xfc2da5.x,
      y: _0xfc2da5.y,
      rotation: _0xfc2da5.angle + a0_0x844a6b(a0_0x653c1),
      params: [_0x3bbe71, 0 - _0x30ea8c, 0 - _0x30ea8c, _0x30ea8c * 2, _0x30ea8c * 2]
    });
  }
}
var a0_0x653c1 = 90;
function a0_0x1fdcee(_0xfd42e8, _0x3cabf7, _0x278d6f) {
  var _0x3f17da = "/assets/s/" + a0_0x1f9ee8 + "/img/pumpkin/" + _0xfd42e8.specType + "/0.png";
  var _0x2fa7f6 = a0_0x2cc313(_0x3f17da);
  if (_0x2fa7f6) {
    var _0x4192bf = Math.max(2, _0xfd42e8.rad);
    var _0x193192 = _0x4192bf * _0x3cabf7;
    a0_0x4ef4f3.globalAlpha = 1;
    a0_0x582ad7.push({
      drawType: "image",
      x: _0xfd42e8.x,
      y: _0xfd42e8.y,
      alpha: _0x278d6f,
      params: [_0x2fa7f6, 0 - _0x193192, 0 - _0x193192, _0x193192 * 2, _0x193192 * 2]
    });
  }
}
function a0_0x2a2f94(_0x224de5, _0x41a040, _0x4e67f8) {
  if (_0x224de5) {
    var _0xa68d28 = a0_0x24bc92 * Math.max(3, _0x224de5.rad * (a0_0x39a461.width / a0_0x425049));
    var _0x5cdac6 = a0_0x11866b - (a0_0x24bc92 * 10 + a0_0x39a461.width * a0_0xba590d) + _0x224de5.x * (a0_0x39a461.width * a0_0xba590d) / a0_0x425049;
    var _0xa891c9 = a0_0x24bc92 * 10 + _0x224de5.y * (a0_0x39a461.height * a0_0xba590d) / a0_0xe585d7;
    var _0x50ee60 = _0xa68d28 + a0_0x24bc92 * 2;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.fillStyle = "black";
    a0_0x4ef4f3.arc(_0x5cdac6, _0xa891c9, _0x50ee60, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.fillStyle = _0x41a040;
    a0_0x4ef4f3.arc(_0x5cdac6, _0xa891c9, _0xa68d28, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
  }
}
function a0_0x34033d(_0x3a7df1, _0xfb1402, _0x56a308, _0x6bd004) {
  if (_0x3a7df1) {
    a0_0x4ef4f3.globalAlpha = _0x6bd004 ? _0x6bd004 : 1;
    a0_0x4ef4f3.fillStyle = _0xfb1402;
    a0_0x4ef4f3.beginPath();
    var _0x2ecb72 = a0_0x24bc92 * Math.max(2, _0x3a7df1.rad);
    a0_0x4ef4f3.arc(a0_0x11866b - (a0_0x24bc92 * 10 + a0_0x39a461.width * a0_0xba590d) + _0x3a7df1.x * (a0_0x39a461.width * a0_0xba590d) / a0_0x425049, a0_0x24bc92 * 10 + _0x3a7df1.y * (a0_0x39a461.height * a0_0xba590d) / a0_0xe585d7, _0x2ecb72 * _0x56a308, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
  }
}
function a0_0x1c5f98(_0x52069d, _0x73c108, _0x43d030 = 9999) {
  a0_0x3e3656 = null;
  if (_0x52069d.length != 0) {
    a0_0x3e3656 = document.createElement("canvas");
    var _0x2f20a3 = a0_0x3e3656.getContext("2d");
    var _0x5064ee = 55;
    var _0x308001 = 22;
    _0x5064ee = _0x5064ee + _0x308001 * _0x52069d.length;
    a0_0x3e3656.width = 270;
    a0_0x3e3656.height = _0x5064ee;
    _0x2f20a3.globalAlpha = 0.2;
    _0x2f20a3.fillStyle = "#000000";
    _0x2f20a3.fillRect(0, 0, a0_0x3e3656.width, a0_0x3e3656.height);
    _0x2f20a3.globalAlpha = 1;
    _0x2f20a3.fillStyle = "#FFFFFF";
    var _0x184ffa = a0_0xa68ef0.name;
    _0x2f20a3.font = "24px Arial";
    if (a0_0x1d703e != 2) {
      _0x2f20a3.shadowOffsetX = 1;
      _0x2f20a3.shadowOffsetY = 1;
    }
    _0x2f20a3.shadowColor = "black";
    _0x2f20a3.fillText(_0x184ffa, a0_0x3e3656.width / 2 - _0x2f20a3.measureText(_0x184ffa).width / 2, 40);
    var _0x5359db;
    _0x2f20a3.textAlign = "left";
    _0x2f20a3.font = "17px Arial";
    _0x5359db = 0;
    for (; _0x5359db < _0x52069d.length; ++_0x5359db) {
      _0x184ffa = a0_0x36b495 ? "" : _0x52069d[_0x5359db].name || "mope.io";
      if (_0x43d030 == _0x52069d[_0x5359db].rank) {
        _0x2f20a3.fillStyle = "#FEED92";
        if (a0_0x36b495) {
          _0x184ffa = "you";
        }
      } else {
        _0x2f20a3.fillStyle = "#FFFFFF";
      }
      _0x184ffa = _0x52069d[_0x5359db].rank + ". " + _0x184ffa + " (" + a0_0x4cf280(_0x52069d[_0x5359db].score) + ")";
      _0x2f20a3.fillText(_0x184ffa, 15, 65 + _0x308001 * _0x5359db);
    }
  }
}
function a0_0x376070(_0x278183, _0x178ea4) {
  const _0x5a5534 = _0x278183.some(_0x26bd63 => _0x26bd63.rank === _0x178ea4.rank);
  if (!_0x5a5534) {
    _0x278183.pop();
    _0x278183.push(_0x178ea4);
  }
  return _0x278183;
}
var a0_0x3393a5 = true;
function a0_0x4b95c7(_0x511091) {
  a0_0x3393a5 = _0x511091;
  document.getElementById("startMenuWrapper").style.display = _0x511091 ? "block" : "none";
}
function a0_0x2cc4ab() {
  return;
}
function a0_0x46d616() {
  a0_0x4b95c7(true);
  document.getElementById("moneyRectangle").style.marginTop = "55px";
  document.getElementById("mopeMenu").style.display = "block";
}
function a0_0x4d2276() {
  if (a0_0x53b4b6) {
    a0_0x5d6549.abil_usable = a0_0x5aec24;
    a0_0x5d6549.abil_recharging = a0_0x3071b7;
    a0_0x5d6549.abil_possible = abil_possible;
    a0_0x5d6549.abil_active = a0_0x238d98;
    a0_0x5d6549.abil_Type = a0_0x4b2287;
    a0_0x3b4c01.abil_usable = a0_0x54c255;
    a0_0x3b4c01.abil_recharging = a0_0x220216;
    a0_0x3b4c01.abil_possible = a0_0x5ebb03;
    a0_0x3b4c01.abil_active = a0_0x597aef;
    a0_0x3b4c01.abil_Type = a0_0x3cbe52;
    if (a0_0x220216) {
      a0_0x3b4c01.abil_rechargeTotalT = a0_0x4d1426;
      a0_0x3b4c01.abil_rechargeEndT = a0_0x41f910;
    }
    if (a0_0x3071b7) {
      a0_0x5d6549.abil_rechargeTotalT = a0_0x5bb949;
      a0_0x5d6549.abil_rechargeEndT = a0_0x5771b2;
    }
  } else {
    a0_0x3b4c01.abil_usable = a0_0x5aec24;
    a0_0x3b4c01.abil_recharging = a0_0x3071b7;
    a0_0x3b4c01.abil_possible = abil_possible;
    a0_0x3b4c01.abil_active = a0_0x238d98;
    a0_0x3b4c01.abil_Type = a0_0x4b2287;
    a0_0x5d6549.abil_usable = a0_0x54c255;
    a0_0x5d6549.abil_recharging = a0_0x220216;
    a0_0x5d6549.abil_possible = a0_0x5ebb03;
    a0_0x5d6549.abil_active = a0_0x597aef;
    a0_0x5d6549.abil_Type = a0_0x3cbe52;
    if (a0_0x3071b7) {
      a0_0x3b4c01.abil_rechargeTotalT = a0_0x5bb949;
      a0_0x3b4c01.abil_rechargeEndT = a0_0x5771b2;
    }
    if (a0_0x220216) {
      a0_0x5d6549.abil_rechargeTotalT = a0_0x4d1426;
      a0_0x5d6549.abil_rechargeEndT = a0_0x41f910;
    }
  }
}
function a0_0x52538f() {
  console.log("client objs reset!");
  a0_0x13f254 = [];
  a0_0x3d5ac5 = {};
  a0_0x45e0de = [];
}
function a0_0x4d940a(_0x22c653, _0x1af70f, _0x2c66de, _0x4e8413, _0x2bd939) {
  _0x22c653.fillText(_0x1af70f, _0x4e8413, _0x2bd939);
  _0x22c653.fillText(": " + _0x2c66de, _0x4e8413 + 120, _0x2bd939);
}
function a0_0xc2da34() {
  if (!a0_0x4b26cb || disable1v1Button) {
    return;
  }
  var _0x492923 = new a0_0x49f976(2);
  _0x492923.writeUInt8(52);
  _0x492923.writeUInt8(0);
  a0_0x217e77(_0x492923);
}
function a0_0x1a1da0() {
  if (a0_0x18a433) {
    if (a0_0x314917 == null) {
      a0_0x314917 = new a0_0x45352d(0, 0, a0_0xba590d * 60, a0_0xba590d * 60, "Invite for 1v1", 30);
      a0_0x314917.showLabeleOnHover = true;
      a0_0x314917.textShadow = true;
      a0_0x314917.drawTextOnHowever = function () {
        if (a0_0xafa500 > 0.01) {
          return;
        }
        this.drawText(this.w / 2, this.h + this.h / 2);
      };
      a0_0x314917.onClick = function () {
        if (a0_0xafa500 > 0.01) {
          return;
        }
        if (!this.clicked) {
          this.isVisible = false;
          this.clicked = true;
          this.isHighLighted = false;
          a0_0xc2da34();
        }
      };
      a0_0x314917.onMouseMove = function () {};
      a0_0x314917.update = function () {
        this.x = a0_0x11866b / 2 - this.w / 2;
        this.y = a0_0xba590d * 45 + this.h / 2;
      };
      a0_0x314917.onInterfaceReset = function () {
        this.isVisible = false;
        a0_0x314917 = null;
      };
      a0_0x314917.onAfterDraw = function () {
        var _0x1e2f98 = a0_0x2cc313("img/icons/1v1.png");
        if (_0x1e2f98) {
          a0_0x4ef4f3.save();
          var _0x8c0bc5 = this.w * 0.8;
          var _0x1c43f1 = (this.w - _0x8c0bc5) / 2;
          a0_0x4ef4f3.drawImage(_0x1e2f98, this.x + _0x1c43f1, this.y + _0x1c43f1, _0x8c0bc5, _0x8c0bc5);
          a0_0x4ef4f3.restore();
        }
        if (a0_0xafa500 > 0.01) {
          this.alpha = 0.1;
          rechargeTotalT = 30000;
          rechargeEndT = +new Date() + a0_0xafa500 * 1000;
          var _0x419fc3 = Math.max(0, rechargeEndT - a0_0x4f736f);
          var _0x2c9559 = _0x419fc3 / rechargeTotalT;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.fillStyle = "#000000";
          var _0xdac6aa = this.x;
          var _0x2608e1 = this.y;
          var _0x239c8d = this.w;
          var _0x176f08 = this.h * 0.5;
          a0_0x4ef4f3.globalAlpha = 0.1;
          a0_0x4ef4f3.fillRect(_0xdac6aa, _0x2608e1 + _0x176f08 / 2, _0x239c8d, _0x176f08);
          a0_0x4ef4f3.globalAlpha = 1;
          a0_0x4ef4f3.fillStyle = "#F3C553";
          a0_0x4ef4f3.fillRect(_0xdac6aa, _0x2608e1 + _0x176f08 / 2, _0x239c8d * _0x2c9559, _0x176f08);
          a0_0x4ef4f3.restore();
        } else {
          this.alpha = disable1v1Button ? 0.1 : 1;
        }
      };
      a0_0x4ff181.interfaceButtons.push(a0_0x314917);
    } else if (a0_0x314917 != null) {
      a0_0x314917.isVisible = a0_0x4b26cb && !a0_0x409384 && !a0_0x1528ea;
      if (a0_0x314917.isVisible) {
        a0_0x314917.clicked = false;
      }
      a0_0x314917.draw();
    }
  } else {
    a0_0x314917 = null;
  }
}
function a0_0x4ac8a1() {
  var _0x4c8367 = document.getElementById("optionsDiv");
  let _0x31b3e0 = _0x4c8367.style.display == "block";
  if (!_0x31b3e0) {}
  _0x4c8367.style.display = _0x31b3e0 ? "none" : "block";
  var _0x157ae6 = a0_0x3fed03("audio/click.mp3");
  if (_0x157ae6) {
    try {
      _0x157ae6.play();
    } catch (_0xa0f4b1) {}
  }
}
document.getElementById("closeBut").onclick = function () {
  a0_0x24c5c7();
};
function a0_0x27384d() {
  var _0x2e4624 = document.getElementById("button_mute_img");
  if (_0x2e4624) {
    _0x2e4624.src = a0_0x115add ? "img/sound_off.png" : "img/sound_on.png";
    if (a0_0xcd261a) {
      a0_0xcd261a = false;
    } else {
      var _0x4ed1a8 = new Audio("audio/tap.mp3");
      _0x4ed1a8.volume = a0_0x115add ? 0.15 : 0.5;
      _0x4ed1a8.play();
    }
  }
}
function a0_0x50196c(_0x559975, _0x1b6630, _0x2c8990) {
  var _0x4d1e11 = document.getElementById("optionsContainer");
  var _0x1ab802 = document.createElement("label");
  _0x1ab802.innerHTML = "<input type='checkbox' id='" + _0x559975 + "'><span style='color: " + _0x2c8990 + ";''>" + _0x1b6630 + "</span>";
  _0x4d1e11.appendChild(_0x1ab802);
}
a0_0x50196c("options_noImages", "No Animal images  ", "black");
a0_0x50196c("options_noNames", "No Names & Chat  ", "black");
a0_0x50196c("options_disableFilter", "Disable Profanity Filter", "black");
if (a0_0x15377d) {
  a0_0x50196c("options_noJoystick", "No Joystick", "#194614");
  a0_0x50196c("options_leftHanded", "LEFT-handed Joystick", "#194614");
}
if (window.localStorage) {
  a0_0x36b495 = window.localStorage.getItem("options_noNames") + 0 > 0;
  var a0_0x145900 = document.getElementById("options_noNames");
  if (a0_0x145900) {
    a0_0x145900.checked = a0_0x36b495;
  }
  a0_0x36dadf = window.localStorage.getItem("options_noImages") + 0 > 0;
  var a0_0x145900 = document.getElementById("options_noImages");
  if (a0_0x145900) {
    a0_0x145900.checked = a0_0x36dadf;
  }
  a0_0x2b92f6 = window.localStorage.getItem("options_disableFilter") + 0 > 0;
  var a0_0x145900 = document.getElementById("options_disableFilter");
  if (a0_0x145900) {
    a0_0x145900.checked = a0_0x2b92f6;
  }
  a0_0x3d2c66 = window.localStorage.getItem("options_noJoystick") + 0 > 0;
  var a0_0x145900 = document.getElementById("options_noJoystick");
  if (a0_0x145900) {
    a0_0x145900.checked = a0_0x3d2c66;
  }
  a0_0x1b259d = window.localStorage.getItem("options_leftHanded") + 0 > 0;
  var a0_0x145900 = document.getElementById("options_leftHanded");
  if (a0_0x145900) {
    a0_0x145900.checked = a0_0x1b259d;
  }
  a0_0x115add = window.localStorage.getItem("options_muted") + 0 > 0;
  a0_0x27384d();
  a0_0x56e2b7 = window.localStorage.getItem("options_snowfall") + 0 > 0;
  var a0_0x145900 = document.getElementById("options_snowfall");
  if (a0_0x145900) {
    a0_0x145900.checked = a0_0x56e2b7;
  }
}
var a0_0x219ed4 = document.getElementById("button_mute");
if (a0_0x219ed4) {
  a0_0x219ed4.onclick = function () {
    a0_0x115add = !a0_0x115add;
    a0_0x27384d();
    try {
      window.localStorage.setItem("options_muted", a0_0x115add ? 1 : 0);
    } catch (_0x23e2fe) {}
  };
}
document.getElementById("settingsButton").onclick = function () {
  a0_0x4ac8a1();
};
var a0_0x145900 = document.getElementById("graphicsBut_low");
if (a0_0x145900) {
  a0_0x145900.onclick = function () {
    a0_0x40fa79(a0_0x30b084);
    a0_0x2e715b();
    var _0xb63c9f = new Audio("audio/tap.mp3");
    _0xb63c9f.volume = a0_0x115add ? 0.15 : 0.5;
    _0xb63c9f.play();
  };
}
var a0_0x145900 = document.getElementById("graphicsBut_med");
if (a0_0x145900) {
  a0_0x145900.onclick = function () {
    a0_0x40fa79(a0_0x4db98f);
    a0_0x2e715b();
    var _0xf089ba = new Audio("audio/tap.mp3");
    _0xf089ba.volume = a0_0x115add ? 0.15 : 0.5;
    _0xf089ba.play();
  };
}
var a0_0x145900 = document.getElementById("graphicsBut_hd");
if (a0_0x145900) {
  a0_0x145900.onclick = function () {
    a0_0x40fa79(a0_0x50c536);
    a0_0x2e715b();
    var _0x5450ab = new Audio("audio/tap.mp3");
    _0x5450ab.volume = a0_0x115add ? 0.15 : 0.5;
    _0x5450ab.play();
  };
}
var a0_0x219ed4 = document.getElementById("options_noImages");
if (a0_0x219ed4) {
  a0_0x219ed4.onchange = function () {
    if (window.localStorage) {
      a0_0x36dadf = this.checked;
      try {
        window.localStorage.setItem("options_noImages", a0_0x36dadf ? 1 : 0);
      } catch (_0xdf3a96) {}
    }
  };
}
var a0_0x219ed4 = document.getElementById("options_disableFilter");
if (a0_0x219ed4) {
  a0_0x219ed4.onchange = function () {
    if (window.localStorage) {
      a0_0x2b92f6 = this.checked;
      try {
        window.localStorage.setItem("options_disableFilter", a0_0x2b92f6 ? 1 : 0);
      } catch (_0x1c9b96) {}
    }
  };
}
var a0_0x219ed4 = document.getElementById("options_noNames");
if (a0_0x219ed4) {
  a0_0x219ed4.onchange = function () {
    if (window.localStorage) {
      a0_0x36b495 = this.checked;
      try {
        window.localStorage.setItem("options_noNames", a0_0x36b495 ? 1 : 0);
      } catch (_0x1b784c) {}
    }
  };
}
var a0_0x219ed4 = document.getElementById("options_noJoystick");
if (a0_0x219ed4) {
  a0_0x219ed4.onchange = function () {
    if (window.localStorage) {
      a0_0x3d2c66 = this.checked;
      try {
        window.localStorage.setItem("options_noJoystick", a0_0x3d2c66 ? 1 : 0);
      } catch (_0x21d2f2) {}
      a0_0x2e715b();
    }
  };
}
var a0_0x219ed4 = document.getElementById("options_leftHanded");
if (a0_0x219ed4) {
  a0_0x219ed4.onchange = function () {
    if (window.localStorage) {
      a0_0x1b259d = this.checked;
      try {
        window.localStorage.setItem("options_leftHanded", a0_0x1b259d ? 1 : 0);
      } catch (_0x216109) {}
      a0_0x2e715b();
      console.log("options_leftHanded: saved as " + window.localStorage.getItem("options_leftHanded"));
    }
  };
}
var a0_0x3d2d9a = [];
function a0_0x4b1c45() {
  if (a0_0x10bd3d) {
    a0_0x140fa5 += 1;
    console.log("Reconnecting to session failed ... " + a0_0x140fa5 + " fails now");
  } else {
    console.log("wasnt reconnecting- first time ws DCed");
  }
  if (a0_0x274ec9) {
    console.log("Random ws DC, reconnecting with session ID " + a0_0x555009 + "...");
  }
  a0_0x14f2df = false;
  if (!a0_0x274ec9) {
    a0_0x290640 = false;
    a0_0x51a46a = false;
    console.log("Connection to server closed/failed!");
    if (a0_0x5732ca) {
      a0_0x5732ca = false;
      return;
    } else {
      document.getElementById("connecting").style.display = "block";
    }
    a0_0x4b95c7(true);
  }
  if (!a0_0x274ec9) {
    if (a0_0x3d2d9a.indexOf(a0_0xa68ef0) == -1) {
      a0_0x3d2d9a.push(a0_0xa68ef0);
    }
    a0_0x194b8f += 1;
    if (a0_0x5aa2a0) {
      clearTimeout(a0_0x5aa2a0);
    }
    a0_0x5aa2a0 = setTimeout(function () {
      if (a0_0x194b8f > 1) {
        console.log("too many fails, trying next server (in region)");
        a0_0x23f59b();
      } else {
        a0_0x6c945c(a0_0xa68ef0);
      }
    }, 1000);
  } else {
    var _0x1a830d = 200;
    if (a0_0x10bd3d) {
      if (a0_0x140fa5 > 3) {
        _0x1a830d = 1000;
        console.log("over 5 session re-join fails, slowing down...");
      }
      if (a0_0x140fa5 > 23) {
        console.log("Too many session-rejoin fails, giving up and rejoining a fresh game session");
        a0_0x274ec9 = false;
        a0_0x23f59b();
        return;
      }
    }
    if (a0_0x5aa2a0) {
      clearTimeout(a0_0x5aa2a0);
    }
    a0_0x5aa2a0 = setTimeout(function () {
      a0_0x6c945c(a0_0xa68ef0);
    }, _0x1a830d);
  }
}
function a0_0x4f6fe0(_0x16fdd3) {
  this.interfaceType = _0x16fdd3;
  this.data = {};
  this.interfaceCanvas = null;
  this.interfaceCanvas_pos = 0;
  this.expiresT = 0;
  this.maxDur = 150;
  this.interfaceShowT = 0;
  this.animalType = a0_0x3d5ac5[a0_0x1c918d].animalType;
  this.aniRad = a0_0x3d5ac5[a0_0x1c918d].rad;
  this.customButtons = [];
  this.loadData = function (_0x50a190) {
    if (this.interfaceType == 1) {
      this.maxDur = _0x50a190.readUInt8();
      this.data = {};
      this.data[a0_0x257f12] = _0x50a190.readUInt8();
      this.data[a0_0x1b4846] = _0x50a190.readUInt8();
      this.data[a0_0x15fd74] = _0x50a190.readUInt8();
      this.data[a0_0x30bc31] = _0x50a190.readUInt8();
      this.data[a0_0x415f2f] = _0x50a190.readUInt8();
      this.data[a0_0x527dbe] = _0x50a190.readUInt8();
      this.data[a0_0x472c8a] = _0x50a190.readUInt8();
      this.data[a0_0x256160] = _0x50a190.readUInt8();
      this.data[a0_0xbf4f2c] = _0x50a190.readUInt8();
      this.data[a0_0x4e6cde] = _0x50a190.readUInt8();
      this.data[a0_0x5f3a6f] = _0x50a190.readUInt8();
      this.data[a0_0x38090e] = _0x50a190.readUInt8();
      this.data[a0_0x47c97f] = _0x50a190.readUInt8();
      this.rows = 13;
      this.data.anis = new Array();
      this.data.anis.push(a0_0x5f3a6f);
      this.data.anis.push(a0_0x38090e);
      this.data.anis.push(a0_0x47c97f);
      this.data.anis.push(a0_0x257f12);
      this.data.anis.push(a0_0x1b4846);
      this.data.anis.push(a0_0x15fd74);
      this.data.anis.push(a0_0x30bc31);
      this.data.anis.push(a0_0x415f2f);
      this.data.anis.push(a0_0x527dbe);
      this.data.anis.push(a0_0x472c8a);
      this.data.anis.push(a0_0x256160);
      this.data.anis.push(a0_0xbf4f2c);
      this.data.anis.push(a0_0x4e6cde);
    } else {
      this.data = {};
      this.maxDur = _0x50a190.readUInt8();
      this.data.selected = _0x50a190.readUInt8();
      this.data[0] = _0x50a190.readUInt8();
      this.data[1] = _0x50a190.readUInt8();
      this.data[2] = _0x50a190.readUInt8();
      this.data[3] = 0;
      this.rows = 4;
    }
    this.expiresT = a0_0x4f736f + this.maxDur * 1000;
    if (this.interfaceCanvas == null) {
      this.interfaceCanvas = document.createElement("canvas");
      this.interfaceCanvas.setAttribute("id", "playerCustomCanvas");
      this.ctx = this.interfaceCanvas.getContext("2d");
    }
  };
  this.getTitle = function () {
    if (this.interfaceType == 1) {
      return "APEX KILLS";
    } else if (this.interfaceType == 2) {
      return "CHOOSE MAIN ABILITY";
    } else if (this.interfaceType == 3) {
      return "CHOOSE PASSIVE ABILITY";
    } else {
      return "OPTIONS";
    }
  };
  this.getInterfaceSize = function () {
    if (this.animalType == a0_0x257f12) {
      return this.aniRad * a0_0xba590d;
    } else {
      return this.aniRad * 2 * a0_0xba590d;
    }
  };
  this.drawCircles = function (_0x594479, _0xf6ed50, _0x544e73) {
    if (this.animalType == a0_0x257f12) {
      return this.bdInterface(_0x594479, _0xf6ed50, _0x544e73);
    } else {
      return this.getInterface(_0x594479, _0xf6ed50, _0x544e73);
    }
  };
  this.bdInterface = function (_0x4055ea, _0x3573f6, _0x345571) {
    var _0x3d9820 = 3.1;
    this.ctx.save();
    this.ctx.globalAlpha = 0.05;
    var _0x124afe = _0x345571 * _0x3d9820;
    this.ctx.lineWidth = 2;
    this.ctx.fillStyle = "black";
    this.ctx.beginPath();
    this.ctx.arc(_0x4055ea, _0x3573f6, _0x124afe - _0x345571 / 2, 0, Math.PI * 2, false);
    this.ctx.arc(_0x4055ea, _0x3573f6, _0x124afe + _0x345571 / 2, Math.PI * 2, 0, true);
    this.ctx.fill();
    this.ctx.globalAlpha = 0.1;
    this.ctx.strokeStyle = "black";
    this.ctx.beginPath();
    this.ctx.arc(_0x4055ea, _0x3573f6, _0x124afe + _0x345571 / 2, Math.PI * 2, 0);
    this.ctx.stroke();
    this.ctx.beginPath();
    this.ctx.arc(_0x4055ea, _0x3573f6, _0x124afe - _0x345571 / 2, 0, Math.PI * 2, false);
    this.ctx.stroke();
    this.ctx.restore();
    return _0x124afe;
  };
  this.getInterface = function (_0x356f36, _0xe259ad, _0x4f73dc) {
    var _0x52b222 = 3;
    var _0x1775d3 = _0x4f73dc * _0x52b222;
    this.ctx.lineWidth = 4;
    this.ctx.fillStyle = "red";
    this.ctx.globalAlpha = 0.1;
    this.ctx.beginPath();
    var _0x2e6008 = _0x4f73dc * 0.9;
    var _0xd36756 = _0x4f73dc * 1.9;
    this.ctx.arc(_0x356f36, _0xe259ad, _0x1775d3 - _0x2e6008, 0, Math.PI * 2, false);
    this.ctx.arc(_0x356f36, _0xe259ad, _0x1775d3 + _0xd36756, Math.PI * 2, 0, true);
    this.ctx.fill();
    this.ctx.globalAlpha = 0.1;
    this.ctx.strokeStyle = "blue";
    this.ctx.beginPath();
    this.ctx.arc(_0x356f36, _0xe259ad, _0x1775d3 + _0xd36756, Math.PI * 2, 0);
    this.ctx.stroke();
    this.ctx.beginPath();
    this.ctx.arc(_0x356f36, _0xe259ad, _0x1775d3 - _0x2e6008, 0, Math.PI * 2, false);
    this.ctx.stroke();
    return _0x1775d3;
  };
  this.drawTitle = function (_0x5721b2) {
    this.ctx.globalAlpha = 1;
    this.ctx.fillStyle = "#FFFFFF";
    this.ctx.font = "30px Arial";
    var _0x1dda8e = this.getTitle();
    var _0x5ae2ab = (_0x5721b2 + 80) * a0_0xba590d;
    var _0x273fec = this.interfaceCanvas.width / 2 - this.ctx.measureText(_0x1dda8e).width / 2;
    if (this.animalType != a0_0x257f12) {
      _0x5ae2ab -= a0_0xba590d * 20;
    }
    this.ctx.fillText(_0x1dda8e, _0x273fec, _0x5ae2ab);
  };
  this.display = function () {
    if (this.interfaceCanvas == null) {
      return;
    }
    if (this.interfaceShowT == 0) {
      this.interfaceShowT = a0_0x4f736f;
    }
    var _0x51c82b = 55;
    var _0x1e3aeb = 5;
    var _0x3b97b1 = 0;
    var _0x5d3121 = this.getInterfaceSize();
    var _0x297d2b = a0_0xba590d * 130 + (_0x5d3121 + a0_0xba590d * 10) * 6;
    var _0x2607c4 = _0x297d2b * 1.3;
    _0x51c82b = _0x2607c4 + _0x1e3aeb * 2;
    this.interfaceCanvas.width = _0x297d2b + _0x1e3aeb * 2;
    this.interfaceCanvas.height = _0x51c82b;
    var _0x3aeb92 = 200;
    this.interfaceCanvas_pos = _0x3aeb92;
    this.ctx.globalAlpha = 0.1;
    this.ctx.fillStyle = "#000000";
    if (this.interfaceType != 1) {
      this.ctx.fillRect(0, 0, this.interfaceCanvas.width, this.interfaceCanvas.height);
    }
    this.drawTitle(_0x1e3aeb);
    _0x3aeb92 = 100;
    var _0x1c5472 = 360 / this.rows;
    var _0x43e8c4 = this.interfaceCanvas.width / 2;
    var _0x48f68f = this.interfaceCanvas.height / 2;
    this.ctx.save();
    var _0x57f8b9 = 3.1;
    var _0x29d120 = _0x5d3121 * _0x57f8b9;
    var _0x48e936 = Math.PI * 2 / this.rows;
    var _0x36ba81 = 0;
    var _0x4a35b9 = (a0_0x4f736f - this.interfaceShowT) / 1000;
    var _0x402288 = 2;
    var _0x26f245 = 8;
    _0x36ba81 = _0x26f245 * Math.sin(Math.PI * 2 / _0x402288 * _0x4a35b9);
    if (this.interfaceType == 1) {
      this.bdInterface(_0x43e8c4, _0x48f68f, _0x5d3121);
    }
    for (r = 0; r < this.rows; r++) {
      var _0x48e357 = _0x48f68f + Math.sin(_0x1c5472 * r * (Math.PI / 180) - a0_0x844a6b(180)) * _0x29d120;
      var _0x215798 = _0x43e8c4 + Math.cos(_0x1c5472 * r * (Math.PI / 180) - a0_0x844a6b(180)) * _0x29d120;
      var _0x40bb1f = (r - 1) * _0x48e936 - a0_0x844a6b(180);
      var _0x3c2c0c = _0x40bb1f + _0x48e936;
      if (this.interfaceType == 1) {
        ani = this.data.anis[r];
        var _0x537d0b = this.getSkinForAniKills(ani);
        var _0x20ba3b = a0_0x3d5ac5[a0_0x1c918d].getSkinImageObjForSeason(_0x537d0b, 1);
        if (_0x20ba3b) {
          var _0x2c2674 = this.data[ani] > 0;
          this.ctx.save();
          this.ctx.globalAlpha = _0x2c2674 ? 1 : 0.3;
          var _0x50ccfd = _0x5d3121;
          if (_0x2c2674) {
            this.ctx.shadowOffsetX = 0;
            this.ctx.shadowOffsetY = 0;
            this.ctx.shadowColor = "black";
            this.ctx.shadowBlur = 8;
            _0x50ccfd -= _0x36ba81;
          }
          this.ctx.drawImage(_0x20ba3b, _0x215798 - _0x50ccfd / 2, _0x48e357 - _0x50ccfd / 2, _0x50ccfd, _0x50ccfd);
          this.ctx.restore();
        } else {}
      } else {
        this.showInterfaceButton(_0x43e8c4, _0x48f68f, this.data[r], _0x215798, _0x48e357);
      }
    }
    this.ctx.restore();
    if (this.interfaceCanvas != null) {
      if (this.interfaceCanvas.width) {
        var _0x2bf27e = (a0_0x4f736f - this.interfaceShowT) / 600;
        var _0xf0ad4e = (this.expiresT - a0_0x4f736f) / 600;
        if (_0xf0ad4e < 1) {
          _0x2bf27e = Math.max(0, _0xf0ad4e);
        }
        var _0x1d5359 = Math.min(1, _0x2bf27e);
        var _0x47933d = this.interfaceCanvas.width * _0x1d5359;
        var _0x492683 = this.interfaceCanvas.height * _0x1d5359;
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.globalAlpha = _0x1d5359;
        this.interfaceCanvas.screenX = a0_0x11866b / 2 - _0x47933d / 2;
        this.interfaceCanvas.screenY = a0_0x8379e6 / 2 - _0x492683 / 2;
        this.updateButtons();
        a0_0x4ef4f3.drawImage(this.interfaceCanvas, a0_0x11866b / 2 - _0x47933d / 2, a0_0x8379e6 / 2 - _0x492683 / 2, _0x47933d, _0x492683);
        a0_0x4ef4f3.restore();
        if (a0_0x4f736f > this.expiresT || !a0_0x290640) {
          a0_0x4be2c8.destroy();
        }
      }
    }
  };
  this.destroy = function () {
    if (this.customButtons != null && this.customButtons.length > 0) {
      for (i = 0; i < this.customButtons.length; i++) {
        this.customButtons[i].isVisible = false;
      }
    }
    this.interfaceCanvas = null;
    this.ctx = null;
    a0_0x4be2c8 = null;
    console.log("custom interface canvas destroyed!");
  };
  this.updateButtons = function () {
    var _0x2c2de0 = this.interfaceCanvas.width;
    var _0x531770 = this.interfaceCanvas.height;
    var _0x135482 = a0_0x11866b / 2 - _0x2c2de0 / 2;
    var _0x252a04 = a0_0x8379e6 / 2 - _0x531770 / 2;
    if (this.customButtons != null && this.customButtons.length > 0) {
      for (i = 0; i < this.customButtons.length; i++) {
        this.customButtons[i].screenX = _0x135482;
        this.customButtons[i].screenY = _0x252a04;
      }
    }
  };
  this.drawAngularInterface = function (_0xb2f8b4, _0x5f5db8, _0x2b9850, _0x593a9a, _0x596225, _0x582920) {
    this.ctx.save();
    this.ctx.globalAlpha = 0.2;
    this.ctx.lineWidth = _0x2b9850;
    var _0x1dcae4 = Math.PI * 2 / this.rows;
    var _0x314793 = a0_0x844a6b(-90);
    var _0x3ff3d4 = ["red", "green", "blue", "purple"];
    for (r = 1; r <= this.rows; r++) {
      this.ctx.beginPath();
      if (this.interfaceType == 1) {
        this.ctx.strokeStyle = "black";
      } else {
        this.ctx.strokeStyle = _0x3ff3d4[r - 1];
      }
      this.ctx.arc(_0xb2f8b4, _0x5f5db8, _0x596225 - _0x593a9a * _0x582920, _0x314793, _0x314793 + _0x1dcae4);
      this.ctx.stroke();
      _0x314793 += _0x1dcae4;
    }
    this.ctx.restore();
  };
  this.getSkinForAniKills = function (_0x385b11) {
    switch (_0x385b11) {
      case a0_0x257f12:
        return "./skins/volcano/blackdragon/0/blackdragon.png";
      case a0_0x15fd74:
        return "./skins/land/dinomonster/0/dinomonster.png";
      case a0_0x415f2f:
        return "./skins/arctic/icemonster/0/icemonster.png";
      case a0_0x1b4846:
        return "./skins/volcano/landmonster/0/0/landmonster.png";
      case a0_0x30bc31:
        return "./skins/ocean/seamonster/0/seamonster.png";
      case a0_0x527dbe:
        return "./skins/desert/scorpion/0/giantscorpion.png";
      case a0_0x38090e:
        return "./skins/arctic/yeti/0/yeti.png";
      case a0_0x256160:
        return "./skins/land/dragon/0/0/dragon.png";
      case a0_0xbf4f2c:
        return "./skins/land/trex/0/trex.png";
      case a0_0x4e6cde:
        return "./skins/ocean/kraken/0/0/kraken.png";
      case a0_0x5f3a6f:
        return "./skins/ocean/kingcrab/0/kingcrab.png";
      case a0_0x472c8a:
        return "./skins/volcano/phoenix/0/phoenix.png";
      case a0_0x47c97f:
        return "./skins/desert/pterodactyl/0/pterodactyl_ability.png";
    }
  };
  this.updateExpiry = function () {
    var _0x374c8d = (this.expiresT - a0_0x4f736f) / 1000;
    if (_0x374c8d < this.maxDur - 1 && _0x374c8d > 1) {
      this.expiresT = a0_0x4f736f + 1000;
    }
  };
  this.getBtnTitle = function (_0x4845a7) {
    switch (_0x4845a7) {
      case a0_0x6ac54f:
        return "Fly High";
      case a0_0x5a17e7:
        return "Gives Gifts";
      case a0_0x4c2a55:
        return "Flying Sleigh";
      default:
        return "Close";
    }
  };
  this.buttons = {};
  this.sendSelection = function (_0xa460fc) {
    if (this.customButtons != null && this.customButtons.length > 0) {
      for (i = 0; i < this.customButtons.length; i++) {
        this.customButtons[i].resetSelection();
      }
    }
    _0xa460fc.setSelection();
    var _0x4a8d79 = new a0_0x49f976(3);
    _0x4a8d79.writeUInt8(a0_0x550c96);
    _0x4a8d79.writeUInt8(this.interfaceType);
    _0x4a8d79.writeUInt8(_0xa460fc.buttonID);
    a0_0x217e77(_0x4a8d79);
  };
  this.showInterfaceButton = function (_0x27f713, _0x381bcd, _0xf56e59, _0x4c6f55, _0x13a05a) {
    var _0x294d14 = this.buttons[_0xf56e59];
    if (_0x294d14 === undefined || _0x294d14 == null) {
      var _0x1c182a = this.getBtnTitle(_0xf56e59);
      var _0x200083 = _0xf56e59 == 0 ? {
        w: 100,
        h: 60
      } : {
        w: 100,
        h: 100
      };
      _0x294d14 = this.buttons[_0xf56e59] = new a0_0x45352d(_0x4c6f55, _0x13a05a, _0x200083.w, _0x200083.h, _0x1c182a, 30, this.ctx);
      _0x294d14.buttonID = _0xf56e59;
      _0x294d14.selected = false;
      _0x294d14.isVisible = true;
      _0x294d14.textShadow = true;
      _0x294d14.screenX = 0;
      _0x294d14.screenY = 0;
      if (_0xf56e59 != 0) {
        _0x294d14.drawButtonRect = false;
        _0x294d14.showLabeleOnHover = true;
      }
      _0x294d14.testPosHitsButton = function (_0x2f53d3, _0x3d66a1) {
        var _0x54ffcc = this.screenX + this.x;
        var _0xb9d138 = _0x54ffcc + this.w;
        var _0xc45496 = this.screenY + this.y;
        var _0x5e93e0 = _0xc45496 + this.h;
        if (_0x2f53d3 < _0x54ffcc || _0x2f53d3 > _0xb9d138) {
          return false;
        }
        if (_0x3d66a1 < _0xc45496 || _0x3d66a1 > _0x5e93e0) {
          return false;
        } else {
          return true;
        }
      };
      _0x294d14.onClick = function () {
        console.log("clicked: " + this.label);
        if (!this.clicked) {
          this.clicked = true;
          this.isHighLighted = false;
        }
        if (this.label == "Close") {
          a0_0x4be2c8.destroy();
        } else {
          a0_0x4be2c8.sendSelection(this);
        }
      };
      _0x294d14.setSelection = function () {
        this.labelColor = "yellow";
        this.selected = true;
      };
      _0x294d14.resetSelection = function () {
        this.labelColor = "white";
        this.selected = false;
      };
      _0x294d14.beforeDrawText = function () {
        var _0x3da968 = this.w / 2;
        var _0x3b004a = this.h / 2;
        this.buttonTXT.x = this.screenX + this.x + _0x3da968;
        if (this.buttonID == 0) {
          this.buttonTXT.y = this.screenY + this.y + _0x3b004a;
        } else {
          this.buttonTXT.y = this.screenY + this.y - _0x3b004a / 2;
        }
      };
      _0x294d14.onMouseMove = function () {};
      _0x294d14.update = function () {
        this.x = _0x4c6f55 - this.w / 2;
        this.y = _0x13a05a - this.h / 2;
      };
      _0x294d14.onInterfaceReset = function () {
        this.isVisible = false;
      };
      _0x294d14.onAfterDraw = function () {
        var _0x15b8a3 = a0_0x3d5ac5[a0_0x1c918d];
        if (_0x15b8a3) {
          var _0x581c45 = _0x15b8a3.getAbilityInfo(this.buttonID);
          if (_0x581c45) {
            var _0x1109db = "assets/s/" + _0x581c45.mopeSeasonID + "/" + _0x581c45.abilImg;
            var _0x500fb6 = a0_0x2cc313(_0x1109db);
            if (_0x500fb6) {
              a0_0x4ef4f3.save();
              if (this.isHighLighted || this.selected) {
                a0_0x4ef4f3.shadowBlur = 10;
                a0_0x4ef4f3.shadowOffsetX = 0;
                a0_0x4ef4f3.shadowOffsetY = 0;
                a0_0x4ef4f3.shadowColor = "yellow";
              }
              var _0x5cf9b0 = this.w / 2;
              var _0x6496cc = this.h / 2;
              _0x5cf9b0 = this.screenX + this.x;
              _0x6496cc = this.screenY + this.y;
              var _0x52c986 = this.w;
              a0_0x4ef4f3.drawImage(_0x500fb6, _0x5cf9b0, _0x6496cc, _0x52c986, _0x52c986);
              a0_0x4ef4f3.restore();
            }
          }
        }
      };
      a0_0x4ff181.interfaceButtons.push(_0x294d14);
      this.customButtons.push(_0x294d14);
      if (this.data.selected == _0x294d14.buttonID) {
        _0x294d14.setSelection();
      }
    } else if (_0x294d14 != null) {
      if (_0x294d14.isVisible) {
        _0x294d14.clicked = false;
      }
      _0x294d14.draw();
    }
  };
}
console.log("ACCOUNT SERVER START");
function a0_0x2b7491(_0x44b0b2) {
  var _0x1ddfcf = document.getElementById("loginCoins");
  _0x1ddfcf.innerHTML = _0x44b0b2 > 0 ? _0x44b0b2 : 0;
}
const a0_0x30079e = async function (_0x4e861a, _0x53588e = "web", _0x42c463) {
  let _0x3eed52 = a0_0x45f126 + "/auth/login/" + _0x42c463;
  let _0x3eda9f = {
    sessionId: a0_0xa68ef0 ? a0_0xa68ef0.sessionId : undefined,
    serverId: a0_0xa68ef0 ? a0_0xa68ef0.serverId : undefined,
    accessToken: _0x4e861a,
    platform: _0x53588e
  };
  try {
    const _0x42c940 = await fetch(_0x3eed52, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(_0x3eda9f)
    });
    const _0x57142a = await _0x42c940.json();
    if (_0x57142a.success) {
      a0_0x5f122b(_0x57142a.data);
      a0_0x42b2d1(_0x57142a.data.userId, _0x57142a.data.token, _0x57142a.data.userName, _0x57142a.data.avatar, _0x42c463);
      return true;
    } else {
      a0_0x1fcf24("ACCOUNTS: Failed to login using " + _0x42c463 + " encountered an error [" + _0x57142a.error + "]", "error", 10000);
      return false;
    }
  } catch (_0x2a7187) {
    console.error("::: Social Network Login ERROR :::", _0x2a7187);
    return false;
  }
};
const a0_0x39b81b = async _0x261e29 => {
  return;
};
var a0_0x32758a;
var a0_0x3cda19;
var a0_0x4aacaa;
var a0_0x485594;
var a0_0x51e490;
var a0_0x368ea0;
if (a0_0x185235) {
  console.log("Checking what login_userId was:", a0_0x32758a);
  a0_0x32758a = localStorage.getItem("login_userId");
  a0_0x368ea0 = a0_0x32758a !== undefined && a0_0x32758a !== null;
  if (a0_0x368ea0) {
    console.log("WAS LOGGED IN!");
    a0_0x3cda19 = localStorage.getItem("login_passwordToken");
    a0_0x4aacaa = localStorage.getItem("login_profilePicURL");
    a0_0x485594 = localStorage.getItem("login_name");
    a0_0x51e490 = localStorage.getItem("login_socialNetworkName");
  }
}
jQuery.loadScript = function (_0x5b54b8, _0x26b921) {
  jQuery.ajax({
    url: _0x5b54b8,
    dataType: "script",
    success: _0x26b921,
    async: true
  });
};
window.fbAsyncInit = function () {
  FB.init({
    appId: "482002344741952",
    cookie: true,
    xfbml: true,
    version: "v3.2",
    status: true
  });
  FB.AppEvents.logPageView();
};
(function (_0x589dcb, _0x241ace, _0x4d7c4a) {
  var _0x52c748;
  var _0x3932c7 = _0x589dcb.getElementsByTagName(_0x241ace)[0];
  if (_0x589dcb.getElementById(_0x4d7c4a)) {
    return;
  }
  _0x52c748 = _0x589dcb.createElement(_0x241ace);
  _0x52c748.id = _0x4d7c4a;
  _0x52c748.crossorigin = "anonymous";
  _0x52c748.src = "https://connect.facebook.net/en_US/sdk.js";
  _0x3932c7.parentNode.insertBefore(_0x52c748, _0x3932c7);
})(document, "script", "facebook-jssdk");
if (a0_0x5c9ce1) {} else {}
const a0_0x366a2d = async () => {
  if (a0_0x368ea0) {
    const _0x144aad = await a0_0x564001();
    if (!_0x144aad) {
      a0_0x8fc1a2();
    }
  } else {
    var _0x4d01e9 = "none";
    var _0x2cd166 = new URL(window.location.href);
    var _0x332ef2 = _0x2cd166.searchParams.get("testAccountSecret");
    if (_0x332ef2) {
      _0x4d01e9 = _0x332ef2;
      let _0x4f7763 = "" + _0x2cd166.searchParams.get("user");
      if (!a0_0xe4226c(_0x4d01e9 + _0x4f7763)) {
        if (_0x4f7763 && _0x4f7763.length <= 2) {
          a0_0x30079e(_0x4f7763, "web", _0x4d01e9, _0x4d01e9 + _0x4f7763, null);
        }
      }
    }
  }
};
setTimeout(a0_0x299f2e, 1);
function a0_0x299f2e() {
  document.getElementById("facebookLoginBtn").onclick = a0_0x554c48;
  document.getElementById("appleLoginBtn").onclick = a0_0x1ad147;
  document.getElementById("discordLoginBtn").onclick = a0_0x5af5f3;
  document.getElementById("btnLogout2").onclick = a0_0x2abc85;
  if (a0_0x368ea0) {
    console.log("user previously logged in: " + a0_0x485594 + " : " + a0_0x32758a);
    document.getElementById("onloggedInDiv").style.display = "block";
    if (a0_0x4aacaa) {
      document.getElementById("loggedInUserImg").src = a0_0x4aacaa;
    }
    document.getElementById("loggedInNameTxt").innerHTML = a0_0x485594;
    document.getElementById("notLoggedInDiv").style.display = "none";
  } else {
    document.getElementById("onloggedInDiv").style.display = "none";
    document.getElementById("loggedInUserImg").src = "none";
    document.getElementById("loggedInNameTxt").innerHTML = "";
    document.getElementById("notLoggedInDiv").style.display = "block";
    a0_0xf1c342.style.display = "block";
  }
}
var a0_0x53431e = "none";
var a0_0x1e73c6 = new URL(window.location.href);
var a0_0x10b7cf = a0_0x1e73c6.searchParams.get("testAccountSecret");
if (a0_0x10b7cf) {
  console.log("testing account enabled.");
  a0_0x53431e = a0_0x10b7cf;
}
function a0_0x8fc1a2() {
  if (a0_0x185235) {
    localStorage.removeItem("login_userId");
    localStorage.removeItem("login_passwordToken");
    localStorage.removeItem("login_profilePicURL");
    localStorage.removeItem("login_name");
    localStorage.removeItem("login_socialNetworkName");
  }
  a0_0x32758a = null;
  a0_0x3cda19 = null;
  a0_0x4aacaa = null;
  a0_0x485594 = null;
  a0_0x51e490 = null;
  a0_0x368ea0 = false;
  a0_0x473b10 = {
    coins: -1
  };
  a0_0x1669d8.loadData();
}
async function a0_0x2abc85(_0x3199ff = true) {
  if (a0_0x5c9ce1) {
    _0x3199ff = false;
  }
  let _0xc07991 = () => {};
  if (a0_0x51e490 === "google") {
    _0xc07991 = a0_0x18ce4a;
  } else if (a0_0x51e490 === "facebook") {
    _0xc07991 = a0_0x4d2f3c;
  } else if (a0_0x51e490 === "apple") {
    _0xc07991 = a0_0x2f1e73;
  }
  console.log("logging out with social network " + a0_0x51e490);
  try {
    await _0xc07991();
    await a0_0x4be676(a0_0x32758a);
    a0_0x8fc1a2();
    a0_0x299f2e();
  } catch (_0x30ccc2) {
    console.error("Error logging out:", _0x30ccc2);
  }
}
const a0_0x4be676 = async _0x466bdb => {
  let _0x314131 = a0_0x45f126 + "/auth/logout";
  let _0x3ed7b2 = {
    userId: _0x466bdb,
    sessionId: a0_0xa68ef0 ? a0_0xa68ef0.sessionId : undefined,
    serverId: a0_0xa68ef0 ? a0_0xa68ef0.serverId : undefined
  };
  try {
    await fetch(_0x314131, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(_0x3ed7b2)
    });
  } catch (_0x30b2e0) {
    a0_0x1fcf24("AccountServer: Failed to logout");
    console.error("::: Account Server Logout ERROR :::", _0x30b2e0);
    return false;
  }
  return true;
};
const a0_0x5f122b = _0x402fe1 => {
  a0_0x473b10 = _0x402fe1;
  a0_0x2b7491(_0x402fe1.coins);
};
const a0_0x564001 = async () => {
  if (!a0_0x368ea0) {
    console.error("::: verifyLocalCredentials ERROR ::: User is not logged in!");
    return;
  }
  const _0x492c3e = a0_0x45f126 + "/auth/@me";
  const _0x411fab = {
    userId: a0_0x32758a,
    token: a0_0x3cda19,
    sessionId: a0_0xa68ef0 ? a0_0xa68ef0.sessionId : undefined,
    serverId: a0_0xa68ef0 ? a0_0xa68ef0.serverId : undefined,
    isRefresh: false
  };
  try {
    const _0x4206b2 = await fetch(_0x492c3e, {
      method: "POST",
      headers: {
        "Content-Type": "application/json;charset=UTF-8"
      },
      body: JSON.stringify(_0x411fab)
    });
    const _0x2ad1af = await _0x4206b2.json();
    if (_0x2ad1af.success) {
      a0_0x5f122b(_0x2ad1af.data);
      return true;
    } else {
      a0_0x2abc85();
      console.log("::: verifyLocalCredentials failed ::: Needs new credentials");
      return false;
    }
  } catch (_0x1ea420) {
    console.error("::: verifyLocalCredentials ERROR :::", _0x1ea420);
    return false;
  }
};
var a0_0x473b10 = {
  coins: -1,
  level: 0,
  xp: 0,
  xpNextLvl: 0
};
const a0_0x28f2a3 = async function () {
  if (!a0_0x368ea0) {
    console.log("not logged in!");
    return null;
  }
  console.log("loading account data...");
  let _0x1902da = a0_0x45f126 + "/auth/@me";
  const _0x3482c2 = {
    userId: a0_0x32758a,
    token: a0_0x3cda19,
    sessionId: a0_0xa68ef0 ? a0_0xa68ef0.sessionId : undefined,
    serverId: a0_0xa68ef0 ? a0_0xa68ef0.serverId : undefined,
    isRefresh: true
  };
  return new Promise((_0x4ab35e, _0xd3f16e) => {
    $.ajax({
      url: _0x1902da,
      type: "POST",
      headers: {
        "Content-Type": "application/json;charset=UTF-8"
      },
      data: JSON.stringify(_0x3482c2),
      success: function (_0x5ecd03) {
        var _0x134da5 = _0x5ecd03;
        console.log("Done, result is " + _0x5ecd03);
        a0_0x473b10 = _0x134da5.data;
        console.log("the resObj coins was", _0x134da5.coins);
        if (_0x134da5.coins == "BANNED") {
          setInterval(function () {
            a0_0x1fcf24("Your account has been BANNED!", "error", 10000);
          }, 10000);
        }
        a0_0x2b7491(_0x134da5.data.coins);
        return _0x4ab35e(_0x134da5);
      },
      error: function (_0x436829, _0xff80d8, _0x45d4c7) {
        console.error("URL error: " + _0x45d4c7);
        console.error("failed to refresh account data!");
        return _0x4ab35e(null);
      }
    });
  });
};
const a0_0x367ad9 = async function (_0x3f352b) {
  const _0x3895ba = await a0_0x28f2a3();
  if (_0x3f352b) {
    _0x3f352b(_0x3895ba);
  }
};
function a0_0x4986ad(_0x5ed103) {
  console.log("Loading shop items for logged in user! " + a0_0x32758a);
  let _0x1d7983 = a0_0x45f126 + "/shop/get";
  console.log("@@@@@@@ Sending URL request :" + _0x1d7983);
  $.ajax({
    url: _0x1d7983,
    success: function (_0xdc50c2) {
      _0x5ed103(true, _0xdc50c2);
    },
    error: function (_0x4c89e3, _0x472971, _0x45faa4) {
      console.log("Shop loading-URL error: " + _0x45faa4);
      _0x5ed103(false, null);
    }
  });
}
const a0_0xd93903 = function (_0x182807) {
  let _0x18d6c6 = a0_0x45f126 + "/shop/purchases";
  const _0x12af49 = {
    userId: a0_0x32758a,
    token: a0_0x3cda19,
    sessionId: a0_0xa68ef0 ? a0_0xa68ef0.sessionId : undefined,
    serverId: a0_0xa68ef0 ? a0_0xa68ef0.serverId : undefined
  };
  if (a0_0x8418ab) {
    console.log("Sending URL request :" + _0x18d6c6);
  }
  $.ajax({
    url: _0x18d6c6,
    method: "POST",
    data: JSON.stringify(_0x12af49),
    headers: {
      "Content-Type": "application/json;charset=UTF-8"
    },
    success: function (_0x5e2c55) {
      var _0x4c967f = _0x5e2c55;
      _0x182807(_0x4c967f.success, _0x4c967f.data);
    },
    error: function (_0x4fe5d4, _0x3e2885, _0x3b0077) {
      if (_0x4fe5d4.responseText) {
        const _0xe1e273 = JSON.parse(_0x4fe5d4.responseText);
        _0x182807(_0xe1e273.success, _0xe1e273.error);
      } else {
        _0x182807(false, "an error happened during retrieving your purchased items.");
      }
    }
  });
};
const a0_0x5c4e63 = function (_0x1b8647, _0x1f567b) {
  let _0x3d477b = a0_0x45f126 + "/shop/wardrobe/save";
  const _0x2b650f = {
    userId: a0_0x32758a,
    token: a0_0x3cda19,
    sessionId: a0_0xa68ef0 ? a0_0xa68ef0.sessionId : undefined,
    serverId: a0_0xa68ef0 ? a0_0xa68ef0.serverId : undefined,
    data: _0x1b8647
  };
  if (a0_0x8418ab) {
    console.log("Sending URL request :" + _0x3d477b);
  }
  $.ajax({
    url: _0x3d477b,
    method: "POST",
    data: JSON.stringify(_0x2b650f),
    headers: {
      "Content-Type": "application/json;charset=UTF-8"
    },
    success: function (_0xd6aa86) {
      var _0x1dcfff = _0xd6aa86;
      _0x1f567b(_0x1dcfff.success, _0x1dcfff.data);
    },
    error: function (_0x5d3ced, _0x21581a, _0x1ed3c6) {
      if (_0x5d3ced.responseText) {
        const _0x322d40 = JSON.parse(_0x5d3ced.responseText);
        _0x1f567b(_0x322d40.success, _0x322d40.error);
      } else {
        _0x1f567b(false, "an error happened during wardrobe saving.");
      }
    }
  });
};
const a0_0x31665a = function (_0x2fb81e, _0x4d1b5c) {
  if (a0_0x8418ab) {
    console.log("Sending URL request to load coins for logged in user! " + a0_0x32758a);
  }
  if (!_0x2fb81e) {
    _0x2fb81e = "goldDragon";
  }
  let _0x33b572 = a0_0x45f126 + "/shop/buy";
  const _0x528ebf = {
    userId: a0_0x32758a,
    token: a0_0x3cda19,
    shopItem: _0x2fb81e,
    sessionId: a0_0xa68ef0 ? a0_0xa68ef0.sessionId : undefined,
    serverId: a0_0xa68ef0 ? a0_0xa68ef0.serverId : undefined
  };
  if (a0_0x8418ab) {
    console.log("Sending URL request :" + _0x33b572);
  }
  $.ajax({
    url: _0x33b572,
    method: "POST",
    data: JSON.stringify(_0x528ebf),
    headers: {
      "Content-Type": "application/json;charset=UTF-8"
    },
    success: function (_0x979cc) {
      var _0xa8873f = _0x979cc;
      _0x4d1b5c(_0xa8873f.success, _0xa8873f.reason);
    },
    error: function (_0x3da8d9, _0x79dc29, _0x2bdaa6) {
      if (_0x3da8d9.responseText) {
        const _0x348a4b = JSON.parse(_0x3da8d9.responseText);
        _0x4d1b5c(_0x348a4b.success, _0x348a4b.error);
      } else {
        _0x4d1b5c(false, "an error happened during purchase.");
      }
    }
  });
};
function a0_0x67b836() {
  let _0x364edd = a0_0x45f126 + "/addCoins?userId=" + a0_0x32758a + "&passwordToken=" + a0_0x3cda19;
  if (a0_0x8418ab) {
    console.log("Sending URL request :" + _0x364edd);
  }
  $.ajax({
    url: _0x364edd,
    success: function (_0x275bc9) {
      if (a0_0x8418ab) {
        a0_0x367ad9();
      }
    },
    error: function (_0x64e032, _0x5109bc, _0x1950a6) {
      console.log("URL error: " + _0x1950a6);
    }
  });
}
function a0_0x574344() {
  let _0x4430b4 = a0_0x45f126 + "/resetAccount?userId=" + a0_0x32758a + "&passwordToken=" + a0_0x3cda19;
  if (a0_0x8418ab) {
    console.log("Sending URL request :" + _0x4430b4);
  }
  $.ajax({
    url: _0x4430b4,
    success: function (_0x38856d) {
      console.log("reposnse is " + _0x38856d);
      a0_0x367ad9();
    },
    error: function (_0x4dd140, _0x5e1299, _0x3826fe) {
      console.log("URL error: " + _0x3826fe);
    }
  });
}
const a0_0x42b2d1 = function (_0x3bb32f, _0x4ad22b, _0x3edb03, _0x2d90a7, _0x3b8108) {
  a0_0x32758a = _0x3bb32f;
  a0_0x3cda19 = _0x4ad22b;
  a0_0x4aacaa = _0x2d90a7;
  a0_0x485594 = _0x3edb03;
  a0_0x51e490 = _0x3b8108;
  a0_0x368ea0 = true;
  if (a0_0x185235) {
    localStorage.setItem("login_userId", a0_0x32758a);
    localStorage.setItem("login_passwordToken", a0_0x3cda19);
    localStorage.setItem("login_name", a0_0x485594);
    localStorage.setItem("login_profilePicURL", a0_0x4aacaa);
    localStorage.setItem("login_socialNetworkName", a0_0x51e490);
  }
  a0_0x4ee28b();
  a0_0x28f2a3();
  a0_0x299f2e();
};
const a0_0x48b746 = function (_0x2b542a, _0x241156) {
  if (a0_0x8418ab) {
    console.log("Sending URL request to load coins for logged in user! " + a0_0x32758a);
  }
  if (!_0x2b542a) {
    _0x2b542a = "none";
  }
  let _0x137ebe = a0_0x45f126 + "/playerSettings_update?userId=" + a0_0x32758a + "&passwordToken=" + a0_0x3cda19 + "&itemId=" + _0x2b542a;
  if (a0_0x8418ab) {
    console.log("Sending URL request :" + _0x137ebe);
  }
  $.ajax({
    url: _0x137ebe,
    success: function (_0x3a1e83) {
      var _0x28b33c = JSON.parse(_0x3a1e83);
      console.log("Done, result is " + _0x3a1e83);
      _0x241156(_0x28b33c.success, _0x28b33c.reason);
    },
    error: function (_0x435d17, _0x1e0390, _0x559140) {
      _0x241156(false, "urlnotfound");
    }
  });
};
const a0_0xe4226c = function (_0x5d17e8) {
  if (a0_0x368ea0) {
    if (a0_0x32758a === _0x5d17e8) {
      return true;
    }
  }
  return false;
};
function a0_0x569152() {
  $.ajax({
    url: a0_0x45f126 + "/servers/get",
    type: "GET",
    success: function (_0x17b8a2) {
      var _0x275eff = _0x17b8a2;
      gotMasterServerStats = true;
      var _0x55ac3b = _0x275eff.reduce((_0x465893, _0x551daa) => _0x465893 + Math.max(0, _0x551daa.totalPlayerCount), 0);
      a0_0xb8f1f9.setText(a0_0x248f5f(_0x55ac3b) + " players online");
      for (var _0x113c7d = 0; _0x113c7d < a0_0x5b5315.length; _0x113c7d++) {
        var _0x27ae5d = a0_0x5b5315[_0x113c7d];
        var _0x18e825 = false;
        for (var _0x3dfbc9 = 0; _0x3dfbc9 < _0x275eff.length; _0x3dfbc9++) {
          var _0x169734 = _0x275eff[_0x3dfbc9];
          if (_0x169734.id == _0x27ae5d.id) {
            _0x27ae5d.playersCount = _0x169734.totalPlayerCount;
            _0x18e825 = true;
            break;
          }
        }
        if (!_0x18e825) {
          _0x27ae5d.playersCount = -1;
        }
      }
      a0_0x432e99();
    },
    error: function (_0x5c43dc, _0x464831, _0x563a8b) {
      a0_0x432e99();
      console.log("Error getting master server stats: " + _0x563a8b);
    }
  });
}
$.loadScript("https://accounts.google.com/gsi/client?hl=en", function () {
  function _0x53f713() {
    if (typeof gapi === "google") {
      return;
    }
    const _0x5b4e8c = google.accounts.oauth2.initTokenClient({
      client_id: $config.authentication.google,
      cookiepolicy: "single_host_origin",
      scope: "openid email profile",
      callback: _0x406a66 => {
        a0_0x30079e(_0x406a66.access_token, "web", "google");
      }
    });
    document.querySelector("#googleLoginBtn").onclick = () => {
      if (a0_0x5c9ce1) {
        a0_0x331725();
      } else {
        _0x5b4e8c.requestAccessToken();
      }
      console.log("requesting token");
    };
  }
  _0x53f713();
});
async function a0_0x8b8238(_0x41a601, _0x193034) {
  const _0x3f7edb = await a0_0x30079e(_0x41a601, _0x193034, "google");
  if (!_0x3f7edb) {
    await a0_0x4d7586()();
  }
}
async function a0_0x5bbaa0() {
  const _0x28ca1f = a0_0x4004ec();
  try {
    const _0x1045dc = await _0x28ca1f.func();
    console.log("GOT ID TOKEN", _0x1045dc, _0x28ca1f.platform);
    await a0_0x8b8238(_0x1045dc, _0x28ca1f.platform);
  } catch (_0x62878e) {
    console.error("Error with google login:", _0x62878e.message);
  }
}
async function a0_0x18ce4a() {}
function a0_0x4004ec() {
  if (!a0_0x5c9ce1) {
    console.log("resolve web google login");
    return {
      platform: "web",
      func: a0_0x2b10f4
    };
  } else {
    console.log("resolve mobile google login");
    return {
      platform: "mobile",
      func: a0_0x331725
    };
  }
}
function a0_0x4d7586() {
  if (!a0_0x5c9ce1) {
    return a0_0x509476;
  } else {
    return a0_0xd4fec7;
  }
}
async function a0_0x2b10f4() {
  console.log("Doing web google login.");
  return new Promise((_0x4adbcc, _0x3d7428) => {
    gapi.load("auth2", async function () {
      console.log("loaded auth2");
      try {
        console.log("initializing auth2");
        auth2 = auth2 || gapi.auth2.init({
          client_id: $config.googleAuthClientId,
          cookiepolicy: "single_host_origin"
        });
        console.log("Signing in.");
        const _0x2e01b5 = await auth2.signIn();
        console.log("Getting id token.");
        const _0xd5bafd = _0x2e01b5.getAuthResponse().id_token;
        console.log("Received id_token", _0xd5bafd);
        return _0x4adbcc(_0xd5bafd);
      } catch (_0x18e462) {
        console.error("Error with google login:", _0x18e462);
        return _0x3d7428(_0x18e462);
      }
    });
  });
}
async function a0_0x331725() {
  a0_0x5bff55("google-login", "");
}
async function a0_0x509476() {
  try {
    var _0x4ec410 = gapi.auth2.getAuthInstance();
    return _0x4ec410.signOut();
  } catch (_0x222d22) {
    console.error("Error with web google logout:", _0x222d22);
  }
}
async function a0_0xd4fec7() {}
window.fbAsyncInit = function () {
  if (typeof FB === "undefined") {
    return;
  }
  FB.init({
    appId: $config.authentication.facebook,
    cookie: true,
    xfbml: true,
    version: "v3.2",
    status: true
  });
  FB.AppEvents.logPageView();
};
(function (_0x2d3778, _0x5a2dc2, _0x3dd1ba) {
  var _0x290ccb;
  var _0x453dd6 = _0x2d3778.getElementsByTagName(_0x5a2dc2)[0];
  if (_0x2d3778.getElementById(_0x3dd1ba)) {
    return;
  }
  _0x290ccb = _0x2d3778.createElement(_0x5a2dc2);
  _0x290ccb.id = _0x3dd1ba;
  _0x290ccb.src = "https://connect.facebook.net/en_US/sdk.js";
  _0x453dd6.parentNode.insertBefore(_0x290ccb, _0x453dd6);
})(document, "script", "facebook-jssdk");
async function a0_0x592550() {
  a0_0x5bff55("facebook-login", "");
}
async function a0_0x7e4abb(_0x77aa5f, _0x176dda) {
  const _0x5ac358 = await a0_0x30079e(_0x77aa5f, _0x176dda, "facebook");
  if (!_0x5ac358) {
    await a0_0x3039c2()();
  }
}
async function a0_0x554c48() {
  const _0x33a097 = a0_0x342507();
  try {
    const _0x135820 = await _0x33a097.func();
    if (_0x33a097.platform == "mobile") {
      return;
    }
    await a0_0x7e4abb(_0x135820, _0x33a097.platform);
  } catch (_0x3312e1) {
    console.error("Error with facebook login:", _0x3312e1.message);
  }
}
async function a0_0x14c662() {
  return new Promise((_0x474b03, _0x56bfff) => {
    FB.login(function (_0x5aa3a5) {
      if (_0x5aa3a5.status === "connected") {
        console.log("Successfully got auth token from FB");
        var _0x153c18 = _0x5aa3a5.authResponse.accessToken;
        return _0x474b03(_0x153c18);
      } else {
        return _0x56bfff("Error logging in to FB.");
      }
    }, {
      scope: "public_profile,email"
    });
  });
}
function a0_0x342507() {
  if (!a0_0x5c9ce1) {
    return {
      platform: "web",
      func: a0_0x14c662
    };
  } else {
    return {
      platform: "mobile",
      func: a0_0x592550
    };
  }
}
function a0_0x3039c2() {
  if (!a0_0x5c9ce1) {
    return a0_0xd7db1f;
  } else {
    return a0_0x5e20c1;
  }
}
async function a0_0x4d2f3c() {
  const _0x1d7898 = a0_0x3039c2();
  try {
    return _0x1d7898();
  } catch (_0xb16b17) {
    console.error("Error with facebook logout:", _0xb16b17.message);
  }
}
async function a0_0x5e20c1() {}
async function a0_0xd7db1f() {
  return new Promise((_0x527685, _0x41b275) => {
    FB.logout(function (_0x5defa2) {
      return _0x527685(true);
    });
  });
}
let a0_0x233a5f = false;
const a0_0x279b1a = () => typeof AppleID === "object" && AppleID.hasOwnProperty("auth");
if (!a0_0x53e40a) {
  $.loadScript("https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js", function () {
    if (a0_0x279b1a()) {
      let _0x34afca = window.location.origin;
      AppleID.auth.init({
        clientId: $config.authentication.apple,
        scope: "name email",
        redirectURI: _0x34afca,
        usePopup: true,
        state: a0_0x1b6404(7)
      });
      a0_0x233a5f = true;
    }
  });
}
async function a0_0x595f1d(_0x1f17e8, _0x25cc42, _0x3d1b79) {
  const _0x1c3314 = _0x3d1b79 ? {
    name: _0x3d1b79
  } : null;
  const _0x539a1e = await a0_0x30079e(_0x1f17e8, _0x25cc42, "apple", _0x1c3314);
  if (!_0x539a1e) {
    await a0_0x55bdc3()();
  }
}
async function a0_0x1ad147() {
  const _0x423978 = a0_0xafe6c6();
  try {
    const _0x25fe7b = await _0x423978.func();
    if (_0x423978.platform == "mobile") {
      return;
    }
    await a0_0x595f1d(_0x25fe7b, _0x423978.platform);
  } catch (_0x2a9fac) {
    console.error("Error with apple login:", _0x2a9fac.message);
  }
}
async function a0_0x2f1e73() {}
function a0_0xafe6c6() {
  if (!a0_0x5c9ce1) {
    console.log("resolve web apple login");
    return {
      platform: "web",
      func: a0_0x2e8753
    };
  } else {
    console.log("resolve mobile apple login");
    return {
      platform: "mobile",
      func: a0_0x57da27
    };
  }
}
function a0_0x55bdc3() {
  if (!a0_0x5c9ce1 || a0_0x53e40a) {
    return a0_0x1419b2;
  } else {
    return a0_0x40c203;
  }
}
async function a0_0x2e8753() {
  try {
    if (!a0_0x233a5f) {
      throw new Error("Failed to initialize apple auth library.");
    }
    const _0x383977 = await AppleID.auth.signIn();
    if (_0x383977 && _0x383977.authorization && _0x383977.authorization.id_token) {
      console.log("data authorization was:", _0x383977.authorization);
      return _0x383977.authorization.id_token;
    } else {
      throw new Error("Failed to get id token from apple.");
    }
  } catch (_0x411dce) {
    console.error("error signing in ", _0x411dce);
    throw _0x411dce;
  }
}
async function a0_0x57da27() {
  a0_0x5bff55("apple-login", "");
}
async function a0_0x1419b2() {
  try {
    var _0x933c9f = gapi.auth2.getAuthInstance();
    return _0x933c9f.signOut();
  } catch (_0x620c29) {
    console.error("Error with web apple logout:", _0x620c29);
  }
}
async function a0_0x40c203() {}
async function a0_0x5af5f3() {
  a0_0x1162ba();
}
let a0_0x552b48 = null;
function a0_0x1162ba() {
  const _0x15545e = "scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,\nwidth=700,height=800,left=50%,top=50%";
  a0_0x552b48 = a0_0x1b6404(10);
  const _0x31be44 = window.location.origin + "/discord_login.html";
  const _0x465c5a = "https://discord.com/oauth2/authorize?response_type=token&client_id=" + $config.authentication.discord + "&state=" + a0_0x552b48 + "&scope=identify+email&redirect_uri=" + _0x31be44;
  const _0x2eb6d1 = window.open(_0x465c5a, "Discord Auth", _0x15545e);
  const _0x1ca373 = setInterval(() => {
    _0x2eb6d1.postMessage("MOPE_GET_DISCORD", window.location.origin);
  }, 500);
  const _0xc351f0 = async _0x470570 => {
    if (_0x470570.data.response) {
      clearInterval(_0x1ca373);
      _0x2eb6d1.close();
      if (_0x470570.data.response == "MOPE_GET_DISCORD") {
        console.log(_0x470570.data);
        if (_0x470570.data.state != a0_0x552b48) {
          a0_0x1fcf24("ACCOUNTS: Error while trying to login using discord: DISCORD_2", "error", 10000);
          return;
        }
        const _0x5ea223 = await a0_0x30079e(_0x470570.data.code, "web", "discord");
      } else {
        a0_0x1fcf24("ACCOUNTS: Error while trying to login using discord: DISCORD_1", "error", 10000);
      }
      window.removeEventListener("message", _0xc351f0);
    }
  };
  window.addEventListener("message", _0xc351f0);
}
var a0_0xf30e2c = null;
var a0_0x32d110 = +new Date();
let a0_0x3a3ce3 = false;
function a0_0x4616bf(_0x8989d, _0x57083f) {
  var _0x3c0bfd = location.protocol == "https:" ? "https:" : "http:";
  var _0x2157d6 = location.host;
  var _0x5a8ddb = _0x3c0bfd + "//" + _0x2157d6;
  $.ajax({
    url: KAccountServerDomain + "/xsolla/getToken",
    type: "POST",
    data: JSON.stringify({
      userId: a0_0x32758a,
      token: a0_0x3cda19,
      itemId: _0x8989d,
      settings_ui_version: a0_0x3a554a ? "mobile" : "desktop",
      return_url: _0x5a8ddb
    }),
    headers: {
      "Content-Type": "application/json;charset=UTF-8"
    },
    success: function (_0x50c238) {
      var _0x3868ec = _0x50c238;
      _0x57083f(_0x3868ec.success ? _0x3868ec.token : null);
    },
    error: function (_0x3c72e6, _0x2a3f15, _0x48eaa9) {
      var _0x1856a8 = JSON.parse(_0x3c72e6.responseText);
      console.log("Error getting token: " + _0x48eaa9);
      a0_0x1fcf24(_0x1856a8.reason, "error", 10);
      _0x57083f(false, null);
    }
  });
}
function a0_0x14b9d0(_0x1f5ed4) {
  $.ajax({
    url: KAccountServerDomain + "/xsolla/getPackets",
    type: "POST",
    data: JSON.stringify({
      userId: a0_0x32758a,
      token: a0_0x3cda19
    }),
    headers: {
      "Content-Type": "application/json;charset=UTF-8"
    },
    success: function (_0x439d17) {
      var _0x507399 = _0x439d17;
      _0x1f5ed4(_0x507399.success ? _0x507399.data : null);
    },
    error: function (_0x300b63, _0x51cf36, _0xae1c75) {
      var _0x5bee04 = JSON.parse(_0x300b63.responseText);
      console.log("Error getting token: " + _0xae1c75);
      a0_0x1fcf24(_0x5bee04.reason, "error", 10);
      _0x1f5ed4(false, null);
    }
  });
}
document.getElementById("xsollaStoreCloseButton").onclick = function () {
  a0_0x3c7a58();
};
function a0_0x3c7a58() {
  a0_0x4ee32c = false;
  var _0x5cacc5 = document.getElementById("xsollaStoreFrameWrapper");
  _0x5cacc5.style.display = "none";
  var _0x577077 = document.getElementById("xsollaStoreInnerDiv");
  while (_0x577077.firstChild) {
    _0x577077.removeChild(_0x577077.firstChild);
  }
}
var a0_0x4ee32c = false;
function a0_0x44f6a9() {
  if (a0_0x5c9ce1) {
    alert("Please open mope.io in your browser to buy coins (can't buy them in the app yet!)");
    return;
  }
  if (a0_0x4ee32c) {
    a0_0x3c7a58();
  }
  a0_0x4ee32c = true;
  var _0x6b3fb1 = document.getElementById("xsollaStoreInnerDiv");
  _0x6b3fb1.style.display = "none";
  while (_0x6b3fb1.firstChild) {
    _0x6b3fb1.removeChild(_0x6b3fb1.firstChild);
  }
  const _0x4158d8 = document.querySelector(".xsollaStoreItems");
  while (_0x4158d8.lastChild) {
    _0x4158d8.removeChild(_0x4158d8.lastChild);
  }
  var _0x2999cd = document.getElementById("xsollaStoreFrameWrapper");
  _0x2999cd.style.display = "block";
  var _0x3ab8ac = document.getElementById("loadingAnim_xsolla");
  _0x3ab8ac.style.display = "block";
  a0_0x14b9d0(_0x27ea22 => {
    _0x3ab8ac.style.display = "none";
    _0x4158d8.style.display = "grid";
    for (let _0x54d468 = 0; _0x54d468 < _0x27ea22.length; _0x54d468++) {
      const _0x385d88 = _0x27ea22[_0x54d468];
      const _0x152e06 = document.createElement("div");
      const _0x19f0be = document.createElement("div");
      const _0x28cd4c = document.createElement("img");
      const _0xaa9ccb = document.createElement("div");
      const _0x42802b = document.createElement("div");
      _0x152e06.className = "xsollaStoreItem";
      _0x19f0be.className = "xsollaStoreItemImageOuter";
      _0x28cd4c.className = "xsollaStoreItemImageInner";
      _0xaa9ccb.className = "xsollaStoreItemTitle";
      _0x42802b.className = "xsollaStoreItemBuy";
      _0x152e06.append(_0x19f0be, _0xaa9ccb, _0x42802b);
      _0x19f0be.append(_0x28cd4c);
      _0x152e06.title = _0x385d88.description;
      _0xaa9ccb.innerText = _0x385d88.name + " - " + _0x385d88.amount;
      _0x28cd4c.src = _0x385d88.image;
      _0x42802b.innerText = "Buy for " + _0x385d88.price.replace(".", ",") + "$";
      _0x42802b.onclick = () => {
        a0_0x5d7915(_0x385d88.id);
      };
      _0x4158d8.appendChild(_0x152e06);
    }
  });
}
function a0_0x5d7915(_0x373c5a) {
  const _0x337dde = document.querySelector(".xsollaStoreItems");
  while (_0x337dde.lastChild) {
    _0x337dde.removeChild(_0x337dde.lastChild);
  }
  _0x337dde.style.display = "none";
  var _0x512698 = document.getElementById("loadingAnim_xsolla");
  _0x512698.style.display = "block";
  var _0xc5589f = document.getElementById("xsollaStoreInnerDiv");
  _0xc5589f.style.display = "block";
  a0_0x4616bf(_0x373c5a, function (_0x3f0e0c) {
    if (_0x3f0e0c) {
      console.log("Got xsolla token " + _0x3f0e0c);
      var _0x41b954 = document.getElementById("loadingAnim_xsolla");
      _0x41b954.style.display = "none";
      var _0x13ca29;
      if (a0_0x3a3ce3) {
        _0x13ca29 = "https://sandbox-secure.xsolla.com/paystation4/?token=" + _0x3f0e0c;
      } else {
        _0x13ca29 = "https://secure.xsolla.com/paystation4/?token=" + _0x3f0e0c;
      }
      var _0x19784e = document.createElement("iframe");
      _0x19784e.setAttribute("src", _0x13ca29);
      _0x19784e.setAttribute("id", "storeIFrame");
      _0xc5589f.appendChild(_0x19784e);
    }
  });
}
function a0_0x7e976(_0xda724a) {
  var _0x535459 = {
    access_token: "abcdef1234567890abcdef1234567890"
  };
  var _0x14c8a7 = document.createElement("script");
  _0x14c8a7.type = "text/javascript";
  _0x14c8a7.async = true;
  _0x14c8a7.src = "//static.xsolla.com/embed/paystation/1.0.7/widget.min.js";
  _0x14c8a7.addEventListener("load", function (_0x33a8d4) {
    XPayStationWidget.init(_0x535459);
  }, false);
  var _0x3f6954 = document.getElementsByTagName("head")[0];
  _0x3f6954.appendChild(_0x14c8a7);
}
if (typeof a0_0x1d703e === "undefined" || a0_0x1d703e === null || a0_0x1d703e === undefined) {
  window.options_graphicsLevel = 3;
}
a0_0x40fa79(a0_0x1d703e);
function a0_0x40fa79(_0x20fc0e) {
  var _0x5cf92f = _0x20fc0e == a0_0x1d703e;
  a0_0x1d703e = _0x20fc0e;
  if (window.localStorage) {
    try {
      window.localStorage.setItem("options_graphicsLevel", a0_0x1d703e);
    } catch (_0x43707b) {}
  }
  for (var _0x2e7f54 = 1; _0x2e7f54 <= 3; _0x2e7f54++) {
    var _0x1965ba;
    switch (_0x2e7f54) {
      case a0_0x30b084:
        _0x1965ba = document.getElementById("graphicsBut_low");
        break;
      case a0_0x4db98f:
        _0x1965ba = document.getElementById("graphicsBut_med");
        break;
      case a0_0x50c536:
        _0x1965ba = document.getElementById("graphicsBut_hd");
        break;
    }
    if (_0x1965ba) {
      if (_0x2e7f54 == _0x20fc0e) {
        _0x1965ba.disabled = true;
        _0x1965ba.style.opacity = 0.5;
      } else {
        _0x1965ba.disabled = false;
        _0x1965ba.style.opacity = 1;
      }
    }
    if (_0x5cf92f) {
      a0_0xd72e4a = true;
    }
  }
}
let a0_0x54893f = 0;
let a0_0x17f03d = null;
let a0_0x1ce6da = 0;
function a0_0x598f1f(_0x4badfa) {
  a0_0x54893f += 1;
  if (_0x4badfa - a0_0x17f03d > 1000) {
    a0_0x17f03d = _0x4badfa;
    a0_0x1ce6da = a0_0x54893f;
    a0_0x54893f = 0;
    let _0x703ada = a0_0x2e5c38.reduce((_0x489db0, _0x165825) => _0x489db0 + _0x165825) / a0_0x2e5c38.length;
    console.log("game loop took: " + _0x703ada.toFixed(3) + "ms");
    console.log("maximum fps achieved: " + (1000 / _0x703ada).toFixed(0) + "fps");
    console.log("game loop highest: " + Math.max(...a0_0x2e5c38).toFixed(3) + "ms");
    console.log("game loop lowest: " + Math.min(...a0_0x2e5c38).toFixed(3) + "ms");
    a0_0x2e5c38 = [];
  }
}
function a0_0x56f529(_0x5bc4c1) {
  a0_0x79f66d.setText("fps: " + a0_0x1ce6da);
  var _0x570274 = document.getElementById("graphics_fps");
  if (_0x570274 && !a0_0x290640) {
    if (_0x5bc4c1 > 58) {
      _0x570274.innerHTML = " FPS " + _0x5bc4c1 + " (perfect)";
    } else if (_0x5bc4c1 > 40) {
      _0x570274.innerHTML = " FPS " + _0x5bc4c1 + " (okay)";
    } else if (_0x5bc4c1 > 29) {
      _0x570274.innerHTML = " FPS " + _0x5bc4c1 + " (playable- close other tabs/ lower graphics)";
    } else {
      _0x570274.innerHTML = " FPS " + _0x5bc4c1 + " (low- close other tabs/ lower graphics)";
    }
  }
}
setInterval(function () {
  a0_0x56f529(a0_0x1ce6da);
}, a0_0x8fdced);
const a0_0x3a9c07 = performance.now();
let a0_0x24f6c1 = window.innerWidth - 150;
let a0_0x2e8f33 = window.innerHeight - 150;
function a0_0x24cbc0(_0x212980, _0x267435, _0x1fd3c0) {
  this.animStep = 1;
  this.animStartT = a0_0x4f736f;
  this.animDur = 3000;
  this.timedOut = false;
  this.xShift = a0_0x290f57(-10, 10);
  this.yShift = a0_0x290f57(-10, 10);
  this.anlgeShift = a0_0x290f57(-10, 10);
  this.text = new a0_0x3d10bd(16, "white");
  this.text.setText((_0x212980 >= 0 ? "+ " : "") + a0_0x5b294b(_0x212980) + _0x267435);
  this.textFontSz = 30;
  var _0x44ce53 = "white";
  if (_0x212980 > 10000) {
    _0x44ce53 = "#c7b753";
    this.textFontSz = 40;
    this.animDur += 1000;
  }
  if (_0x212980 > 100000) {
    _0x44ce53 = "#fdca5b";
    this.textFontSz = 45;
    this.animDur += 2000;
  }
  if (_0x212980 > 1000000) {
    _0x44ce53 = "#c7b753";
    this.textFontSz = 51;
    this.animDur += 2000;
  }
  if (_0x212980 < 0) {
    _0x44ce53 = "#c65f59";
    this.animDur += 2000;
  }
  _0x44ce53 = _0x1fd3c0 === undefined ? _0x44ce53 : _0x1fd3c0;
  this.text.setColor(_0x44ce53);
  this.draw = function () {
    var _0x1d20f8 = a0_0x870f2b((a0_0x4f736f - this.animStartT) / this.animDur, 0, 1);
    a0_0x4ef4f3.save();
    var _0x3ce8e7 = window.innerWidth * window.devicePixelRatio * 0.5;
    var _0x20c796 = a0_0x8379e6 - a0_0xba590d * 85 + _0x1d20f8 * (a0_0xba590d * -150);
    a0_0x4ef4f3.translate(_0x3ce8e7, _0x20c796);
    a0_0x4ef4f3.rotate(a0_0x844a6b(this.anlgeShift * _0x1d20f8));
    a0_0x4ef4f3.globalAlpha = 1 - _0x1d20f8;
    this.text.setFontSize(this.textFontSz * a0_0xba590d);
    this.text.x = 0;
    this.text.y = 0;
    this.text.draw();
    a0_0x4ef4f3.restore();
    if (a0_0x4f736f >= this.animStartT + this.animDur) {
      this.timedOut = true;
    }
  };
}
function a0_0x1b0782(_0x4505e8, _0x163b4e, _0x239957, _0x1935b0) {
  this.animStep = 1;
  this.animStartT = a0_0x4f736f;
  this.timedOut = false;
  this.xShift = a0_0x290f57(-10, 10);
  this.yShift = a0_0x290f57(-10, 10);
  this.anlgeShift = a0_0x290f57(-10, 10);
  this.text = new a0_0x3d10bd(_0x163b4e, _0x239957);
  this.text.setText(_0x4505e8);
  this.textFontSz = _0x163b4e;
  this.animDur = _0x1935b0;
  this.text.setColor(_0x239957);
  this.draw = function () {
    if (a0_0x268b89) {
      return;
    }
    var _0xf27e0 = a0_0x870f2b((a0_0x4f736f - this.animStartT) / this.animDur, 0, 1);
    a0_0x4ef4f3.save();
    var _0x38dd7a = a0_0x11866b / 2;
    var _0x4638ba = a0_0x8379e6 - a0_0xba590d * 85 + _0xf27e0 * (a0_0xba590d * -150);
    a0_0x4ef4f3.translate(_0x38dd7a, _0x4638ba);
    a0_0x4ef4f3.globalAlpha = 1 - _0xf27e0;
    this.text.setFontSize(this.textFontSz * a0_0xba590d);
    this.text.x = 0;
    this.text.y = 0;
    this.text.draw();
    a0_0x4ef4f3.restore();
    if (a0_0x4f736f >= this.animStartT + this.animDur) {
      this.timedOut = true;
    }
  };
}
var a0_0x1aa41c = 200;
function a0_0xc8a0f8() {
  var _0x4583a0 = a0_0x15377d && a0_0x3510c5 < 500 ? 1.4 : 1;
  a0_0x17b4b5.w = a0_0x17b4b5.h = a0_0x1aa41c * a0_0xba590d * _0x4583a0;
  a0_0x3b4c01.w = a0_0x3b4c01.h = a0_0x1aa41c * a0_0xba590d * _0x4583a0;
  a0_0x5d6549.w = a0_0x5d6549.h = a0_0x1aa41c * a0_0xba590d * _0x4583a0;
  a0_0x522925.w = a0_0x24bc92 * 60 * _0x4583a0;
  a0_0x522925.h = a0_0x24bc92 * 30 * _0x4583a0;
  const _0x3cb036 = 50;
  a0_0x17b4b5.x = a0_0x24bc92 * 25 * _0x4583a0 + a0_0x17b4b5.w / 2;
  a0_0x17b4b5.y = a0_0x8379e6 - (a0_0x24bc92 * 40 + a0_0x17b4b5.w / 2);
  if (a0_0x1b259d) {
    a0_0x17b4b5.x = a0_0x11866b - a0_0x17b4b5.x;
  }
  a0_0x3b4c01.x = a0_0x17b4b5.x;
  if (!a0_0x15377d) {
    a0_0x3b4c01.y = a0_0x17b4b5.y;
  } else {
    a0_0x3b4c01.y = a0_0x17b4b5.y - (a0_0x24bc92 * 10 * _0x4583a0 + a0_0x3b4c01.w / 2 + a0_0x17b4b5.w / 2);
  }
  a0_0x5d6549.x = a0_0x17b4b5.x;
  a0_0x5d6549.y = a0_0x3b4c01.y - (a0_0x24bc92 * 10 * _0x4583a0 + a0_0x5d6549.w / 2 + a0_0x3b4c01.w / 2);
  a0_0x522925.x = Math.min(a0_0x11866b / 2 + a0_0x24bc92 * 250 * _0x4583a0, a0_0x11866b * 0.8) - 150;
  a0_0x522925.y = a0_0x24bc92 * 15 + a0_0x522925.h / 2;
  a0_0x306715.setPosAndSize(a0_0x522925.x - (a0_0x522925.w / 2 + a0_0x24bc92 * 10 * _0x4583a0), a0_0x522925.y, a0_0x24bc92 * 60 * _0x4583a0, a0_0x24bc92 * 30 * _0x4583a0, 1, 0.5);
  for (var _0x867f96 = 0; _0x867f96 < a0_0x57390d.length; _0x867f96++) {
    var _0x2e3ce8 = a0_0x57390d[_0x867f96];
    _0x2e3ce8.visible = a0_0x15377d;
  }
  a0_0x3b4c01.visible = true;
  a0_0x5d6549.visible = true;
  a0_0x306715.visible = a0_0x306715.touchEnabled = a0_0x15377d;
}
a0_0x43318e.addEventListener("gesturestart", function (_0x52c83d) {
  _0x52c83d.preventDefault();
});
function a0_0x1baca6() {
  for (var _0x599f54 = 0; _0x599f54 < a0_0x57390d.length; _0x599f54++) {
    var _0x6ac145 = a0_0x57390d[_0x599f54];
    _0x6ac145.pressed = false;
    _0x6ac145.pressedTouchID = -1;
  }
  a0_0x1027bb = false;
}
a0_0x43318e.ontouchstart = function (_0x509f58) {
  a0_0x12b93();
  var _0x393158 = _0x509f58.touches;
  if (_0x393158.length == 1) {
    a0_0x1baca6();
  }
  if (!a0_0x290640) {
    return;
  }
  for (var _0x1d49dc = 0; _0x1d49dc < _0x509f58.changedTouches.length; _0x1d49dc++) {
    var _0x851cad = _0x509f58.changedTouches[_0x1d49dc];
    for (var _0x4a4b85 = 0; _0x4a4b85 < a0_0x57390d.length; _0x4a4b85++) {
      var _0x639ec4 = a0_0x57390d[_0x4a4b85];
      var _0x377ab0 = _0x639ec4.testPosHitsButton(_0x851cad.clientX * a0_0x24bc92, _0x851cad.clientY * a0_0x24bc92);
      if (_0x377ab0 && !_0x639ec4.pressed && _0x639ec4.touchEnabled) {
        _0x509f58.preventDefault();
        _0x639ec4.pressed = true;
        _0x639ec4.pressedTouchID = _0x851cad.identifier;
        _0x639ec4.onButtonTouchStart();
        return;
      }
    }
  }
  if (!a0_0x3d2c66) {
    if (!a0_0x1027bb) {
      var _0x851cad = _0x509f58.changedTouches[0];
      a0_0x1027bb = true;
      a0_0x2013cd = _0x851cad.clientX * a0_0x24bc92;
      a0_0x481c9c = _0x851cad.clientY * a0_0x24bc92;
      a0_0x1cac72 = a0_0x2013cd;
      a0_0x5cb2dd = a0_0x481c9c;
      a0_0x4532e5 = _0x851cad.identifier;
      return;
    }
  }
  a0_0x37bc1c = _0x509f58.touches[0].clientX * a0_0x24bc92;
  a0_0x46dbb3 = _0x509f58.touches[0].clientY * a0_0x24bc92;
  a0_0x36f64f();
};
var a0_0x20b2f5 = 0;
var a0_0x37ef35 = 0;
var a0_0x5585a2 = 0;
var a0_0xd2cb7d = 1;
a0_0x43318e.ontouchmove = function (_0x5d7daf) {
  a0_0x12b93();
  _0x5d7daf.preventDefault();
  for (var _0x216915 = 0; _0x216915 < _0x5d7daf.changedTouches.length; _0x216915++) {
    var _0x5a65e2 = _0x5d7daf.changedTouches[_0x216915];
    if (_0x5a65e2.identifier == a0_0x3b4c01.pressedTouchID) {
      if (a0_0x17b4b5.pressedTouchID == -1) {
        var _0xd9db39 = a0_0x17b4b5.testPosHitsButton(_0x5a65e2.clientX * a0_0x24bc92, _0x5a65e2.clientY * a0_0x24bc92);
        var _0x48e336 = a0_0x17b4b5.pressed;
        a0_0x17b4b5.pressed = _0xd9db39;
        if (_0xd9db39 && !_0x48e336) {
          a0_0x448dc4(a0_0x1ef8d7, true);
        } else if (!_0xd9db39 && _0x48e336) {
          a0_0x448dc4(a0_0x1ef8d7, false);
        }
      }
      continue;
    }
    if (!a0_0x3d2c66) {
      if (a0_0x1027bb && _0x5a65e2.identifier == a0_0x4532e5) {
        var _0x3cef9a = _0x5a65e2.clientX * a0_0x24bc92 - a0_0x2013cd;
        var _0x3aec7c = _0x5a65e2.clientY * a0_0x24bc92 - a0_0x481c9c;
        var _0x4a8408 = Math.sqrt(_0x3cef9a * _0x3cef9a + _0x3aec7c * _0x3aec7c);
        if (_0x4a8408 > 0) {
          var _0x13c451 = _0x3cef9a / _0x4a8408;
          var _0x2d2180 = _0x3aec7c / _0x4a8408;
          var _0x4c3bd2 = Math.min(1, _0x4a8408 / (a0_0x872c13 * a0_0x24bc92));
          if (_0x4c3bd2 < 0.35) {
            _0x4c3bd2 = 0;
          }
          var _0x47a363 = Math.pow(_0x4c3bd2, 2);
          var _0x3487a5 = a0_0x24bc92 * 300 * _0x47a363;
          var _0x2fb371 = Math.atan2(_0x2d2180, _0x13c451);
          a0_0x599526 = a0_0x56c3ae(a0_0x5a4407, _0x2fb371);
          a0_0x8863d9 = _0x4c3bd2;
          a0_0x1cac72 = a0_0x2013cd + a0_0x872c13 * a0_0x24bc92 * _0x13c451 * _0x4c3bd2;
          a0_0x5cb2dd = a0_0x481c9c + a0_0x872c13 * a0_0x24bc92 * _0x2d2180 * _0x4c3bd2;
          a0_0x37bc1c = a0_0x11866b / 2 + _0x13c451 * _0x3487a5;
          a0_0x46dbb3 = a0_0x8379e6 / 2 + _0x2d2180 * _0x3487a5;
          a0_0x36f64f();
        }
      }
    } else {
      a0_0x37bc1c = _0x5a65e2.clientX * a0_0x24bc92;
      a0_0x46dbb3 = _0x5a65e2.clientY * a0_0x24bc92;
      a0_0x36f64f();
    }
  }
};
a0_0x43318e.ontouchend = function (_0x35696d) {
  for (var _0x5e2d54 = 0; _0x5e2d54 < _0x35696d.changedTouches.length; _0x5e2d54++) {
    var _0x265333 = _0x35696d.changedTouches[_0x5e2d54];
    if (a0_0x1027bb && _0x265333.identifier == a0_0x4532e5) {
      a0_0x1027bb = false;
      a0_0x4532e5 = -1;
      continue;
    }
    for (var _0x153f0c = 0; _0x153f0c < a0_0x57390d.length; _0x153f0c++) {
      var _0x2b1da0 = a0_0x57390d[_0x153f0c];
      if (_0x2b1da0.pressed && _0x2b1da0.pressedTouchID == _0x265333.identifier && _0x2b1da0.touchEnabled) {
        _0x2b1da0.pressed = false;
        _0x2b1da0.pressedTouchID = -1;
        if (a0_0x290640) {
          _0x2b1da0.onButtonTouchEnd();
        }
        return;
      }
    }
  }
};
a0_0x43318e.ontouchcancel = function (_0x1b8664) {
  console.log("touch cancel");
  a0_0x43318e.ontouchend(_0x1b8664);
};
a0_0x43318e.ontouchleave = function (_0x375609) {
  console.log("touch leave");
};
a0_0x12658e.prototype = {
  id: 0,
  drawMe: true,
  oType: a0_0x26d26c,
  spawnTime: 0,
  rPer: 0,
  updateTime: 0,
  x: 0,
  y: 0,
  ox: 0,
  oy: 0,
  nx: 0,
  ny: 0,
  rad: 0,
  oRad: 0,
  nRad: 0,
  angle: 0,
  oAngle: 0,
  angleDelta: 0,
  moveUpdF: 0,
  z: 0,
  name: "",
  dead: false,
  type: 0,
  curBiome: 0,
  isRectangle: false,
  rectW: 0,
  rectH: 0,
  specType: 0,
  toString: function () {
    return "[GObj t=" + this.oType + " id=" + this.id + "]";
  }
};
a0_0x12658e.prototype.flag_hurt = false;
a0_0x12658e.prototype.hpPer = a0_0x12658e.prototype.hpPer_n = a0_0x12658e.prototype.hpBarA = 0;
a0_0x12658e.prototype.infectionPer = a0_0x12658e.prototype.infectionPer_n = a0_0x12658e.prototype.infectionBarA = 0;
a0_0x12658e.prototype.curePer = a0_0x12658e.prototype.curePer_n = a0_0x12658e.prototype.cureBarA = 0;
a0_0x12658e.prototype.hpBarTimeoutT = 0;
a0_0x12658e.prototype.alwaysPlainOutline = false;
a0_0x12658e.prototype.doesDrawEffectScale = false;
a0_0x12658e.prototype.drawEffectScale_Slow = false;
a0_0x12658e.prototype.customInterfaceDraw = false;
a0_0x12658e.prototype.animateRadOnSpawn = true;
a0_0x12658e.prototype.canRotate = function () {
  switch (this.oType) {
    case a0_0x331924:
    case a0_0x38c409:
    case a0_0x4243b3:
      return false;
  }
  return true;
};
a0_0x12658e.prototype.getObjSpecies = function () {
  switch (this.oType) {
    case a0_0x5d72fa:
      return "/" + this.speciesType;
  }
  return "";
};
a0_0x12658e.prototype.customDraw2 = function (_0x3ac0b7) {
  switch (this.oType) {
    case a0_0x225e01:
    case a0_0x38253a:
    case a0_0x4230b4:
    case a0_0x5f1003:
    case a0_0x26d26c:
    case a0_0x4733ad:
    case a0_0x5ca180:
    case a0_0x331924:
    case a0_0x46c550:
    case a0_0xd897ba:
    case a0_0x33ec82:
    case a0_0x7fd6bc:
    case a0_0x38c409:
    case a0_0x138652:
    case a0_0x2537f6:
    case a0_0x4d8272:
    case a0_0x4b40ca:
    case a0_0x29dfd6:
    case a0_0x1be211:
    case a0_0x557e7b:
    case a0_0x502c51:
    case a0_0xe5fc06:
    case a0_0x4243b3:
    case a0_0x4f9ab6:
    case a0_0x377b38:
    case a0_0x54352a:
    case a0_0x3b275c:
    case a0_0xdd316d:
    case a0_0x9b2337:
    case a0_0x11bb63:
    case a0_0xc65734:
    case a0_0xb6eb9e:
    case a0_0x380b7:
    case a0_0x8061ff:
    case a0_0x53272b:
    case a0_0x5d72fa:
    case a0_0x18b147:
    case a0_0x10c81e:
    case a0_0x21686d:
    case a0_0x579937:
    case a0_0x4a0860:
    case a0_0x23ce82:
    case a0_0x538c88:
      this.doesDrawEffectScale = false;
      this.drawEffectScale_Slow = false;
      {
        var _0x23777d = this.getSkinImageObj(this.objSkinPath);
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.globalAlpha = this.getObjAlpha();
        if (_0x23777d) {
          var _0x2b29c5 = this.getRad();
          if (this.canRotate()) {
            a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x4ef4f3.drawImage(_0x23777d, -_0x2b29c5, -_0x2b29c5, _0x2b29c5 * 2, _0x2b29c5 * 2);
        } else {
          this.drawOutlinedCircle("(make this obj invisible on server?) " + this.oType, "black");
        }
        a0_0x4ef4f3.restore();
      }
      break;
  }
};
a0_0x12658e.prototype.getRad = function () {
  switch (this.oType) {
    case a0_0x18b147:
    case a0_0x105313:
      return this.rad * 1.5;
    case a0_0x331924:
      return this.rad * 1.2;
    case a0_0x21686d:
    case a0_0x579937:
      var _0x372563 = a0_0x3d5ac5[a0_0x1c918d];
      if (_0x372563 && _0x372563.lastHidingHoleID == this.id) {
        if (this.alpha == undefined) {
          this.alpha = 0;
        }
        if (_0x372563.flag_inHidingHole) {
          this.alpha += (0.1 + this.alpha) * 0.1;
        } else {
          this.alpha -= this.alpha * 0.1;
        }
        if (this.alpha > 1) {
          this.alpha = 1;
        } else if (this.alpha < 0) {
          this.alpha = 0;
        }
        a0_0x4ef4f3.globalAlpha = this.alpha;
        return this.rad;
      } else {
        return this.innerRad;
      }
  }
  return this.rad;
};
a0_0x12658e.prototype.getObjAlpha = function () {
  switch (this.oType) {
    case a0_0x5d72fa:
      return 0.9;
  }
  return 1;
};
a0_0x12658e.prototype.objSkinPath = null;
a0_0x12658e.prototype.getBiomeSkin = function (_0x310614) {
  switch (this.oType) {
    case a0_0x23ce82:
      _0x310614 = (this.isEdibleOutlined() ? "e" : this.oType) + "_" + this.specType;
      break;
    case a0_0x5d72fa:
    case a0_0x225e01:
    case a0_0x38253a:
    case a0_0x4230b4:
    case a0_0x18b147:
    case a0_0x538c88:
      _0x310614 = this.isEdibleOutlined() ? "e" : this.curBiome;
      break;
    case a0_0x5ca180:
    case a0_0x4733ad:
    case a0_0x331924:
      _0x310614 = this.isEdibleOutlined() ? "e" : this.oType;
      if (this.curBiome == a0_0x5fac87) {
        _0x310614 += "_2";
      }
      break;
    case a0_0x5f1003:
      _0x310614 = this.isEdibleOutlined() ? "e" : this.curBiome;
      if (this.curBiome == a0_0x5fac87) {
        _0x310614 += "_2";
      }
      break;
    case a0_0x9b2337:
      _0x310614 += "_" + this.curBiome;
      break;
    case a0_0x21686d:
    case a0_0x579937:
      if (this.curBiome != a0_0x282b9e) {
        _0x310614 = this.curBiome;
      }
      break;
  }
  return _0x310614;
};
a0_0x12658e.prototype.customDraw = function (_0x22dec9) {
  switch (this.oType) {
    case a0_0x10c81e:
      this.customDraw2(_0x22dec9);
      break;
    case a0_0x225e01:
      {
        switch (this.curBiome) {
          case a0_0xc64a03:
            if (_0x22dec9) {
              a0_0x5c99c1(0, 0, this.rad, a0_0x23e797);
            } else {
              a0_0x5c99c1(0, 0, this.rad - 1.5, a0_0x13d8cb);
            }
            break;
          case a0_0x2f0085:
            if (_0x22dec9) {
              a0_0x5c99c1(0, 0, this.rad, this.getOutlineColor());
            } else {
              a0_0x5c99c1(0, 0, this.rad - 1.5, a0_0x575276);
            }
            break;
          case a0_0x5fac87:
            if (_0x22dec9) {
              a0_0x5c99c1(0, 0, this.rad, "white");
            } else {
              a0_0x5c99c1(0, 0, this.rad - 1.5, a0_0x9b3128);
            }
            break;
          case a0_0x1bed8b:
          default:
            if (_0x22dec9) {
              a0_0x5c99c1(0, 0, this.rad, a0_0x41030c);
            } else {
              a0_0x5c99c1(0, 0, this.rad - 1.5, a0_0x10b87);
            }
            break;
        }
      }
      break;
    case a0_0x18b147:
      {
        a0_0x4ef4f3.save();
        var _0x37cf33 = 0;
        if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
          var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
          var _0x47e530 = 2;
          var _0x1edd9e = 1.5;
          _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        }
        var _0x55812d = this.curBiome == a0_0x2f0085 ? a0_0x25f9ca : a0_0x3e6389;
        a0_0x4ef4f3.fillStyle = _0x55812d;
        var _0x41c30f = this.rad * 0.8;
        this.drawOutlinedCircle("", _0x55812d);
        a0_0x4ef4f3.globalAlpha *= 0.98;
        var _0x1b1d7 = -_0x41c30f * 0.5;
        var _0x3b9dda = -_0x41c30f * 0.5 + this.rPer * 10;
        var _0x2a765b = Math.max(0, _0x41c30f * 0.65 + _0x37cf33) + 2;
        a0_0x5c99c1(_0x1b1d7, _0x3b9dda, _0x2a765b, _0x55812d);
        var _0x1b1d7 = _0x41c30f * 0.5;
        var _0x3b9dda = -_0x41c30f * 0.5 - this.rPer * 10;
        var _0x2a765b = Math.max(0, _0x41c30f * 0.73 - _0x37cf33);
        a0_0x5c99c1(_0x1b1d7, _0x3b9dda, _0x2a765b, _0x55812d);
        var _0x1b1d7 = _0x41c30f * 0.6;
        var _0x3b9dda = _0x41c30f * 0.4;
        var _0x2a765b = Math.max(0, _0x41c30f * 0.78 + _0x37cf33);
        a0_0x5c99c1(_0x1b1d7, _0x3b9dda, _0x2a765b, _0x55812d);
        var _0x1b1d7 = -_0x41c30f * 0.5;
        var _0x3b9dda = _0x41c30f * 0.5 + this.rPer * 10;
        var _0x2a765b = Math.max(0, _0x41c30f * 0.6 + this.rPer - _0x37cf33);
        a0_0x5c99c1(_0x1b1d7, _0x3b9dda, _0x2a765b, _0x55812d);
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x52c53f:
      {
        var _0x1a4e8c = this.curBiome == a0_0xc64a03 ? "#9b702b" : "#1AAE31";
        this.drawOutlinedCircle("", _0x1a4e8c);
        a0_0x4ef4f3.save();
        var _0x37cf33 = 0;
        if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
          var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
          var _0x47e530 = 2;
          var _0x1edd9e = 1.5;
          _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        }
        a0_0x4ef4f3.fillStyle = a0_0x2df79b;
        var _0x31c311 = this.rad * 0.75;
        a0_0x4ef4f3.globalAlpha *= 0.8;
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(-_0x31c311 * 0.5, -_0x31c311 * 0.5 + this.rPer * 10, Math.max(0, _0x31c311 * 0.65 + _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(_0x31c311 * 0.5, -_0x31c311 * 0.5 - this.rPer * 10, Math.max(0, _0x31c311 * 0.73 - _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(_0x31c311 * 0.6, _0x31c311 * 0.4, Math.max(0, _0x31c311 * 0.78 + _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(-_0x31c311 * 0.5, _0x31c311 * 0.5, Math.max(0, _0x31c311 * 0.6 + this.rPer - _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x105313:
      {
        a0_0x4ef4f3.save();
        var _0x37cf33 = 0;
        if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
          var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
          var _0x47e530 = 2;
          var _0x1edd9e = 1.5;
          _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        }
        var _0x41c30f = this.rad * 0.8;
        var _0x114aea = a0_0x25f9ca;
        this.drawOutlinedCircle("", _0x114aea);
        a0_0x4ef4f3.globalAlpha *= 0.98;
        var _0x1b1d7 = -_0x41c30f * 0.5;
        var _0x3b9dda = -_0x41c30f * 0.5 + this.rPer * 10;
        var _0x2a765b = Math.max(0, _0x41c30f * 0.65 + _0x37cf33) + 2;
        a0_0x5c99c1(_0x1b1d7, _0x3b9dda, _0x2a765b, _0x114aea);
        var _0x1b1d7 = _0x41c30f * 0.5;
        var _0x3b9dda = -_0x41c30f * 0.5 - this.rPer * 10;
        var _0x2a765b = Math.max(0, _0x41c30f * 0.73 - _0x37cf33);
        a0_0x5c99c1(_0x1b1d7, _0x3b9dda, _0x2a765b, _0x114aea);
        var _0x1b1d7 = _0x41c30f * 0.6;
        var _0x3b9dda = _0x41c30f * 0.4;
        var _0x2a765b = Math.max(0, _0x41c30f * 0.78 + _0x37cf33);
        a0_0x5c99c1(_0x1b1d7, _0x3b9dda, _0x2a765b, _0x114aea);
        var _0x1b1d7 = -_0x41c30f * 0.5;
        var _0x3b9dda = _0x41c30f * 0.5 + this.rPer * 10;
        var _0x2a765b = Math.max(0, _0x41c30f * 0.6 + this.rPer - _0x37cf33);
        a0_0x5c99c1(_0x1b1d7, _0x3b9dda, _0x2a765b, _0x114aea);
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x9b2337:
      {
        a0_0x4ef4f3.save();
        var _0x301ba3 = this.curBiome == a0_0x5fac87 ? "#7790d8" : a0_0x2b43c5;
        this.drawOutlinedCircle("", _0x301ba3);
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x37cf33 = 0;
        if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
          var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
          var _0x47e530 = 7;
          var _0x1edd9e = 4;
          _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        }
        if (this.curBiome == a0_0x5fac87) {
          a0_0x4ef4f3.fillStyle = "#7790d8";
        } else {
          a0_0x4ef4f3.fillStyle = a0_0x2b43c5;
        }
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x5e6bb4 + _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.3, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.35 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x26d26c:
      {
        var _0x3960ad = a0_0x580c23;
        if (this.curBiome == a0_0x5fac87) {
          _0x3960ad = "#ac443c";
        }
        this.drawOutlinedCircle("", _0x3960ad);
      }
      break;
    case a0_0xd897ba:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/coconut" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          if (this.specType2 == 1) {
            if (this.angle == 0) {
              this.angle = this.rPer * Math.PI * 2;
            }
            this.angle += 0.4;
            a0_0x4ef4f3.rotate(this.angle);
          } else if (this.specType2 == 2) {
            a0_0x4ef4f3.rotate(this.angle);
          } else {
            a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        }
      }
      break;
    case a0_0x46c550:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/banana" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          if (this.specType2 == 1) {
            if (this.angle == 0) {
              this.angle = this.rPer * Math.PI * 2;
            }
            this.angle += 0.4;
            a0_0x4ef4f3.rotate(this.angle);
          } else if (this.specType2 == 2) {
            a0_0x4ef4f3.rotate(this.angle);
          } else {
            a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        }
      }
      break;
    case a0_0xdd316d:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/rasp" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          if (this.specType2 == 1) {
            if (this.angle == 0) {
              this.angle = this.rPer * Math.PI * 2;
            }
            this.angle += 0.4;
            a0_0x4ef4f3.rotate(this.angle);
          } else if (this.specType2 == 2) {
            a0_0x4ef4f3.rotate(this.angle);
          } else {
            a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        }
      }
      break;
    case a0_0x3b275c:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/pear" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          if (this.specType2 == 1) {
            if (this.angle == 0) {
              this.angle = this.rPer * Math.PI * 2;
            }
            this.angle += 0.4;
            a0_0x4ef4f3.rotate(this.angle);
          } else if (this.specType2 == 2) {
            a0_0x4ef4f3.rotate(this.angle);
          } else {
            a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        }
      }
      break;
    case a0_0x4243b3:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/seaweed" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        }
      }
      break;
    case a0_0x4f9ab6:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/starfish" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        }
      }
      break;
    case a0_0x502c51:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/kelp" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        }
      }
      break;
    case a0_0xe5fc06:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/clam" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        }
      }
      break;
    case a0_0x557e7b:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/conch" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad * 1;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x4c7c24:
    case a0_0x512954:
      {
        break;
      }
    case a0_0x53d1e5:
      {
        var _0x40a8e6 = this.getSkinImageObj("skins/land/ostrich/" + this.speciesType + "/ostrichEgg" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x4c8a27:
      this.drawOutlinedCircle("", "red");
      break;
    case a0_0x5c2f42:
      this.drawOutlinedCircle("", "green");
      break;
    case a0_0x41f90c:
      this.drawOutlinedCircle("", "blue");
      break;
    case a0_0x144ab2:
      break;
    case a0_0x23ce82:
      {
        var _0x22576f = "egg";
        if (this.specType == 1) {
          _0x22576f = "goldenegg";
        }
        var _0x21fc2b = "img/" + _0x22576f + (this.isEdibleOutlined() ? "_e" : "") + ".png";
        var _0x40a8e6 = this.getSkinImageObj(_0x21fc2b);
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x38c409:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/beehive" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(this.rPer * 0.5 * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x592fe7:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/desert/anthill/anthill.png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(this.rPer * 0.5 * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
          console.log("drawing anthill");
        }
      }
      break;
    case a0_0x4b40ca:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/honeycomb" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(this.rPer * 0.5 * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x1b54d5:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/quill.png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.rotate(this.angle);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        }
      }
      break;
    case a0_0x4a0860:
      {
        this.drawOutlinedCircle("", a0_0x401c37);
        a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
        a0_0x5c99c1(this.rad * 0.25, this.rad * 0.4, (0.3 + this.rPer * 0.15) * this.rad, "#905113");
      }
      break;
    case a0_0x4230b4:
      {
        var _0x29b894 = "";
        switch (this.curBiome) {
          case a0_0x2f0085:
            _0x29b894 = "_ocean";
            break;
          case a0_0x5fac87:
            _0x29b894 = "_arctic";
            break;
          case a0_0x1bed8b:
          default:
            _0x29b894 = "";
            break;
        }
        var _0x40a8e6 = this.getSkinImageObj("img/healingStone" + _0x29b894 + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x241128:
      {
        a0_0x5c99c1(0, 0, Math.max(0, this.rad * 1), "#815427");
        a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.6), "#6e4b29");
        a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.5), "#543d28");
        a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.45), "#3f3124");
        a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.33), "#241e19");
        a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.25), "#120f0d");
        a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.2), a0_0x5479b9);
      }
      break;
    case a0_0x572af7:
      {
        a0_0x4ef4f3.save();
        var _0x37cf33 = 0;
        if (!a0_0x1528ea && a0_0x1d703e !== a0_0x30b084) {
          _0x37cf33 = a0_0x232cc7("lavalake", this.spawnTime);
        }
        if (_0x22dec9) {
          var _0x5e6bb4 = 4;
          a0_0x4ef4f3.fillStyle = a0_0x5479b9;
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
        } else {
          a0_0x4ef4f3.fillStyle = a0_0x5479b9;
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x5e6bb4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          if (a0_0x1d703e != 2) {
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x37cf33), 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x37cf33), 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
          }
          if (!a0_0x1528ea && a0_0x1d703e != 2) {
            a0_0x4ef4f3.save();
            a0_0x4ef4f3.globalAlpha = 1 - this.underwaterA;
            var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
            var _0x47e530 = 1.5;
            var _0x1edd9e = 8;
            var _0x3c94eb = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
            if (this.flag_underWater) {
              a0_0x4ef4f3.globalAlpha *= 0.5;
              if (this.animalType == a0_0x20917b) {
                a0_0x4ef4f3.globalAlpha = 0.3;
              }
            }
            a0_0x4ef4f3.fillStyle = "yellow";
            var _0x1cca46 = this.rad * 0.15;
            a0_0x4ef4f3.beginPath();
            var _0x30b849 = 1;
            for (i = 1; i <= _0x30b849; i++) {
              a0_0x4ef4f3.save();
              a0_0x4ef4f3.globalAlpha = 0.2;
              a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2 * i);
              a0_0x4ef4f3.beginPath();
              a0_0x4ef4f3.arc(this.rad * -0.35, this.rad * -0.33, Math.max(0, _0x1cca46 + _0x3c94eb), 0, Math.PI * 2);
              a0_0x4ef4f3.fill();
              a0_0x4ef4f3.beginPath();
              a0_0x4ef4f3.arc(this.rad * 0.35, this.rad * -0.32, Math.max(0, _0x1cca46 - _0x3c94eb), 0, Math.PI * 2);
              a0_0x4ef4f3.fill();
              a0_0x4ef4f3.beginPath();
              a0_0x4ef4f3.arc(this.rad * 0.35, this.rad * 0.36, Math.max(0, _0x1cca46 + _0x3c94eb), 0, Math.PI * 2);
              a0_0x4ef4f3.fill();
              a0_0x4ef4f3.beginPath();
              a0_0x4ef4f3.arc(this.rad * -0.35, this.rad * 0.35, Math.max(0, _0x1cca46 - _0x3c94eb), 0, Math.PI * 2);
              a0_0x4ef4f3.fill();
              a0_0x4ef4f3.restore();
            }
            a0_0x4ef4f3.restore();
          }
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x120b7c:
      {
        a0_0x4ef4f3.save();
        var _0x37cf33 = 0;
        var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x47e530 = 4;
        var _0x1edd9e = 2.5;
        _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        if (_0x22dec9) {
          var _0x5e6bb4 = 4;
          a0_0x4ef4f3.fillStyle = "#5e5348";
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
        } else {
          a0_0x4ef4f3.fillStyle = "#706962";
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x5e6bb4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          if (a0_0x1d703e != a0_0x30b084) {
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x37cf33), 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x37cf33), 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
          }
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.globalAlpha = 1 - this.underwaterA;
          var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
          var _0x47e530 = 1.5;
          var _0x1edd9e = 8;
          var _0x3c94eb = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
          if (this.flag_underWater) {
            a0_0x4ef4f3.globalAlpha *= 0.5;
            if (this.animalType == a0_0x20917b) {
              a0_0x4ef4f3.globalAlpha = 0.3;
            }
          }
          a0_0x4ef4f3.fillStyle = "yellow";
          var _0x1cca46 = this.rad * 0.15;
          a0_0x4ef4f3.beginPath();
          var _0x30b849 = 1;
          for (i = 1; i <= _0x30b849; i++) {
            a0_0x4ef4f3.save();
            a0_0x4ef4f3.globalAlpha = 0.2;
            a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2 * i);
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad * -0.35, this.rad * -0.33, Math.max(0, _0x1cca46 + _0x3c94eb), 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad * 0.35, this.rad * -0.32, Math.max(0, _0x1cca46 - _0x3c94eb), 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad * 0.35, this.rad * 0.36, Math.max(0, _0x1cca46 + _0x3c94eb), 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad * -0.35, this.rad * 0.35, Math.max(0, _0x1cca46 - _0x3c94eb), 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.restore();
          }
          a0_0x4ef4f3.restore();
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x377b38:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/cloudberry" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          if (this.specType2 == 1) {
            if (this.angle == 0) {
              this.angle = this.rPer * Math.PI * 2;
            }
            this.angle += 0.4;
            a0_0x4ef4f3.rotate(this.angle);
          } else if (this.specType2 == 2) {
            a0_0x4ef4f3.rotate(this.angle);
          } else {
            a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        }
      }
      break;
    case a0_0x54352a:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/arcticNut" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          if (this.specType2 == 1) {
            if (this.angle == 0) {
              this.angle = this.rPer * Math.PI * 2;
            }
            this.angle += 0.4;
            a0_0x4ef4f3.rotate(this.angle);
          } else if (this.specType2 == 2) {
            a0_0x4ef4f3.rotate(this.angle);
          } else {
            a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        }
      }
      break;
    case a0_0x33ec82:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/carrot" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x29dfd6:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/watermelon" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x5124d4:
      {
        a0_0x4ef4f3.save();
        a0_0x5c99c1(0, 0, this.rad, !this.isEdibleOutlined() ? a0_0x28d4ea(this.curBiome) : a0_0x237aea);
        a0_0x5c99c1(0, 0, Math.max(0, this.rad - 2), "#74e61e");
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x1be211:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/watermelonSlice" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x4d8272:
    case a0_0x2537f6:
    case a0_0x138652:
      {
        var _0x267859 = 0;
        var _0x40a8e6 = this.getSkinImageObj("img/meat" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x4733ad:
    case a0_0x5ca180:
      {
        var _0x5e6bb4 = 2;
        var _0x16c170 = this.oType == a0_0x5ca180 ? 15 : 9;
        a0_0x4ef4f3.fillStyle = this.getOutlineColor();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.rect(-_0x16c170 / 2 - _0x5e6bb4, -_0x5e6bb4, _0x16c170 + _0x5e6bb4 * 2, this.rad * 0.8 + _0x5e6bb4 * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.fillStyle = "#FFCA49";
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.rect(-_0x16c170 / 2, 0 + _0x5e6bb4 / 2, _0x16c170, this.rad * 0.8 - _0x5e6bb4 / 2);
        a0_0x4ef4f3.fill();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad), Math.PI, Math.PI * 2);
          a0_0x4ef4f3.fillStyle = this.getOutlineColor();
          a0_0x4ef4f3.fill();
        }
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x5e6bb4), Math.PI, Math.PI * 2);
        a0_0x4ef4f3.fillStyle = this.oType == a0_0x5ca180 ? "#B8413B" : "#CFAD59";
        a0_0x4ef4f3.fill();
      }
      break;
    case a0_0x331924:
      {
        var _0x5e6bb4 = 2;
        a0_0x4ef4f3.save();
        var _0x37cf33 = 0;
        if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
          var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
          var _0x47e530 = 2;
          var _0x1edd9e = 1.5;
          _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        }
        a0_0x4ef4f3.fillStyle = "#45D157";
        a0_0x4ef4f3.globalAlpha *= 0.93;
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(-this.rad * 0.5, -this.rad * 0.5 + this.rPer * 10, Math.max(0, this.rad * 0.55 + _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(this.rad * 0.5, -this.rad * 0.5 - this.rPer * 10, Math.max(0, this.rad * 0.43 - _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(this.rad * 0.6, this.rad * 0.4, Math.max(0, this.rad * 0.48 + _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(-this.rad * 0.5, this.rad * 0.5, Math.max(0, this.rad * 0.4 + this.rPer - _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.restore();
        var _0x16c170 = 20;
        a0_0x4ef4f3.fillStyle = this.getOutlineColor();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.rect(-_0x16c170 / 2 - _0x5e6bb4, -_0x5e6bb4, _0x16c170 + _0x5e6bb4 * 2, this.rad * 0.8 + _0x5e6bb4 * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.fillStyle = "#FFCA49";
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.rect(-_0x16c170 / 2, 0 + _0x5e6bb4 / 2, _0x16c170, this.rad * 0.8 - _0x5e6bb4 / 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad * 0.8), Math.PI, Math.PI * 2);
        a0_0x4ef4f3.fillStyle = this.getOutlineColor();
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad * 0.8 - _0x5e6bb4), Math.PI, Math.PI * 2);
        a0_0x4ef4f3.fillStyle = "#B8413B";
        a0_0x4ef4f3.fill();
      }
      break;
    case a0_0x7fd6bc:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/lillypad" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        }
      }
      break;
    case a0_0x20e6c5:
      {
        console.log("ERROR: " + this + " should be subclassed!");
      }
      break;
    case a0_0x21686d:
    case a0_0x579937:
      {
        var _0x3821c0 = this.curBiome == a0_0x5fac87 ? "#e0e0e0" : "#9F8641";
        var _0x368bf2 = this.curBiome == a0_0x5fac87 ? "#878787" : "#7E6A35";
        var _0x32de41 = this.curBiome == a0_0x5fac87 ? "#666666" : "#5C4E28";
        var _0x4d9f1b = this.curBiome == a0_0x5fac87 ? "#434343" : "#40371D";
        if (this.curBiome != a0_0x5fac87) {
          this.drawOutlinedCircleRad("", _0x3821c0, this.innerRad);
        } else {
          a0_0x5c99c1(0 + this.rPer, 1, Math.max(0, this.innerRad), _0x3821c0);
        }
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x5c99c1(0 - this.rPer, 0 - this.rPer, Math.max(0, this.innerRad - 7), _0x368bf2);
        }
        a0_0x5c99c1(0 + this.rPer, 1, Math.max(0, this.innerRad - 14), _0x32de41);
        a0_0x5c99c1(0 - this.rPer * 2 - 3, 1, Math.max(0, this.innerRad - 18.5), _0x4d9f1b);
        var _0x2b8d57 = a0_0x3d5ac5[a0_0x1c918d];
        if (_0x2b8d57 && _0x2b8d57.lastHidingHoleID == this.id) {
          if (this.alpha == undefined) {
            this.alpha = 0;
          }
          if (_0x2b8d57.flag_inHidingHole) {
            this.alpha += (0.1 + this.alpha) * 0.1;
          } else {
            this.alpha -= this.alpha * 0.1;
          }
          if (this.alpha > 1) {
            this.alpha = 1;
          } else if (this.alpha < 0) {
            this.alpha = 0;
          }
          a0_0x4ef4f3.globalAlpha = this.alpha;
          var _0x3268f2 = this.rad;
          if (this.curBiome != a0_0x5fac87) {
            this.drawOutlinedCircleRad("", _0x3821c0, _0x3268f2);
          } else {
            a0_0x5c99c1(0, 0, Math.max(0, _0x3268f2), _0x3821c0);
          }
          a0_0x5c99c1(0 - this.rPer, 0 - this.rPer, Math.max(0, _0x3268f2 - 7), _0x368bf2);
          a0_0x5c99c1(0 + this.rPer, 1, Math.max(0, _0x3268f2 - 12), _0x32de41);
          a0_0x4ef4f3.globalAlpha = this.alpha * 0.7;
          _0x3268f2 = _0x3268f2 * 0.7;
          a0_0x5c99c1(0 - this.rPer, 0 - this.rPer, Math.max(0, _0x3268f2 - 7), _0x4d9f1b);
          _0x3268f2 = _0x3268f2 * 0.5;
          a0_0x4ef4f3.globalAlpha = this.alpha * 0.3;
          a0_0x5c99c1(0 - this.rPer, 0 - this.rPer, Math.max(0, _0x3268f2), _0x4d9f1b);
        }
      }
      break;
    case a0_0x1344db:
      {
        var _0x5074bb = 1;
        var _0x113dc8 = 1;
        if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
          var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
          var _0x47e530 = 1.2;
          _0x5074bb = Math.cos(Math.PI * 2 / _0x47e530 * _0x46f724) * 3.5;
          _0x113dc8 = Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724) * 2.5;
        }
        this.drawOutlinedCircleRad("", "#4A549D", this.innerRad);
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x5c99c1(0 + _0x5074bb / 2 - this.rPer, 0 + _0x113dc8 / 2 - this.rPer, Math.max(0, this.innerRad - 6), "#444C8B");
        }
        a0_0x5c99c1(0 + _0x5074bb / 4.5 + this.rPer, 1 + _0x113dc8 / 1.5, Math.max(0, this.innerRad - 14), "#4A549D");
        a0_0x5c99c1(0 + _0x5074bb / 1.5 - this.rPer * 2, _0x113dc8, Math.max(0, this.innerRad - 18.5 + _0x113dc8 / 5), "#3F4477");
        a0_0x5c99c1(0 + _0x5074bb / 1.5 - this.rPer * 2, _0x113dc8, Math.max(0, this.innerRad - 22.5 + _0x113dc8 / 11), "#353860");
        var _0x2b8d57 = a0_0x3d5ac5[a0_0x1c918d];
        if (_0x2b8d57 && _0x2b8d57.lastHidingHoleID == this.id) {
          if (this.alpha == undefined) {
            this.alpha = 0;
          }
          if (_0x2b8d57.flag_inHidingHole) {
            this.alpha += (0.1 + this.alpha) * 0.1;
          } else {
            this.alpha -= this.alpha * 0.1;
          }
          if (this.alpha > 1) {
            this.alpha = 1;
          } else if (this.alpha < 0) {
            this.alpha = 0;
          }
          a0_0x4ef4f3.globalAlpha = this.alpha;
          var _0x3268f2 = this.rad;
          this.drawOutlinedCircle("", "#4A549D", _0x3268f2);
          if (a0_0x1d703e != a0_0x30b084) {
            a0_0x5c99c1(0 + _0x5074bb / 2 - this.rPer, 0 + _0x113dc8 / 2 - this.rPer, Math.max(0, _0x3268f2 - 6), "#444C8B");
          }
          a0_0x5c99c1(0 + _0x5074bb / 4.5 + this.rPer, 1 + _0x113dc8 / 1.5, Math.max(0, _0x3268f2 - 14), "#4A549D");
          _0x3268f2 = _0x3268f2 * 0.9;
          a0_0x4ef4f3.globalAlpha = this.alpha * 0.6;
          a0_0x5c99c1(0 + _0x5074bb / 3.5 - this.rPer * 2, _0x113dc8, Math.max(0, _0x3268f2 - 18.5 + _0x113dc8 / 5), "#3F4477");
          _0x3268f2 = _0x3268f2 * 0.7;
          a0_0x4ef4f3.globalAlpha = this.alpha * 0.3;
          a0_0x5c99c1(0 + _0x5074bb / 6.5 - this.rPer * 2, _0x113dc8, Math.max(0, _0x3268f2 - 22.5 + _0x113dc8 / 11), "#353860");
        }
      }
      break;
    case a0_0x5d72fa:
      {
        a0_0x4ef4f3.save();
        var _0x37cf33 = 0;
        if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
          var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
          var _0x47e530 = 2;
          var _0x1edd9e = 1.5;
          _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        }
        var _0x3d538f = "#45D157";
        switch (this.curBiome) {
          case a0_0x2f0085:
            _0x3d538f = "#786810";
            break;
          case a0_0x5fac87:
            _0x3d538f = "#CED0D0";
            break;
          default:
          case a0_0x1bed8b:
            _0x3d538f = "#45D157";
            break;
          case a0_0xc64a03:
            _0x3d538f = "#9b6f31";
            break;
        }
        a0_0x4ef4f3.fillStyle = _0x3d538f;
        a0_0x4ef4f3.globalAlpha *= 0.93;
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(-this.rad * 0.5, -this.rad * 0.5 + this.rPer * 10, Math.max(0, this.rad * 0.65 + _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(this.rad * 0.5, -this.rad * 0.5 - this.rPer * 10, Math.max(0, this.rad * 0.73 - _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(this.rad * 0.6, this.rad * 0.4, Math.max(0, this.rad * 0.78 + _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(-this.rad * 0.5, this.rad * 0.5, Math.max(0, this.rad * 0.6 + this.rPer - _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x4459f0:
      {
        a0_0x4ef4f3.save();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x37cf33 = 0;
        var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x47e530 = 6;
        var _0x1edd9e = 1.5;
        _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        var _0x5e6bb4 = 4;
        a0_0x4ef4f3.fillStyle = "#604729";
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.fillStyle = "#8A681B";
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x5e6bb4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x220ae1:
      {
        a0_0x4ef4f3.save();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x37cf33 = 0;
        var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x47e530 = 6;
        var _0x1edd9e = 1.5;
        _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        var _0x5e6bb4 = 4;
        a0_0x4ef4f3.fillStyle = "#605649";
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.fillStyle = "#5e4f36";
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x5e6bb4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x534c05:
      break;
    case a0_0x3d3e1a:
    case a0_0x2e633f:
    case a0_0x180b81:
    case a0_0x5d6cd8:
      break;
    case a0_0x380492:
    case a0_0x3ed524:
      var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(180));
      a0_0x4ef4f3.globalAlpha = 0.1 + this.cloudOpacity;
      var _0x40a8e6 = this.getSkinImageObj("img/disasters/cloud.png");
      if (_0x40a8e6) {
        var _0x31c311 = this.rad * 2;
        a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
      }
      var _0x37cf33 = 0;
      var _0x47e530 = 6;
      var _0x1edd9e = 15;
      _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
      a0_0x4ef4f3.globalAlpha = 0.1;
      var _0x40a8e6 = this.getSkinImageObj("img/disasters/cloud1.png");
      if (_0x40a8e6) {
        var _0x31c311 = this.rad * 2;
        _0x31c311 = Math.max(0, _0x31c311 - 5 + _0x37cf33);
        a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
      }
      a0_0x4ef4f3.restore();
      break;
    case a0_0x129130:
      {
        a0_0x4ef4f3.save();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x37cf33 = 1.5;
        var _0xc95808 = a0_0x232cc7("volcano", this.spawnTime);
        if (_0xc95808 !== undefined && _0xc95808 != null) {
          this.theFrame = _0xc95808;
        }
        _0x37cf33 = this.theFrame;
        var _0x5e6bb4 = 4;
        a0_0x4ef4f3.fillStyle = "#8B7833";
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.fillStyle = "#98803A";
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x5e6bb4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          if (this.rad > 50) {
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 10, 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
          }
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0xcc5001:
      {
        a0_0x4ef4f3.save();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x37cf33 = 0;
        var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x47e530 = 6;
        var _0x1edd9e = 1.5;
        _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        var _0x5e6bb4 = 4;
        a0_0x4ef4f3.fillStyle = "#8CC3C7";
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.fillStyle = "#9DDADE";
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x5e6bb4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, this.specType == 0 ? 8 : 4, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x1fa0cc:
      {
        a0_0x4ef4f3.save();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x37cf33 = 0;
        if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
          var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
          var _0x47e530 = 4;
          var _0x1edd9e = 5.5;
          _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        }
        var _0x5e6bb4 = 4;
        a0_0x4ef4f3.fillStyle = a0_0x575276;
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        if (this.curBiome == a0_0x5fac87) {
          a0_0x4ef4f3.fillStyle = "#8da0d6";
        } else {
          a0_0x4ef4f3.fillStyle = a0_0x2b43c5;
        }
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x5e6bb4 + _0x37cf33), 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, this.specType == 0 ? 8 : 4, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x239558:
      {
        a0_0x4ef4f3.save();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x37cf33 = 0;
        if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
          var _0x46f724 = (a0_0x4f736f - a0_0x2d9112) / 1000;
          var _0x47e530 = 5;
          var _0x1edd9e = 5.5;
          _0x37cf33 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        }
        var _0x5e6bb4 = 4;
        if (_0x22dec9) {} else {
          a0_0x4ef4f3.fillStyle = a0_0x4e0e7c;
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x5e6bb4 + _0x37cf33), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          if (a0_0x1d703e != a0_0x30b084) {
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
            a0_0x4ef4f3.beginPath();
            a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
            a0_0x4ef4f3.fill();
          }
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x6632a8:
      {
        var _0x2f7384 = 0;
        if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
          var _0x46f724 = (a0_0x4f736f - a0_0x2d9112) / 1000;
          var _0x47e530 = 5;
          var _0x1edd9e = -8.5;
          _0x2f7384 = _0x1edd9e * Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724);
        }
        var _0x578b98 = 10;
        var _0x122db3 = this.x > a0_0x425049 / 2 ? 1 : 0;
        if (_0x122db3 == 1) {
          a0_0x4ef4f3.fillStyle = a0_0x4e0e7c;
          a0_0x4ef4f3.fillRect(-this.rectW / 2 + _0x2f7384, -this.rectH / 2 + _0x2f7384 + _0x578b98, this.rectW - _0x2f7384, this.rectH - _0x2f7384 - _0x578b98);
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rectW / 2 + 50, -this.rectH / 2 + 50, 70 - _0x2f7384, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          var _0x4cdb4b = 35;
          a0_0x165516(-this.rectW / 2 + _0x4cdb4b, -this.rectH / 2 + _0x4cdb4b, this.rectW / 2 - _0x4cdb4b, this.rectH / 2 - _0x4cdb4b, this.x, this.y);
        } else {
          a0_0x4ef4f3.fillStyle = a0_0x4e0e7c;
          _0x2f7384 *= -1;
          a0_0x4ef4f3.fillRect(-this.rectW / 2, -this.rectH / 2 - _0x2f7384 + _0x578b98, this.rectW + _0x2f7384, this.rectH + _0x2f7384 - _0x578b98);
          var _0x4cdb4b = 25;
          a0_0x165516(-this.rectW / 2 + _0x4cdb4b, -this.rectH / 2 + _0x4cdb4b, this.rectW / 2 - _0x4cdb4b, this.rectH / 2 - _0x4cdb4b, this.x, this.y);
        }
      }
      break;
    case a0_0x308061:
      {
        a0_0x4ef4f3.fillStyle = a0_0x575276;
        var _0x291670 = -this.rectW / 2;
        var _0x489789 = this.rectW / 2;
        var _0x24b57f = -this.rectH / 2;
        var _0x3cb6e6 = this.rectH / 2;
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.moveTo(_0x291670, _0x24b57f);
        var _0x2fcf31 = 30;
        var _0x54a9c7 = [-15, 10, -10, 12, 0, 5, -10, 5, -12, 5, 10, 0, -6];
        var _0x570a4c = 45;
        var _0x3ce490 = 0;
        var _0x9734c = a0_0x425049 - this.x;
        var _0x250b97 = 0 - this.x;
        var _0x34106e = a0_0xe585d7 - this.y;
        var _0x21f80f = 0 - this.y;
        var _0x3b9dda;
        var _0x1b1d7 = _0x291670 - _0x2fcf31;
        for (_0x3b9dda = _0x24b57f; _0x3b9dda < _0x3cb6e6; _0x3b9dda += _0x570a4c) {
          a0_0x4ef4f3.lineTo(Math.min(_0x9734c, Math.max(_0x250b97, _0x1b1d7 + _0x54a9c7[_0x3ce490])), _0x3b9dda);
          _0x3ce490 = (_0x3ce490 + 1) % _0x54a9c7.length;
        }
        a0_0x4ef4f3.lineTo(_0x291670, _0x3cb6e6);
        _0x3b9dda = _0x3cb6e6 + _0x2fcf31;
        for (_0x1b1d7 = _0x291670; _0x1b1d7 < _0x489789; _0x1b1d7 += _0x570a4c) {
          a0_0x4ef4f3.lineTo(_0x1b1d7, Math.min(_0x34106e, Math.max(_0x21f80f, _0x3b9dda + _0x54a9c7[_0x3ce490])));
          _0x3ce490 = (_0x3ce490 + 1) % _0x54a9c7.length;
        }
        a0_0x4ef4f3.lineTo(_0x489789, _0x3cb6e6);
        _0x1b1d7 = _0x489789 + _0x2fcf31;
        for (_0x3b9dda = _0x3cb6e6; _0x3b9dda > _0x24b57f; _0x3b9dda -= _0x570a4c) {
          a0_0x4ef4f3.lineTo(Math.min(_0x9734c, Math.max(_0x250b97, _0x1b1d7 + _0x54a9c7[_0x3ce490])), _0x3b9dda);
          _0x3ce490 = (_0x3ce490 + 1) % _0x54a9c7.length;
        }
        a0_0x4ef4f3.lineTo(_0x489789, _0x24b57f);
        _0x3b9dda = _0x24b57f - _0x2fcf31;
        for (_0x1b1d7 = _0x489789; _0x1b1d7 > _0x291670; _0x1b1d7 -= _0x570a4c) {
          a0_0x4ef4f3.lineTo(_0x1b1d7, Math.min(_0x34106e, Math.max(_0x21f80f, _0x3b9dda + _0x54a9c7[_0x3ce490])));
          _0x3ce490 = (_0x3ce490 + 1) % _0x54a9c7.length;
        }
        a0_0x4ef4f3.closePath();
        a0_0x4ef4f3.fill();
      }
      break;
    case a0_0x2cd8a2:
      {
        var _0x3a530a = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.fillStyle = a0_0x402859;
        a0_0x4ef4f3.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
        var _0x4cdb4b = 35;
        a0_0x165516(-this.rectW / 2 + _0x4cdb4b, -this.rectH / 2 + _0x4cdb4b, this.rectW / 2 - _0x4cdb4b, this.rectH / 2 - _0x4cdb4b, this.x, this.y);
        var _0x1415a5 = 15;
        {
          a0_0x4ef4f3.fillStyle = a0_0x402859;
          var _0x291670 = -this.rectW / 2;
          var _0x489789 = this.rectW / 2;
          var _0x24b57f = -this.rectH / 2 + 3;
          var _0x3cb6e6 = -this.rectH / 2 - _0x1415a5;
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.moveTo(_0x291670, _0x24b57f);
          var _0x2fcf31 = 0;
          var _0x54a9c7 = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
          var _0x570a4c = 60;
          var _0x3ce490 = 0;
          var _0x9734c = a0_0x425049 - this.x;
          var _0x250b97 = 0 - this.x;
          var _0x34106e = a0_0xe585d7 - this.y;
          var _0x21f80f = 0 - this.y;
          var _0x3b9dda;
          var _0x1b1d7 = _0x291670 - _0x2fcf31;
          a0_0x4ef4f3.lineTo(_0x291670, _0x3cb6e6);
          _0x3b9dda = _0x3cb6e6 + _0x2fcf31;
          for (_0x1b1d7 = _0x291670; _0x1b1d7 < _0x489789; _0x1b1d7 += _0x570a4c) {
            a0_0x4ef4f3.lineTo(_0x1b1d7, Math.min(_0x34106e, Math.max(_0x21f80f, _0x3b9dda + _0x54a9c7[_0x3ce490])));
            _0x3ce490 = (_0x3ce490 + 1) % _0x54a9c7.length;
          }
          a0_0x4ef4f3.lineTo(_0x489789, _0x3cb6e6);
          a0_0x4ef4f3.lineTo(_0x489789, _0x24b57f);
          a0_0x4ef4f3.closePath();
          a0_0x4ef4f3.fill();
        }
      }
      break;
    case a0_0x30fa27:
      {
        var _0x3a530a = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.fillStyle = "#ececec";
        a0_0x4ef4f3.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
        var _0x291670 = -this.rectW / 2;
        var _0x489789 = this.rectW / 2;
        var _0x24b57f = this.rectH / 2 - 20;
        var _0x3cb6e6 = this.rectH / 2;
        snowLandWidth = this.rectW;
        snowLandHeight = this.rectH;
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.moveTo(_0x291670, _0x24b57f);
        var _0x2fcf31 = 20;
        var _0x54a9c7 = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
        var _0x570a4c = 60;
        var _0x3ce490 = 0;
        var _0x9734c = a0_0x425049 - this.x;
        var _0x250b97 = 0 - this.x;
        var _0x34106e = a0_0xe585d7 - this.y;
        var _0x21f80f = 0 - this.y;
        var _0x3b9dda;
        var _0x1b1d7 = _0x291670 - _0x2fcf31;
        a0_0x4ef4f3.lineTo(_0x291670, _0x3cb6e6);
        _0x3b9dda = _0x3cb6e6 + _0x2fcf31;
        for (_0x1b1d7 = _0x291670; _0x1b1d7 < _0x489789; _0x1b1d7 += _0x570a4c) {
          a0_0x4ef4f3.lineTo(_0x1b1d7, Math.min(_0x34106e, Math.max(_0x21f80f, _0x3b9dda + _0x54a9c7[_0x3ce490])));
          _0x3ce490 = (_0x3ce490 + 1) % _0x54a9c7.length;
        }
        a0_0x4ef4f3.lineTo(_0x489789, _0x3cb6e6);
        a0_0x4ef4f3.lineTo(_0x489789, _0x24b57f);
        a0_0x4ef4f3.closePath();
        a0_0x4ef4f3.fill();
        var _0x4cdb4b = 20;
        a0_0x165516(-this.rectW / 2 + _0x4cdb4b, -this.rectH / 2 + _0x4cdb4b, this.rectW / 2 - _0x4cdb4b, this.rectH / 2 - _0x4cdb4b, this.x, this.y);
      }
      break;
    case a0_0x585d48:
      {
        var _0x3a530a = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.fillStyle = a0_0x2b43c5;
        a0_0x4ef4f3.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
        var _0x1415a5 = 15;
        {
          a0_0x4ef4f3.fillStyle = a0_0x2b43c5;
          var _0x291670 = -this.rectW / 2;
          var _0x489789 = this.rectW / 2;
          var _0x24b57f = -this.rectH / 2 + 3;
          var _0x3cb6e6 = -this.rectH / 2 - _0x1415a5;
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.moveTo(_0x291670, _0x24b57f);
          var _0x2fcf31 = 0;
          var _0x54a9c7 = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
          var _0x570a4c = 60;
          var _0x3ce490 = 0;
          var _0x9734c = a0_0x425049 - this.x;
          var _0x250b97 = 0 - this.x;
          var _0x34106e = a0_0xe585d7 - this.y;
          var _0x21f80f = 0 - this.y;
          var _0x3b9dda;
          var _0x1b1d7 = _0x291670 - _0x2fcf31;
          a0_0x4ef4f3.lineTo(_0x291670, _0x3cb6e6);
          _0x3b9dda = _0x3cb6e6 + _0x2fcf31;
          for (_0x1b1d7 = _0x291670; _0x1b1d7 < _0x489789; _0x1b1d7 += _0x570a4c) {
            a0_0x4ef4f3.lineTo(_0x1b1d7, Math.min(_0x34106e, Math.max(_0x21f80f, _0x3b9dda + _0x54a9c7[_0x3ce490])));
            _0x3ce490 = (_0x3ce490 + 1) % _0x54a9c7.length;
          }
          a0_0x4ef4f3.lineTo(_0x489789, _0x3cb6e6);
          a0_0x4ef4f3.lineTo(_0x489789, _0x24b57f);
          a0_0x4ef4f3.closePath();
          a0_0x4ef4f3.fill();
        }
        {
          a0_0x4ef4f3.fillStyle = a0_0x2b43c5;
          var _0x291670 = -this.rectW / 2;
          var _0x489789 = this.rectW / 2;
          var _0x24b57f = this.rectH / 2 - 3;
          var _0x3cb6e6 = this.rectH / 2 + _0x1415a5;
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.moveTo(_0x291670, _0x24b57f);
          var _0x2fcf31 = 0;
          var _0x54a9c7 = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
          var _0x570a4c = 60;
          var _0x3ce490 = 0;
          var _0x9734c = a0_0x425049 - this.x;
          var _0x250b97 = 0 - this.x;
          var _0x34106e = a0_0xe585d7 - this.y;
          var _0x21f80f = 0 - this.y;
          var _0x3b9dda;
          var _0x1b1d7 = _0x291670 - _0x2fcf31;
          a0_0x4ef4f3.lineTo(_0x291670, _0x3cb6e6);
          _0x3b9dda = _0x3cb6e6 + _0x2fcf31;
          for (_0x1b1d7 = _0x291670; _0x1b1d7 < _0x489789; _0x1b1d7 += _0x570a4c) {
            a0_0x4ef4f3.lineTo(_0x1b1d7, Math.min(_0x34106e, Math.max(_0x21f80f, _0x3b9dda + _0x54a9c7[_0x3ce490])));
            _0x3ce490 = (_0x3ce490 + 1) % _0x54a9c7.length;
          }
          a0_0x4ef4f3.lineTo(_0x489789, _0x3cb6e6);
          a0_0x4ef4f3.lineTo(_0x489789, _0x24b57f);
          a0_0x4ef4f3.closePath();
          a0_0x4ef4f3.fill();
        }
        var _0x4cdb4b = 20;
        var _0x40a8e6 = this.getSkinImageObj("img/riverCurrent" + this.riverSpecT + ".png");
        if (_0x40a8e6) {
          var _0xe1c41c = -this.rectW / 2;
          var _0x1c9607 = 100;
          var _0x5e9c8c = 120;
          for (i = 0; i < 40; i++) {
            var _0x1e411f = this.riverFlowSpeedX * (_0x1c9607 / _0x5e9c8c) * 1000;
            var _0xce6d14 = (a0_0x4f736f - this.spawnTime) % _0x1e411f / _0x1e411f;
            var _0x47c76c = _0x1c9607;
            var _0x4150db = _0xe1c41c + _0x47c76c * _0xce6d14;
            a0_0x4ef4f3.drawImage(_0x40a8e6, _0x4150db, -this.rectH / 2, _0x1c9607, this.rectH);
            _0xe1c41c += _0x1c9607;
          }
        }
      }
      break;
    case a0_0x37feb7:
      {
        a0_0x4ef4f3.fillStyle = a0_0x2df79b;
        a0_0x4ef4f3.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
        var _0x4cdb4b = 45;
        a0_0x165516(-this.rectW / 2 + _0x4cdb4b, -this.rectH / 2 + _0x4cdb4b, this.rectW / 2 - _0x4cdb4b, this.rectH / 2 - _0x4cdb4b, this.x, this.y);
      }
      break;
    case a0_0x38253a:
      {
        var _0xf99479 = this.curBiome == a0_0xc64a03 ? a0_0x4b844f : a0_0x6cfd3e;
        if (_0x22dec9) {
          a0_0x5c99c1(0, 0, this.rad, this.getOutlineColor());
        } else {
          a0_0x5c99c1(0, 0, this.rad - 1.5, _0xf99479);
        }
      }
      break;
    case a0_0x11bb63:
      {
        if (_0x22dec9) {
          a0_0x4ef4f3.fillStyle = a0_0x575276;
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
        } else {
          a0_0x4ef4f3.fillStyle = "#E4D04C";
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-5 + this.rPer * 10, -5 + this.rPer * 10, this.rad * 0.8, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
        }
      }
      break;
    case a0_0x187466:
      var _0x37cf33 = 0;
      var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
      var _0x46d653 = a0_0xe2d896(_0x46f724, 1, 5, 2);
      var _0x1c2643 = a0_0xe2d896(_0x46f724, 1, 0.2, 2);
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 0.5;
      a0_0x5c99c1(0, 0, this.rad, a0_0x5479b9);
      var _0x3f11ff = -(-0.2 + _0x46d653) * a0_0x844a6b(90);
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.scale(1, 1 + _0x1c2643);
      a0_0x4ef4f3.globalAlpha = 0.3;
      a0_0x4ef4f3.rotate(_0x3f11ff);
      a0_0x5c99c1(0, 0, this.rad - _0x46d653, "#de9d23");
      a0_0x4ef4f3.restore();
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.scale(1 + _0x1c2643, 1);
      a0_0x4ef4f3.globalAlpha = 0.1;
      a0_0x4ef4f3.rotate(_0x3f11ff);
      a0_0x5c99c1(0, 0, this.rad * 0.9 - _0x46d653, "yellow");
      a0_0x4ef4f3.restore();
      if (this.specType == 1) {
        a0_0x4ef4f3.globalAlpha = 0.5;
        a0_0x5c99c1(0, 0, this.rad, "white");
      }
      a0_0x4ef4f3.restore();
      break;
    case a0_0x2068b8:
      var _0x37cf33 = 0;
      var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
      var _0x46d653 = a0_0xe2d896(_0x46f724, 1, 5, 2);
      var _0x1c2643 = a0_0xe2d896(_0x46f724, 1, 0.2, 2);
      a0_0x4ef4f3.globalAlpha = 0.5;
      a0_0x5c99c1(0, 0, this.rad, a0_0x21597b);
      var _0x3f11ff = -(-0.2 + _0x46d653) * a0_0x2b691e;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.scale(1, 1 + _0x1c2643);
      a0_0x4ef4f3.globalAlpha = 0.3;
      a0_0x4ef4f3.rotate(_0x3f11ff);
      a0_0x5c99c1(0, 0, this.rad - _0x46d653, "#2CAAC4");
      a0_0x4ef4f3.restore();
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.scale(1 + _0x1c2643, 1);
      a0_0x4ef4f3.globalAlpha = 0.1;
      a0_0x4ef4f3.rotate(_0x3f11ff);
      a0_0x5c99c1(0, 0, this.rad * 0.9 - _0x46d653, "white");
      a0_0x4ef4f3.restore();
      break;
    case a0_0x5f1003:
      {
        var _0x301ba3 = this.curBiome == a0_0x5fac87 ? "#8fa4e0" : a0_0x21597b;
        if (this.specType == 1 && a0_0x3a86ef == a0_0x25f6dd) {
          a0_0x4ef4f3.save();
          a0_0x5c99c1(0, 0, this.rad, a0_0x580248);
          a0_0x4ef4f3.restore();
          a0_0x4ef4f3.save();
          var _0x5e6bb4 = 1.5;
          a0_0x5c99c1(0, 0, Math.max(0, this.rad - _0x5e6bb4), _0x301ba3);
          a0_0x4ef4f3.restore();
        } else {
          this.drawOutlinedCircle("", _0x301ba3);
        }
      }
      break;
    case a0_0xdc6575:
    case a0_0x4cf953:
      {
        var _0x40a8e6 = this.getSkinImageObj("img/snowball.png");
        if (_0x40a8e6) {
          var _0x31c311 = this.rad;
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x40a8e6, -_0x31c311, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
        } else {
          this.drawOutlinedCircle("", "white");
        }
      }
      break;
    case a0_0x4b80cb:
      {}
      break;
    case a0_0x48c314:
      {
        a0_0x4ef4f3.save();
        a0_0x5c99c1(0, 0, this.rad, !this.isEdibleOutlined() ? a0_0x28d4ea(this.curBiome) : a0_0x237aea);
        a0_0x5c99c1(0, 0, Math.max(0, this.rad - 2), a0_0x21597b);
        a0_0x4ef4f3.restore();
        a0_0x4ef4f3.save();
        var _0x47e530 = 1.2;
        var _0x2f0a67 = 0.3;
        var _0x1342f0 = 0.7;
        var _0x1d1743 = (_0x1342f0 - _0x2f0a67) * 0.5;
        a0_0x4ef4f3.globalAlpha *= _0x2f0a67 + _0x1d1743 + _0x1d1743 * Math.sin(Math.PI * 2 / _0x47e530 * ((a0_0x4f736f - this.spawnTime) / 1000));
        a0_0x4ef4f3.globalAlpha *= this.effA_poison;
        var _0xfe97c4 = 2.6;
        a0_0x5c99c1(0, 0, this.rad + _0xfe97c4, "#7FF600");
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x383432:
      {
        a0_0x4ef4f3.save();
        var _0x562d26 = this.speciesType;
        if (this.speciesType == 200) {
          _0x562d26 = _0x562d26 + "/" + this.speciesSubType;
        }
        var _0x361dce = "skins/volcano/phoenix/" + _0x562d26 + "/firetornado.png";
        var _0x144915 = this.speciesType === 1 || this.speciesType === 2 || this.speciesType === 200 ? 1 : this.mopeSeasonID;
        var _0x3ef1be = this.getSkinImageObjForSeason(_0x361dce, _0x144915);
        if (_0x3ef1be) {
          var _0x31c311 = this.rad;
          var _0x232820 = 1;
          var _0x49027c = 1000 / _0x232820;
          var _0xce6d14 = (a0_0x4f736f - this.spawnTime) % _0x49027c / _0x49027c;
          var _0x218b78 = _0xce6d14 * 2 * Math.PI;
          var _0x232820 = 30 / 60;
          var _0x49027c = 1000 / _0x232820;
          var _0xce6d14 = (a0_0x4f736f - this.spawnTime) % _0x49027c / _0x49027c;
          var _0x405fa2 = _0xce6d14 * 2 * Math.PI;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(_0x218b78);
          var _0x265ca4 = a0_0x4ef4f3.globalAlpha;
          a0_0x4ef4f3.globalAlpha = _0x265ca4 * 1;
          var _0x46f724 = (a0_0x4f736f - this.spawnTime) / 1000;
          var _0x47e530 = 2.2;
          var _0x5074bb = Math.cos(Math.PI * 2 / _0x47e530 * _0x46f724) * 6.5;
          var _0x113dc8 = Math.sin(Math.PI * 2 / _0x47e530 * _0x46f724) * 6.5;
          a0_0x4ef4f3.globalAlpha = 1;
          a0_0x4ef4f3.drawImage(_0x3ef1be, -_0x31c311 - _0x5074bb / 2.2, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(_0x405fa2);
          a0_0x4ef4f3.drawImage(_0x3ef1be, -_0x31c311 - _0x5074bb / 2.2, -_0x31c311, _0x31c311 * 2, _0x31c311 * 2);
          a0_0x4ef4f3.restore();
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0xb5f095:
      {
        var _0x47e530 = 1;
        var _0x2f0a67 = 0.15;
        var _0x1342f0 = 0.8;
        var _0x1d1743 = (_0x1342f0 - _0x2f0a67) * 0.5;
        var _0x3bbfee = _0x2f0a67 + _0x1d1743 + _0x1d1743 * Math.sin(Math.PI * 2 / _0x47e530 * (a0_0x4f736f / 1000));
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.globalAlpha *= _0x3bbfee;
        a0_0x5c99c1(0, 0, Math.max(0, this.rad), "#F6EA65");
        a0_0x4ef4f3.restore();
        var _0x47e530 = 1;
        var _0x2f0a67 = 0.85;
        var _0x1342f0 = 1;
        var _0x1d1743 = (_0x1342f0 - _0x2f0a67) * 0.5;
        var _0x3c94eb = _0x2f0a67 + _0x1d1743 + _0x1d1743 * Math.sin(Math.PI * 2 / _0x47e530 * (a0_0x4f736f / 1000));
        var _0xf7c0e0 = Math.trunc(a0_0x4f736f / 300) % 2;
        var _0x144915 = this.animalType === 14 && (this.speciesType === 1 || this.speciesType === 2 || this.speciesType === 3 || this.speciesType === 100 || this.speciesType === 200 || this.speciesType === 201 || this.speciesType === 204 || this.speciesType === 1001 || this.speciesType === 69420) ? 1 : this.mopeSeasonID;
        var _0x40a8e6 = this.getSkinImageObjForSeason(_0xf7c0e0 == 1 ? "img/fire.png" : "img/fire2.png", _0x144915);
        if (_0x40a8e6) {
          var _0x2d4acb = 0;
          var _0x48df27 = this.rad * 0.3;
          var _0x27b3e4 = this.rad * 2 * (2 + _0x3c94eb * 2) / 3;
          var _0xa7d4a2 = this.rad * 2 * _0x3c94eb;
          var _0x5e1956 = 0.5;
          var _0x595468 = 0.95;
          a0_0x4ef4f3.save();
          if (_0x40a8e6) {
            a0_0x4ef4f3.globalAlpha *= this.onFireEffA * _0x3c94eb;
            a0_0x4ef4f3.drawImage(_0x40a8e6, _0x2d4acb + _0x27b3e4 * -_0x5e1956, _0x48df27 + _0xa7d4a2 * -_0x595468, _0x27b3e4, _0xa7d4a2);
          }
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x1370b8:
      {}
      break;
    default:
      {
        if (this.isRectangle) {
          a0_0x4ef4f3.fillStyle = "black";
          a0_0x4ef4f3.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
          this.drawOutlinedCircle("(make this rect obj invisible on server?)" + this.oType, "black");
        } else {
          this.drawOutlinedCircle("(make this obj invisible on server?)" + this.oType, "black");
        }
      }
      break;
  }
};
a0_0x12658e.prototype.beforeCustomDraw = function () {};
a0_0x12658e.prototype.afterCustomDraw = function () {};
a0_0x12658e.prototype.drawImage = function (_0x4dffef, _0x31bf0e, _0xf8c276, _0x39808c, _0x1992b4, _0x16552e) {
  if (_0x16552e !== undefined) {
    a0_0x4ef4f3.rotate(_0x16552e);
  }
  a0_0x4ef4f3.drawImage(_0x4dffef, _0x31bf0e, _0xf8c276, _0x39808c, _0x1992b4);
};
a0_0x12658e.prototype.drawTranslate = function () {
  a0_0x4ef4f3.translate(this.x, this.y);
};
a0_0x12658e.prototype.drawScaleEffect = function () {
  if (!a0_0x1528ea && this.showScaleEffectToPlayer()) {
    if (this.doesDrawEffectScale && a0_0x1d703e != a0_0x30b084) {
      var _0xe0f2e = 0;
      var _0x5ef2e7 = a0_0x4f736f - this.spawnTime;
      if (a0_0x15a913) {
        _0xe0f2e = a0_0x430439.objects[_0x5ef2e7 % a0_0x430439.objects.length];
        if (this.drawEffectScale_Slow) {
          _0xe0f2e = a0_0x430439.objects_slow[_0x5ef2e7 % a0_0x430439.objects_slow.length];
        }
      } else {
        var _0x1d24ea = 1.5;
        var _0x12dc47 = 0.1;
        if (this.drawEffectScale_Slow) {
          _0x1d24ea = 2.5;
          _0x12dc47 = 0.04;
        }
        _0xe0f2e = _0x12dc47 * Math.sin(Math.PI * 2 / _0x1d24ea * (_0x5ef2e7 / 1000));
      }
      a0_0x4ef4f3.scale(1 + _0xe0f2e, 1 + _0xe0f2e / 2);
    }
  }
};
a0_0x12658e.prototype.setSkinPath = function () {
  var _0x423ef9 = this.isEdibleOutlined() ? "e" : this.oType;
  _0x423ef9 = this.getBiomeSkin(_0x423ef9);
  _0x423ef9 = "gameobj/" + this.oType + this.getObjSpecies() + "/" + _0x423ef9 + ".png";
  this.objSkinPath = _0x423ef9;
};
a0_0x12658e.prototype.draw = function (_0x71d572) {
  this.moveUpdF = this.moveUpdate();
  if (this.objSkinPath == null) {
    this.setSkinPath();
  }
  this.beforeCustomDraw();
  a0_0x4ef4f3.save();
  this.drawTranslate();
  this.drawScaleEffect();
  var _0xff95d6 = this.getOutlineColor();
  var _0x562abf = 2;
  if (this.dead) {
    a0_0x4ef4f3.globalAlpha *= 1 - this.moveUpdF;
  } else {
    a0_0x4ef4f3.globalAlpha *= Math.min(1, (a0_0x4f736f - this.spawnTime) / (a0_0x597515 * 1000));
  }
  this.customDraw(_0x71d572);
  if (this.flag_hurt) {
    this.onHurt();
  }
  this.drawHealthBar();
  a0_0x4ef4f3.restore();
  this.afterCustomDraw();
};
a0_0x12658e.prototype.onHurt = function () {
  a0_0x4ef4f3.fillStyle = "rgba(255,0,0,0.3)";
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
};
a0_0x12658e.prototype.drawHealthBar = function () {
  a0_0x4ef4f3.save();
  var _0x290a63 = a0_0x4f736f < this.hpBarTimeoutT ? 1 : 0;
  this.hpBarA += (_0x290a63 - this.hpBarA) * 0.04;
  if (this.hpBarA > 0.001) {
    this.hpPer += (this.hpPer_n - this.hpPer) * 0.1;
    var _0xa12025 = Math.max(1, this.rad / 25);
    var _0x54aa4c = _0xa12025 * 20;
    var _0x508469 = _0xa12025 * 5;
    var _0x548d8d = 0;
    var _0x1f0848 = -this.rad - _0xa12025 * 10;
    a0_0x4ef4f3.globalAlpha *= this.hpBarA;
    a0_0x4ef4f3.fillStyle = "rgba(0,0,0,0.35)";
    a0_0x4ef4f3.fillRect(_0x548d8d - _0x54aa4c / 2, _0x1f0848 - _0x508469 / 2, _0x54aa4c, _0x508469);
    a0_0x4ef4f3.fillStyle = "#16D729";
    a0_0x4ef4f3.fillRect(_0x548d8d - _0x54aa4c / 2, _0x1f0848 - _0x508469 / 2, _0x54aa4c * (this.hpPer / 100), _0x508469);
  }
  a0_0x4ef4f3.restore();
  this.drawInfectionBar();
};
var a0_0x3af9e6 = 5;
a0_0x12658e.prototype.drawInfectionBar = function () {
  if (this.flag_underWater) {
    return;
  }
  var _0x370732 = a0_0x4f736f < this.infectionBarTimeoutT ? 1 : 0;
  this.infectionBarA += (_0x370732 - this.infectionBarA) * 0.04;
  if (this.infectionBarA > 0.001) {
    this.infectionPer += (this.infectionPer_n - this.infectionPer) * 0.1;
    this.drawBar("red", this.infectionBarA, this.infectionPer, 2, 6.5);
  }
};
a0_0x12658e.prototype.drawBar = function (_0x453d72, _0x39c0d9, _0x561801, _0x5e7d03, _0x3633be) {
  a0_0x4ef4f3.save();
  var _0x3da3aa = Math.max(1, this.rad / 25);
  var _0x2ead25 = _0x3da3aa * 20;
  barH = _0x5e7d03 * _0x3da3aa;
  var _0x183d55 = 0;
  var _0x434ea4 = -this.rad - _0x3633be * _0x3da3aa;
  a0_0x4ef4f3.globalAlpha = 0.3;
  a0_0x4ef4f3.fillStyle = "rgba(0,0,0,0.35)";
  a0_0x4ef4f3.fillRect(_0x183d55 - _0x2ead25 / 2, _0x434ea4 - barH / 2, _0x2ead25, barH);
  a0_0x4ef4f3.globalAlpha = _0x39c0d9;
  a0_0x4ef4f3.fillStyle = _0x453d72;
  a0_0x4ef4f3.fillRect(_0x183d55 - _0x2ead25 / 2, _0x434ea4 - barH / 2, _0x2ead25 * (_0x561801 / 100), barH);
  a0_0x4ef4f3.restore();
};
a0_0x12658e.prototype.drawChat = function () {
  if (this.chatLines.length < 1) {
    return;
  }
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.font = "10px Arial";
  a0_0x4ef4f3.lineWidth = 1;
  a0_0x4ef4f3.textAlign = "center";
  a0_0x4ef4f3.textBaseline = "middle";
  var _0x28e35b = this.hpBarA > 0.01 ? -10 : 0;
  var _0x547331 = [];
  for (var _0x4f5aa1 = this.chatLines.length - 1; _0x4f5aa1 >= 0; _0x4f5aa1--) {
    var _0xc07f7c = this.chatLines[_0x4f5aa1];
    if (!a0_0xd470cd && _0xc07f7c.chatTxt.indexOf("#koa:") > -1) {
      continue;
    }
    var _0x5b6310 = (this.chatLines.length - 1 - _0x4f5aa1) * -13 + _0x28e35b;
    var _0xf0ca9f = a0_0x4f736f > _0xc07f7c.chatFadeT ? 0 : 1;
    _0xc07f7c.chatA += (_0xf0ca9f - _0xc07f7c.chatA) * 0.1;
    a0_0x4ef4f3.shadowOffsetX = 0;
    a0_0x4ef4f3.shadowOffsetY = 0;
    if (_0xc07f7c.chatA < 0.02) {
      if (_0xf0ca9f < 0.02) {
        _0xc07f7c.chatTxt = "";
      }
      _0x547331.push(_0x4f5aa1);
      continue;
    }
    var _0xfb07ba = a0_0x4ef4f3.measureText(_0xc07f7c.chatTxt).width;
    var _0x326f9a = 10;
    var _0x5dd09a = 1;
    var _0x43d192 = 1;
    a0_0x4ef4f3.globalAlpha = _0xc07f7c.chatA * 0.8;
    a0_0x4ef4f3.fillStyle = a0_0x28d4ea(this.curBiome);
    a0_0x4ef4f3.fillRect(this.x - _0x5dd09a - _0xfb07ba / 2, _0x5b6310 + this.y - this.rad - 10 - _0x326f9a / 2 - _0x43d192, _0xfb07ba + _0x5dd09a * 2, _0x326f9a + _0x43d192 * 2);
    a0_0x4ef4f3.fillStyle = "#F1C34C";
    if (a0_0x1d703e != a0_0x30b084) {
      a0_0x4ef4f3.shadowOffsetX = 1;
      a0_0x4ef4f3.shadowOffsetY = 1;
      a0_0x4ef4f3.shadowColor = "black";
    }
    a0_0x4ef4f3.globalAlpha = _0xc07f7c.chatA;
    a0_0x4ef4f3.fillText(_0xc07f7c.chatTxt, this.x, _0x5b6310 + this.y - this.rad - 10);
  }
  for (var _0x4f5aa1 = 0; _0x4f5aa1 < _0x547331.length; _0x4f5aa1++) {
    this.chatLines.splice(_0x547331[_0x4f5aa1], 1);
  }
  a0_0x4ef4f3.restore();
};
a0_0x12658e.prototype.getOutlineColor = function () {
  if (this.alwaysPlainOutline) {
    return a0_0x41030c;
  }
  if (this.isEdibleOutlined()) {
    return a0_0x237aea;
  }
  if (this.oType == a0_0x1370b8 && a0_0x5101af[this.animalType - 1] > 0 && this.id != a0_0x1c918d) {
    return a0_0x75ca18;
  }
  var _0x4ad7c9 = this.curBiome;
  if (this.flag_inWater) {
    _0x4ad7c9 = a0_0x2f0085;
  } else if (this.flag_inLava) {
    return "#c64a00";
  }
  return a0_0x28d4ea(_0x4ad7c9);
};
a0_0x12658e.prototype.isEdibleOutlined = function () {
  if (this.oType == a0_0x1370b8) {
    return a0_0x523435[this.animalType - 1] > 0 && this.id != a0_0x1c918d;
  } else {
    return a0_0x21a85a[this.oType - 1] > 0;
  }
};
a0_0x12658e.prototype.gotChat = function (_0x44560e) {
  if (this.chatLines) {
    this.chatLines.push({
      chatTxt: _0x44560e,
      chatFadeT: a0_0x4f736f + 4000,
      chatA: 0
    });
    if (this.chatLines.length > 5) {
      this.chatLines.splice(this.chatLines.length - 1, 1);
    }
  }
};
a0_0x12658e.prototype.drawOutlinedCircle = function (_0x38981c, _0x57ea05) {
  var _0x5bf5d8 = this.getOutlineColor();
  var _0x312de9 = 1.5;
  if (a0_0x1d703e != a0_0x30b084 || _0x5bf5d8 != a0_0x41030c) {
    a0_0x5c99c1(0, 0, this.rad, _0x5bf5d8);
  }
  a0_0x5c99c1(0, 0, Math.max(0, this.rad - _0x312de9), _0x57ea05);
  if (_0x38981c && _0x38981c.length > 0) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.fillStyle = "black";
    a0_0x4ef4f3.fillText(_0x38981c, -this.rad / 2, 0);
    a0_0x4ef4f3.restore();
  }
};
a0_0x12658e.prototype.drawOutlinedCircleRad = function (_0x29de22, _0x47569f, _0x15e3f1) {
  var _0x3444e3 = this.getOutlineColor();
  var _0x15fec3 = 1.5;
  if (a0_0x1d703e != a0_0x30b084 || _0x3444e3 != a0_0x41030c) {
    a0_0x5c99c1(0, 0, _0x15e3f1, _0x3444e3);
  }
  a0_0x5c99c1(0, 0, Math.max(0, _0x15e3f1 - _0x15fec3), _0x47569f);
};
a0_0x12658e.prototype.onLerpUpdate = function (_0x254b8d) {};
a0_0x12658e.prototype.moveUpdate = function () {
  var _0x6f4a9d = (a0_0x4f736f - this.updateTime) / 1000 / a0_0x597515;
  _0x6f4a9d = _0x6f4a9d < 0 ? 0 : _0x6f4a9d > 1 ? 1 : _0x6f4a9d;
  if ((this.dead || !this.drawMe) && _0x6f4a9d >= 1) {
    a0_0x45e0de.push(this);
  }
  this.onLerpUpdate(_0x6f4a9d);
  this.x = _0x6f4a9d * (this.nx - this.ox) + this.ox;
  this.y = _0x6f4a9d * (this.ny - this.oy) + this.oy;
  this.rad += (this.nRad - this.rad) * 0.1;
  if (this.angle != undefined) {
    this.lerpAngle(_0x6f4a9d);
  }
  return Math.min(1, _0x6f4a9d);
};
a0_0x12658e.prototype.lerpAngle = function () {
  var _0x35fcf3 = this.angleDelta * 0.1;
  this.angleDelta -= _0x35fcf3;
  this.angle += _0x35fcf3;
};
a0_0x12658e.prototype.readCustomData_onUpdate = function (_0x150050) {};
a0_0x12658e.prototype.readCustomData_onNewlyVisible = function (_0xdd65f5) {
  if (this.oType == a0_0x21686d || this.oType == a0_0x579937 || this.oType == a0_0x1344db) {
    this.innerRad = _0xdd65f5.readUInt16() / 4;
  }
};
a0_0x12658e.prototype.setObjTypes = function (_0x540187, _0x41f5fb) {
  this.oType = _0x540187;
};
a0_0x12658e.prototype.clientBatchDraw = false;
a0_0x12658e.prototype.clientBatchDrawID = false;
a0_0x12658e.prototype.worldUpd_readMsgNewlyVisible = function (_0x1f8fb6, _0x491bd5, _0x37ea11) {
  this.setObjTypes(_0x491bd5, _0x37ea11);
  var _0x5d5ead = _0x1f8fb6.readUInt32();
  var _0xd95545 = _0x1f8fb6.readUInt32() / 4;
  var _0x2753cd = _0x1f8fb6.readUInt16() / 4;
  var _0x4129c7 = _0x1f8fb6.readUInt16() / 4;
  this.id = _0x5d5ead;
  this.ox = this.x = this.nx = _0x2753cd;
  this.oy = this.y = this.ny = _0x4129c7;
  this.nRad = _0xd95545;
  this.oRad = this.rad = 0;
  if (_0x491bd5 == a0_0x220ae1 || _0x491bd5 == a0_0x4459f0 || _0x491bd5 == a0_0x129130 || _0x491bd5 == a0_0xcc5001 || _0x491bd5 == a0_0x1fa0cc || _0x491bd5 == a0_0x20e6c5 || _0x491bd5 == a0_0x225e01 || _0x491bd5 == a0_0x38253a || _0x491bd5 == a0_0x52c53f || _0x491bd5 == a0_0x11bb63) {
    this.animateRadOnSpawn = false;
  }
  if (!this.animateRadOnSpawn) {
    this.oRad = this.rad = _0xd95545;
  }
  var _0x5895be = _0x1f8fb6.readUInt8();
  this.curBiome = _0x5895be;
  if (this.oType != a0_0x1370b8) {
    this.mopeSeasonID = _0x1f8fb6.readUInt8();
    this.animalType = _0x1f8fb6.readUInt16();
    this.speciesType = _0x1f8fb6.readUInt16();
    this.speciesSubType = _0x1f8fb6.readUInt16();
  }
  var _0x2fa326 = _0x1f8fb6.readBitGroup();
  var _0x4a9628 = _0x2fa326.getBool();
  var _0x4799b2 = _0x2fa326.getBool();
  var _0x1ccb8d = _0x2fa326.getBool();
  this.clientBatchDraw = _0x2fa326.getBool();
  this.objGetsAngleUpdate = _0x1ccb8d;
  if (this.clientBatchDraw) {
    this.clientBatchDrawID = _0x1f8fb6.readUInt16();
  }
  var _0x43a679 = null;
  if (_0x4a9628) {
    _0x43a679 = a0_0x3d5ac5[_0x1f8fb6.readUInt32()];
  }
  if (_0x43a679) {
    this.updateTime = a0_0x4f736f;
    this.nx = this.x;
    this.ny = this.y;
    this.ox = _0x43a679.x;
    this.oy = _0x43a679.y;
    this.x = _0x43a679.x;
    this.y = _0x43a679.y;
  }
  if (_0x4799b2) {
    this.isRectangle = true;
    this.rectW = _0x1f8fb6.readUInt16();
    this.rectH = _0x1f8fb6.readUInt16();
  } else {
    var _0x3d1f7a = _0x1f8fb6.readUInt8() * 2;
    this.updateAngle(_0x3d1f7a);
  }
  this.readUpdatedPropertyItem(a0_0x269819, _0x1f8fb6);
  this.readUpdatedPropertyItem(a0_0x216be2, _0x1f8fb6);
  this.readCustomData_onNewlyVisible(_0x1f8fb6);
};
a0_0x12658e.prototype.setRadius = function (_0x14bcbf) {
  this.rad = _0x14bcbf;
};
a0_0x12658e.prototype.easeAngleChanges = true;
a0_0x12658e.prototype.updateAngle = function (_0x5b37b8) {
  var _0x4ea25c = this.oType == a0_0x20e6c5 ? 180 : 90;
  if (!this.easeAngleChanges) {
    this.angle = a0_0x844a6b(_0x5b37b8 + _0x4ea25c);
  } else {
    var _0x3fb539 = a0_0x844a6b(_0x5b37b8 + _0x4ea25c);
    this.angleDelta = a0_0x56c3ae(this.angle, _0x3fb539);
    this.oAngle = this.angle;
    if (this.firstPosUpd) {
      this.oAngle = this.angle = _0x3fb539;
      this.angleDelta = 0;
    }
  }
};
a0_0x12658e.prototype.setMovedToPos = function (_0x223bd7, _0x456e76) {
  this.updateTime = a0_0x4f736f;
  this.ox = this.x;
  this.oy = this.y;
  this.nx = _0x223bd7;
  this.ny = _0x456e76;
};
a0_0x12658e.prototype.setNewRad = function (_0x17daea) {
  this.oRad = this.rad;
  this.nRad = _0x17daea;
};
a0_0x12658e.prototype.worldUpd_readMsgUpdate = function (_0xef4c19) {
  var _0x541f8b = _0xef4c19.readBitGroup();
  this.readUpdatedFlags(_0x541f8b);
  var _0x516855 = _0xef4c19.readUInt8();
  for (var _0x462015 = 0; _0x462015 < _0x516855; _0x462015++) {
    var _0xef22d3 = _0xef4c19.readUInt16();
    this.readUpdatedPropertyItem(_0xef22d3, _0xef4c19);
  }
  this.readCustomData_onUpdate(_0xef4c19);
  this.firstPosUpd = false;
};
a0_0x12658e.prototype.readUpdatedPropertyItem = function (_0x3c522b, _0x3f28bd) {
  if (_0x3c522b == a0_0x55ca43) {
    var _0x37960d = _0x3f28bd.readUInt16() / 4;
    var _0x51307c = _0x3f28bd.readUInt16() / 4;
    this.setMovedToPos(_0x37960d, _0x51307c);
  } else if (_0x3c522b == a0_0x19900a) {
    var _0x32f14e = _0x3f28bd.readUInt16() / 10;
    this.setNewRad(_0x32f14e);
  } else if (_0x3c522b == a0_0x52c990) {
    var _0x7146c = _0x3f28bd.readUInt8() * 2;
    this.updateAngle(_0x7146c);
  } else if (_0x3c522b == a0_0x269819) {
    this.specType = _0x3f28bd.readUInt8();
  } else if (_0x3c522b == a0_0x216be2) {
    this.specType2 = _0x3f28bd.readUInt8();
  } else if (_0x3c522b == a0_0x42f375) {
    var _0x491f08 = _0x3f28bd.readUInt8();
    this.setHpBar(_0x491f08);
  } else if (_0x3c522b == a0_0x41a115) {
    this.curBiome = _0x3f28bd.readUInt8();
  } else if (_0x3c522b == a0_0x1cc33a) {
    let _0x510143 = _0x3f28bd.readUInt8() == 1;
  } else {
    this.readUpdatedProperty(_0x3c522b, _0x3f28bd);
  }
};
var a0_0x1cf356 = 0;
a0_0x12658e.prototype.readUpdatedFlags = function (_0x1c5a0b) {
  this.flag_hurt = _0x1c5a0b.getBool();
  this.flag_flying = _0x1c5a0b.getBool();
};
a0_0x12658e.prototype.readUpdatedProperty = function (_0x2f126d, _0x5c839e) {};
a0_0x12658e.prototype.setHpBar = function (_0x3c151a) {
  this.hpPer_n = _0x3c151a;
  this.hpBarTimeoutT = +new Date() + 3000;
};
a0_0x12658e.prototype.killerId = 0;
a0_0x12658e.prototype.worldUpd_readMsgRemovedObj = function (_0x4c4a5c) {
  var _0x12f5ef = _0x4c4a5c.readUInt8() > 0;
  this.killerId = _0x12f5ef ? _0x4c4a5c.readUInt32() : 0;
  var _0x781454 = this.killerId > 0 ? a0_0x3d5ac5[this.killerId] : undefined;
  this.dead = true;
  this.updateTime = a0_0x4f736f;
  if (this.oType == a0_0x20e6c5) {
    this.ox = this.x;
    this.oy = this.y;
    this.nx = this.x;
    this.ny = this.y;
  } else if (_0x781454) {
    this.ox = this.x;
    this.oy = this.y;
    this.oRad = this.rad;
    this.nx = _0x781454.nx;
    this.ny = _0x781454.ny;
    this.nRad = Math.min(this.rad, _0x781454.rad);
    if (a0_0x1c918d == this.killerId) {
      if (this.oType == a0_0x1370b8) {
        if (!a0_0x115add) {
          a0_0x47263a("audio/bite.mp3", 0.05, a0_0x290f57(0.9, 1.1));
        }
      }
      if (this.oType == a0_0x5f1003 || this.oType == a0_0x340346 || this.oType == a0_0x2068b8) {
        if (!a0_0x115add) {
          a0_0x47263a("audio/bloop.mp3", 0.6, a0_0x290f57(0.9, 1.1));
        }
      } else if (!a0_0x115add) {
        a0_0x47263a("audio/nom.mp3", 0.5);
      }
    }
    this.hp_n = 0;
  } else {
    this.ox = this.x;
    this.oy = this.y;
    this.oRad = this.rad;
    this.nx = this.x;
    this.ny = this.y;
    this.nRad = 0;
  }
  this.onRemovedFromGame();
};
a0_0x12658e.prototype.updateZ = function () {
  switch (this.oType) {
    case a0_0x3ed524:
    case a0_0x380492:
    case a0_0x534c05:
      this.z = 1000000;
      break;
    case a0_0x37feb7:
      this.z = -220;
      break;
    case a0_0x2cd8a2:
    case a0_0x30fa27:
      this.z = -210;
      break;
    case a0_0x4459f0:
    case a0_0x220ae1:
      this.z = -209;
      break;
    case a0_0x585d48:
      this.z = -158;
      break;
    case a0_0x241128:
      this.z = -140;
      break;
    case a0_0x572af7:
      this.z = -151;
      break;
    case a0_0x1fa0cc:
    case a0_0x120b7c:
      this.z = -160;
      break;
    case a0_0x308061:
      this.z = -297;
      break;
    case a0_0x239558:
      this.z = -296;
      break;
    case a0_0x6632a8:
      this.z = -157;
      break;
    case a0_0x129130:
      this.z = -158;
      break;
    case a0_0xcc5001:
      this.z = -156;
      break;
    case a0_0x9b2337:
      this.z = -155;
      break;
    case a0_0x11bb63:
      this.z = -154;
      break;
    case a0_0x1344db:
      this.z = -150;
      break;
    case a0_0x579937:
      this.z = -101;
      break;
    case a0_0x21686d:
      this.z = -100;
      break;
    case a0_0x592fe7:
    case a0_0x4230b4:
      this.z = -99;
      break;
    case a0_0x1b54d5:
    case a0_0x52c53f:
      this.z = 1000;
      break;
    case a0_0x4b40ca:
      this.z = 1002;
      break;
    case a0_0x38253a:
      this.z = 1002;
      break;
    case a0_0x38c409:
    case a0_0x225e01:
      this.z = 999;
      break;
    case a0_0x4b80cb:
      this.z = 1003;
      break;
    case a0_0x18b147:
    case a0_0x105313:
    case a0_0x5d72fa:
      this.z = 1002 + this.rad;
      break;
    case a0_0x187466:
      this.z = 100015;
      break;
    case a0_0x2068b8:
      this.z = 100015;
      break;
    case a0_0xd897ba:
    case a0_0x46c550:
      this.z = 1010 + this.rad;
      if (this.specType2 == 1) {
        this.z += 1000;
      }
      break;
    case a0_0x383432:
      this.z = 2000 + this.rad;
      break;
    case a0_0xb5f095:
    case a0_0x48c314:
      this.z = 1006;
      break;
    case a0_0x1370b8:
      break;
    default:
      this.z = this.rad;
      break;
  }
};
a0_0x12658e.prototype.updateZ_onTree = function (_0x57912e) {
  if (this.oType == a0_0x1370b8 && this.flag_eff_isOnTree) {
    this.z = _0x57912e + 1100;
  }
};
a0_0x12658e.prototype.showScaleEffectToPlayer = function () {
  var _0x432bb3 = a0_0x3d5ac5[a0_0x1c918d];
  if (_0x432bb3 && _0x432bb3.flag_inHidingHole && _0x432bb3.lastHidingHoleID == this.id) {
    return false;
  }
  return true;
};
a0_0x12658e.prototype.calculateZIndex = function () {
  this.updateZ();
  if (this.oType == a0_0x1370b8) {
    if (this.flag_flying) {
      this.z = 100000;
      if (this.flag_isGrabbed) {
        this.z -= this.rad;
      }
      if (this.flag_eff_aniInClaws || this.flag_usingAbility) {
        this.z += 1000;
      }
    } else if (this.flag_isInArena) {
      this.z = 10000 + this.rad;
    } else {
      this.updateZ_onTree(this.z);
      if (this.flag_eff_invincible) {
        this.z += 1000;
      }
    }
  } else {
    this.updateZ_onTree(this.z);
  }
};
a0_0x12658e.prototype.season = 1;
a0_0x12658e.prototype.mopeSeasonID = 0;
a0_0x12658e.prototype.skinThemeID = 0;
a0_0x12658e.prototype.getSkinImageObj = function (_0x32cae3) {
  var _0x395b58 = "./assets/s/" + this.mopeSeasonID + "/" + _0x32cae3;
  if (this.skinThemeID > 0) {
    _0x395b58 = "./assets/t/" + this.skinThemeID + "/" + _0x32cae3;
  }
  return a0_0x2cc313(_0x395b58, function (_0x554ffa) {
    console.log(_0x554ffa.src);
  });
};
a0_0x12658e.prototype.getSkinImageObjForSeason = function (_0x5ae967, _0x145143) {
  if (!_0x145143) {}
  var _0x1b1eb0 = "./assets/s/" + _0x145143 + "/" + _0x5ae967;
  if (this.skinThemeID > 0) {
    _0x1b1eb0 = "./assets/t/" + this.skinThemeID + "/" + _0x5ae967;
  }
  return a0_0x2cc313(_0x1b1eb0, function (_0x1a0376) {});
};
a0_0x12658e.prototype.getObjImageObjForSeason = function (_0xa76871, _0x40bf37) {
  if (!_0x40bf37) {}
  var _0x5dfb29 = "./assets/s/" + _0x40bf37 + "/" + _0xa76871;
  return a0_0x2cc313(_0x5dfb29, function (_0x452068) {});
};
a0_0x12658e.prototype.onRemovedFromGame = function () {};
function a0_0x12658e(_0x3b1f96) {
  this.oType = _0x3b1f96;
  this.rPer = a0_0x290f57(0, 1);
  this.spawnTime = a0_0x4f736f;
  this.updateTime = a0_0x4f736f;
  this.firstPosUpd = true;
  this.chatLines = [];
  switch (this.oType) {
    case a0_0x26d26c:
    case a0_0x46c550:
    case a0_0xdd316d:
    case a0_0x3b275c:
    case a0_0xd897ba:
    case a0_0x5f1003:
    case a0_0xb5f095:
    case a0_0x48c314:
    case a0_0x4b80cb:
    case a0_0x4733ad:
    case a0_0x5ca180:
    case a0_0x7fd6bc:
    case a0_0x21686d:
    case a0_0x1344db:
    case a0_0x579937:
    case a0_0x4a0860:
    case a0_0x4243b3:
    case a0_0x4f9ab6:
    case a0_0x502c51:
    case a0_0xe5fc06:
    case a0_0x557e7b:
    case a0_0x377b38:
    case a0_0x54352a:
    case a0_0x33ec82:
    case a0_0x5124d4:
    case a0_0x29dfd6:
    case a0_0x1be211:
    case a0_0x4d8272:
    case a0_0x2537f6:
    case a0_0x138652:
    case a0_0x23ce82:
    case a0_0x53d1e5:
    case a0_0x1b54d5:
    case a0_0x38c409:
    case a0_0x4b40ca:
      this.doesDrawEffectScale = true;
      break;
    default:
      break;
  }
  if (this.oType == a0_0x21686d || this.oType == a0_0x579937 || this.oType == a0_0x1344db || this.oType == a0_0x4b80cb) {
    this.drawEffectScale_Slow = true;
  }
}
window.GameObj = a0_0x12658e;
var a0_0x918d8f = a0_0x1d74a2;
var a0_0x58d04c = a0_0x12658e;
a0_0x918d8f.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x918d8f.prototype.constructor = a0_0x918d8f;
function a0_0x1d74a2() {
  this.objs = [];
  this.updateZ = function () {
    if (this.objs.length > 0) {
      this.objs[0].updateZ();
      this.z = this.objs[0].z;
    }
  };
  this.draw = function () {
    for (var _0x43b341 = 0; _0x43b341 < this.objs.length; _0x43b341++) {
      var _0x2ccc02 = this.objs[_0x43b341];
      _0x2ccc02.draw(true);
    }
    for (var _0x43b341 = 0; _0x43b341 < this.objs.length; _0x43b341++) {
      var _0x2ccc02 = this.objs[_0x43b341];
      _0x2ccc02.draw(false);
    }
  };
  this.addBatchedObj = function (_0xe1b49f) {
    if (this.objs.length == 0) {
      this.oType = _0xe1b49f.oType;
      this.objs = [];
    }
    this.objs.push(_0xe1b49f);
  };
}
window.GameObjBatchDraw = a0_0x1d74a2;
var a0_0x4083f6 = 1;
var a0_0x151054 = 2;
var a0_0x3d5a13 = 3;
var a0_0x2d73e5 = 4;
var a0_0x31131a = 5;
var a0_0x2347de = 6;
var a0_0x4f39e9 = 7;
var a0_0x1a694e = 8;
var a0_0x54d85e = 9;
var a0_0x5a613b = 10;
var a0_0x20917b = 11;
var a0_0x32eb58 = 12;
var a0_0x93d1ea = 13;
var a0_0x256160 = 14;
var a0_0x722c30 = 15;
var a0_0x5e41c4 = 16;
var a0_0xce170f = 17;
var a0_0x464b86 = 18;
var a0_0x30aa6a = 19;
var a0_0x56d530 = 20;
var a0_0x58bf2a = 21;
var a0_0x1f8603 = 22;
var a0_0x574c01 = 23;
var a0_0x4e6cde = 24;
var a0_0x265cfd = 25;
var a0_0x434da0 = 26;
var a0_0x9f5ea7 = 27;
var a0_0x18ddf3 = 28;
var a0_0x2aaf90 = 29;
var a0_0x3bbebf = 30;
var a0_0x1218ca = 31;
var a0_0x38090e = 32;
var a0_0x31fe5e = 33;
var a0_0x1f838c = 34;
var a0_0x254dfc = 35;
var a0_0x162473 = 36;
var a0_0x34beb5 = 37;
var a0_0x1b4543 = 38;
var a0_0x6e4e18 = 39;
var a0_0x563df4 = 40;
var a0_0x1a160c = 41;
var a0_0x40cc4c = 42;
var a0_0x2a957c = 43;
var a0_0x41fd5c = 44;
var a0_0x101193 = 45;
var a0_0x257f12 = 46;
var a0_0x5510d8 = 47;
var a0_0x4efb3c = 48;
var a0_0x1132a8 = 49;
var a0_0x1bc37e = 50;
var a0_0xbfada = 51;
var a0_0x252dcd = 52;
var a0_0xbf4f2c = 53;
var a0_0x31e688 = 54;
var a0_0x2adefe = 55;
var a0_0x52cd8c = 56;
var a0_0x313367 = 57;
var a0_0x15a05e = 58;
var a0_0x224417 = 59;
var a0_0x1d5499 = 60;
var a0_0x5f3a6f = 61;
var a0_0x3b5f85 = 62;
var a0_0x33fa19 = 63;
var a0_0x4e94e8 = 64;
var a0_0x1c0686 = 65;
var a0_0xdf5a75 = 66;
var a0_0x1e152a = 67;
var a0_0x472c8a = 68;
var a0_0x4cfb89 = 69;
var a0_0x30bc31 = 70;
var a0_0x1b4846 = 71;
var a0_0x415f2f = 72;
var a0_0x15fd74 = 73;
var a0_0xc48b6 = 74;
var a0_0x22e8ad = 75;
var a0_0x2d643d = 76;
var a0_0x17136b = 77;
var a0_0x562756 = 78;
var a0_0x402d5a = 79;
var a0_0xe8222c = 80;
var a0_0x4a36ac = 81;
var a0_0x2995a9 = 82;
var a0_0x33a740 = 83;
var a0_0x33cfa9 = 84;
var a0_0x4b0faa = 85;
var a0_0x4a9541 = 86;
var a0_0xffe9fd = 87;
var a0_0x303d9b = 88;
var a0_0x1ce2e4 = 89;
var a0_0x4450f0 = 90;
var a0_0x240c0c = 91;
var a0_0x69c437 = 92;
var a0_0x32203e = 93;
var a0_0x25f6dd = 94;
var a0_0x527dbe = 95;
var a0_0x47c97f = 96;
var a0_0x1487f6 = 97;
var a0_0x2ed274 = 98;
var a0_0x14a39f = 99;
var a0_0x9fe8e0 = 100;
var a0_0xb93d7c = 101;
var a0_0x351b92 = 102;
var a0_0x4ed524 = 103;
var a0_0x5bce2e = 104;
var a0_0x59b734 = 105;
var a0_0x579a5b = 106;
var a0_0x1f99ed = 107;
var a0_0x5ab1f8 = 108;
var a0_0x559bf8 = 109;
var a0_0x3ce38d = 110;
var a0_0x20cf30 = 111;
var a0_0x322c99 = 122;
function a0_0x1753d3(_0xbc890a) {
  var _0x5e84d0 = {};
  switch (_0xbc890a) {
    case a0_0x101193:
      _0x5e84d0.aniName = "Snail";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "You're a super slow snail!";
      _0x5e84d0.aniCol = "#fcc02b";
      _0x5e84d0.skinName = "snail";
      break;
    case a0_0x4083f6:
      _0x5e84d0.aniName = "Mouse";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "";
      _0x5e84d0.aniCol = "#9BA9B9";
      _0x5e84d0.skinName = "mouse";
      break;
    case a0_0x151054:
      _0x5e84d0.aniName = "Rabbit";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to RABBIT! \nPress W to burrow a hole to hide in!";
      _0x5e84d0.aniCol = "#AA937E";
      _0x5e84d0.skinName = "rabbit";
      break;
    case a0_0x3d5a13:
      _0x5e84d0.aniName = "Pig";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to PIG!\n Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      _0x5e84d0.aniCol = "#DD6BD4";
      _0x5e84d0.skinName = "pig";
      break;
    case a0_0x2d73e5:
      _0x5e84d0.aniName = "Fox";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to FOX! ,\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
      _0x5e84d0.aniCol = "#FF9D43";
      _0x5e84d0.skinName = "fox";
      break;
    case a0_0x31131a:
      _0x5e84d0.aniName = "Deer";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to DEER! \nPress W to dig up food! \nDig in mud for better food!\n Hint:Check water areas for new food sources!";
      _0x5e84d0.aniCol = "#C4773E";
      _0x5e84d0.skinName = "deer";
      break;
    case a0_0x2347de:
      _0x5e84d0.aniName = "Mole";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to MOLE!\n Hold W to dig underground!\nGo under anything, do surprise attacks!";
      _0x5e84d0.aniCol = "#4C4A45";
      _0x5e84d0.skinName = "mole";
      break;
    case a0_0x4f39e9:
      _0x5e84d0.aniName = "Zebra";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to ZEBRA! \nPress W to kick side ways!";
      _0x5e84d0.aniCol = "#FFFFFF";
      _0x5e84d0.skinName = "zebra";
      break;
    case a0_0x1a694e:
      _0x5e84d0.aniName = "Lion";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to LION!\n Press W to release a mighty ROAR (Rawr!)!";
      _0x5e84d0.aniCol = "#f8c923";
      _0x5e84d0.skinName = "lion";
      break;
    case a0_0x54d85e:
      _0x5e84d0.aniName = "CHEETAH";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to CHEETAH!\n Press W to get a speed boost! (Every 8 seconds)!";
      _0x5e84d0.aniCol = "#CAC05B";
      _0x5e84d0.skinName = "bigcat/cheetah";
      break;
    case a0_0x5a613b:
      _0x5e84d0.aniName = "Bear";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to BEAR!\n Bears climb through green hills! (Press W to use your claw!)";
      _0x5e84d0.aniCol = "#99591C";
      _0x5e84d0.skinName = "bear";
      break;
    case a0_0x20917b:
      _0x5e84d0.aniName = "Croc";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to CROCODILE!\n Press W to bite and drag around animals! \n+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!";
      _0x5e84d0.aniCol = "#30F51C";
      _0x5e84d0.skinName = "croc";
      break;
    case a0_0x93d1ea:
      _0x5e84d0.aniName = "Hippo";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to HIPPO!\nHippos are great swimmers, dominate the Lakes/Oceans/Mud!";
      _0x5e84d0.aniCol = "#945A99";
      _0x5e84d0.skinName = "hippo";
      break;
    case a0_0x32eb58:
      _0x5e84d0.aniName = "Rhino";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to RHINO!\n Press W to CHARGE with your mighty horn!";
      _0x5e84d0.aniCol = "#94a3a9";
      _0x5e84d0.skinName = "rhino";
      break;
    case a0_0x722c30:
      _0x5e84d0.aniName = "Shrimp";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "";
      _0x5e84d0.aniCol = "#f88e37";
      _0x5e84d0.skinName = "shrimp";
      break;
    case a0_0x5e41c4:
      _0x5e84d0.aniName = "Trout";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to TROUT!\nHint: Hold Left-click to RUN! (Uses extra water)";
      _0x5e84d0.aniCol = "#ac8686";
      _0x5e84d0.skinName = "trout";
      break;
    case a0_0xce170f:
      _0x5e84d0.aniName = "Crab";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to CRAB!\n Crabs can survive on dry land!\n (On land, Press W to go into your shell!)";
      _0x5e84d0.aniCol = "#bf2408";
      _0x5e84d0.skinName = "crab";
      break;
    case a0_0x464b86:
      _0x5e84d0.aniName = "Squid";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to SQUID!\n Squids can use INK when injured (press W!) \n+ you can hide in plankton bushes!";
      _0x5e84d0.aniCol = "#40dda4";
      _0x5e84d0.skinName = "squid";
      break;
    case a0_0x30aa6a:
      _0x5e84d0.aniName = "Shark";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to SHARK!\n A vicious predator of the oceans!";
      _0x5e84d0.aniCol = "#999fc6";
      _0x5e84d0.skinName = "shark";
      break;
    case a0_0x1f8603:
      _0x5e84d0.aniName = "Sea-horse";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to SEA HORSE!\n An agile hunter!";
      _0x5e84d0.aniCol = "#73BE2F";
      _0x5e84d0.skinName = "seahorse";
      break;
    case a0_0x574c01:
      _0x5e84d0.aniName = "Jellyfish";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to JELLYFISH!\n A slowly-turning animal that can grow quite large!";
      _0x5e84d0.aniCol = "#FDB9BA";
      _0x5e84d0.skinName = "jellyfish";
      break;
    case a0_0x58bf2a:
      _0x5e84d0.aniName = "Turtle";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to TURTLE!\n Lives well on land & water! (On land, Press W to go into your shell!)";
      _0x5e84d0.aniCol = "#502E1A";
      _0x5e84d0.skinName = "turtle";
      break;
    case a0_0x56d530:
      _0x5e84d0.aniName = "Stingray";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to STINGRAY!\n Use electic shock (Release W key!) to shock animals! \n(Takes time to recharge)";
      _0x5e84d0.aniCol = "#164336";
      _0x5e84d0.skinName = "stingray";
      break;
    case a0_0x4e6cde:
      _0x5e84d0.aniName = "The Kraken";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to THE KRAKEN!\n Terrorize the oceans, and be feared by all!\n (Release W to use whirlpool ability!)";
      _0x5e84d0.aniCol = "#64a034";
      _0x5e84d0.skinName = "kraken";
      break;
    case a0_0x265cfd:
      _0x5e84d0.aniName = "Pufferfish";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to PUFFERFISH!\n (Hold W to inflate- become spiky, and dangerous to touch!)";
      _0x5e84d0.aniCol = "#6C5C2C";
      _0x5e84d0.skinName = "pufferfish";
      break;
    case a0_0x434da0:
      _0x5e84d0.aniName = "Killer Whale";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Killer Whale! \nWhales blow out water when diving! (And sometimes other loot!)";
      _0x5e84d0.aniCol = "#141414";
      _0x5e84d0.skinName = "killerwhale";
      break;
    case a0_0x9f5ea7:
      _0x5e84d0.aniName = "Swordfish";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n (Press W to rush with your sharp nose!)";
      _0x5e84d0.aniCol = "#689CD7";
      _0x5e84d0.skinName = "swordfish";
      break;
    case a0_0x18ddf3:
      _0x5e84d0.aniName = "Gorilla";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Gorillas are very fast on hills/trees!\n Press W to throw bananas! (from trees)";
      _0x5e84d0.aniCol = "#323232";
      _0x5e84d0.skinName = "gorilla";
      break;
    case a0_0x2aaf90:
      _0x5e84d0.aniName = "Octopus";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Octopus!\nHold W to use your 'Disguise' ability!\n(Hint: wait for prey to bite you- they get stunned!)";
      _0x5e84d0.aniCol = "#ff8340";
      _0x5e84d0.skinName = "octopus";
      break;
    case a0_0x256160:
      _0x5e84d0.aniName = "Dragon";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n (You're amazing!) \nFly over everything, Hold W to shoot fire!";
      _0x5e84d0.aniCol = "#22FF8A";
      _0x5e84d0.skinName = "dragon";
      break;
    case a0_0x257f12:
      _0x5e84d0.aniName = "Black Dragon";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!";
      _0x5e84d0.aniCol = "black";
      _0x5e84d0.skinName = "blackdragon";
      break;
    case a0_0x252dcd:
      _0x5e84d0.aniName = "Giant Spider";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Place web around the game to catch prey!";
      _0x5e84d0.aniCol = "black";
      _0x5e84d0.skinName = "giantSpider";
      break;
    case a0_0x1bc37e:
      _0x5e84d0.aniName = "Cobra";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Hold W to Spit venom, and poison animals with your bite!";
      _0x5e84d0.aniCol = "black";
      _0x5e84d0.skinName = "cobra";
      break;
    case a0_0xbfada:
      _0x5e84d0.aniName = "Boa Constrictor";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Coil and suffocate other animals!";
      _0x5e84d0.aniCol = "black";
      _0x5e84d0.skinName = "boaConstrictor";
      break;
    case a0_0xbf4f2c:
      _0x5e84d0.aniName = "T-REX";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + " The Dinosaur!\n This ancient dinosaur has powerful jaws that can drag prey around!!";
      _0x5e84d0.aniCol = "#862A2A";
      _0x5e84d0.skinName = "trex";
      break;
    case a0_0x31e688:
      _0x5e84d0.aniName = "Tiger";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Tiger!\n Tigers can launch an ambush attack (HOLD W to grow a bush) Release to attack!";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "tiger";
      break;
    case a0_0x2adefe:
      _0x5e84d0.aniName = "Giraffe";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Giraffe!\nGiraffe have huge legs and stomp anyone in their way!";
      _0x5e84d0.aniCol = "#E9BD23";
      _0x5e84d0.skinName = "giraffe";
      break;
    case a0_0x52cd8c:
      _0x5e84d0.aniName = "Eagle";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Eagle!\nEagles can fly up other animals in the air! !\n";
      _0x5e84d0.aniCol = "#5b400d";
      _0x5e84d0.skinName = "eagle";
      break;
    case a0_0x1a160c:
      _0x5e84d0.aniName = "Arctic Fox";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
      _0x5e84d0.aniCol = "#CFCFCF";
      _0x5e84d0.skinName = "arctic/arcticfox";
      break;
    case a0_0x1218ca:
      _0x5e84d0.aniName = "Arctic Hare";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n \nPress W to burrow a hole to hide in!";
      _0x5e84d0.aniCol = "#D5D5D5";
      _0x5e84d0.skinName = "arctic/arctichare";
      break;
    case a0_0x38090e:
      _0x5e84d0.aniName = "The Yeti!";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n So it really exists... \n Hold W to turn into snow, release W to freeeeeze!";
      _0x5e84d0.aniCol = "#839eb5";
      _0x5e84d0.skinName = "arctic/yeti";
      break;
    case a0_0x31fe5e:
      _0x5e84d0.aniName = "Chipmunk";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "";
      _0x5e84d0.aniCol = "#A77C30";
      _0x5e84d0.skinName = "arctic/chipmunk";
      break;
    case a0_0x1f838c:
      _0x5e84d0.aniName = "Muskox";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Press W to charge with your horns! \nPlus move decently on ice!";
      _0x5e84d0.aniCol = "#231f18";
      _0x5e84d0.skinName = "arctic/muskox";
      break;
    case a0_0x254dfc:
      _0x5e84d0.aniName = "Penguin";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Left-click to run!\n (HOLD W to slide FAST on ice)!";
      _0x5e84d0.aniCol = "#FFFFFF";
      _0x5e84d0.skinName = "arctic/penguin";
      break;
    case a0_0x162473:
      _0x5e84d0.aniName = "Polar Bear";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Polar bears can climb hills! \n+ They're amazing swimmers!";
      _0x5e84d0.aniCol = "#e4e4e4";
      _0x5e84d0.skinName = "arctic/bear/bear";
      break;
    case a0_0x34beb5:
      _0x5e84d0.aniName = "Seal";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Seals can slide on ice (Hold W) + can climb hills (rocks too!)";
      _0x5e84d0.aniCol = "#cfcfcf";
      _0x5e84d0.skinName = "arctic/seal";
      break;
    case a0_0x1b4543:
      _0x5e84d0.aniName = "Snow leopard";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Press W to get a speed boost! (Every 8 seconds)!";
      _0x5e84d0.aniCol = "#cfcfcf";
      _0x5e84d0.skinName = "arctic/snowleopard";
      break;
    case a0_0x6e4e18:
      _0x5e84d0.aniName = "Walrus";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n You can slide on ice (Hold W) + can climb hills (rocks too!)";
      _0x5e84d0.aniCol = "#633838";
      _0x5e84d0.skinName = "arctic/walrus";
      break;
    case a0_0x563df4:
      _0x5e84d0.aniName = "Reindeer";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Press W to dig up food! \n Your sharp hooves let you turn very well on ice!";
      _0x5e84d0.aniCol = "#a68976";
      _0x5e84d0.skinName = "arctic/reindeer";
      break;
    case a0_0x3bbebf:
      _0x5e84d0.aniName = "Wolf";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Wolf paws turn very well on ice!\n Press W to howl!";
      _0x5e84d0.aniCol = "#6B6B6B";
      _0x5e84d0.skinName = "arctic/wolf";
      break;
    case a0_0x40cc4c:
      _0x5e84d0.aniName = "Wolverine";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Press W to Let out a Powerful GROWL! (Knocks back prey!)";
      _0x5e84d0.aniCol = "#843A0F";
      _0x5e84d0.skinName = "arctic/wolverine";
      break;
    case a0_0x2a957c:
      _0x5e84d0.aniName = "Mammoth";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Press W to roll snowballs with your trunk!\n The bigger the snowball gets, the longer the freeze!";
      _0x5e84d0.aniCol = "#9d4717";
      _0x5e84d0.skinName = "arctic/mammoth";
      break;
    case a0_0x41fd5c:
      _0x5e84d0.aniName = "Donkey";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Press W to Kick any animal behind you";
      _0x5e84d0.aniCol = "#8c7c64";
      _0x5e84d0.skinName = "donkey";
      break;
    case a0_0x5510d8:
      _0x5e84d0.aniName = "Sabertooth Tiger";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Sabertooth Tiger!\nSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!";
      _0x5e84d0.aniCol = "#945A99";
      _0x5e84d0.skinName = "sabertoothtiger";
      break;
    case a0_0x4efb3c:
      _0x5e84d0.aniName = "Elephant";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to " + _0x5e84d0.aniName + "!\n Use your long trunk to attack and eat food!";
      _0x5e84d0.aniCol = "#945A99";
      _0x5e84d0.skinName = "elephant";
      break;
    case a0_0x1132a8:
      _0x5e84d0.aniName = "Blue Whale";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Blue Whale!\n Smash with your powerful tail!";
      _0x5e84d0.aniCol = "#945A99";
      _0x5e84d0.skinName = "bluewhale";
      break;
    case a0_0x224417:
      _0x5e84d0.aniName = "Duckling";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to a DUCK!";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "duck/duckling";
      break;
    case a0_0x313367:
      _0x5e84d0.aniName = "Hedgehog";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Hedgehog!\n (Hold W to become spiky, and dangerous to touch!)";
      _0x5e84d0.aniCol = "#5b400d";
      _0x5e84d0.skinName = "hedgehog";
      break;
    case a0_0x5f3a6f:
      _0x5e84d0.aniName = "King Crab";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to a KING CRAB!";
      _0x5e84d0.aniCol = "#971f0e";
      _0x5e84d0.skinName = "kingcrab";
      break;
    case a0_0x1d5499:
      _0x5e84d0.aniName = "Lemming";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "";
      _0x5e84d0.aniCol = "#A77C30";
      _0x5e84d0.skinName = "arctic/lemming";
      break;
    case a0_0x3b5f85:
      _0x5e84d0.aniName = "Frog";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Frog!!";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "frog/frog";
      break;
    case a0_0x33fa19:
      _0x5e84d0.aniName = "Ostrich";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Ostrich! Lay eggs to hatch babies! \nCommand babies by placing your crosshair (right-click/W)-\n They can attack prey!";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "ostrich/ostrich";
      break;
    case a0_0x4e94e8:
      _0x5e84d0.aniName = "Pelican";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Pelican! \nPick up water (and prey!) in your mouth,\nfly, and drop water on prey! (press W again)";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "pelican/pelican";
      break;
    case a0_0x1c0686:
      _0x5e84d0.aniName = "Falcon";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Falcon! \nFly, and do a powerful dive attack! Aim it well.";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "falcon/falcon";
      break;
    case a0_0xdf5a75:
      _0x5e84d0.aniName = "Snowy Owl";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Snowy Owl!\n Aim the crosshair, \n right click/W when it's on top of prey, to attack!";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "snowyowl/snowyowl";
      break;
    case a0_0x4cfb89:
      _0x5e84d0.aniName = "Baby Ostrich";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.upgradeText = "UPGRADED to Baby Ostrich!!";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "ostrich/baby-ostrich";
      break;
    case a0_0x472c8a:
      _0x5e84d0.aniName = "Phoenix";
      _0x5e84d0.upgradeText = "UPGRADED to Phoenix!\nCreate powerful fire tornados to burn your enemies alive!";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "phoenix/phoenix";
      break;
    case a0_0x30bc31:
      _0x5e84d0.aniName = "Sea Monster";
      _0x5e84d0.upgradeText = "UPGRADED to Sea Monster!";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "seamonster";
      break;
    case a0_0x1b4846:
      _0x5e84d0.aniName = "Land Monster";
      _0x5e84d0.upgradeText = "UPGRADED to Land Monster!";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "landmonster";
      break;
    case a0_0x415f2f:
      _0x5e84d0.aniName = "Ice Monster";
      _0x5e84d0.upgradeText = "UPGRADED to Ice Monster!";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "icemonster";
      break;
    case a0_0x15fd74:
      _0x5e84d0.aniName = "Dino Monster";
      _0x5e84d0.upgradeText = "UPGRADED to Dino Monster!";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "dinomonster";
      break;
    case a0_0xc48b6:
      _0x5e84d0.aniName = "Pigeon";
      _0x5e84d0.upgradeText = "UPGRADED to Pigeon!\nHold W to fly around. ";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "pigeon/pigeon";
      break;
    case a0_0x22e8ad:
      _0x5e84d0.aniName = "Toucan";
      _0x5e84d0.upgradeText = "UPGRADED to Toucan!\nHold W to fly around. ";
      _0x5e84d0.aniCol = "#FF9000";
      _0x5e84d0.skinName = "toucan/toucan";
      break;
    default:
      _0x5e84d0.aniName = "(Animal)";
      _0x5e84d0.aniDesc = "";
      _0x5e84d0.aniCol = "#000000";
      _0x5e84d0.upgradeText = "UPGRADED!";
  }
  return _0x5e84d0;
}
function a0_0x4d2fba() {}
var a0_0x2011f1 = a0_0x299c27;
var a0_0x58d04c = a0_0x12658e;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x299c27.prototype.abilityType = a0_0x4e83df;
a0_0x299c27.prototype.showHalloweenSkins = true;
a0_0x299c27.prototype.updateZ = function () {
  if (this.abilityType == a0_0x1b4732 || this.abilityType == a0_0x146d68 || this.abilityType == a0_0x3131d7 || this.abilityType == a0_0x1733da || this.abilityType == a0_0x18e3d8 || this.abilityType == a0_0x112884 || this.abilityType == a0_0x237c47) {
    this.z = 100002;
  } else if (this.abilityType == a0_0x237c47 || this.abilityType == a0_0x18e3d8 || this.abilityType == a0_0x4969d6 || this.abilityType == a0_0x229aba || this.abilityType == a0_0x48a0da || this.abilityType == a0_0x1a4b45 || this.abilityType == a0_0x2bf9f2 || this.abilityType == a0_0x30ab4d || this.abilityType == a0_0x33cb9a || this.abilityType == a0_0x3b106d || this.abilityType == a0_0x472eb5 || this.abilityType == a0_0x497bb5 || this.abilityType == a0_0x4b6a8d || this.abilityType == a0_0x280d51 || this.abilityType == a0_0x358a26 || this.abilityType == a0_0x34d16a || this.abilityType == a0_0xd60826 || this.abilityType == a0_0x3960f7) {
    this.z = 2000;
  } else if (this.abilityType == a0_0x51d86b) {
    this.z = 1002;
  } else if (this.abilityType == a0_0x49eb72) {
    this.z = 10001;
  } else if (this.abilityType == a0_0x29be15) {
    if (this.specType == 1) {
      this.z = 10001;
    } else if (this.specType == 2) {
      this.z = 1013;
    } else if (this.specType == 3) {
      this.z = 100000;
    }
  } else if (this.abilityType == a0_0x181c87) {
    this.z = 1013;
  } else {
    this.z = -152;
  }
  if (this.abilityType == a0_0x362cb0) {
    if (this.specType == 2) {
      this.z = 10000 - this.rad;
    } else {
      this.z = 1001;
    }
  }
};
a0_0x299c27.prototype.customDraw = function (_0x12e1da) {
  switch (this.abilityType) {
    case a0_0x14200b:
      a0_0x5c99c1(0, 0, this.rad, "#7EBCC0");
      break;
    case a0_0xb1da6a:
    case a0_0xd4c6b3:
      {
        break;
      }
    case a0_0x374ec3:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.4;
        a0_0x5c99c1(0, 0, this.rad, "#7EBCC0");
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        a0_0x4ef4f3.strokeStyle = "white";
        a0_0x4ef4f3.beginPath();
        var _0x39386f = 10;
        a0_0x4ef4f3.translate(-5, this.rad * -0.7);
        a0_0x4ef4f3.moveTo(0, -_0x39386f);
        a0_0x4ef4f3.lineTo(0, _0x39386f);
        a0_0x4ef4f3.moveTo(-_0x39386f, -_0x39386f);
        a0_0x4ef4f3.lineTo(_0x39386f, _0x39386f);
        a0_0x4ef4f3.moveTo(_0x39386f, -_0x39386f);
        a0_0x4ef4f3.lineTo(-_0x39386f, _0x39386f);
        a0_0x4ef4f3.moveTo(-_0x39386f, 0);
        a0_0x4ef4f3.lineTo(_0x39386f, 0);
        a0_0x4ef4f3.lineWidth = 3;
        a0_0x4ef4f3.stroke();
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x22bfe1:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
        a0_0x5c99c1(0, 0, this.rad, "#755A2A");
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x472eb5:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        var _0x34382f = this.getSkinImageObj("img/ability_sabertoothJawAttack.png");
        if (_0x34382f) {
          var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
          var _0x525f5f = this.rad - 2.5;
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x34382f, 0, 0, _0x34382f.width * _0x5548df, _0x34382f.height, -_0x525f5f, -_0x525f5f, _0x525f5f * 2 * _0x5548df, _0x525f5f * 2);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x229aba:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        var _0x34382f = this.getSkinImageObj("img/ability_claw.png");
        if (_0x34382f) {
          var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
          var _0x525f5f = this.rad - 2.5;
          a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
          a0_0x4ef4f3.drawImage(_0x34382f, 0, 0, _0x34382f.width * _0x5548df, _0x34382f.height, -_0x525f5f, -_0x525f5f, _0x525f5f * 2 * _0x5548df, _0x525f5f * 2);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x112884:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.1;
        a0_0x5c99c1(0, 0, this.rad, "#5B7EC7");
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        var _0x51207c = "img";
        var _0x34382f = this.getSkinImageObj("skins/volcano/kingdragon/" + this.speciesType + "/tail.png");
        if (_0x34382f) {
          var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
          var _0x525f5f = this.rad * 0.65;
          a0_0x4ef4f3.rotate(this.angle);
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2;
          var _0x2eb957 = _0x525f5f * 2 * _0x5548df;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 1.25;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x1a4b45:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.1;
        a0_0x5c99c1(0, 0, this.rad, "#5B7EC7");
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        var _0x51207c = "skins/ocean/bluewhale/" + this.speciesType;
        _0x51207c += "/" + this.speciesSubType;
        var _0x34382f = this.getSkinImageObjForSeason(_0x51207c + "/ability_whaleTailHit.png", this.mopeSeasonID);
        if (_0x34382f) {
          var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
          var _0x525f5f = this.rad * 0.85;
          a0_0x4ef4f3.rotate(this.angle);
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2;
          var _0x2eb957 = _0x525f5f * 2 * _0x5548df;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 1.25;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x18e3d8:
      {
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.save();
        var _0xa96f6 = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x13c87c = 1.5;
        var _0x114b95 = 1;
        var _0x548489 = _0x114b95 * Math.sin(Math.PI * 2 / _0x13c87c * _0xa96f6);
        var _0x3bb538 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha *= _0x548489 * 0.6;
        a0_0x4ef4f3.rotate(this.angle);
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
        if (this.specType2 == 0) {
          a0_0x5c99c1(0, 0, this.rad, "#96661C");
        } else {
          a0_0x5c99c1(0, 0, this.rad, "#e0dfde");
        }
        a0_0x4ef4f3.restore();
        a0_0x4ef4f3.save();
        var _0x145709 = this.specType2 == 1 ? "arctic" : "land";
        var _0x5a0400 = "skins/" + _0x145709 + "/bear/" + this.speciesType + "/ability.png";
        var _0x34382f = this.getSkinImageObj(_0x5a0400);
        if (_0x34382f) {
          var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
          var _0x3bc444 = a0_0x870f2b((a0_0x4f736f - this.spawnTime) / 300, 0, 1);
          var _0x49216d = -(-0.5 + _0x3bc444) * a0_0x2b691e;
          var _0x1dbb03 = this.angle;
          a0_0x4ef4f3.rotate(this.angle + _0x49216d * (this.specType == 0 ? 1 : -1));
          var _0x525f5f = -this.rad * 1;
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2;
          var _0x2eb957 = _0x525f5f * 2 * _0x5548df;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 0.8;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9 + _0x525f5f, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x237c47:
      {
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.save();
        var _0xa96f6 = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x13c87c = 1.5;
        var _0x114b95 = 1;
        var _0x548489 = _0x114b95 * Math.sin(Math.PI * 2 / _0x13c87c * _0xa96f6);
        var _0x3bb538 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha *= _0x548489 * 0.6;
        a0_0x4ef4f3.rotate(this.angle);
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
        if (this.specType2 == 0) {
          a0_0x5c99c1(0, 0, this.rad, "#96661C");
        } else {
          a0_0x5c99c1(0, 0, this.rad, "#e0dfde");
        }
        a0_0x4ef4f3.restore();
        a0_0x4ef4f3.save();
        var _0x51207c = "skins/desert/gobibear/" + this.speciesType + "/claw" + Math.min(this.specType, 1);
        var _0x34382f = this.getSkinImageObj(_0x51207c + ".png");
        if (_0x34382f) {
          var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
          var _0x3bc444 = a0_0x870f2b((a0_0x4f736f - this.spawnTime) / 300, 0, 1);
          var _0x49216d = -(-0.5 + _0x3bc444) * a0_0x844a6b(90);
          var _0x1dbb03 = this.angle;
          a0_0x4ef4f3.rotate(this.angle + _0x49216d * (this.specType == 0 ? 1 : -1));
          var _0x525f5f = -this.rad * 1;
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2;
          var _0x2eb957 = _0x525f5f * 2 * _0x5548df;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 0.8;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9 + _0x525f5f, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x3960f7:
      {
        var _0xa96f6 = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x18dcbd = a0_0xe2d896(_0xa96f6, 1, 0.1, 1);
        var _0x44acd1 = 0;
        var _0x13c87c = 2;
        var _0x114b95 = 1.5;
        _0x44acd1 = _0x114b95 * Math.sin(Math.PI * 2 / _0x13c87c * _0xa96f6);
        var _0x35c57a = 1;
        for (i = 0; i < _0x35c57a; i++) {
          if (this.drawRad === undefined) {
            this.drawRad = new Array();
            this.drawAngle = new Array();
          }
          if (this.drawRad[i] == undefined) {
            this.drawRad.push(a0_0x1da5bb(5, 10) / 10);
            this.drawAngle.push(a0_0x844a6b(a0_0x1da5bb(1, 360)));
          }
          var _0x18ffa6 = this.rad * this.drawRad[i];
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(this.drawAngle[i]);
          a0_0x4ef4f3.save();
          var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
          a0_0x4ef4f3.globalAlpha = 0.1 - _0x18dcbd;
          a0_0x4ef4f3.restore();
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.fillStyle = "white";
          a0_0x4ef4f3.globalAlpha = 0.3 - _0x18dcbd;
          var _0x3af769 = -_0x18ffa6 * 0.6;
          var _0x278101 = -_0x18ffa6 * 0.5 + this.rPer * 10;
          var _0x4f7ba8 = Math.max(0, _0x18ffa6 * 0.65 + _0x44acd1) + 2;
          a0_0x5c99c1(_0x3af769, _0x278101, _0x4f7ba8, "#654321");
          var _0x3af769 = _0x18ffa6 * 0.5;
          var _0x278101 = -_0x18ffa6 * 0.5 - this.rPer * 10;
          var _0x4f7ba8 = Math.max(0, _0x18ffa6 * 0.73 - _0x44acd1);
          a0_0x5c99c1(_0x3af769, _0x278101, _0x4f7ba8, "#654321");
          var _0x3af769 = _0x18ffa6 * 0.6;
          var _0x278101 = _0x18ffa6 * 0.5;
          var _0x4f7ba8 = Math.max(0, _0x18ffa6 * 0.78 + _0x44acd1);
          a0_0x5c99c1(_0x3af769, _0x278101, _0x4f7ba8, "#654321");
          var _0x3af769 = -_0x18ffa6 * 0.5;
          var _0x278101 = _0x18ffa6 * 0.5 + this.rPer * 10;
          var _0x4f7ba8 = Math.max(0, _0x18ffa6 * 0.6 + this.rPer - _0x44acd1);
          a0_0x5c99c1(_0x3af769, _0x278101, _0x4f7ba8, "#654321");
          a0_0x4ef4f3.restore();
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x10bb2c:
      a0_0x4ef4f3.globalAlpha = 0.5;
      a0_0x5c99c1(0, 0, this.rad, "red");
      break;
    case a0_0x1b4732:
      break;
    case a0_0x4fc48b:
      break;
    case a0_0x57a82c:
      break;
    case a0_0x2f33d7:
    case a0_0x292808:
    case a0_0x400689:
    case a0_0x3922f2:
    case a0_0x146d68:
    case a0_0x2fc2ee:
    case a0_0x34967a:
    case a0_0x1fca7a:
    case a0_0x23050e:
    case a0_0x509ce9:
      break;
    case a0_0x362cb0:
      if (this.specType == 2) {
        var _0xaa85af = "closed";
        var _0x4a8855 = "flytrap";
        var _0x5d5e20 = "img/desert/" + _0x4a8855 + "/mouth/" + _0xaa85af + ".png";
        var _0x34382f = this.getSkinImageObj(_0x5d5e20);
        if (_0x34382f) {
          var _0x525f5f = this.rad;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.globalAlpha = 0.9;
          a0_0x4ef4f3.rotate(this.angle - a0_0x844a6b(-90));
          a0_0x4ef4f3.drawImage(_0x34382f, -_0x525f5f, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
          a0_0x4ef4f3.restore();
        }
      } else {}
      break;
    case a0_0x34da24:
      if (this.specType2 == 1) {
        var _0xa96f6 = a0_0x4f736f - this.spawnTime;
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.rotate(this.angle - -a0_0x2b691e);
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.9;
        if (_0xa96f6 < 200) {
          var _0x4f7550 = 1 + Math.trunc(_0xa96f6 / 50);
          var _0x5d5e20 = "skins/desert/camel/201/spit" + this.specType + "_pop" + _0x4f7550 + ".png";
          var _0x34382f = this.getSkinImageObjForSeason(_0x5d5e20, 1);
          if (_0x34382f) {
            var _0x525f5f = this.rad;
            a0_0x4ef4f3.save();
            a0_0x4ef4f3.drawImage(_0x34382f, -_0x525f5f, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
            a0_0x4ef4f3.restore();
          }
        } else {
          var _0x5d5e20 = "skins/desert/camel/201/spit" + this.specType + "_pop4.png";
          var _0x34382f = this.getSkinImageObjForSeason(_0x5d5e20, 1);
          if (_0x34382f) {
            var _0x525f5f = this.rad;
            a0_0x4ef4f3.save();
            a0_0x4ef4f3.drawImage(_0x34382f, -_0x525f5f, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
            a0_0x4ef4f3.restore();
          }
        }
        a0_0x4ef4f3.restore();
      } else {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
        a0_0x5c99c1(0, 0, this.rad, "black");
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x1733da:
      {
        this.drawEffectScale_Slow = true;
        this.doesDrawEffectScale = true;
        a0_0x4ef4f3.globalAlpha = 0.2;
        a0_0x5c99c1(0, 0, this.rad * 0.85, "white");
        var _0x321b80 = this.specType == 3 ? "_e" : "";
        var _0x34382f = this.getSkinImageObj("img/target" + _0x321b80 + ".png");
        if (_0x34382f) {
          var _0x525f5f = this.rad;
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.globalAlpha = 0.5;
          a0_0x4ef4f3.drawImage(_0x34382f, -_0x525f5f, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
          a0_0x4ef4f3.restore();
        }
        a0_0x4ef4f3.save();
        if (this.is1v1Target == 1 && this.timerTxt != null) {
          a0_0x4ef4f3.globalAlpha = 1;
          this.timerTxt.x = 0;
          this.timerTxt.y = 0;
          this.timerTxt.draw();
        } else if (this.is1v1Target == 2 && this.timerTxt != null) {
          a0_0x4ef4f3.globalAlpha = 1;
          this.timerTxt.x = 0;
          this.timerTxt.y = 0;
          this.timerTxt.draw();
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x3131d7:
      {
        a0_0x4ef4f3.globalAlpha = 0.5;
      }
      break;
    case a0_0x30ab4d:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.05;
        a0_0x5c99c1(0, 0, this.rad, "#B32E10");
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        var _0x51207c = "skins/ocean/kingcrab/" + this.speciesType;
        var _0x5c7aeb = this.speciesType === 1 || this.speciesType === 2 || this.speciesType === 204 ? 1 : 2;
        var _0x34382f = this.getSkinImageObjForSeason(_0x51207c + "/ability_crabSmash" + this.specType + ".png", _0x5c7aeb);
        if (_0x34382f) {
          var _0x3bc444 = a0_0x870f2b((a0_0x4f736f - this.spawnTime) / 200, 0, 1);
          var _0x3975ad = this.specType == 1 ? -1 : 1;
          var _0x49216d = -(-0.2 + _0x3bc444) * a0_0x844a6b(_0x3975ad * -90);
          _0x49216d = _0x3975ad * (0.3 + _0x3bc444) + a0_0x844a6b(_0x3975ad * -30);
          var _0x525f5f = this.rad * 0.6;
          a0_0x4ef4f3.rotate(this.angle + _0x49216d);
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2 * 0.7;
          var _0x2eb957 = _0x525f5f * 2;
          var _0x5c664a = 0.75;
          var _0x4175f9 = 0.95;
          if (this.specType == 1) {
            _0x5c664a = 0.25;
            _0x4175f9 = 0.95;
          }
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x2bf9f2:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.05;
        a0_0x5c99c1(0, 0, this.rad, "#E4E7C8");
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        var _0x51207c = "skins/land/elephant/" + this.speciesType;
        var _0x34382f = this.getSkinImageObj(_0x51207c + "/ability_elephantTrunkSmack.png");
        console.log(_0x51207c);
        if (_0x34382f) {
          var _0x3bc444 = a0_0x870f2b((a0_0x4f736f - this.spawnTime) / 300, 0, 1);
          var _0x49216d = -(-0.5 + _0x3bc444) * a0_0x2b691e;
          var _0x525f5f = this.rad * 0.6;
          a0_0x4ef4f3.rotate(this.angle + _0x49216d);
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2 * 0.7;
          var _0x2eb957 = _0x525f5f * 2;
          var _0x5c664a = 0.75;
          var _0x4175f9 = 0.95;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x48a0da:
      {}
      break;
    case a0_0x33cb9a:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.25;
        a0_0x5c99c1(0, 0, this.rad, "#44d31f");
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        var _0x34382f = this.getSkinImageObjForSeason("skins/land/croc/" + this.speciesType + "/" + this.speciesSubType + "/ability.png", this.mopeSeasonID);
        if (_0x34382f) {
          var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
          var _0x525f5f = this.rad * 0.6;
          a0_0x4ef4f3.rotate(this.angle);
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2.5;
          var _0x2eb957 = _0x525f5f * 2.5 * _0x5548df;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 0.95;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
          a0_0x4ef4f3.rotate(Math.PI);
          var _0x48574a = 0;
          var _0x11817c = this.rad * 0.5;
          var _0x54970d = _0x525f5f * 2.5;
          var _0x2eb957 = _0x525f5f * 2.5 * _0x5548df;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 0.95;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x3b106d:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.25;
        a0_0x5c99c1(0, 0, this.rad, "#44d31f");
        var _0x5c7aeb = this.speciesType === 1 || this.speciesType === 2 ? 1 : this.mopeSeasonID;
        var _0x51207c = "skins/land/boaconstrictor/" + this.speciesType;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        var _0x34382f = this.getSkinImageObjForSeason(_0x51207c + "/ability_boabite.png", _0x5c7aeb);
        if (_0x34382f) {
          var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
          var _0x525f5f = this.rad * 0.6;
          a0_0x4ef4f3.rotate(this.angle);
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2.5;
          var _0x2eb957 = _0x525f5f * 2.5 * _0x5548df;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 0.95;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
          a0_0x4ef4f3.rotate(Math.PI);
          var _0x48574a = 0;
          var _0x11817c = this.rad * 0.5;
          var _0x54970d = _0x525f5f * 2.5;
          var _0x2eb957 = _0x525f5f * 2.5 * _0x5548df;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 0.95;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x5f59ee:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.1;
        a0_0x5c99c1(0, 0, this.rad, "#755A2A");
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        var _0x51207c = "skins/land/";
        var _0x5c7aeb = this.speciesType === 204 ? 1 : this.mopeSeasonID;
        var _0x34382f = this.getSkinImageObjForSeason(_0x51207c + "/tiger/" + this.speciesType + "/ability_tigerJump.png", _0x5c7aeb);
        if (_0x34382f) {
          var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 100);
          var _0x525f5f = this.rad * 1.1;
          a0_0x4ef4f3.rotate(this.angle);
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2;
          var _0x2eb957 = _0x525f5f * 2 * _0x5548df;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 1;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x280d51:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.05;
        a0_0x5c99c1(0, 0, this.rad, "#44d31f");
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        var _0x577ef2 = this.getSkinImageObj("img/ability_pounce2.png");
        var _0x551e92 = this.getSkinImageObj("img/ability_pounce1.png");
        if (_0x577ef2 && _0x551e92) {
          var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
          var _0x525f5f = this.rad * 0.4;
          a0_0x4ef4f3.rotate(this.angle);
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2.5;
          var _0x2eb957 = _0x525f5f * 2.5 * _0x5548df;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 0.95;
          a0_0x4ef4f3.drawImage(_0x577ef2, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
          _0x525f5f = this.rad * 0.6;
          var _0x48574a = 0;
          var _0x11817c = this.rad * 0.5;
          var _0x54970d = _0x525f5f * 2.5;
          var _0x2eb957 = _0x525f5f * 2.5 * _0x5548df;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 0.95;
          a0_0x4ef4f3.drawImage(_0x551e92, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x4b6a8d:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.05;
        a0_0x5c99c1(0, 0, this.rad, "#E4E7C8");
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        var _0x29d3f6 = "skins/land/tiger/" + this.speciesType + "/ability_tigerSlash" + this.specType + ".png";
        var _0x34382f = this.getSkinImageObj(_0x29d3f6);
        if (_0x34382f) {
          var _0x3bc444 = a0_0x870f2b((a0_0x4f736f - this.spawnTime) / 300, 0, 1);
          var _0x49216d = (this.specType == 1 ? 1 : -1) * (-0.6 + _0x3bc444) * a0_0x844a6b(90);
          var _0x525f5f = this.rad * 1.2;
          a0_0x4ef4f3.rotate(this.angle + _0x49216d);
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2 * 0.7;
          var _0x2eb957 = _0x525f5f * 2;
          var _0x5c664a = 0.2;
          var _0x4175f9 = 0.5;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x34d16a:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        var _0x5c7aeb = this.speciesType === 201 || this.speciesType === 2 || this.speciesType === 1 || this.speciesType === 100 ? 1 : this.mopeSeasonID;
        var _0x3ff206 = _0x5c7aeb === 1 ? "" : this.specType;
        var _0x5c4c61 = "skins/land/zebra/" + this.speciesType + "/kick" + _0x3ff206 + ".png";
        console.log(_0x5c4c61);
        var _0x34382f = this.getSkinImageObjForSeason(_0x5c4c61, _0x5c7aeb);
        if (_0x34382f) {
          var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
          var _0x525f5f = this.rad * 0.6;
          a0_0x4ef4f3.rotate(this.angle);
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2;
          var _0x2eb957 = _0x525f5f * 3 * _0x5548df;
          var _0x5c664a = 0.3;
          var _0x4175f9 = 1;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x358a26:
      {
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.save();
        let _0x4a3808 = 1;
        var _0x3bb538 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha *= _0x4a3808 * 0.6;
        a0_0x4ef4f3.rotate(this.angle);
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
        a0_0x5c99c1(this.rad * 0.3, 0, this.rad * (0.9 + _0x4a3808 * 0.12), "#E4E7C8");
        a0_0x5c99c1(-this.rad * 0.3, 0, this.rad * (1.05 + _0x4a3808 * 0.09), "#E4E7C8");
        a0_0x4ef4f3.globalAlpha = _0x3bb538;
        a0_0x4ef4f3.restore();
        a0_0x4ef4f3.save();
        let _0x4f3f10 = "skins/land/giraffe/" + this.speciesType;
        if (this.speciesType == 202) {
          _0x4f3f10 += "/" + this.speciesSubType;
        }
        _0x4f3f10 += "/stomp.png";
        var _0x34382f = this.getSkinImageObj(_0x4f3f10);
        if (_0x34382f) {
          var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
          var _0x1dbb03 = this.angle;
          a0_0x4ef4f3.rotate(_0x1dbb03);
          var _0x525f5f = -this.rad * 1;
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 3;
          var _0x2eb957 = _0x525f5f * 2 * _0x5548df;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 0.7;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9 + _0x525f5f, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0xd60826:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        a0_0x4ef4f3.rotate(this.angle);
        var _0x5c7aeb = this.speciesType === 1 || this.speciesType === 2 || this.speciesType === 201 ? 1 : this.mopeSeasonID;
        var _0x34382f = this.getSkinImageObjForSeason("skins/ocean/shark/" + this.speciesType + "/ability.png", _0x5c7aeb);
        if (_0x34382f) {
          var _0x18dcbd = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
          a0_0x4ef4f3.globalAlpha = 0.9;
          var _0x525f5f = -this.rad * 1.75;
          var _0x48574a = 0;
          var _0x11817c = this.rad;
          var _0x54970d = _0x525f5f * 2;
          var _0x2eb957 = _0x525f5f * 2 * _0x18dcbd;
          var _0x5c664a = 0.5;
          var _0x4175f9 = 0.9;
          a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9 + _0x525f5f, _0x54970d, _0x2eb957);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x5da225:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.5;
        var _0x525f5f = this.rad;
        var _0xa96f6 = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x13c87c = 2.2;
        var _0x58e7b5 = Math.cos(Math.PI * 2 / _0x13c87c * _0xa96f6) * 6.5;
        var _0x241043 = Math.sin(Math.PI * 2 / _0x13c87c * _0xa96f6) * 6.5;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.3;
        a0_0x5c99c1(0, 0, _0x525f5f, a0_0x5479b9);
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.5;
        a0_0x5c99c1(0 + _0x58e7b5 / 4.5 + this.rPer, 1 + _0x241043 / 1.5, Math.max(0, _0x525f5f - 14), "#de9d23");
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x49eb72:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.5;
        var _0x525f5f = this.rad;
        var _0xa96f6 = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x13c87c = 2.2;
        var _0x58e7b5 = Math.cos(Math.PI * 2 / _0x13c87c * _0xa96f6) * 6.5;
        var _0x241043 = Math.sin(Math.PI * 2 / _0x13c87c * _0xa96f6) * 6.5;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.3;
        a0_0x5c99c1(0, 0, _0x525f5f, "#2CAAC4");
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.5;
        a0_0x5c99c1(0 + _0x58e7b5 / 4.5 + this.rPer, 1 + _0x241043 / 1.5, Math.max(0, _0x525f5f - 14), "#29A0BA");
        a0_0x5c99c1(0 + _0x58e7b5 / 1.5 - this.rPer * 2, _0x241043, Math.max(0, _0x525f5f - 38.5 + _0x241043 / 5), "#2B8CAA");
        a0_0x5c99c1(0 + _0x58e7b5 / 1.5 - this.rPer * 2, _0x241043, Math.max(0, _0x525f5f - 54.5 + _0x241043 / 11), "#28829E");
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x29be15:
      {
        if (this.specType == 0 || this.specType == 2 || this.specType == 3) {
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.globalAlpha = 0.3;
          var _0x3f2139 = "";
          var _0x34382f = this.getSkinImageObj("skins/pelican/" + this.speciesType + "/ability_pelican" + _0x3f2139 + ".png");
          if (_0x34382f) {
            var _0x525f5f = -this.rad * 1.5;
            a0_0x4ef4f3.rotate(this.angle);
            var _0x48574a = 0;
            var _0x11817c = this.rad;
            var _0x54970d = _0x525f5f;
            var _0x2eb957 = _0x525f5f;
            var _0x5c664a = 0.5;
            var _0x4175f9 = 0.5;
            a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9 + _0x525f5f, _0x54970d, _0x2eb957);
          }
          a0_0x4ef4f3.restore();
        }
        break;
      }
    case a0_0x497bb5:
      {
        if (this.specType == 0) {
          a0_0x4ef4f3.save();
          var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
          a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
          a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
          var _0x34382f = this.getSkinImageObjForSeason("skins/land/trex/" + this.speciesType + "/ability_trexBite.png", this.mopeSeasonID);
          if (_0x34382f) {
            var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
            var _0x525f5f = this.rad * 0.6;
            a0_0x4ef4f3.rotate(this.angle);
            var _0x48574a = 0;
            var _0x11817c = this.rad;
            var _0x54970d = _0x525f5f * 2.5;
            var _0x2eb957 = _0x525f5f * 2.5 * _0x5548df;
            var _0x5c664a = 0.5;
            var _0x4175f9 = 0.95;
            a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
            a0_0x4ef4f3.rotate(Math.PI);
            var _0x48574a = 0;
            var _0x11817c = this.rad * 0.5;
            var _0x54970d = _0x525f5f * 2.5;
            var _0x2eb957 = _0x525f5f * 2.5 * _0x5548df;
            var _0x5c664a = 0.5;
            var _0x4175f9 = 0.95;
            a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x11817c + _0x2eb957 * -_0x4175f9, _0x54970d, _0x2eb957);
          }
          var _0x34382f = this.getSkinImageObj("skins/land/trex/" + this.speciesType + "/trex-head.png", this.mopeSeasonID);
          if (_0x34382f) {
            var _0x5548df = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
            var _0x525f5f = this.rad * 1.5;
            a0_0x4ef4f3.rotate(a0_0x844a6b(180));
            var _0x48574a = 0;
            var _0x11817c = this.rad;
            var _0x54970d = _0x525f5f * 2;
            var _0x2eb957 = _0x525f5f * 2 * _0x5548df;
            var _0x5c664a = 0.5;
            var _0x4175f9 = -1.25;
            a0_0x4ef4f3.drawImage(_0x34382f, _0x48574a + _0x54970d * -_0x5c664a, _0x4175f9 * _0x525f5f, _0x54970d, _0x2eb957);
          }
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0xa30c41:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
        a0_0x5c99c1(0, 0, this.rad, "#6D7471");
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x10e305:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
        a0_0x5c99c1(0, 0, this.rad, "#6D7471");
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x3ef526:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
        a0_0x5c99c1(0, 0, this.rad, "#6D7471");
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x311871:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
        a0_0x5c99c1(0, 0, this.rad, "#f2f2f2");
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x51d86b:
      {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(180));
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.8;
        var _0x34382f = this.getSkinImageObj("img/wave.png");
        if (_0x34382f) {
          var _0x525f5f = this.rad;
          a0_0x4ef4f3.drawImage(_0x34382f, -_0x525f5f, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x506cd3:
      {
        if (this.animalType !== undefined && this.animalType == a0_0x93d1ea && this.speciesType == 204) {
          a0_0x4ef4f3.save();
          var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
          a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.9;
          var _0x5c7aeb = 1;
          var _0x34382f = this.getSkinImageObjForSeason("skins/land/hippo/204/roar.png", _0x5c7aeb);
          if (_0x34382f) {
            var _0x525f5f = this.rad;
            a0_0x4ef4f3.drawImage(_0x34382f, -_0x525f5f, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
          }
          a0_0x4ef4f3.restore();
        } else {
          a0_0x4ef4f3.save();
          var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
          a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.2;
          a0_0x5c99c1(0, 0, this.rad, "#746B3E");
          a0_0x4ef4f3.restore();
        }
      }
      break;
    case a0_0x1f44d4:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.5;
        a0_0x5c99c1(0, 0, this.rad, "#62C5FF");
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 1;
        a0_0x4ef4f3.strokeStyle = "#62C5FF";
        a0_0x4ef4f3.beginPath();
        var _0x5e346c = this.rad * -0.7;
        var _0x347135 = -5;
        var _0x251d04 = 10;
        a0_0x4ef4f3.moveTo(_0x5e346c, _0x347135);
        a0_0x4ef4f3.lineTo(_0x5e346c - _0x251d04 * 0.4, _0x347135 + _0x251d04);
        a0_0x4ef4f3.lineTo(_0x5e346c + _0x251d04 * 0.4, _0x347135 + _0x251d04 * 0.7);
        a0_0x4ef4f3.lineTo(_0x5e346c + _0x251d04 * 0.4 * 0.5, _0x347135 + _0x251d04 * 2);
        a0_0x4ef4f3.lineWidth = 3;
        a0_0x4ef4f3.stroke();
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x42cffb:
      {
        if (a0_0x1528ea || a0_0x1d703e != 3) {
          var _0x5b2242 = this.getSkinImageObj("img/whirlpool2.png");
          if (_0x5b2242) {
            var _0x525f5f = this.rad;
            a0_0x4ef4f3.save();
            a0_0x4ef4f3.globalAlpha = 0.5;
            a0_0x4ef4f3.drawImage(_0x5b2242, -_0x525f5f, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
            a0_0x4ef4f3.restore();
          } else {
            a0_0x5c99c1(0, 0, this.rad, "#2D93B0");
          }
        } else {
          a0_0x4ef4f3.save();
          var _0x525f5f = Math.max(0, this.rad - 30);
          var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
          var _0xa96f6 = (a0_0x4f736f - this.spawnTime) / 1000;
          var _0x13c87c = 2.2;
          var _0x58e7b5 = Math.cos(Math.PI * 2 / _0x13c87c * _0xa96f6) * 10.5;
          var _0x241043 = Math.sin(Math.PI * 2 / _0x13c87c * _0xa96f6) * 6.5;
          a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.05;
          a0_0x5c99c1(0 + _0x58e7b5 + 15 - this.rPer, 0 + _0x241043 + 20 - this.rPer, Math.max(0, _0x525f5f - 6), "white");
          a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.1;
          a0_0x5c99c1(0 + _0x58e7b5 + 15 - this.rPer, 0 + _0x241043 / 2 - this.rPer, Math.max(0, _0x525f5f - 6), "#2D93B0");
          a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
          a0_0x5c99c1(0 + _0x58e7b5 / 1.5 - this.rPer * 2, _0x241043, Math.max(0, _0x525f5f - 54.5 + _0x241043 / 11), "#28829E");
          a0_0x4ef4f3.restore();
          a0_0x4ef4f3.save();
          var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
          var _0x525f5f = Math.max(0, this.rad - 30);
          var _0xa96f6 = (a0_0x4f736f - this.spawnTime) / 1000;
          var _0x13c87c = 3.2;
          var _0x58e7b5 = Math.cos(Math.PI * 2 / _0x13c87c * _0xa96f6) * 50;
          var _0x241043 = Math.sin(Math.PI * 2 / _0x13c87c * _0xa96f6) * 50;
          a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.05;
          a0_0x5c99c1(0, 0, _0x525f5f, "#2CAAC4");
          a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
          a0_0x5c99c1(0 + _0x58e7b5 / 2 - this.rPer, 0 + _0x241043 / 2 - this.rPer, Math.max(0, _0x525f5f * 0.95), "#2D93B0");
          a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.25;
          a0_0x5c99c1(0 + _0x58e7b5 / 4.5 + this.rPer, 1 + _0x241043 / 1.5, Math.max(0, _0x525f5f * 0.85), "#28829E");
          a0_0x4ef4f3.restore();
          var _0x5b2242 = this.getSkinImageObj("img/whirlpool2.png");
          if (_0x5b2242) {
            var _0x525f5f = this.rad - 30;
            var _0x282480 = 5 / 60;
            var _0x4d12ca = 1000 / _0x282480;
            var _0x5548df = (a0_0x4f736f - this.spawnTime) % _0x4d12ca / _0x4d12ca;
            var _0x301aa5 = _0x5548df * 2 * Math.PI;
            _0x282480 = 8 / 60;
            _0x4d12ca = 1000 / _0x282480;
            _0x5548df = (a0_0x4f736f - this.spawnTime) % _0x4d12ca / _0x4d12ca;
            rotation2 = _0x5548df * 2 * Math.PI;
            a0_0x4ef4f3.save();
            a0_0x4ef4f3.rotate(_0x301aa5);
            var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
            a0_0x4ef4f3.globalAlpha = 0.1;
            var _0xa96f6 = (a0_0x4f736f - this.spawnTime) / 1000;
            var _0x13c87c = 2.2;
            var _0x58e7b5 = Math.cos(Math.PI * 2 / _0x13c87c * _0xa96f6) * 6.5;
            var _0x241043 = Math.sin(Math.PI * 2 / _0x13c87c * _0xa96f6) * 6.5;
            a0_0x4ef4f3.globalAlpha = 0.2;
            a0_0x4ef4f3.drawImage(_0x5b2242, -_0x525f5f - _0x58e7b5 + 30 / 2.2, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
            a0_0x4ef4f3.restore();
            a0_0x4ef4f3.save();
            a0_0x4ef4f3.globalAlpha = 0.1;
            a0_0x4ef4f3.rotate(rotation2 * 0.8);
            a0_0x4ef4f3.drawImage(_0x5b2242, -_0x525f5f - _0x58e7b5 / 2.2, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
            a0_0x4ef4f3.restore();
            a0_0x4ef4f3.save();
            a0_0x4ef4f3.globalAlpha = 0.2;
            a0_0x4ef4f3.rotate(rotation2);
            a0_0x4ef4f3.drawImage(_0x5b2242, -_0x525f5f - _0x58e7b5 - 20 / 2.2, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
            a0_0x4ef4f3.restore();
            a0_0x4ef4f3.save();
            a0_0x4ef4f3.globalAlpha = 0.2;
            a0_0x4ef4f3.rotate(rotation2);
            a0_0x4ef4f3.drawImage(_0x5b2242, -_0x525f5f - _0x58e7b5 / 2.2, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
            a0_0x4ef4f3.restore();
            a0_0x4ef4f3.save();
            a0_0x4ef4f3.globalAlpha = 0.2;
            a0_0x4ef4f3.rotate(_0x301aa5);
            a0_0x4ef4f3.drawImage(_0x5b2242, -_0x525f5f - _0x58e7b5 / 2.2, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
            a0_0x4ef4f3.restore();
            a0_0x4ef4f3.save();
            a0_0x4ef4f3.globalAlpha = 0.2;
            a0_0x4ef4f3.rotate(_0x301aa5);
            a0_0x4ef4f3.drawImage(_0x5b2242, -_0x525f5f - _0x58e7b5 / 2.2, -_0x525f5f, _0x525f5f * 2, _0x525f5f * 2);
            a0_0x4ef4f3.restore();
          }
        }
      }
      break;
    case a0_0x2e50bd:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.5;
        var _0x525f5f = Math.max(0, this.rad - 30);
        var _0xa96f6 = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x13c87c = 2.2;
        var _0x58e7b5 = Math.cos(Math.PI * 2 / _0x13c87c * _0xa96f6) * 6.5;
        var _0x241043 = Math.sin(Math.PI * 2 / _0x13c87c * _0xa96f6) * 6.5;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.4;
        a0_0x5c99c1(0, 0, _0x525f5f, "#2CAAC4");
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.7;
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x5c99c1(0 + _0x58e7b5 / 2 - this.rPer, 0 + _0x241043 / 2 - this.rPer, Math.max(0, _0x525f5f - 6), "#2D93B0");
        }
        a0_0x5c99c1(0 + _0x58e7b5 / 4.5 + this.rPer, 1 + _0x241043 / 1.5, Math.max(0, _0x525f5f - 14), "#29A0BA");
        a0_0x5c99c1(0 + _0x58e7b5 / 1.5 - this.rPer * 2, _0x241043, Math.max(0, _0x525f5f - 38.5 + _0x241043 / 5), "#2B8CAA");
        a0_0x5c99c1(0 + _0x58e7b5 / 1.5 - this.rPer * 2, _0x241043, Math.max(0, _0x525f5f - 54.5 + _0x241043 / 11), "#28829E");
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x36620c:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x44acd1 = 0;
        var _0xa96f6 = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x13c87c = 6;
        var _0x114b95 = 1.5;
        _0x44acd1 = _0x114b95 * Math.sin(Math.PI * 2 / _0x13c87c * _0xa96f6);
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.7;
        var _0x3975f9 = 4;
        a0_0x4ef4f3.fillStyle = "black";
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        if (a0_0x1d703e != a0_0x30b084) {
          a0_0x4ef4f3.fillStyle = "black";
          a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.5;
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x3975f9 + _0x44acd1), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x44acd1), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x44acd1), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x44acd1), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x44acd1), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.beginPath();
        }
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x361d59:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.25;
        a0_0x5c99c1(0, 0, this.rad, "#9F8641");
        a0_0x4ef4f3.restore();
      }
      break;
    case a0_0x41465a:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.25;
        a0_0x5c99c1(0, 0, this.rad, "#785228");
        a0_0x4ef4f3.restore();
      }
      break;
    default:
      {
        a0_0x4ef4f3.save();
        var _0x3b5ab5 = a0_0x4ef4f3.globalAlpha;
        a0_0x4ef4f3.globalAlpha = _0x3b5ab5 * 0.15;
        a0_0x5c99c1(0, 0, this.rad, "black");
        a0_0x4ef4f3.restore();
      }
      break;
  }
};
a0_0x299c27.prototype.setObjTypes = function (_0x10ddbc, _0x329547) {
  this.oType = _0x10ddbc;
  this.abilityType = _0x329547;
};
a0_0x299c27.prototype.skinThemeID = 0;
a0_0x299c27.prototype.mopeSeasonID = 0;
a0_0x299c27.prototype.readCustomData_onNewlyVisible = function (_0x5aef2f) {
  this.specType = _0x5aef2f.readUInt8();
  this.specType2 = _0x5aef2f.readUInt8();
  this.skinThemeID = _0x5aef2f.readUInt8();
  _0x5aef2f.readUInt8();
  if (this.abilityType == a0_0x374ec3 || this.abilityType == a0_0x10e305 || this.abilityType == a0_0x51d86b || this.abilityType == a0_0x506cd3 || this.abilityType == a0_0x41465a) {
    this.rad = this.oRad = 0;
  }
};
a0_0x299c27.prototype.updateTimer = function () {
  this.timer = Math.round(this.timer);
  var _0x2c9136 = this.timer;
  this.setTimer(_0x2c9136);
};
a0_0x299c27.prototype.timerTxt = null;
a0_0x299c27.prototype.setTimer = function (_0x43c07e) {
  var _0x192fcf = "" + _0x43c07e;
  if (this.timerTxt == null) {
    this.timerTxt = new a0_0x3d10bd(20, "#FFFFFF");
    this.timerTxt.strokeW = 2;
    this.timerTxt.multiLine = true;
    this.timerTxt.renderScale = 5;
    this.timerTxt.setText(_0x192fcf);
  } else {
    this.timerTxt.setFontSize(20);
    this.timerTxt.setText(_0x192fcf);
  }
};
function a0_0x299c27() {
  a0_0x299c27.superClass.call(this, a0_0x20e6c5);
  a0_0x299c27.prototype.easeAngleChanges = false;
  if (this.abilityType == a0_0x362cb0) {
    this.doesDrawEffectScale = this.drawEffectScale_Slow = true;
  }
}
window.AbilityObj = a0_0x299c27;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x299c27, a0_0x20e6c5);
var a0_0x2011f1 = a0_0x45677a;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x45677a.prototype.customDraw = function (_0x2b5ea6) {
  a0_0x4ef4f3.save();
  var _0x2f9286 = a0_0x4ef4f3.globalAlpha;
  a0_0x4ef4f3.rotate(this.angle);
  a0_0x4ef4f3.globalAlpha = _0x2f9286 * 0.05;
  a0_0x5c99c1(0, 0, this.rad, "#E4E7C8");
  a0_0x4ef4f3.globalAlpha = _0x2f9286 * 1;
  var _0x2612fc = "skins/land/elephant/" + this.speciesType;
  if (this.speciesType == 0) {
    _0x2612fc += "/" + this.speciesSubType;
  }
  var _0x4c886d = this.getSkinImageObj(_0x2612fc + "/ability_elephantTrunkSmack.png");
  if (_0x4c886d) {
    var _0x4cdcff = a0_0x870f2b((a0_0x4f736f - this.spawnTime) / 300, 0, 1);
    var _0x37f462 = -(-0.5 + _0x4cdcff) * a0_0x2b691e;
    var _0x3bef58 = this.rad * 0.6;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(_0x37f462);
    var _0x15e109 = 0;
    var _0xb3815c = this.rad;
    var _0x144ea6 = _0x3bef58 * 2 * 0.7;
    var _0x330429 = _0x3bef58 * 2;
    var _0xb03f72 = 0.75;
    var _0x33933d = 0.95;
    a0_0x4ef4f3.drawImage(_0x4c886d, _0x15e109 + _0x144ea6 * -_0xb03f72, _0xb3815c + _0x330429 * -_0x33933d, _0x144ea6, _0x330429);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
function a0_0x45677a() {
  a0_0x45677a.superClass.call(this);
}
window.AbilityObjElephant = a0_0x45677a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x45677a, a0_0x20e6c5, a0_0x2bf9f2);
var a0_0x2011f1 = a0_0x3ced2a;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x3ced2a.prototype.customDraw = function (_0x10e3d9) {
  var _0x514049 = a0_0x4ef4f3.globalAlpha;
  a0_0x4ef4f3.save();
  var _0x41f58c = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0xddf12f = 1.5;
  var _0xf69c87 = 1;
  var _0x529391 = _0xf69c87 * Math.sin(Math.PI * 2 / _0xddf12f * _0x41f58c);
  var _0x2ddd47 = a0_0x4ef4f3.globalAlpha;
  a0_0x4ef4f3.globalAlpha *= _0x529391 * 0.6;
  a0_0x4ef4f3.rotate(this.angle);
  a0_0x4ef4f3.globalAlpha = _0x514049 * 0.15;
  if (this.specType2 == 0 && this.aniSpecies) {
    a0_0x5c99c1(0, 0, this.rad, "#96661C");
  } else {
    a0_0x5c99c1(0, 0, this.rad, "#e0dfde");
  }
  a0_0x4ef4f3.restore();
  a0_0x4ef4f3.save();
  var _0x120148 = "skins/";
  if (this.animalType === 36) {
    _0x120148 += "arctic/bear/" + this.aniSpecies + "/slash.png";
  } else {
    _0x120148 += "land/bear/" + this.speciesType + "/" + this.speciesSubType + "/ability.png";
  }
  var _0x214c3f = this.getSkinImageObj(_0x120148);
  if (_0x214c3f) {
    var _0x3d0fd2 = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
    var _0xc6944c = a0_0x870f2b((a0_0x4f736f - this.spawnTime) / 300, 0, 1);
    var _0x3da937 = -(-0.5 + _0xc6944c) * a0_0x2b691e;
    var _0x142213 = this.angle;
    a0_0x4ef4f3.rotate(this.angle + _0x3da937 * (this.specType == 0 ? 1 : -1));
    var _0x56824 = -this.rad * 1;
    var _0x284c1d = 0;
    var _0x407455 = this.rad;
    var _0x4b66ed = _0x56824 * 2;
    var _0x124edb = _0x56824 * 2 * _0x3d0fd2;
    var _0x4a2eb5 = 0.5;
    var _0x2c4964 = 0.8;
    a0_0x4ef4f3.drawImage(_0x214c3f, _0x284c1d + _0x4b66ed * -_0x4a2eb5, _0x407455 + _0x124edb * -_0x2c4964 + _0x56824, _0x4b66ed, _0x124edb);
  }
  a0_0x4ef4f3.restore();
};
a0_0x3ced2a.prototype.getSkinImageObj = function (_0x5bb900) {
  var _0x154ab1 = this.mopeSeasonID;
  if (this.animalType === 36) {
    _0x154ab1 = this.speciesType === 201 ? 1 : this.mopeSeasonID;
  }
  return this.getSkinImageObjForSeason(_0x5bb900, _0x154ab1);
};
a0_0x3ced2a.prototype.readCustomData_onNewlyVisible = function (_0x5808c0) {
  a0_0x3ced2a.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x5808c0);
  this.aniSpecies = _0x5808c0.readUInt8();
};
function a0_0x3ced2a() {
  a0_0x3ced2a.superClass.call(this);
}
window.BearSlash = a0_0x3ced2a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3ced2a, a0_0x20e6c5, a0_0x18e3d8);
var a0_0x2011f1 = a0_0x45645e;
var a0_0x58d04c = a0_0x12658e;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x45645e.prototype.animalType = a0_0x4083f6;
a0_0x45645e.prototype.animalSpecies = 0;
a0_0x45645e.prototype.animalSubSpecies = 0;
a0_0x45645e.prototype.nickName = "";
a0_0x45645e.prototype.skinImgName = null;
a0_0x45645e.prototype.skinNotLoadedColor = "#75ce67";
a0_0x45645e.prototype.flag_fullAlpha = false;
a0_0x45645e.prototype.flag_lowWat = false;
a0_0x45645e.prototype.flag_tailBitten = false;
a0_0x45645e.prototype.flag_underWater = false;
a0_0x45645e.prototype.flag_eff_stunned = false;
a0_0x45645e.prototype.flag_eff_frozen = false;
a0_0x45645e.prototype.flag_eff_virusInfection = false;
a0_0x45645e.prototype.flag_usingAbility = false;
a0_0x45645e.prototype.flag_eff_invincible = false;
a0_0x45645e.prototype.flag_eff_healing = a0_0x45645e.prototype.flag_eff_poison = a0_0x45645e.prototype.flag_eff_bleeding = false;
a0_0x45645e.prototype.flag_eff_hot = false;
a0_0x45645e.prototype.flag_eff_aloeveraHealing = false;
a0_0x45645e.prototype.flag_iceSliding = false;
a0_0x45645e.prototype.underwaterA = 0;
4;
a0_0x45645e.prototype.nickNameA = 0;
a0_0x45645e.prototype.bleedingA = 0;
a0_0x45645e.prototype.stunA = 0;
a0_0x45645e.prototype.frozenEffA = a0_0x45645e.prototype.onFireEffA = a0_0x45645e.prototype.effA_healing = a0_0x45645e.prototype.effA_hot = 0;
a0_0x45645e.prototype.effA_aloeveraHealing = a0_0x45645e.prototype.effA_poison = a0_0x45645e.prototype.effA_bleeding = a0_0x45645e.prototype.effA_stunk = 0;
a0_0x45645e.prototype.effA_constricted = a0_0x45645e.prototype.effA_slimed = a0_0x45645e.prototype.effA_webStuck = 0;
a0_0x45645e.prototype.effA_speared = 0;
a0_0x45645e.prototype.effA_dirtStuck = 0;
a0_0x45645e.prototype.nameA = 0;
a0_0x45645e.prototype.loadedSkinImg = null;
a0_0x45645e.prototype.outlineW = null;
a0_0x45645e.prototype.teamID = 0;
a0_0x45645e.prototype.wins1v1 = 0;
a0_0x45645e.prototype.birdNoAnimationFlyWingAngle = -0.2;
a0_0x45645e.prototype.getNameSize = function () {
  return 10;
};
a0_0x45645e.prototype.setNick = function (_0x5bd0c5) {
  this.nickName = _0x5bd0c5;
  if (this.nickTXT == null) {
    this.nickTXT = new a0_0x3d10bd(this.getNameSize(), "white");
    this.nickTXT.strokeW = 1.5;
    this.nickTXT.multiLine = true;
    this.nickTXT.renderScale = 5;
    this.nickTXT.setText(this.nickName);
  } else {
    this.nickTXT.setFontSize(this.getNameSize());
    this.nickTXT.setText(this.nickName);
  }
};
a0_0x45645e.prototype.getOutlineColor = function () {
  var _0x5f88e = this.curBiome;
  if (this.id > 0) {
    var _0x1b00df = a0_0x3d5ac5[a0_0x1c918d];
    if (this.alwaysPlainOutline) {
      return a0_0x41030c;
    }
    var _0x4a6503 = a0_0xe92752 != a0_0x16237b || _0x1b00df && _0x1b00df.teamID != this.teamID && this.teamID != 0;
    if (_0x4a6503) {
      if (this.isEdibleOutlined()) {
        return a0_0x237aea;
      }
      if (a0_0x5101af[this.animalType - 1] > 0 && this.id != a0_0x1c918d) {
        return a0_0x75ca18;
      }
    }
    if (this.flag_inWater) {
      _0x5f88e = a0_0x2f0085;
    }
    if (a0_0xab4233 != null && this.id == a0_0xab4233.id && !a0_0x1528ea) {
      return "cyan";
    }
  }
  return a0_0x28d4ea(_0x5f88e);
};
a0_0x45645e.prototype.drawEyeAtPos = function (_0x525959, _0x450b26) {
  var _0x3dea24 = 4.5;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(_0x525959, _0x450b26, _0x3dea24, 0, Math.PI * 2);
  a0_0x4ef4f3.fillStyle = "black";
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.fillStyle = "white";
  var _0x353fb1 = _0x525959 - 2;
  var _0x5a4df4 = _0x450b26 - 1;
  a0_0x4ef4f3.arc(_0x353fb1, _0x5a4df4, _0x3dea24 * 0.22, 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
};
a0_0x45645e.prototype.animalInfo = function () {
  var _0x336e8f = {};
  switch (this.animalType) {
    case a0_0x101193:
      _0x336e8f.aniName = "Snail";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "You're a super slow snail!";
      _0x336e8f.aniCol = "#fcc02b";
      _0x336e8f.skinName = "snail";
      break;
    case a0_0x4083f6:
      _0x336e8f.aniName = "Mouse";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "You're a tiny mouse, eat food to grow!";
      _0x336e8f.aniCol = "#9BA9B9";
      _0x336e8f.skinName = "mouse";
      break;
    case a0_0x151054:
      _0x336e8f.aniName = "Rabbit";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to RABBIT! \nPress W to burrow a hole to hide in!";
      _0x336e8f.aniCol = "#AA937E";
      _0x336e8f.skinName = "rabbit";
      break;
    case a0_0x3d5a13:
      _0x336e8f.aniName = "Pig";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to PIG!\n Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      _0x336e8f.aniCol = "#DD6BD4";
      _0x336e8f.skinName = "pig";
      break;
    case a0_0x2d73e5:
      _0x336e8f.aniName = "Fox";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to FOX! ,\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
      _0x336e8f.aniCol = "#FF9D43";
      _0x336e8f.skinName = "fox";
      break;
    case a0_0x31131a:
      _0x336e8f.aniName = "Deer";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to DEER! \nPress W to dig up food! \nDig in mud for better food!\n Hint:Check water areas for new food sources!";
      _0x336e8f.aniCol = "#C4773E";
      _0x336e8f.skinName = "deer";
      break;
    case a0_0x2347de:
      _0x336e8f.aniName = "Mole";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to MOLE!\n Hold W to dig underground!\nGo under anything, do surprise attacks!";
      _0x336e8f.aniCol = "#4C4A45";
      _0x336e8f.skinName = "mole";
      break;
    case a0_0x4f39e9:
      _0x336e8f.aniName = "Zebra";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to ZEBRA! \nPress W to kick side ways!";
      _0x336e8f.aniCol = "#FFFFFF";
      _0x336e8f.skinName = "zebra";
      break;
    case a0_0x1a694e:
      _0x336e8f.aniName = "Lion";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to LION!\n Press W to release a mighty ROAR (Rawr!)!";
      _0x336e8f.aniCol = "#f8c923";
      _0x336e8f.skinName = "lion";
      break;
    case a0_0x5a613b:
      _0x336e8f.aniName = "Bear";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to BEAR!\n Bears climb through green hills! (Press W to use your claw!)";
      _0x336e8f.aniCol = "#99591C";
      _0x336e8f.skinName = "bear";
      break;
    case a0_0x20917b:
      _0x336e8f.aniName = "Croc";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to CROCODILE!\n Press W to bite and drag around animals! \n+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!";
      _0x336e8f.aniCol = "#30F51C";
      _0x336e8f.skinName = "croc";
      break;
    case a0_0x93d1ea:
      _0x336e8f.aniName = "Hippo";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to HIPPO!\nHippos are great swimmers, dominate the Lakes/Oceans/Mud!";
      _0x336e8f.aniCol = "#945A99";
      _0x336e8f.skinName = "hippo";
      break;
    case a0_0x32eb58:
      _0x336e8f.aniName = "Rhino";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to RHINO!\n Press W to CHARGE with your mighty horn!";
      _0x336e8f.aniCol = "#94a3a9";
      _0x336e8f.skinName = "rhino";
      break;
    case a0_0x722c30:
      _0x336e8f.aniName = "Shrimp";
      _0x336e8f.aniDesc = "";
      _0x336e8f.aniCol = "#f88e37";
      _0x336e8f.skinName = "shrimp";
      _0x336e8f.upgradeText = "You're a tiny shrimp, eat food to grow bigger!";
      break;
    case a0_0x5e41c4:
      _0x336e8f.aniName = "Trout";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to TROUT!\nHint: Hold Left-click to RUN! (Uses extra water)";
      _0x336e8f.aniCol = "#ac8686";
      _0x336e8f.skinName = "trout";
      break;
    case a0_0xce170f:
      _0x336e8f.aniName = "Crab";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to CRAB!\n Crabs can survive on dry land!\n (On land, Press W to go into your shell!)";
      _0x336e8f.aniCol = "#bf2408";
      _0x336e8f.skinName = "crab";
      break;
    case a0_0x464b86:
      _0x336e8f.aniName = "Squid";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to SQUID!\n Squids can use INK when injured (press W!) \n+ you can hide in plankton bushes!";
      _0x336e8f.aniCol = "#40dda4";
      _0x336e8f.skinName = "squid";
      break;
    case a0_0x30aa6a:
      _0x336e8f.aniName = "Shark";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to SHARK!\n A vicious predator of the oceans!";
      _0x336e8f.aniCol = "#999fc6";
      _0x336e8f.skinName = "shark";
      break;
    case a0_0x1f8603:
      _0x336e8f.aniName = "Sea-horse";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to SEA HORSE!\n An agile hunter!";
      _0x336e8f.aniCol = "#73BE2F";
      _0x336e8f.skinName = "seahorse";
      break;
    case a0_0x574c01:
      _0x336e8f.aniName = "Jellyfish";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to JELLYFISH!\n A slowly-turning animal that can grow quite large!";
      _0x336e8f.aniCol = "#FDB9BA";
      _0x336e8f.skinName = "jellyfish";
      break;
    case a0_0x58bf2a:
      _0x336e8f.aniName = "Turtle";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to TURTLE!\n Lives well on land & water! (On land, Press W to go into your shell!)";
      _0x336e8f.aniCol = "#502E1A";
      _0x336e8f.skinName = "turtle";
      break;
    case a0_0x56d530:
      _0x336e8f.aniName = "Stingray";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to STINGRAY!\n Use electic shock (Release W key!) to shock animals! \n(Takes time to recharge)";
      _0x336e8f.aniCol = "#164336";
      _0x336e8f.skinName = "stingray";
      break;
    case a0_0x4e6cde:
      _0x336e8f.aniName = "The Kraken";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to THE KRAKEN!\n Terrorize the oceans, and be feared by all!\n (Release W to use whirlpool ability!)";
      _0x336e8f.aniCol = "#64a034";
      _0x336e8f.skinName = "kraken";
      break;
    case a0_0x265cfd:
      _0x336e8f.aniName = "Pufferfish";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to PUFFERFISH!\n (Hold W to inflate- become spiky, and dangerous to touch!)";
      _0x336e8f.aniCol = "#6C5C2C";
      _0x336e8f.skinName = "pufferfish";
      break;
    case a0_0x434da0:
      _0x336e8f.aniName = "Killer Whale";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Killer Whale! \nWhales blow out water when diving! (And sometimes other loot!)";
      _0x336e8f.aniCol = "#141414";
      _0x336e8f.skinName = "killerwhale";
      break;
    case a0_0x9f5ea7:
      _0x336e8f.aniName = "Swordfish";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n (Press W to rush with your sharp nose!)";
      _0x336e8f.aniCol = "#689CD7";
      _0x336e8f.skinName = "swordfish";
      break;
    case a0_0x18ddf3:
      _0x336e8f.aniName = "Gorilla";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Gorillas are very fast on hills/trees!\n Press W to throw bananas! (from trees)";
      _0x336e8f.aniCol = "#323232";
      _0x336e8f.skinName = "gorilla";
      break;
    case a0_0x2aaf90:
      _0x336e8f.aniName = "Octopus";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Octopus!\nHold W to use your 'Disguise' ability!\n(Hint: wait for prey to bite you- they get stunned!)";
      _0x336e8f.aniCol = "#ff8340";
      _0x336e8f.skinName = "octopus";
      break;
    case a0_0x256160:
      _0x336e8f.aniName = "Dragon";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n (You're amazing!) \nFly over everything, Hold W to shoot fire!";
      _0x336e8f.aniCol = "#22FF8A";
      _0x336e8f.skinName = "dragon";
      break;
    case a0_0x257f12:
      _0x336e8f.aniName = "Black Dragon";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!";
      _0x336e8f.aniCol = "black";
      _0x336e8f.skinName = "blackdragon";
      break;
    case a0_0x252dcd:
      _0x336e8f.aniName = "Giant Spider";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Place web around the game to catch prey!";
      _0x336e8f.aniCol = "black";
      _0x336e8f.skinName = "giantSpider";
      break;
    case a0_0x1bc37e:
      _0x336e8f.aniName = "Cobra";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Hold W to Spit venom, and poison animals with your bite!";
      _0x336e8f.aniCol = "black";
      _0x336e8f.skinName = "cobra";
      break;
    case a0_0xbfada:
      _0x336e8f.aniName = "Boa Constrictor";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Coil and suffocate other animals!";
      _0x336e8f.aniCol = "black";
      _0x336e8f.skinName = "boaConstrictor";
      break;
    case a0_0xbf4f2c:
      _0x336e8f.aniName = "T-REX";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + " The Dinosaur!\n This ancient dinosaur has powerful jaws that can drag prey around!!";
      _0x336e8f.aniCol = "#862A2A";
      _0x336e8f.skinName = "trex";
      break;
    case a0_0x2adefe:
      _0x336e8f.aniName = "Giraffe";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Giraffe!\nGiraffe have huge legs and stomp anyone in their way!";
      _0x336e8f.aniCol = "#E9BD23";
      _0x336e8f.skinName = "giraffe";
      break;
    case a0_0x52cd8c:
      _0x336e8f.aniName = "Eagle";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Eagle!\nEagles can fly up other animals in the air! !\n";
      _0x336e8f.aniCol = "#5b400d";
      _0x336e8f.skinName = "eagle";
      break;
    case a0_0x1a160c:
      _0x336e8f.aniName = "Arctic Fox";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
      _0x336e8f.aniCol = "#CFCFCF";
      _0x336e8f.skinName = "arctic/arcticfox";
      break;
    case a0_0x1218ca:
      _0x336e8f.aniName = "Arctic Hare";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n \nPress W to burrow a hole to hide in!";
      _0x336e8f.aniCol = "#D5D5D5";
      _0x336e8f.skinName = "arctic/arctichare";
      break;
    case a0_0x38090e:
      _0x336e8f.aniName = "The Yeti!";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n So it really exists... \n Hold W to turn into snow, release W to freeeeeze!";
      _0x336e8f.aniCol = "#839eb5";
      _0x336e8f.skinName = "arctic/yeti";
      break;
    case a0_0x31fe5e:
      _0x336e8f.aniName = "Chipmunk";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "";
      _0x336e8f.aniCol = "#A77C30";
      _0x336e8f.skinName = "arctic/chipmunk";
      break;
    case a0_0x1f838c:
      _0x336e8f.aniName = "Muskox";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Press W to charge with your horns! \nPlus move decently on ice!";
      _0x336e8f.aniCol = "#231f18";
      _0x336e8f.skinName = "arctic/muskox";
      break;
    case a0_0x254dfc:
      _0x336e8f.aniName = "Penguin";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Left-click to run!\n (HOLD W to slide FAST on ice)!";
      _0x336e8f.aniCol = "#FFFFFF";
      _0x336e8f.skinName = "arctic/penguin";
      break;
    case a0_0x162473:
      _0x336e8f.aniName = "Polar Bear";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Polar bears can climb hills! \n+ They're amazing swimmers!";
      _0x336e8f.aniCol = "#e4e4e4";
      _0x336e8f.skinName = "arctic/bear/bear";
      break;
    case a0_0x34beb5:
      _0x336e8f.aniName = "Seal";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Seals can slide on ice (Hold W) + can climb hills (rocks too!)";
      _0x336e8f.aniCol = "#cfcfcf";
      _0x336e8f.skinName = "arctic/seal";
      break;
    case a0_0x1b4543:
      _0x336e8f.aniName = "Snow leopard";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Press W to get a speed boost! (Every 8 seconds)!";
      _0x336e8f.aniCol = "#cfcfcf";
      _0x336e8f.skinName = "arctic/snowleopard";
      break;
    case a0_0x6e4e18:
      _0x336e8f.aniName = "Walrus";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n You can slide on ice (Hold W) + can climb hills (rocks too!)";
      _0x336e8f.aniCol = "#633838";
      _0x336e8f.skinName = "arctic/walrus";
      break;
    case a0_0x563df4:
      _0x336e8f.aniName = "Reindeer";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Press W to dig up food! \n Your sharp hooves let you turn very well on ice!";
      _0x336e8f.aniCol = "#a68976";
      _0x336e8f.skinName = "arctic/reindeer";
      break;
    case a0_0x3bbebf:
      _0x336e8f.aniName = "Wolf";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Wolf paws turn very well on ice!\n Press W to howl!";
      _0x336e8f.aniCol = "#6B6B6B";
      _0x336e8f.skinName = "arctic/wolf";
      break;
    case a0_0x40cc4c:
      _0x336e8f.aniName = "Wolverine";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Press W to Let out a Powerful GROWL! (Knocks back prey!)";
      _0x336e8f.aniCol = "#843A0F";
      _0x336e8f.skinName = "arctic/wolverine";
      break;
    case a0_0x2a957c:
      _0x336e8f.aniName = "Mammoth";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Press W to roll snowballs with your trunk!\n The bigger the snowball gets, the longer the freeze!";
      _0x336e8f.aniCol = "#9d4717";
      _0x336e8f.skinName = "arctic/mammoth";
      break;
    case a0_0x41fd5c:
      _0x336e8f.aniName = "Donkey";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Press W to Kick any animal behind you";
      _0x336e8f.aniCol = "#8c7c64";
      _0x336e8f.skinName = "donkey";
      break;
    case a0_0x5510d8:
      _0x336e8f.aniName = "Sabertooth Tiger";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Sabertooth Tiger!\nSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!";
      _0x336e8f.aniCol = "#945A99";
      _0x336e8f.skinName = "sabertoothtiger";
      break;
    case a0_0x4efb3c:
      _0x336e8f.aniName = "Elephant";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to " + _0x336e8f.aniName + "!\n Use your long trunk to attack and eat food!";
      _0x336e8f.aniCol = "#945A99";
      _0x336e8f.skinName = "elephant";
      break;
    case a0_0x1132a8:
      _0x336e8f.aniName = "Blue Whale";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Blue Whale!\n Smash with your powerful tail!";
      _0x336e8f.aniCol = "#945A99";
      _0x336e8f.skinName = "bluewhale";
      break;
    case a0_0x313367:
      _0x336e8f.aniName = "Hedgehog";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Hedgehog!\n (Hold W to become spiky, and dangerous to touch!)";
      _0x336e8f.aniCol = "#5b400d";
      _0x336e8f.skinName = "hedgehog";
      break;
    case a0_0x5f3a6f:
      _0x336e8f.aniName = "King Crab";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to a KING CRAB!";
      _0x336e8f.aniCol = "#971f0e";
      _0x336e8f.skinName = "kingcrab";
      break;
    case a0_0x1d5499:
      _0x336e8f.aniName = "Lemming";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "";
      _0x336e8f.aniCol = "#A77C30";
      _0x336e8f.skinName = "arctic/lemming";
      break;
    case a0_0x3b5f85:
      _0x336e8f.aniName = "Frog";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Frog!!";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "frog/frog";
      break;
    case a0_0x33fa19:
      _0x336e8f.aniName = "Ostrich";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Ostrich! Lay eggs to hatch babies! \nCommand babies by placing your crosshair (right-click/W)-\n They can attack prey!";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "ostrich/ostrich";
      break;
    case a0_0x4e94e8:
      _0x336e8f.aniName = "Pelican";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Pelican! \nPick up water (and prey!) in your mouth,\nfly, and drop water on prey! (press W again)";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "pelican/pelican";
      break;
    case a0_0x1c0686:
      _0x336e8f.aniName = "Falcon";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Falcon! \nFly, and do a powerful dive attack! Aim it well.";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "falcon/falcon";
      break;
    case a0_0xdf5a75:
      _0x336e8f.aniName = "Snowy Owl";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Snowy Owl!\n Aim the crosshair, \n right click/W when it's on top of prey, to attack!";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "snowyowl/snowyowl";
      break;
    case a0_0x4cfb89:
      _0x336e8f.aniName = "Baby Ostrich";
      _0x336e8f.aniDesc = "";
      _0x336e8f.upgradeText = "UPGRADED to Baby Ostrich!!";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "ostrich/ostrich-baby";
      break;
    case a0_0x472c8a:
      _0x336e8f.aniName = "Phoenix";
      _0x336e8f.upgradeText = "UPGRADED to Phoenix!\nCreate powerful fire tornados to burn your enemies alive!";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "phoenix/phoenix";
      break;
    case a0_0x30bc31:
      _0x336e8f.aniName = "Sea Monster";
      _0x336e8f.upgradeText = "UPGRADED to Sea Monster!";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "seamonster";
      break;
    case a0_0x1b4846:
      _0x336e8f.aniName = "Land Monster";
      _0x336e8f.upgradeText = "UPGRADED to Land Monster!";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "landmonster";
      break;
    case a0_0x415f2f:
      _0x336e8f.aniName = "Ice Monster";
      _0x336e8f.upgradeText = "UPGRADED to Ice Monster!";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "icemonster";
      break;
    case a0_0x15fd74:
      _0x336e8f.aniName = "Dino Monster";
      _0x336e8f.upgradeText = "UPGRADED to Dino Monster!";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "dinomonster";
      break;
    case a0_0xc48b6:
      _0x336e8f.aniName = "Pigeon";
      _0x336e8f.upgradeText = "UPGRADED to Pigeon!\nHold right click (or W) to fly!\n";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "pigeon/pigeon";
      break;
    case a0_0x22e8ad:
      _0x336e8f.aniName = "Toucan";
      _0x336e8f.upgradeText = "UPGRADED to Toucan!\nHold right click (or W) to fly!(HINT: Start flying from a fruit tree or bush to throw fruit upon landing!)";
      _0x336e8f.aniCol = "#FF9000";
      _0x336e8f.skinName = "toucan/toucan";
      break;
    default:
      _0x336e8f.aniName = "(Animal)";
      _0x336e8f.aniDesc = "";
      _0x336e8f.aniCol = "#000000";
      _0x336e8f.upgradeText = "UPGRADED!";
  }
  return _0x336e8f;
};
a0_0x45645e.prototype.loadAnimalSkinImg = function () {
  var _0x57b27 = this.getSkinName();
  this.loadedSkinImg = null;
  if (_0x57b27 && !a0_0x36dadf) {
    this.loadedSkinImg = this.getSkinImageObj("skins/" + _0x57b27 + ".png");
  }
};
a0_0x45645e.prototype.loadAnimalSkinImgAsync = async function () {
  var _0x2f9c9c = this.getSkinName();
  this.loadedSkinImg = await this.getSkinImageObjAsync("skins/" + _0x2f9c9c + ".png");
};
a0_0x45645e.prototype.getIdealOpacity = function () {
  if (this.flag_usingDiveAbility || this.flag_usingAbility && (this.animalType == a0_0x2347de || this.animalType == a0_0x2aaf90 || this.animalType == a0_0x38090e)) {
    return 0;
  } else {
    return 1;
  }
};
a0_0x45645e.prototype.isAnimalInside1v1Arena = function () {
  if (a0_0x3dd5fb != null && a0_0x1528ea) {
    if (a0_0x3dd5fb.p1ID == this.id || a0_0x3dd5fb.p2ID == this.id) {
      return true;
    }
  } else if (a0_0x297fa0[this.id] || a0_0x297fa0[a0_0x1c918d] && a0_0x1c918d == this.id) {
    return true;
  }
  return false;
};
a0_0x45645e.prototype.setStealth = function () {
  if (this.isAnimalInside1v1Arena() || this.flag_isInArena) {
    this.idealOp = 0.6;
  } else if (this.flag_stealth || this.flag_inHidingHole) {
    this.idealOp = 0.2;
  }
};
a0_0x45645e.prototype.setOpacityForFlyingAnimals = function (_0x53845e) {
  if (this.gabbedByAniID == this.id || this.grabbedAniID == this.id) {
    return;
  }
  if (this.id != a0_0x1c918d) {
    this.idealOp = 0.6;
  }
};
a0_0x45645e.prototype.getImageDataKey = function () {
  return this.animalType + "__" + this.animalSpecies + "__" + this.animalSubSpecies + "__" + this.animalPremiumSkin + "__" + this.mopeSeasonID + "__" + this.skinThemeID;
};
const a0_0x27d3d9 = {};
const a0_0x51c00b = "cached_animal_image_data_keys";
const a0_0x1f18d4 = () => {
  if (a0_0x185235) {
    const _0xe6ff3e = localStorage.getItem(a0_0x51c00b);
    console.error("KEYS:", _0xe6ff3e);
    if (_0xe6ff3e) {
      JSON.parse(_0xe6ff3e).forEach(_0x384f2b => {
        a0_0x27d3d9[_0x384f2b] = localStorage.getItem(_0x384f2b);
      });
    }
  }
};
a0_0x45645e.prototype.getUpgradeImagePath = function () {
  let _0x5b0f1e = this.animalInfo().skinName;
  let _0x2ba95e = "";
  if (!_0x5b0f1e || _0x5b0f1e.toLowerCase().includes("scorpion") || this.animalSpecies == 200) {
    _0x2ba95e = this.getSkinImagePath("skins/" + this.getSkinName()) + ".png";
  } else {
    _0x2ba95e = this.getSkinImagePath("skins/" + _0x5b0f1e + ".png");
  }
  return _0x2ba95e;
};
a0_0x45645e.prototype.getImageData = async function () {
  const _0x2676e3 = this.getImageDataKey();
  if (_0x2676e3 in a0_0x27d3d9) {
    return a0_0x27d3d9[_0x2676e3];
  }
  this.flag_fullAlpha = true;
  this.buttonScaleF = 1;
  this.imgSizeF = 1;
  var _0x29d668 = this.animalInfo();
  var _0x1980fa = _0x29d668.aniCol;
  this.skinImgName = _0x29d668.skinName;
  this.skinNotLoadedColor = _0x1980fa;
  await this.loadAnimalSkinImgAsync();
  this.draw();
  return new Promise(async (_0x1cd926, _0x122019) => {
    const _0x177da0 = document.createElement("canvas");
    const _0x5b53c8 = 140;
    const _0x4cc705 = 110;
    _0x177da0.width = _0x5b53c8;
    _0x177da0.height = _0x5b53c8;
    const _0x41c3ab = window.ctx;
    window.ctx = _0x177da0.getContext("2d");
    this.w = _0x4cc705;
    this.h = _0x4cc705;
    this.rad = _0x4cc705 / 2;
    this.skinRad = _0x4cc705 / 2;
    this.idealOp = 1;
    this.underwaterA = 0;
    window.ctx.translate(_0x5b53c8 / 2, _0x5b53c8 / 2);
    window.ctx.globalAlpha = 1;
    this.draw();
    const _0x52e4be = _0x177da0.toDataURL();
    window.ctx = _0x41c3ab;
    a0_0x27d3d9[_0x2676e3] = _0x52e4be;
    if (a0_0x185235) {
      try {
        localStorage.setItem(a0_0x51c00b, JSON.stringify(Object.keys(a0_0x27d3d9)));
        localStorage.setItem(_0x2676e3``, _0x52e4be);
      } catch (_0x2a7524) {}
    }
    return _0x1cd926(_0x52e4be);
  });
};
a0_0x45645e.prototype.idealOp = 1;
a0_0x45645e.prototype.customDraw = function (_0x212c8b) {
  this.preLoad();
  var _0x3760fd = this.animalInfo();
  var _0x1fddc8 = _0x3760fd.aniCol;
  this.skinImgName = _0x3760fd.skinName;
  this.skinNotLoadedColor = _0x1fddc8;
  switch (this.animalType) {
    case a0_0x265cfd:
    case a0_0x1f838c:
    case a0_0x9f5ea7:
    case a0_0x58bf2a:
    case a0_0x20917b:
      tailLen = this.rad * 0.16;
      break;
  }
  this.loadAnimalSkinImg();
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(this.angle);
  var _0x5c6dd4 = 0;
  var _0x17e920 = (a0_0x4f736f - this.spawnTime) / 1000;
  if (this.flag_eff_wobbling) {
    var _0x3b2ec0 = a0_0xe2d896(_0x17e920, 1.25, 0.1, 2);
    this.rad += _0x3b2ec0;
  }
  this.idealOp = this.getIdealOpacity();
  this.setStealth();
  if (this.flag_flying) {
    this.setOpacityForFlyingAnimals();
  }
  if (this.flag_fullAlpha) {
    a0_0x4ef4f3.globalAlpha = 1;
  } else {
    this.underwaterA += (this.idealOp - this.underwaterA) * 0.1;
    a0_0x4ef4f3.globalAlpha *= this.underwaterA;
  }
  if (this.flag_eff_invincible) {
    var _0x338140 = 1;
    var _0xef99c0 = 0.3;
    var _0x561863 = 1;
    var _0x319682 = (_0x561863 - _0xef99c0) * 0.5;
    a0_0x4ef4f3.globalAlpha *= _0xef99c0 + _0x319682 + _0x319682 * Math.sin(Math.PI * 2 / _0x338140 * ((a0_0x4f736f - this.spawnTime) / 1000));
  }
  this.outlineW = 2 + _0x5c6dd4;
  if (!this.dead && !this.flag_underWater && (this.animalType != a0_0x2347de || !this.flag_usingAbility)) {
    if (!this.flag_underWater) {
      var _0x8e72e5 = this.getOutlineColor();
      if (this.killerId == 0 && (!this.flag_flying || this.id != a0_0x1c918d) && (a0_0x1d703e != a0_0x30b084 || _0x8e72e5 == a0_0x237aea || _0x8e72e5 == a0_0x75ca18)) {
        if (this.teamID > 0 && a0_0x4ff181 != null && a0_0xe92752 == a0_0x16237b) {
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.globalAlpha = this.isAnimalInside1v1Arena() ? 0.3 : this.idealOp;
          a0_0x5c99c1(0, 0, this.rad + 2, a0_0x4ff181.getTeamColor(this.teamID));
          a0_0x4ef4f3.restore();
        }
        this.drawAnimalUnderSkinCircle(_0x8e72e5);
      } else {
        this.outlineW = 0;
      }
    }
  }
  this.drawUnderEffects();
  if (this.canDrawAnimalSkin()) {
    this.drawAnimalSkin(_0x8e72e5);
  }
  this.drawUnderWater();
  if (this.animalPremiumSkin != 0 && !this.flag_eff_shivering) {
    this.sparkleAnim();
  }
  a0_0x4ef4f3.restore();
  this.drawTopEffects();
  this.drawLowWaterDrop();
  if (!this.flag_isInArena) {
    if (this.id == a0_0x1c918d && this.flag_viewing1v1Invite) {} else if (!this.flag_usingDiveAbility) {
      this.drawNickName(a0_0x4be2c8 == null ? this.idealOp : 0.2);
    }
  }
  this.drawZombieEffect();
};
a0_0x45645e.prototype.canDrawAnimalSkin = function () {
  return true;
};
a0_0x45645e.prototype.drawZombieEffect = function () {
  if (this.effecT_isZombie) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 0.6;
    a0_0x5c99c1(0, 0, this.skinRad, "#B6CF40");
    a0_0x4ef4f3.restore();
  }
};
a0_0x45645e.prototype.drawLowWaterDrop = function () {
  if (this.flag_lowWat) {
    var _0x4de6d1 = 1.2;
    var _0x437b08 = 0.2;
    var _0x19a0d9 = 0.8;
    var _0x164009 = (_0x19a0d9 - _0x437b08) * 0.5;
    var _0x35807c = _0x437b08 + _0x164009 + _0x164009 * Math.sin(Math.PI * 2 / _0x4de6d1 * (a0_0x4f736f / 1000));
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = _0x35807c;
    if (this.animalType == a0_0x257f12 || this.animalType == a0_0x472c8a || this.animalType == a0_0x1b4846 || this.animalType == a0_0x22e8ad && this.animalSpecies == 4) {
      a0_0x4ef4f3.fillStyle = a0_0x5479b9;
    } else if (this.animalType == a0_0x30bc31) {
      a0_0x4ef4f3.fillStyle = a0_0x4a1deb;
    } else if (this.animalType == a0_0x47c97f) {
      a0_0x4ef4f3.fillStyle = a0_0x197b31;
    } else {
      a0_0x4ef4f3.fillStyle = a0_0x21597b;
    }
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, this.rad + 5, 5, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.restore();
  }
};
a0_0x45645e.prototype.sparkleInterval = 5;
a0_0x45645e.prototype.sparklDuration = 3;
a0_0x45645e.prototype.sparkleNext = 0;
a0_0x45645e.prototype.sparkleAniT = 0;
a0_0x45645e.prototype.setSparkleInterval = function (_0x4f63eb, _0x2f7824) {
  this.sparkleInterval = _0x4f63eb;
  this.sparklDuration = _0x2f7824;
  this.setSparkleXY();
};
a0_0x45645e.prototype.seSparkle = function () {
  this.sparkleAniT = +new Date() + this.sparklDuration * 1000;
  this.sparkleNext = this.sparkleAniT + this.sparkleInterval * 1000;
  this.setSparkleXY();
};
a0_0x45645e.prototype.isMouseHovering = false;
a0_0x45645e.prototype.sparkleAnim = function () {
  if (this.animalPremiumSkin && (a0_0x4f736f - this.spawnTime) / 1000 > 5) {
    if (this.id > 0 || this.id == 0 && this.isMouseHovering) {
      if (+new Date() > this.sparkleNext) {
        this.seSparkle();
        this.setSparkleXY();
      }
    }
    if (this.sparkleAniT > +new Date()) {
      this.showSparkling();
    }
  }
};
a0_0x45645e.prototype.sparkleAng = 0;
a0_0x45645e.prototype.sparkleX = 0;
a0_0x45645e.prototype.sparkleY = 0;
a0_0x45645e.prototype.setSparkleXY = function () {
  var _0x31be01 = this.rad / 2;
  var _0x21d119 = _0x31be01 * 0.3;
  var _0x4153fd = _0x31be01;
  var _0x40a881 = a0_0x1da5bb(_0x21d119, _0x4153fd);
  var _0x3d8e51 = a0_0x1da5bb(_0x21d119, _0x4153fd);
  _0x40a881 *= Math.random() * 10 > 5 ? -1 : 1;
  _0x3d8e51 *= Math.random() * 10 > 5 ? -1 : 1;
  this.sparkleX = _0x40a881;
  this.sparkleY = _0x3d8e51;
};
a0_0x45645e.prototype.showSparkling = function () {
  var _0x1da1ff = 5;
  a0_0x4ef4f3.save();
  var _0x29080f = 1.5;
  var _0x7fe1bb = 0.3;
  var _0x274c6f = 1;
  var _0x1e7791 = (_0x274c6f - _0x7fe1bb) * 0.5;
  a0_0x4ef4f3.globalAlpha *= _0x7fe1bb + _0x1e7791 + _0x1e7791 * Math.sin(Math.PI * 2 / _0x29080f * ((a0_0x4f736f - this.spawnTime) / 1000));
  this.sparkleAng += 0.5;
  var _0x39d185 = 1;
  var _0x23f598 = 0;
  a0_0x4ef4f3.fillStyle = "#faffb6";
  for (i = 0; i < 3; i++) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.translate(this.sparkleX, this.sparkleY);
    a0_0x4ef4f3.rotate(a0_0x844a6b(this.sparkleAng));
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(a0_0x844a6b(_0x23f598));
    a0_0x4ef4f3.scale(_0x39d185 * 0.5, _0x1da1ff);
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, _0x39d185, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.restore();
    _0x23f598 += 60;
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(this.sparkleX, this.sparkleY, _0x39d185, 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.restore();
};
a0_0x45645e.prototype.shakeOffsetX = 0;
a0_0x45645e.prototype.shakeOffsetY = 0;
a0_0x45645e.prototype.drawAnimalSkin = function (_0x1deb5a) {
  a0_0x4ef4f3.save();
  if (this.flag_eff_shivering) {
    var _0x34263b = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x327ebb = 0.1;
    var _0x518c33 = this.rad * this.shiverF;
    this.shakeOffsetX = _0x518c33 * Math.sin(Math.PI * 2 / _0x327ebb * _0x34263b);
    var _0x327ebb = 0.05;
    var _0x518c33 = this.rad * this.shiverF;
    this.shakeOffsetY = _0x518c33 * Math.sin(Math.PI * 2 / _0x327ebb * _0x34263b);
    a0_0x4ef4f3.translate(-this.shakeOffsetX, -this.shakeOffsetY);
  }
  this.drawPropsUnderSkin();
  this.beforeDrawAnimalSkin();
  if (this.id > 0) {
    this.drawUnderSkinTail(_0x1deb5a);
  }
  this.drawUnderSkinImgOutline();
  this.drawUnderSkinImg();
  this.drawSkinImg();
  this.drawOnTopOfSkinImg();
  this.drawPropsTopOfSkin();
  this.drawStatueEffect();
  a0_0x4ef4f3.restore();
};
a0_0x45645e.prototype.drawStatueEffect = function () {
  if (this.flag_eff_statue) {
    var _0x9daaf4 = null;
    switch (this.eff_statueType) {
      case 1:
        _0x9daaf4 = "snowball";
        break;
      case 2:
        _0x9daaf4 = "goldball";
        break;
    }
    if (_0x9daaf4) {
      var _0x3acf55 = this.getSkinImageObj("img/" + _0x9daaf4 + ".png");
      if (_0x3acf55) {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.globalAlpha = a0_0x1c918d == this.id ? 0.7 : 1;
        var _0x5d6be3 = this.rad * 1.2;
        a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
        a0_0x4ef4f3.drawImage(_0x3acf55, -_0x5d6be3, -_0x5d6be3, _0x5d6be3 * 2, _0x5d6be3 * 2);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
a0_0x45645e.prototype.drawElectroStunEffect = function () {
  if (this.flag_eff_electroStun === true) {
    var _0x29f7e9 = Math.trunc(a0_0x4f736f / 250) % 4;
    let _0x48a109 = "skins/land/birdmonster/0/stun/" + _0x29f7e9 + ".png";
    var _0x4646cc = this.getSkinImageObj(_0x48a109);
    if (_0x4646cc) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 1;
      var _0x488cc7 = this.rad * 1.2;
      a0_0x4ef4f3.rotate(this.angle);
      a0_0x4ef4f3.drawImage(_0x4646cc, -_0x488cc7, -_0x488cc7, _0x488cc7 * 2, _0x488cc7 * 2);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x45645e.prototype.propsEnabled = false;
a0_0x45645e.prototype.drawPropsUnderSkin = function (_0x3b7867) {
  if (this.propsEnabled) {
    if (this.animalType == a0_0x4083f6) {}
  }
};
a0_0x45645e.prototype.drawPropsTopOfSkin = function (_0x48f974) {
  if (this.propsEnabled) {
    if (this.animalType == a0_0x4083f6) {
      this.drawProp("scarfs", 1);
      this.drawProp("glasses", 0);
      this.drawProp("hats", 1);
    }
  }
};
a0_0x45645e.prototype.drawProp = function (_0x569e5e, _0x1a1038) {
  var _0x53448f = this.skinScale;
  var _0x1412b0 = this.skinRad + 0.9;
  var _0x3d931a = this.getSkinImageObj("props/" + this.animalType + "/" + _0x569e5e + "/" + _0x1a1038 + ".png");
  if (_0x3d931a) {
    a0_0x4ef4f3.drawImage(_0x3d931a, -_0x1412b0 * _0x53448f, -_0x1412b0 * _0x53448f, _0x1412b0 * 2 * _0x53448f, _0x1412b0 * 2 * _0x53448f);
  }
};
a0_0x45645e.prototype.beforeDrawAnimalSkin = function (_0x4e6faf) {};
a0_0x45645e.prototype.drawUnderSkinTail = function (_0x334932) {
  if (this.killerId > 0 || this.flag_underWater) {
    return;
  }
  if (this.animalType != a0_0x151054 && this.animalType != a0_0x4083f6 && this.animalType != a0_0xce170f) {
    var _0x2f55ee = this.animalInfo();
    var _0x265c64 = _0x2f55ee.aniCol;
    var _0x43d18f = this.rad * 0.1;
    var _0x5535ab = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x3b8d39 = 5;
    var _0x4cb776 = 4;
    var _0x25ca95 = _0x4cb776 * Math.sin(Math.PI * 2 / _0x3b8d39 * _0x5535ab);
    var _0x2011be = this.outlineW * 2.5;
    var _0x4b98b6 = 25;
    var _0x307b07 = Math.PI / 180;
    if (this.flag_tailBitten) {
      a0_0x4ef4f3.fillStyle = a0_0x75ca18;
    } else {
      var _0x365316 = this.animalType;
      if (a0_0xc40a5e[_0x365316 - 1] > 0 && this.id != a0_0x1c918d) {
        a0_0x4ef4f3.fillStyle = a0_0x237aea;
      } else {
        a0_0x4ef4f3.fillStyle = _0x334932;
      }
    }
    if (a0_0x1d703e != a0_0x30b084 || a0_0x4ef4f3.fillStyle == a0_0x41030c) {
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.moveTo((this.rad - this.outlineW + 1) * Math.cos((270 + _0x4b98b6 / 2 + _0x2011be) * _0x307b07), (this.rad - this.outlineW + 1) * Math.sin((270 + _0x4b98b6 / 2) * _0x307b07));
      a0_0x4ef4f3.lineTo((this.rad - this.outlineW + 1) * Math.cos((270 - _0x4b98b6 / 2 - _0x2011be) * _0x307b07), (this.rad - this.outlineW + 1) * Math.sin((270 - _0x4b98b6 / 2) * _0x307b07));
      a0_0x4ef4f3.lineTo((this.rad + _0x43d18f + this.outlineW) * Math.cos((270 + _0x25ca95) * _0x307b07), (this.rad + _0x43d18f + this.outlineW) * Math.sin((270 + _0x25ca95) * _0x307b07));
      a0_0x4ef4f3.lineTo((this.rad - this.outlineW + 1) * Math.cos((270 + _0x4b98b6 / 2 + _0x2011be) * _0x307b07), (this.rad - this.outlineW + 1) * Math.sin((270 + _0x4b98b6 / 2) * _0x307b07));
      a0_0x4ef4f3.fill();
    }
    if (a0_0x1d703e != a0_0x30b084) {
      if (!this.loadedSkinImg || this.flag_tailBitten) {
        a0_0x4ef4f3.fillStyle = this.flag_tailBitten ? a0_0x75ca18 : _0x265c64;
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.moveTo((this.rad - this.outlineW) * Math.cos((270 + _0x4b98b6 / 2) * _0x307b07), (this.rad - this.outlineW) * Math.sin((270 + _0x4b98b6 / 2) * _0x307b07));
        a0_0x4ef4f3.lineTo((this.rad - this.outlineW) * Math.cos((270 - _0x4b98b6 / 2) * _0x307b07), (this.rad - this.outlineW) * Math.sin((270 - _0x4b98b6 / 2) * _0x307b07));
        a0_0x4ef4f3.lineTo((this.rad + _0x43d18f) * Math.cos((270 + _0x25ca95) * _0x307b07), (this.rad + _0x43d18f) * Math.sin((270 + _0x25ca95) * _0x307b07));
        a0_0x4ef4f3.lineTo((this.rad - this.outlineW) * Math.cos((270 + _0x4b98b6 / 2) * _0x307b07), (this.rad - this.outlineW) * Math.sin((270 + _0x4b98b6 / 2) * _0x307b07));
        a0_0x4ef4f3.fill();
      }
    }
  }
};
a0_0x45645e.prototype.drawAnimalUnderSkinCircle = function (_0x15deee) {
  if (!this.flag_isGrabbed) {
    if (this.playerNumberFor1v1Arena == 1) {
      _0x15deee = "cyan";
    } else if (this.playerNumberFor1v1Arena == 2) {
      _0x15deee = "yellow";
    } else if (this.flag_eff_isOnSpiderWeb) {
      _0x15deee = "white";
    }
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = this.isAnimalInside1v1Arena() ? 0.3 : this.idealOp;
    a0_0x5c99c1(0, 0, this.rad, _0x15deee);
    a0_0x4ef4f3.restore();
  }
};
a0_0x45645e.prototype.devMode_num = 0;
a0_0x45645e.prototype.hasMultipleSpecies = function () {
  return false;
};
a0_0x45645e.prototype.drawNickName = function (_0x379dbd) {
  if (_0x379dbd == 0) {
    return;
  }
  var _0x91d93a = _0x379dbd;
  this.nickNameA += (_0x91d93a - this.nickNameA) * 0.1;
  if (this.nickName && this.nickTXT && !a0_0x36b495) {
    a0_0x4ef4f3.save();
    if (this.dead) {
      a0_0x4ef4f3.globalAlpha *= 1 - this.moveUpdF;
    } else {
      a0_0x4ef4f3.globalAlpha = 1;
    }
    a0_0x4ef4f3.globalAlpha *= this.nickNameA;
    this.nickTXT.x = 0;
    this.nickTXT.y = this.rad + 9;
    var _0x21b390 = "#FFFFFF";
    if (this.flag_isDevMode) {
      switch (this.devMode_num) {
        case 8:
          if (!this.flag_hideDevPrint) {
            if (a0_0xab4233 != null && a0_0xab4233.id == this.id) {
              _0x21b390 = "cyan";
            } else {
              _0x21b390 = "yellow";
            }
          }
          break;
        case 1:
          _0x21b390 = "#e23ca6";
          break;
        default:
          break;
      }
    }
    this.nickTXT.setColor(_0x21b390);
    this.nickTXT.draw();
    a0_0x4ef4f3.restore();
  }
};
a0_0x45645e.prototype.drawHealthBar = function () {
  a0_0x45645e.superClass.prototype.drawHealthBar.call(this);
  this.drawInfectionBar();
};
a0_0x45645e.prototype.drawInfectionBar = function () {
  if (this.flag_underWater) {
    return;
  }
  var _0x52684f = a0_0x4f736f < this.infectionBarTimeoutT ? 1 : 0;
  this.infectionBarA += (_0x52684f - this.infectionBarA) * 0.04;
  if (this.infectionBarA > 0.001) {
    this.infectionPer += (this.infectionPer_n - this.infectionPer) * 0.1;
    this.drawBar("red", this.infectionBarA, this.infectionPer, 2, 6.5);
  }
};
a0_0x45645e.prototype.drawUnderWater = function () {
  if (this.flag_usingDiveAbility || this.flag_usingAbility && this.animalType == a0_0x2347de) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 1 - this.underwaterA;
    this.drawWhenUnderwater();
    a0_0x4ef4f3.restore();
  }
};
a0_0x45645e.prototype.drawUnderSkinImgOutline = function () {
  if (this.flag_eff_stunk) {
    a0_0x4ef4f3.save();
    var _0x5854c7 = 1;
    var _0x18463c = 0.3;
    var _0x19d16e = 1;
    var _0x2c6ac9 = (_0x19d16e - _0x18463c) * 0.5;
    var _0x143147 = _0x18463c + _0x2c6ac9 + _0x2c6ac9 * Math.sin(Math.PI * 2 / _0x5854c7 * ((a0_0x4f736f - this.spawnTime) / 1000));
    a0_0x4ef4f3.globalAlpha *= _0x143147;
    var _0x2cf3e9 = 2.6;
    a0_0x5c99c1(0, 0, this.rad + _0x2cf3e9 * _0x143147, "brown");
    a0_0x4ef4f3.restore();
  }
  if (this.flag_iceSliding) {
    var _0x23abd4 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x5854c7 = 0.75;
    var _0xa0cb4d = 1;
    var _0x53ca71 = _0xa0cb4d * Math.sin(Math.PI * 2 / _0x5854c7 * _0x23abd4);
    var _0x459496 = a0_0x4ef4f3.globalAlpha;
    a0_0x4ef4f3.globalAlpha *= 0.8 - _0x53ca71 * 0.2;
    a0_0x5c99c1(0, this.rad * 0.3, this.rad * (0.9 + _0x53ca71 * 0.15), "#7BB7BB");
    a0_0x5c99c1(0, -this.rad * 0.3, this.rad * (1.05 + _0x53ca71 * 0.1), "#7BB7BB");
    a0_0x4ef4f3.globalAlpha = _0x459496;
  }
  if (this.flag_usingAbility && (this.animalType == a0_0x31131a || this.animalType == a0_0x563df4)) {
    var _0x23abd4 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x5854c7 = 1.5;
    var _0xa0cb4d = 1;
    var _0x53ca71 = _0xa0cb4d * Math.sin(Math.PI * 2 / _0x5854c7 * _0x23abd4);
    var _0x459496 = a0_0x4ef4f3.globalAlpha;
    a0_0x4ef4f3.globalAlpha *= 0.8;
    a0_0x5c99c1(0, this.rad * 0.3, this.rad * (0.9 + _0x53ca71 * 0.12), "#7F582B");
    a0_0x5c99c1(0, -this.rad * 0.3, this.rad * (1.05 + _0x53ca71 * 0.09), "#7F582B");
    a0_0x4ef4f3.globalAlpha = _0x459496;
  }
  var _0x5067b8 = this.flag_eff_frozen || this.flag_cold ? 1 : 0;
  this.frozenEffA += (_0x5067b8 - this.frozenEffA) * 0.1;
  if (this.frozenEffA > 0.01) {
    var _0x459496 = a0_0x4ef4f3.globalAlpha;
    a0_0x4ef4f3.globalAlpha *= this.frozenEffA;
    var _0x2cf3e9 = 1.6;
    a0_0x5c99c1(0, 0, this.rad + _0x2cf3e9 * this.frozenEffA, "white");
    a0_0x4ef4f3.globalAlpha = _0x459496;
  }
  var _0x5067b8 = this.flag_eff_healing ? 1 : 0;
  this.effA_healing += (_0x5067b8 - this.effA_healing) * 0.1;
  if (this.effA_healing > 0.01) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha *= this.effA_healing;
    var _0x2cf3e9 = 2.6;
    a0_0x5c99c1(0, 0, this.rad + _0x2cf3e9 * this.effA_healing, "purple");
    a0_0x4ef4f3.restore();
  }
  this.effect_aloeveraHeal(true);
  this.effect_sanitized(true);
  var _0x5067b8 = this.flag_eff_hot ? 1 : 0;
  this.effA_hot += (_0x5067b8 - this.effA_hot) * 0.1;
  if (this.effA_hot > 0.01) {
    a0_0x4ef4f3.save();
    var _0x5854c7 = 1.2;
    var _0x18463c = 0.3;
    var _0x19d16e = 1;
    var _0x2c6ac9 = (_0x19d16e - _0x18463c) * 0.5;
    a0_0x4ef4f3.globalAlpha *= _0x18463c + _0x2c6ac9 + _0x2c6ac9 * Math.sin(Math.PI * 2 / _0x5854c7 * ((a0_0x4f736f - this.spawnTime) / 1000));
    var _0x2cf3e9 = 2.6;
    a0_0x5c99c1(0, 0, this.rad + _0x2cf3e9 * this.effA_hot, "rgba(249, 212, 77, 0.5)");
    a0_0x4ef4f3.restore();
  }
  var _0x5067b8 = this.flag_eff_poison ? 1 : 0;
  this.effA_poison += (_0x5067b8 - this.effA_poison) * 0.1;
  if (this.effA_poison > 0.01) {
    a0_0x4ef4f3.save();
    var _0x5854c7 = 1.2;
    var _0x18463c = 0.3;
    var _0x19d16e = 1;
    var _0x2c6ac9 = (_0x19d16e - _0x18463c) * 0.5;
    a0_0x4ef4f3.globalAlpha *= _0x18463c + _0x2c6ac9 + _0x2c6ac9 * Math.sin(Math.PI * 2 / _0x5854c7 * ((a0_0x4f736f - this.spawnTime) / 1000));
    a0_0x4ef4f3.globalAlpha *= this.effA_poison;
    var _0x2cf3e9 = 2.6;
    a0_0x5c99c1(0, 0, this.rad + _0x2cf3e9 * this.effA_poison, "#7FF600");
    a0_0x4ef4f3.restore();
  }
  var _0x5067b8 = this.flag_eff_bleeding || this.flag_eff_wobbling ? 1 : 0;
  this.effA_bleeding += (_0x5067b8 - this.effA_bleeding) * 0.1;
  if (this.effA_bleeding > 0.01) {
    a0_0x4ef4f3.save();
    var _0x5854c7 = 1.2;
    var _0x18463c = 0.3;
    var _0x19d16e = 1;
    var _0x2c6ac9 = (_0x19d16e - _0x18463c) * 0.5;
    a0_0x4ef4f3.globalAlpha *= _0x18463c + _0x2c6ac9 + _0x2c6ac9 * Math.sin(Math.PI * 2 / _0x5854c7 * ((a0_0x4f736f - this.spawnTime) / 1000));
    a0_0x4ef4f3.globalAlpha *= this.effA_bleeding;
    var _0x2cf3e9 = 2.6;
    var _0x43d8eb = this.flag_eff_wobbling ? "brown" : "red";
    a0_0x5c99c1(0, 0, this.rad + _0x2cf3e9 * this.effA_bleeding, _0x43d8eb);
    a0_0x4ef4f3.restore();
  }
  var _0x5067b8 = this.flag_eff_slimed ? 1 : 0;
  this.effA_slimed += (_0x5067b8 - this.effA_slimed) * 0.1;
  if (this.effA_slimed > 0.01) {
    a0_0x4ef4f3.save();
    var _0x5854c7 = 1.2;
    var _0x18463c = 0.3;
    var _0x19d16e = 1;
    var _0x2c6ac9 = (_0x19d16e - _0x18463c) * 0.5;
    a0_0x4ef4f3.globalAlpha *= _0x18463c + _0x2c6ac9 + _0x2c6ac9 * Math.sin(Math.PI * 2 / _0x5854c7 * ((a0_0x4f736f - this.spawnTime) / 1000));
    a0_0x4ef4f3.globalAlpha *= this.effA_slimed;
    var _0x2cf3e9 = 2.6;
    a0_0x5c99c1(0, 0, this.rad + _0x2cf3e9 * this.effA_slimed, "grey");
    a0_0x4ef4f3.restore();
  }
};
a0_0x45645e.prototype.drawUnderSkinImg = function () {};
a0_0x45645e.prototype.drawUnderwaterBubbles = function () {
  a0_0x4ef4f3.save();
  var _0x30bc06 = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x256b81 = 1.5;
  var _0x5c12e3 = 1;
  var _0x75b56e = _0x5c12e3 * Math.sin(Math.PI * 2 / _0x256b81 * _0x30bc06);
  if (this.animalType == a0_0x20917b) {
    a0_0x4ef4f3.globalAlpha *= 0.3;
  }
  var _0x1eb7b6 = this.flag_inWater ? "#4E71C3" : "#7E6A35";
  if (this.animalType == a0_0x472c8a) {
    _0x1eb7b6 = "#f9d43b";
  }
  a0_0x4ef4f3.fillStyle = _0x1eb7b6;
  var _0x167c46 = this.rad * 0.2;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(this.rad * -0.35, this.rad * -0.33, Math.max(0, _0x167c46 + _0x75b56e), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(this.rad * 0.35, this.rad * -0.32, Math.max(0, _0x167c46 - _0x75b56e), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(this.rad * 0.35, this.rad * 0.36, Math.max(0, _0x167c46 + _0x75b56e), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(this.rad * -0.35, this.rad * 0.35, Math.max(0, _0x167c46 - _0x75b56e), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.restore();
};
a0_0x45645e.prototype.drawUnderwaterCustomization = function (_0x45cd42, _0x8ba641) {
  a0_0x4ef4f3.save();
  var _0x403760 = (a0_0x4f736f - this.spawnTime) / 1000;
  if (this.animalType == a0_0x30aa6a) {
    a0_0x4ef4f3.globalAlpha = 1 - this.underwaterA;
    a0_0x4ef4f3.fillStyle = "#73799b";
    a0_0x4ef4f3.beginPath();
    var _0x108694 = this.rad;
    var _0x4806eb = _0x108694 * 0.25;
    a0_0x4ef4f3.moveTo(_0x108694 * -0.07, _0x4806eb);
    a0_0x4ef4f3.lineTo(0, _0x4806eb - _0x108694 * 0.5);
    a0_0x4ef4f3.lineTo(_0x108694 * 0.35, _0x4806eb);
    a0_0x4ef4f3.closePath();
    a0_0x4ef4f3.fill();
  } else if (this.animalType == a0_0x434da0) {
    a0_0x5c99c1(0, this.rad * 0.2, this.rad * 0.12, "#4D4D4D");
  } else if (this.animalType == a0_0x1132a8) {
    a0_0x5c99c1(0, this.rad * 0.45, this.rad * 0.08, "#202A65");
  } else if (this.animalType == a0_0x5f3a6f) {
    var _0x4761ad = a0_0xe2d896(_0x403760, 1, 1, 1);
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(a0_0x844a6b(40));
    a0_0x4ef4f3.scale(1, 2);
    a0_0x4ef4f3.globalAlpha = 0.08;
    a0_0x5c99c1(this.rad * 1, this.rad * 0.2, this.rad * 0.1 + this.rad * 0.1 * _0x4761ad, "#B32E10");
    a0_0x4ef4f3.globalAlpha = 0.2;
    a0_0x5c99c1(this.rad * 1, this.rad * 0.2, this.rad * 0.15, "#B32E10");
    a0_0x4ef4f3.restore();
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 1;
    a0_0x4ef4f3.rotate(a0_0x844a6b(-40));
    a0_0x4ef4f3.scale(1, 2);
    a0_0x4ef4f3.globalAlpha = 0.08;
    a0_0x5c99c1(this.rad * -1, this.rad * 0.2, this.rad * 0.1 + this.rad * 0.1 * -_0x4761ad, "#B32E10");
    a0_0x4ef4f3.globalAlpha = 0.2;
    a0_0x5c99c1(this.rad * -1, this.rad * 0.2, this.rad * 0.15, "#B32E10");
    a0_0x4ef4f3.restore();
  } else if (this.animalType == a0_0x4e6cde) {
    a0_0x4ef4f3.globalAlpha = 1 - this.underwaterA;
    a0_0x5c99c1(this.rad * 0.4, this.rad * 0.75, this.rad * 0.12, "#598b30");
    a0_0x5c99c1(this.rad * 0.65, this.rad * 0.55, this.rad * 0.1, "#64a034");
    a0_0x5c99c1(this.rad * -0.4, this.rad * 0.75, this.rad * 0.12, "#64a034");
    a0_0x5c99c1(this.rad * -0.65, this.rad * 0.55, this.rad * 0.1, "#598b30");
  } else if (this.animalType == a0_0xbf4f2c) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 0.2;
    a0_0x4ef4f3.scale(1, 2);
    a0_0x5c99c1(0, this.rad * 0.24, this.rad * 0.08, "#202A65");
    a0_0x5c99c1(0, this.rad * -0.02, this.rad * 0.06, "#202A65");
    a0_0x5c99c1(0, this.rad * -0.28, this.rad * 0.05, "#202A65");
    a0_0x5c99c1(0, this.rad * -0.54, this.rad * 0.04, "#202A65");
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
a0_0x45645e.prototype.drawWhenUnderwater = function () {
  this.drawUnderwaterCustomization(1, 1);
  this.drawUnderwaterBubbles();
};
a0_0x45645e.prototype.shiveringStartT = 0;
a0_0x45645e.prototype.flag_eff_shivering = false;
a0_0x45645e.prototype.flag_inHidingHole = false;
a0_0x45645e.prototype.effect_shivering = function () {
  if (this.shiveringStartT == 0 && this.flag_eff_shivering) {
    this.shiveringStartT = +new Date();
  } else if (!this.flag_eff_shivering) {
    this.shiveringStartT = 0;
  }
  if (this.flag_eff_shivering) {
    var _0x283efb = (+new Date() - this.shiveringStartT) * 10;
    if (_0x283efb % 10 == 0) {
      this.eff_shiver_shakeX = Math.round(Math.random() * 10);
      this.eff_shiver_shakeX = Math.round(Math.random() * 10);
    }
  }
};
if (this.effA_healing > 0.01) {
  a0_0x4ef4f3.save();
  var a0_0x2a68af = 0.3;
  a0_0x4ef4f3.globalAlpha *= a0_0x2a68af * this.effA_healing;
  a0_0x5c99c1(0, 0, Math.max(0, this.rad - this.outlineW), "#ef24ed");
  a0_0x4ef4f3.restore();
}
a0_0x45645e.prototype.effect_sanitized = function (_0x3588b7) {
  var _0x4dcc46 = this.flag_eff_sanitized ? 0.9 : 0;
  if (this.effA__sanitized == undefined) {
    this.effA__sanitized = 0;
  }
  this.effA__sanitized += (_0x4dcc46 - this.effA__sanitized) * 0.1;
  if (this.effA__sanitized > 0.01) {
    var _0x856e1e = 0.3;
    var _0x1b2a3e = 0.8;
    var _0x2124f4 = 0.2;
    var _0x217956 = 0.4;
    var _0x43aa5d = (_0x217956 - _0x2124f4) * 0.5;
    var _0xe34296 = _0x2124f4 + _0x43aa5d + _0x43aa5d * Math.sin(Math.PI * 2 / _0x1b2a3e * ((a0_0x4f736f - this.spawnTime) / 1000));
    if (_0x3588b7) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha *= _0xe34296;
      var _0x3f3ec3 = 2.6;
      a0_0x5c99c1(0, 0, this.rad + _0x3f3ec3 * this.effA__sanitized, "white");
      a0_0x4ef4f3.restore();
    } else {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha *= _0xe34296;
      a0_0x5c99c1(0, 0, Math.max(0, this.rad), "#bbc94d");
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x45645e.prototype.effect_aloeveraHeal = function (_0x31702f) {
  var _0x5a0527 = this.flag_eff_aloeveraHealing ? 0.9 : 0;
  if (this.effA_aloeveraHealing == undefined) {
    this.effA_aloeveraHealing = 0;
  }
  this.effA_aloeveraHealing += (_0x5a0527 - this.effA_aloeveraHealing) * 0.1;
  if (this.effA_aloeveraHealing > 0.01) {
    var _0x3d31e1 = 0.3;
    var _0x44fafe = 0.8;
    var _0x2c236e = 0.2;
    var _0x33fd9f = 0.4;
    var _0x55db61 = (_0x33fd9f - _0x2c236e) * 0.5;
    var _0x2d338e = _0x2c236e + _0x55db61 + _0x55db61 * Math.sin(Math.PI * 2 / _0x44fafe * ((a0_0x4f736f - this.spawnTime) / 1000));
    if (_0x31702f) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha *= _0x2d338e;
      var _0x7b211c = 2.6;
      a0_0x5c99c1(0, 0, this.rad + _0x7b211c * this.effA_aloeveraHealing, "#bbc94d");
      a0_0x4ef4f3.restore();
    } else {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha *= _0x2d338e;
      a0_0x5c99c1(0, 0, Math.max(0, this.rad), "#bbc94d");
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x45645e.prototype.effect_sweatPoisoned = function () {
  var _0x5ce8d8 = this.flag_eff_sweatPoisoned ? 1 : 0;
  if (this.effA_sweatPoisoned == undefined) {
    this.effA_sweatPoisoned = 0;
  }
  this.effA_sweatPoisoned += (_0x5ce8d8 - this.effA_sweatPoisoned) * 0.1;
  if (this.effA_sweatPoisoned > 0.01) {
    a0_0x4ef4f3.save();
    var _0x860e22 = 0.3;
    var _0x320c0a = 1.2;
    var _0x353da5 = 0.3;
    var _0x58daf0 = 1;
    var _0x1d060a = (_0x58daf0 - _0x353da5) * 0.5;
    a0_0x4ef4f3.globalAlpha *= _0x353da5 + _0x1d060a + _0x1d060a * Math.sin(Math.PI * 2 / _0x320c0a * ((a0_0x4f736f - this.spawnTime) / 1000));
    a0_0x5c99c1(0, 0, Math.max(0, this.rad - this.outlineW), a0_0x26593c);
    a0_0x4ef4f3.restore();
  }
};
a0_0x45645e.prototype.skinRad = 0;
a0_0x45645e.prototype.skinScale = 0;
a0_0x45645e.prototype.setSkinScale = function () {
  var _0x5d2c66 = 500 / 340;
  var _0xea26cb = this.rad - this.outlineW;
  this.skinRad = _0xea26cb;
  this.skinScale = _0x5d2c66;
};
a0_0x45645e.prototype.getAniRadius = function (_0x4c5bdd) {
  return _0x4c5bdd;
};
a0_0x45645e.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  var _0x56cf6d = this.skinScale;
  var _0x5cdbad = this.getAniRadius(this.skinRad);
  if (this.loadedSkinImg) {
    a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x5cdbad * _0x56cf6d, -_0x5cdbad * _0x56cf6d, _0x5cdbad * 2 * _0x56cf6d, _0x5cdbad * 2 * _0x56cf6d);
  } else {
    a0_0x4ef4f3.fillStyle = this.skinNotLoadedColor;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - this.outlineW), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
  }
};
a0_0x45645e.prototype.preLoad = function () {};
a0_0x45645e.prototype.shiverF = 0.02;
a0_0x45645e.prototype.drawSkinImg = function () {
  this.basicDrawSkinImg();
  this.drawSkinCustomization();
};
a0_0x45645e.prototype.drawSkinCustomization = function () {};
a0_0x45645e.prototype.drawOnTopOfSkinImg = function () {
  if (!this.loadedSkinImg) {
    a0_0x4ef4f3.save();
    var _0x41e645 = Math.max(1, this.rad / 25);
    a0_0x4ef4f3.scale(_0x41e645, _0x41e645);
    this.drawEyeAtPos(6, this.rad * 0.32);
    this.drawEyeAtPos(-6, this.rad * 0.32);
    a0_0x4ef4f3.restore();
  }
  if (this.animalType == a0_0x32eb58) {
    a0_0x4ef4f3.fillStyle = "#E5CF79";
    a0_0x4ef4f3.beginPath();
    var _0xc9b6c0 = this.rad - this.outlineW;
    var _0x208429 = _0xc9b6c0 * 1;
    a0_0x4ef4f3.moveTo(_0xc9b6c0 * -0.16, _0x208429);
    a0_0x4ef4f3.lineTo(0, _0xc9b6c0 * (this.flag_usingAbility ? 1.41 : 0.7));
    a0_0x4ef4f3.lineTo(_0xc9b6c0 * 0.153, _0x208429);
    a0_0x4ef4f3.closePath();
    a0_0x4ef4f3.fill();
  }
  if (this.flag_usingAbility && this.animalType == a0_0x38090e) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 1 - this.underwaterA;
    var _0xe5e1e3 = this.getSkinImageObj("img/snowball.png");
    if (_0xe5e1e3) {
      var _0xc9b6c0 = this.rad;
      a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
      a0_0x4ef4f3.drawImage(_0xe5e1e3, -_0xc9b6c0, -_0xc9b6c0, _0xc9b6c0 * 2, _0xc9b6c0 * 2);
    } else {
      this.drawOutlinedCircle("", "white");
    }
    a0_0x4ef4f3.restore();
  }
};
a0_0x45645e.prototype.drawUnderEffects = function () {
  if (this.flag_eff_dirty) {
    if (this.effA_dirtStuck > 0.01) {
      a0_0x4ef4f3.save();
      var _0x5ed8f1 = 0.9;
      a0_0x4ef4f3.globalAlpha *= _0x5ed8f1 * this.effA_dirtStuck;
      var _0x2a0124 = this.getImageObjForPath("img/dirt/dirt_below.png");
      if (_0x2a0124) {
        var _0x3efd68 = this.skinScale;
        var _0x6b6e19 = this.skinRad - 2;
        a0_0x4ef4f3.drawImage(_0x2a0124, -_0x6b6e19 * _0x3efd68, -_0x6b6e19 * _0x3efd68, _0x6b6e19 * 2 * _0x3efd68, _0x6b6e19 * 2 * _0x3efd68);
      }
      a0_0x4ef4f3.restore();
    }
  }
};
var a0_0x49c977 = 1;
var a0_0x15137f = 0.5;
a0_0x45645e.prototype.maskStartT = 0;
a0_0x45645e.prototype.wasWearingMask = false;
a0_0x45645e.prototype.drawProtectiveMask = function () {
  if (!this.flag_eff_wearingMask) {
    this.wasWearingMask = false;
    return;
  }
  if (!this.wasWearingMask) {
    this.wasWearingMask = true;
    this.maskStartT = a0_0x4f736f;
  }
  a0_0x4ef4f3.save();
  var _0xef40c8 = this.getSkinImageObj("img/viralpandemic/mask.png");
  var _0x170e7f = this.getSkinImageObj("img/viralpandemic/mask-outline.png");
  if (_0xef40c8 && _0x170e7f) {
    var _0x17aca1 = this.rad * 0.7 + this.rPer;
    var _0xaaf3fa = _0x17aca1 * 0.1;
    if (this.animalType == a0_0x15fd74) {
      _0xaaf3fa = _0x17aca1 * 0.2;
    } else if (this.animalType == a0_0xbf4f2c) {
      _0x17aca1 = this.rad * 0.6;
      _0xaaf3fa = _0x17aca1 * 1;
    } else if (this.animalType == a0_0x4e6cde || this.animalType == a0_0x5f3a6f || this.animalType == a0_0x38090e || this.animalType == a0_0x2aaf90) {
      _0xaaf3fa = _0x17aca1 * -0.05;
    } else if (this.animalType == a0_0x252dcd) {
      _0xaaf3fa = _0x17aca1 * -0.2;
    } else if (this.animalType == a0_0x2ed274) {
      _0xaaf3fa = _0x17aca1 * 0;
    } else if (this.animalType == a0_0x562756 || this.animalType == a0_0x33fa19 || this.animalType == a0_0x5a613b || this.animalType == a0_0x162473 || this.animalType == a0_0x1487f6) {
      _0x17aca1 = this.rad * 0.5;
      _0xaaf3fa = _0x17aca1 * 0.4;
    } else if (this.animalType == a0_0x1c0686) {
      _0x17aca1 = this.rad * 0.5;
      _0xaaf3fa = _0x17aca1 * 0.6;
      if (this.flag_usingAbility) {
        _0xaaf3fa = _0x17aca1 * 1.3;
      }
    } else if (this.animalType == a0_0x52cd8c) {
      _0x17aca1 = this.rad * 0.55;
      _0xaaf3fa = _0x17aca1 * 0.5;
      if (this.flag_usingAbility) {
        _0xaaf3fa = _0x17aca1 * 1;
      }
    } else if (this.animalType == a0_0x69c437) {
      _0x17aca1 = this.rad * 0.43;
      _0xaaf3fa = _0x17aca1 * 1;
      if (this.flag_usingAbility) {
        if (this.specType == 1) {
          _0x17aca1 = this.rad * 0.45;
          _0xaaf3fa = _0x17aca1 * 1.3;
        } else if (this.specType == 2) {
          _0x17aca1 = this.rad * 0.5;
          _0xaaf3fa = _0x17aca1 * 1.9;
        }
      }
    } else if (this.animalType == a0_0x4e94e8) {
      _0x17aca1 = this.rad * 0.5;
      _0xaaf3fa = _0x17aca1 * 0.55;
      if (this.flag_usingAbility) {
        _0xaaf3fa = _0x17aca1 * 0.8;
      }
    } else if (this.animalType == a0_0x22e8ad) {
      _0x17aca1 = this.rad * 0.55;
      _0xaaf3fa = _0x17aca1 * 0;
      if (this.flag_usingAbility) {
        _0xaaf3fa = _0x17aca1 * 0.5;
      }
    } else if (this.animalType == a0_0xdf5a75) {
      _0x17aca1 = this.rad * 0.4;
      _0xaaf3fa = _0x17aca1 * 1.1;
      if (this.flag_usingAbility) {
        _0x17aca1 = this.rad * 0.5;
        _0xaaf3fa = _0x17aca1 * a0_0x49c977;
      }
    } else if (this.animalType == a0_0x2d643d) {
      _0x17aca1 = this.rad * 0.5;
      _0xaaf3fa = _0x17aca1 * 0.5;
      if (this.flag_usingAbility) {
        _0x17aca1 = this.rad * 0.5;
        _0xaaf3fa = _0x17aca1 * 1;
      }
    } else if (this.animalType == a0_0x4a36ac) {
      _0x17aca1 = this.rad * 0.4;
      _0xaaf3fa = _0x17aca1 * 1;
      if (this.flag_usingAbility) {
        _0x17aca1 = this.rad * 0.5;
        _0xaaf3fa = _0x17aca1 * 1;
      }
    } else if (this.animalType == a0_0x17136b) {
      _0x17aca1 = this.rad * 0.4;
      _0xaaf3fa = _0x17aca1 * 1;
      if (this.flag_usingAbility) {
        a0_0x4ef4f3.restore();
        return;
      }
    }
    var _0x3cf5a3 = 1;
    var _0x1da808 = (a0_0x4f736f - this.maskStartT) / 1000;
    if (_0x1da808 > 80) {
      var _0x415a05 = 1;
      var _0x1ea9c2 = 0.3;
      var _0x474d5d = 0.5;
      var _0x5b11dc = (_0x474d5d - _0x1ea9c2) * 0.5;
      var _0x3cf5a3 = _0x1ea9c2 + _0x5b11dc + _0x5b11dc * Math.sin(Math.PI * 2 / _0x415a05 * (a0_0x4f736f / 1000));
    }
    var _0x475077 = 0.8;
    if (this.flag_inHidingHole) {
      _0x475077 = 0.6;
    } else if (this.flag_underWater) {
      _0x475077 = this.idealOp;
    }
    a0_0x4ef4f3.globalAlpha = _0x475077 * _0x3cf5a3;
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0xef40c8, -_0x17aca1, _0xaaf3fa, _0x17aca1 * 2, _0x17aca1 * 2);
    a0_0x4ef4f3.drawImage(_0x170e7f, -_0x17aca1, _0xaaf3fa, _0x17aca1 * 2, _0x17aca1 * 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x45645e.prototype.drawTopEffects = function () {
  this.effect_aloeveraHeal();
  var _0x5a44a2 = this.flag_eff_stunned ? 1 : 0;
  this.stunA += (_0x5a44a2 - this.stunA) * 0.1;
  if (this.stunA > 0.01) {
    a0_0x4ef4f3.save();
    var _0x167bf7 = 2.5;
    var _0x415a17 = a0_0x4f736f % (_0x167bf7 * 1000) / (_0x167bf7 * 1000);
    a0_0x4ef4f3.rotate(_0x415a17 * (Math.PI * 2));
    a0_0x4ef4f3.globalAlpha *= this.stunA;
    var _0x1cf8ce = this.rad * 0.2;
    var _0x289b9b = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0xf65abd = 1;
    var _0x1b8350 = 0.5 + _0x1cf8ce * 0.07;
    var _0x9771b = _0x1b8350 * Math.sin(Math.PI * 2 / _0xf65abd * _0x289b9b);
    a0_0x4ef4f3.fillStyle = "#F3D444";
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad * -0.22, this.rad * -0.22, Math.max(0, _0x1cf8ce + _0x9771b), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad * 0.22, this.rad * -0.22, Math.max(0, _0x1cf8ce - _0x9771b), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad * 0.22, this.rad * 0.22, Math.max(0, _0x1cf8ce + _0x9771b), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad * -0.22, this.rad * 0.22, Math.max(0, _0x1cf8ce - _0x9771b), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.restore();
  }
  var _0x5a44a2 = this.flag_eff_onFire ? 1 : 0;
  this.onFireEffA += (_0x5a44a2 - this.onFireEffA) * 0.1;
  if (this.onFireEffA > 0.01) {
    var _0xf65abd = 1;
    var _0xeb3782 = 0.15;
    var _0x3db745 = 0.4;
    var _0x277780 = (_0x3db745 - _0xeb3782) * 0.5;
    var _0x42183d = _0xeb3782 + _0x277780 + _0x277780 * Math.sin(Math.PI * 2 / _0xf65abd * (a0_0x4f736f / 1000));
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha *= _0x42183d * this.onFireEffA;
    a0_0x5c99c1(0, 0, Math.max(0, this.rad), "orange");
    a0_0x4ef4f3.restore();
    var _0x684769 = 1;
    if (a0_0x1d703e != a0_0x30b084) {
      var _0xf65abd = 1;
      var _0xeb3782 = 0.5;
      var _0x3db745 = 1;
      var _0x277780 = (_0x3db745 - _0xeb3782) * 0.5;
      var _0x9771b = _0xeb3782 + _0x277780 + _0x277780 * Math.sin(Math.PI * 2 / _0xf65abd * (a0_0x4f736f / 1000));
      var _0x22fd91 = Math.trunc(a0_0x4f736f / 100) % 5;
      var _0x572b64 = Math.trunc(a0_0x4f736f / 150) % 5;
      var _0x238775 = this.getImageObjForPath("gameobj/70/0/" + _0x22fd91 + ".png", _0x684769);
      var _0x5353eb = this.getImageObjForPath("gameobj/70/0/" + _0x572b64 + ".png", _0x684769);
      if (_0x238775 || _0x5353eb) {
        var _0x1ecd28 = 0 - this.rad * 0.3;
        var _0x3faa42 = this.rad * 0.2 - this.rad * 0.3;
        var _0x2c29b5 = this.rad * 1 * (2 + _0x9771b * 2) / 3;
        var _0x25ae8a = this.rad * 1 * _0x9771b;
        var _0x29d93f = 0.5;
        var _0x3d156d = 0.95;
        a0_0x4ef4f3.save();
        if (_0x238775) {
          a0_0x4ef4f3.globalAlpha *= this.onFireEffA * _0x9771b;
          a0_0x4ef4f3.drawImage(_0x238775, _0x1ecd28 + _0x2c29b5 * -_0x29d93f, _0x3faa42 + _0x25ae8a * -_0x3d156d, _0x2c29b5, _0x25ae8a);
        }
        if (_0x5353eb) {
          a0_0x4ef4f3.globalAlpha *= this.onFireEffA * _0x9771b;
          a0_0x4ef4f3.drawImage(_0x5353eb, _0x1ecd28 + this.rad * 0.5 + _0x2c29b5 * -_0x29d93f, _0x3faa42 + this.rad * 0.5 + _0x25ae8a * -_0x3d156d, _0x2c29b5, _0x25ae8a);
        }
        a0_0x4ef4f3.restore();
      }
    } else {
      var _0xf65abd = 1;
      var _0xeb3782 = 0.5;
      var _0x3db745 = 1;
      var _0x277780 = (_0x3db745 - _0xeb3782) * 0.5;
      var _0x9771b = _0xeb3782 + _0x277780 + _0x277780 * Math.sin(Math.PI * 2 / _0xf65abd * (a0_0x4f736f / 1000));
      var _0x238775 = this.getImageObjForPath("gameobj/70/0.png", _0x684769);
      if (_0x238775) {
        var _0x1ecd28 = 0 - this.rad * 0.3;
        var _0x3faa42 = this.rad * 0.2 - this.rad * 0.3;
        var _0x2c29b5 = this.rad * 1 * (2 + _0x9771b * 2) / 3;
        var _0x25ae8a = this.rad * 1 * _0x9771b;
        var _0x29d93f = 0.5;
        var _0x3d156d = 0.95;
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.globalAlpha *= this.onFireEffA * _0x9771b;
        a0_0x4ef4f3.drawImage(_0x238775, _0x1ecd28 + _0x2c29b5 * -_0x29d93f, _0x3faa42 + _0x25ae8a * -_0x3d156d, _0x2c29b5, _0x25ae8a);
        a0_0x4ef4f3.globalAlpha *= this.onFireEffA * _0x9771b;
        a0_0x4ef4f3.drawImage(_0x238775, _0x1ecd28 + this.rad * 0.5 + _0x2c29b5 * -_0x29d93f, _0x3faa42 + this.rad * 0.5 + _0x25ae8a * -_0x3d156d, _0x2c29b5, _0x25ae8a);
        a0_0x4ef4f3.restore();
      }
    }
  }
  if (this.frozenEffA > 0.01 && this.flag_eff_frozen) {
    a0_0x4ef4f3.save();
    var _0x167bf7 = 7;
    var _0x415a17 = a0_0x4f736f % (_0x167bf7 * 1000) / (_0x167bf7 * 1000);
    a0_0x4ef4f3.rotate(_0x415a17 * (Math.PI * 2));
    a0_0x4ef4f3.globalAlpha *= this.frozenEffA;
    var _0x1cf8ce = this.rad * 0.2;
    var _0x289b9b = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0xf65abd = 1;
    var _0x1b8350 = 0.5 + _0x1cf8ce * 0.07;
    var _0x9771b = _0x1b8350 * Math.sin(Math.PI * 2 / _0xf65abd * _0x289b9b);
    a0_0x4ef4f3.fillStyle = "white";
    var _0x76c67a = this.rad * 0.27;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(-_0x76c67a, -_0x76c67a, Math.max(0, _0x1cf8ce + _0x9771b), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(_0x76c67a, -_0x76c67a, Math.max(0, _0x1cf8ce - _0x9771b), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(_0x76c67a, _0x76c67a, Math.max(0, _0x1cf8ce + _0x9771b), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(-_0x76c67a, _0x76c67a, Math.max(0, _0x1cf8ce - _0x9771b), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.restore();
  }
  if (this.frozenEffA > 0.01) {
    a0_0x4ef4f3.save();
    var _0x41fe10 = 0.3;
    a0_0x4ef4f3.globalAlpha *= _0x41fe10 * this.frozenEffA;
    a0_0x5c99c1(0, 0, Math.max(0, this.rad - this.outlineW), "white");
    a0_0x4ef4f3.restore();
  }
  if (this.effA_healing > 0.01) {
    a0_0x4ef4f3.save();
    var _0x41fe10 = 0.3;
    a0_0x4ef4f3.globalAlpha *= _0x41fe10 * this.effA_healing;
    a0_0x5c99c1(0, 0, Math.max(0, this.rad - this.outlineW), "#ef24ed");
    a0_0x4ef4f3.restore();
  }
  this.effect_sweatPoisoned();
  if (this.effA_hot > 0.01) {
    a0_0x4ef4f3.save();
    var _0x41fe10 = 0.3;
    var _0xf65abd = 1.2;
    var _0xeb3782 = 0.3;
    var _0x3db745 = 1;
    var _0x277780 = (_0x3db745 - _0xeb3782) * 0.5;
    a0_0x4ef4f3.globalAlpha *= _0xeb3782 + _0x277780 + _0x277780 * Math.sin(Math.PI * 2 / _0xf65abd * ((a0_0x4f736f - this.spawnTime) / 1000));
    a0_0x5c99c1(0, 0, Math.max(0, this.rad - this.outlineW), "rgba(249, 212, 77, 0.3)");
    a0_0x4ef4f3.restore();
  }
  if (this.effA_poison > 0.01) {
    a0_0x4ef4f3.save();
    var _0x41fe10 = 0.3;
    a0_0x4ef4f3.globalAlpha *= _0x41fe10 * this.effA_poison;
    var _0xf65abd = 1.2;
    var _0xeb3782 = 0.3;
    var _0x3db745 = 1;
    var _0x277780 = (_0x3db745 - _0xeb3782) * 0.5;
    a0_0x4ef4f3.globalAlpha *= _0xeb3782 + _0x277780 + _0x277780 * Math.sin(Math.PI * 2 / _0xf65abd * ((a0_0x4f736f - this.spawnTime) / 1000));
    a0_0x5c99c1(0, 0, Math.max(0, this.rad - this.outlineW), "#9FDA00");
    a0_0x4ef4f3.restore();
  }
  var _0x5a44a2 = this.flag_eff_bleeding ? 0.8 : 0;
  this.effA_bleeding += (_0x5a44a2 - this.effA_bleeding) * 0.1;
  if (this.effA_bleeding > 0.01) {
    a0_0x4ef4f3.save();
    var _0xf65abd = 1.2;
    var _0xeb3782 = 0.3;
    var _0x3db745 = 1;
    var _0x277780 = (_0x3db745 - _0xeb3782) * 0.3;
    a0_0x4ef4f3.globalAlpha *= _0xeb3782 + _0x277780 + _0x277780 * Math.sin(Math.PI * 2 / _0xf65abd * ((a0_0x4f736f - this.spawnTime) / 1000));
    a0_0x4ef4f3.globalAlpha *= this.effA_bleeding;
    var _0x5d9fdc = -2.6;
    a0_0x5c99c1(0, 0, this.rad + _0x5d9fdc * this.effA_bleeding, "red");
    a0_0x4ef4f3.restore();
  }
  var _0x5a44a2 = this.flag_eff_slimed ? 0.8 : 0;
  this.effA_slimed += (_0x5a44a2 - this.effA_slimed) * 0.1;
  if (this.effA_slimed > 0.01) {
    a0_0x4ef4f3.save();
    var _0xf65abd = 1.2;
    var _0xeb3782 = 0.3;
    var _0x3db745 = 1;
    var _0x277780 = (_0x3db745 - _0xeb3782) * 0.3;
    a0_0x4ef4f3.globalAlpha *= _0xeb3782 + _0x277780 + _0x277780 * Math.sin(Math.PI * 2 / _0xf65abd * ((a0_0x4f736f - this.spawnTime) / 1000));
    a0_0x4ef4f3.globalAlpha *= this.effA_slimed;
    var _0x5d9fdc = -2.6;
    a0_0x5c99c1(0, 0, this.rad + _0x5d9fdc * this.effA_slimed, "grey");
    a0_0x4ef4f3.restore();
  }
  var _0x5a44a2 = this.flag_eff_stunk ? 0.8 : 0;
  this.effA_stunk += (_0x5a44a2 - this.effA_stunk) * 0.1;
  if (this.effA_stunk > 0.01) {
    a0_0x4ef4f3.save();
    var _0xf65abd = 1.2;
    var _0xeb3782 = 0.3;
    var _0x3db745 = 1;
    var _0x277780 = (_0x3db745 - _0xeb3782) * 0.3;
    a0_0x4ef4f3.globalAlpha *= _0xeb3782 + _0x277780 + _0x277780 * Math.sin(Math.PI * 2 / _0xf65abd * ((a0_0x4f736f - this.spawnTime) / 1000));
    a0_0x4ef4f3.globalAlpha *= this.effA_stunk;
    var _0x5d9fdc = -2.6;
    a0_0x5c99c1(0, 0, this.rad + _0x5d9fdc * this.effA_stunk, "brown");
    a0_0x4ef4f3.restore();
  }
  if (this.animalType == a0_0x252dcd && this.flag_usingAbility) {
    var _0xf65abd = 0.75;
    var _0x1b8350 = 1;
    var _0x9771b = _0x1b8350 * Math.sin(Math.PI * 2 / _0xf65abd * _0x289b9b);
    var _0x3def17 = a0_0x4ef4f3.globalAlpha;
    a0_0x4ef4f3.globalAlpha *= 0.8 - _0x9771b * 0.2;
    a0_0x5c99c1(this.rad * 0.15, -this.rad * 1.27, this.rad * (0.1 + _0x9771b * 0.05), "#efefef");
    a0_0x5c99c1(-this.rad * 0.15, -this.rad * 1.27, this.rad * (0.1 - _0x9771b * 0.05), "#efefef");
    a0_0x4ef4f3.globalAlpha = _0x3def17;
  }
  var _0x5a44a2 = this.flag_webStuck ? 1 : 0;
  this.effA_webStuck += (_0x5a44a2 - this.effA_webStuck) * 0.02;
  if (this.effA_webStuck > 0.01) {
    a0_0x4ef4f3.save();
    var _0x41fe10 = 0.9;
    a0_0x4ef4f3.globalAlpha *= _0x41fe10 * this.effA_webStuck;
    var _0x238775 = this.getImageObjForPath("img/web/" + this.eff_webStuckType + "/spiderWeb_stuck.png");
    if (_0x238775) {
      var _0x5369bd = this.rad * 1.3;
      a0_0x4ef4f3.rotate(this.angle);
      a0_0x4ef4f3.drawImage(_0x238775, -_0x5369bd, -_0x5369bd, _0x5369bd * 2, _0x5369bd * 2);
    }
    a0_0x4ef4f3.restore();
  }
  this.effectDirt();
  var _0x5a44a2 = this.flag_constricted ? 1 : 0;
  this.effA_constricted += (_0x5a44a2 - this.effA_constricted) * 0.04;
  if (this.effA_constricted > 0.01) {
    a0_0x4ef4f3.save();
    var _0x41fe10 = 0.9;
    a0_0x4ef4f3.globalAlpha *= _0x41fe10 * this.effA_constricted;
    var _0xe3d6db = "skins/land/boaconstrictor/" + this.eff_constrictedSpecies;
    if (this.eff_constrictedSubSpecies !== undefined && this.eff_constrictedSubSpecies > 0) {
      _0xe3d6db += "/" + this.eff_constrictedSubSpecies;
    }
    var _0x4d9c33 = this.eff_constrictedSpecies === 1 || this.eff_constrictedSpecies === 2 ? 1 : this.mopeSeasonID;
    console.log("constrict img: " + _0xe3d6db);
    var _0x238775 = this.getSkinImageObjForSeason(_0xe3d6db + "/constrict.png", _0x4d9c33);
    if (_0x238775) {
      var _0x5369bd = this.rad * 1.3;
      a0_0x4ef4f3.rotate(this.angle);
      a0_0x4ef4f3.drawImage(_0x238775, -_0x5369bd, -_0x5369bd, _0x5369bd * 2, _0x5369bd * 2);
    }
    a0_0x4ef4f3.restore();
  }
  this.drawProtectiveMask();
  this.drawElectroStunEffect();
};
a0_0x45645e.prototype.effectDirt = function () {
  if (this.eff_dirtType == 0 || this.eff_dirtType == undefined) {
    return;
  }
  if (this.effA_dirtStuck == undefined) {
    this.effA_dirtStuck = 0;
  }
  var _0x12840c = this.flag_eff_dirty ? 1 : 0;
  this.effA_dirtStuck += (_0x12840c - this.effA_dirtStuck) * 0.02;
  if (this.effA_dirtStuck > 0.01) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle);
    var _0x5b7dff = 0.9;
    a0_0x4ef4f3.globalAlpha *= _0x5b7dff * this.effA_dirtStuck;
    var _0x1a9404 = this.getImageObjForPath("img/dirt/" + this.eff_dirtType + "/0.png");
    if (_0x1a9404) {
      var _0x3eca6e = this.skinScale;
      var _0x3db9fa = this.skinRad;
      a0_0x4ef4f3.drawImage(_0x1a9404, -_0x3db9fa * _0x3eca6e, -_0x3db9fa * _0x3eca6e, _0x3db9fa * 2 * _0x3eca6e, _0x3db9fa * 2 * _0x3eca6e);
    }
    var _0x1a9404 = this.getImageObjForPath("img/dirt/" + this.eff_dirtType + "/1.png");
    if (_0x1a9404) {
      var _0x3eca6e = this.skinScale;
      var _0x3db9fa = this.skinRad;
      a0_0x4ef4f3.drawImage(_0x1a9404, -_0x3db9fa * _0x3eca6e, -_0x3db9fa * _0x3eca6e, _0x3db9fa * 2 * _0x3eca6e, _0x3db9fa * 2 * _0x3eca6e);
    }
    a0_0x4ef4f3.restore();
  }
};
a0_0x45645e.prototype.getSpeciesPath = function (_0x43bdfd) {
  return _0x43bdfd + "/" + this.animalSpecies;
};
a0_0x45645e.prototype.getWing = function (_0x4e1dee, _0x542cba, _0x209491) {
  var _0x310fb5 = "skins/" + (_0x209491 ? this.getSpeciesPath(_0x4e1dee) + "/" : _0x4e1dee + "/");
  _0x310fb5 += _0x4e1dee + "_wing" + _0x542cba + ".png";
  return _0x310fb5;
};
a0_0x45645e.prototype.getHead = function (_0x4b878a, _0x408c5a) {
  var _0x311ffa = "skins/" + (_0x408c5a ? this.getSpeciesPath(_0x4b878a) + "/" : _0x4b878a + "/");
  _0x311ffa += _0x4b878a + "_head.png";
  return _0x311ffa;
};
a0_0x45645e.prototype.getSkinName = function () {
  var _0x3c296d = this.skinImgName;
  switch (this.animalType) {
    case a0_0x265cfd:
    case a0_0x1f838c:
    case a0_0x9f5ea7:
    case a0_0x58bf2a:
    case a0_0x101193:
    case a0_0x1bc37e:
    case a0_0xbfada:
    case a0_0x313367:
      var _0x351e67 = "";
      if (this.flag_usingAbility) {
        _0x3c296d = _0x351e67 + _0x3c296d + "2";
      }
      break;
    case a0_0x31e688:
      this.z = this.z * 2;
      if (this.flag_usingAbility && this.specType == 4) {
        _0x3c296d = _0x3c296d + "2";
      }
      break;
  }
  return this.getPremiumSkin(_0x3c296d);
};
a0_0x45645e.prototype.getPremiumSkinFolder = function () {
  switch (this.animalPremiumSkin) {
    case 1:
      return "premium/golden/";
    case 2:
      return "premium/locked/";
  }
  return "";
};
a0_0x45645e.prototype.getPremiumSkin = function (_0x4ad696) {
  return this.getPremiumSkinFolder() + _0x4ad696;
};
a0_0x45645e.prototype.onAnimalSpeciesSet = function () {};
a0_0x45645e.prototype.setObjTypes = function (_0x2436d7, _0x239b9d) {
  this.oType = _0x2436d7;
  this.animalType = _0x239b9d;
};
a0_0x45645e.prototype.readCustomData_onNewlyVisible = function (_0xdc9d87) {
  a0_0x45645e.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0xdc9d87);
  var _0x3a35ba = _0xdc9d87.readString();
  this.nickName = _0x3a35ba && _0x3a35ba.length > 0 ? _0x3a35ba : "mope.io";
  this.animalSpecies = _0xdc9d87.readUInt16();
  this.animalSubSpecies = _0xdc9d87.readUInt16();
  this.animalPremiumSkin = _0xdc9d87.readUInt8();
  this.skinThemeID = _0xdc9d87.readUInt8();
  this.mopeSeasonID = _0xdc9d87.readUInt8();
  this.onAnimalSpeciesSet();
  if (this.animalPremiumSkin > 0) {
    this.setSparkleInterval(a0_0x1da5bb(5, 10), a0_0x1da5bb(2, 3));
  }
  this.setNick(this.nickName);
  var _0x44affd = _0xdc9d87.readBitGroup();
  this.readUpdatedFlags(_0x44affd);
  if (this.flag_webStuck) {
    this.readUpdatedProperty(a0_0x46e595, _0xdc9d87);
  }
  this.readUpdatedProperty(a0_0x3863ba, _0xdc9d87);
};
a0_0x45645e.prototype.custom_canvas = null;
a0_0x45645e.prototype.drawCanvas = function () {
  if (!this.custom_canvas) {
    this.custom_canvas = document.createElement("canvas");
    var _0x422715 = this.rad * 20;
    var _0x14de47 = this.rad * 20;
    this.custom_canvas.width = _0x422715;
    this.custom_canvas.height = _0x14de47;
    var _0x2711da = this.custom_canvas.getContext("2d");
    _0x2711da.save();
    _0x2711da.filter = "blur(4px)";
    _0x2711da.globalAlpha = 1;
    _0x2711da.fillStyle = "black";
    _0x2711da.fillRect(0, 0, this.custom_canvas.width * 2, this.custom_canvas.height * 2);
    _0x2711da.globalCompositeOperation = "xor";
    _0x2711da.beginPath();
    _0x2711da.arc(_0x422715 / 2, _0x422715 / 2, this.rad + 5, 0, Math.PI * 2);
    _0x2711da.fillStyle = "red";
    _0x2711da.fill();
    _0x2711da.restore();
  }
  if (this.custom_canvas != null) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 0.5;
    a0_0x4ef4f3.drawImage(this.custom_canvas, -this.custom_canvas.width / 2, -this.custom_canvas.height / 2, this.custom_canvas.width, this.custom_canvas.height);
    a0_0x4ef4f3.restore();
  }
};
a0_0x45645e.prototype.updateAngle = function (_0x9c1d3c) {
  var _0x4ad962 = a0_0x844a6b(_0x9c1d3c - 90);
  this.angleDelta = a0_0x56c3ae(this.angle, _0x4ad962);
  this.oAngle = this.angle;
  if (this.firstPosUpd) {
    this.oAngle = this.angle = _0x4ad962;
    this.angleDelta = 0;
  }
};
a0_0x45645e.prototype.readUpdatedFlags = function (_0x15a058) {
  a0_0x45645e.superClass.prototype.readUpdatedFlags.call(this, _0x15a058);
  this.flag_lowWat = _0x15a058.getBool();
  this.flag_underWater = _0x15a058.getBool();
  this.flag_usingDiveAbility = _0x15a058.getBool();
  this.flag_eff_invincible = _0x15a058.getBool();
  this.flag_usingAbility = _0x15a058.getBool();
  this.flag_tailBitten = _0x15a058.getBool();
  this.flag_eff_stunned = _0x15a058.getBool();
  this.flag_iceSliding = _0x15a058.getBool();
  this.flag_eff_frozen = _0x15a058.getBool();
  this.flag_eff_onFire = _0x15a058.getBool();
  this.flag_eff_healing = _0x15a058.getBool();
  this.flag_eff_poison = _0x15a058.getBool();
  this.flag_constricted = _0x15a058.getBool();
  this.flag_webStuck = _0x15a058.getBool();
  this.flag_stealth = _0x15a058.getBool();
  this.flag_eff_bleeding = _0x15a058.getBool();
  this.flag_flying = _0x15a058.getBool();
  this.flag_isGrabbed = _0x15a058.getBool();
  this.flag_eff_aniInClaws = _0x15a058.getBool();
  this.flag_eff_stunk = _0x15a058.getBool();
  this.flag_cold = _0x15a058.getBool();
  this.flag_inWater = _0x15a058.getBool();
  this.flag_inLava = _0x15a058.getBool();
  this.flag_canClimbHill = _0x15a058.getBool();
  this.flag_isClimbingHill = _0x15a058.getBool();
  this.flag_isDevMode = _0x15a058.getBool();
  this.flag_eff_slimed = _0x15a058.getBool();
  this.flag_eff_wobbling = _0x15a058.getBool();
  this.flag_eff_hot = _0x15a058.getBool();
  this.flag_eff_sweatPoisoned = _0x15a058.getBool();
  this.flag_eff_shivering = _0x15a058.getBool();
  this.flag_inHidingHole = _0x15a058.getBool();
  this.flag_eff_grabbedByFlytrap = _0x15a058.getBool();
  this.flag_eff_aloeveraHealing = _0x15a058.getBool();
  this.flag_eff_tossedInAir = _0x15a058.getBool();
  this.flag_eff_isOnSpiderWeb = _0x15a058.getBool();
  this.flag_fliesLikeDragon = _0x15a058.getBool();
  this.flag_eff_isInMud = _0x15a058.getBool();
  this.flag_eff_statue = _0x15a058.getBool();
  this.flag_eff_isOnTree = _0x15a058.getBool();
  this.flag_eff_isUnderTree = _0x15a058.getBool();
  this.flag_speared = _0x15a058.getBool();
  this.flag_eff_dirty = _0x15a058.getBool();
  this.flag_eff_virusInfection = _0x15a058.getBool();
  this.flag_eff_wearingMask = _0x15a058.getBool();
  this.flag_eff_sanitized = _0x15a058.getBool();
  this.flag_viewing1v1Invite = _0x15a058.getBool();
  this.flag_can1v1 = _0x15a058.getBool();
  this.flag_isInArena = _0x15a058.getBool();
  if (this.flag_isDevMode) {
    this.flag_hideDevPrint = _0x15a058.getBool();
  }
  this.flag_eff_electroStun = _0x15a058.getBool();
};
a0_0x45645e.prototype.eff_webStuckType = 0;
a0_0x45645e.prototype.readUpdatedProperty = function (_0x1a1733, _0x4d375d) {
  if (_0x1a1733 == a0_0x1ed0cc) {
    this.wins1v1 = _0x4d375d.readUInt16();
    if (a0_0x5557b5 && this.flag_can1v1) {
      let _0x563c2c = "\n(wins:" + this.wins1v1 + ")";
      this.nickTXT.setText(this.nickName + _0x563c2c);
      this.winsAddedInNick = true;
    } else if (this.winsAddedInNick) {
      this.winsAddedInNick = false;
      this.nickTXT.setText(this.nickName);
    }
  } else if (_0x1a1733 == a0_0x45e360) {
    this.devMode_num = _0x4d375d.readUInt8();
    console.log(this.devMode_num);
  } else if (_0x1a1733 == a0_0x3b8b53) {
    this.playerNumberFor1v1Arena = _0x4d375d.readUInt8();
  } else if (_0x1a1733 == a0_0x1a4262) {
    this.diveType = _0x4d375d.readUInt8();
  } else if (_0x1a1733 == a0_0x1d0725) {
    this.eff_statueType = _0x4d375d.readUInt8();
  } else if (_0x1a1733 == a0_0x1ade75) {
    this.eff_constrictedSpecies = _0x4d375d.readUInt16();
  } else if (_0x1a1733 == a0_0x2b1fd1) {
    this.eff_constrictedSubSpecies = _0x4d375d.readUInt16();
  } else if (_0x1a1733 == a0_0x46e595) {
    this.eff_webStuckType = _0x4d375d.readUInt8();
  } else if (_0x1a1733 == a0_0x1bcd6d) {
    this.eff_dirtType = _0x4d375d.readUInt8();
  } else if (_0x1a1733 == a0_0x381f26) {
    let _0x3ee112 = _0x4d375d.readUInt8();
    if (this.infectionBarA < 0.001) {
      this.infectionPer = _0x3ee112;
    }
    this.infectionPer_n = _0x3ee112;
    this.infectionBarTimeoutT = +new Date() + 3000;
  } else if (_0x1a1733 == a0_0x112239) {
    this.lastHidingHoleID = _0x4d375d.readUInt32();
    this.hidingHoleVisibilityRad = _0x4d375d.readUInt16() / 4;
  } else if (_0x1a1733 == a0_0x10d897) {
    let _0x3188c8 = _0x4d375d.readUInt8();
    if (this.infectionBarA < 0.001) {
      this.infectionPer = _0x3188c8;
    }
    this.infectionPer_n = _0x3188c8;
    this.infectionBarTimeoutT = +new Date() + 3000;
  } else if (_0x1a1733 == a0_0x1a7750) {
    this.lava = _0x4d375d.readUInt8();
  } else if (_0x1a1733 == a0_0x196eb0) {
    let _0xceb176 = _0x4d375d.readUInt16() / 4;
    let _0xe93824 = _0x4d375d.readUInt16() / 4;
    if (_0xceb176 > 0 && _0xe93824 > 0) {
      this.hasDevTarget = a0_0x1c918d == this.id;
      this.target_ox = this.devTargetX;
      this.target_oy = this.devTargetY;
      this.target_nx = _0xceb176;
      this.target_ny = _0xe93824;
    } else {
      this.hasDevTarget = false;
    }
  } else if (_0x1a1733 == a0_0x3863ba) {
    this.teamID = _0x4d375d.readUInt8();
  } else {
    this.customUpdatedProperty(_0x1a1733, _0x4d375d);
  }
};
a0_0x45645e.prototype.devTargetX = 0;
a0_0x45645e.prototype.devTargetY = 0;
a0_0x45645e.prototype.target_ox = 0;
a0_0x45645e.prototype.target_oy = 0;
a0_0x45645e.prototype.target_nx = 0;
a0_0x45645e.prototype.target_ny = 0;
a0_0x45645e.prototype.hasDevTarget = false;
a0_0x45645e.prototype.onLerpUpdate = function (_0x3f1e93) {
  if (this.hasDevTarget) {
    this.devTargetX = _0x3f1e93 * (this.target_nx - this.target_ox) + this.target_ox;
    this.devTargetY = _0x3f1e93 * (this.target_ny - this.target_oy) + this.target_oy;
  }
};
a0_0x45645e.prototype.beforeCustomDraw = function (_0x4628ee) {
  if (this.hasDevTarget) {
    console.log(this.devTargetX + ":" + this.devTargetY);
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.strokeStyle = "yellow";
    a0_0x4ef4f3.lineWidth = 2;
    a0_0x4ef4f3.globalAlpha = 1;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.moveTo(this.x, this.y);
    a0_0x4ef4f3.lineTo(this.devTargetX, this.devTargetY);
    a0_0x4ef4f3.stroke();
    a0_0x4ef4f3.restore();
  }
};
a0_0x45645e.prototype.customUpdatedProperty = function (_0x3ab848, _0x586c3a) {};
a0_0x45645e.prototype.diveType = 0;
a0_0x45645e.prototype.lastHidingHoleID = 0;
a0_0x45645e.prototype.hidingHoleVisibilityRad = 0;
a0_0x45645e.prototype.winsAddedInNick = false;
function a0_0x45645e(_0x58a16e, _0x5343f8) {
  a0_0x45645e.superClass.call(this, a0_0x1370b8);
  this.animalType = _0x5343f8;
}
a0_0x45645e.prototype.getAbilityInfo = function (_0x35a785) {
  if (this.animalType == a0_0x162473) {
    var _0x3e31b9 = {
      abilName: "Claw Slash!",
      abilImg: "skins/arctic/bear/" + this.animalSpecies + "/clawslash.png",
      skinThemeID: this.skinThemeID,
      mopeSeasonID: this.mopeSeasonID
    };
    return _0x3e31b9;
  } else {
    return a0_0x471a99(_0x35a785);
  }
};
a0_0x45645e.prototype.calculateZIndex = function () {
  this.updateZ();
  if (a0_0x1528ea && a0_0x1c918d == this.id) {
    this.z = 2000 + this.rad;
  } else if (this.flag_eff_grabbedByFlytrap) {
    this.z = 1100 + this.rad;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else if (this.flag_flying) {
    this.z = 100000;
    if (this.flag_isGrabbed) {
      this.z -= this.rad;
    } else {
      this.z += this.rad;
    }
    if (this.flag_eff_aniInClaws) {
      this.z += 1000;
    }
    if (this.specType2 == 100) {
      this.z = 1014;
    }
  } else if (this.flag_underWater || this.flag_usingAbility && this.animalType == a0_0x2347de) {
    this.z = -151;
  } else {
    if (this.flag_usingAbility && (this.animalType == a0_0x52cd8c || this.animalType == a0_0x4e94e8 || this.animalType == a0_0x4b0faa)) {
      this.z = 10001 + this.rad;
    } else if (this.flag_canClimbHill && this.animalType != a0_0x4b0faa || this.animalType == a0_0x5a613b || this.animalType == a0_0x32eb58 || this.animalType == a0_0x18ddf3 || this.animalType == a0_0x162473 || this.animalType == a0_0xce170f || this.animalType == a0_0x58bf2a || this.animalType == a0_0x34beb5 || this.animalType == a0_0x6e4e18 || this.animalType == a0_0x38090e || this.animalType == a0_0x5510d8 || this.animalType == a0_0xbfada || this.animalType == a0_0x252dcd) {
      this.z = 1000 + this.rad;
    } else if (this.animalType == a0_0x257f12) {
      this.z = 1009 + this.rad;
    } else if (this.animalType == a0_0xbf4f2c) {
      this.z = 1008 + (this.flag_usingAbility ? 1 : 0) + this.rad;
    } else {
      this.z = this.rad * 1.5;
    }
    if (this.flag_fliesLikeDragon || this.flag_isInArena) {
      this.z += 2000;
    }
  }
  this.updateZ_onTree(this.z);
};
a0_0x45645e.prototype.canDrawDark = function () {
  if (this.flag_inHidingHole) {
    return true;
  }
  return false;
};
var a0_0x55b5b8 = null;
a0_0x45645e.prototype.drawDark = function () {
  if (!this.canDrawDark()) {
    console.log("cant draw darkness!");
    return;
  }
  if (a0_0x55b5b8 == null) {
    a0_0x55b5b8 = document.createElement("canvas");
    var _0x29597f = this.rad * 10;
    var _0xfcc94 = this.rad * 10;
    a0_0x55b5b8.width = _0x29597f;
    a0_0x55b5b8.height = _0xfcc94;
    var _0x35435e = a0_0x55b5b8.getContext("2d");
    _0x35435e.save();
    _0x35435e.filter = "blur(2px)";
    _0x35435e.globalAlpha = 1;
    _0x35435e.fillStyle = "black";
    _0x35435e.fillRect(0, 0, a0_0x55b5b8.width, a0_0x55b5b8.height);
    _0x35435e.globalCompositeOperation = "xor";
    _0x35435e.beginPath();
    _0x35435e.arc(_0x29597f / 2, _0x29597f / 2, this.rad - 3, 0, Math.PI * 2);
    _0x35435e.fillStyle = "blue";
    _0x35435e.fill();
    _0x35435e.restore();
  }
  if (a0_0x55b5b8 != null) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 0.5;
    a0_0x4ef4f3.drawImage(a0_0x55b5b8, -a0_0x55b5b8.width / 2, -a0_0x55b5b8.height / 2, a0_0x55b5b8.width, a0_0x55b5b8.height);
    a0_0x4ef4f3.restore();
  }
};
a0_0x45645e.prototype.skinThemeID = 0;
a0_0x45645e.prototype.getSkinImagePath = function (_0x971df3) {
  var _0x482896 = "";
  if (this.skinThemeID != 0 && (this.animalSpecies == 0 || this.animalSpecies == 1 && this.animalType == a0_0x59b734)) {
    _0x482896 = "./assets/t/" + this.skinThemeID + "/" + _0x971df3;
  } else {
    var _0x111a46 = _0x971df3.includes("_dive") ? 2 : this.mopeSeasonID;
    _0x482896 = "./assets/s/" + _0x111a46 + "/" + _0x971df3;
  }
  return _0x482896;
};
a0_0x45645e.prototype.getSkinImagePathForShop = function (_0x1f128e) {
  var _0x137c2d = "";
  if (this.skinThemeID != 0 && this.animalSpecies == 0) {
    _0x137c2d = "./assets/t/" + this.skinThemeID + "/skins/" + _0x1f128e;
  } else {
    _0x137c2d = "./assets/s/" + this.mopeSeasonID + "/skins/" + _0x1f128e;
  }
  return _0x137c2d;
};
a0_0x45645e.prototype.getSkinImageObj = function (_0x4e33c2) {
  var _0x4cb6cf = this.getSkinImagePath(_0x4e33c2);
  return a0_0x2cc313(_0x4cb6cf, function (_0x135c78) {
    console.log(_0x135c78.src);
  });
};
a0_0x45645e.prototype.getSkinImageObjAsync = async function (_0x4fa7af) {
  var _0x17f0c6 = this.getSkinImagePath(_0x4fa7af);
  return a0_0x4f6812(_0x17f0c6);
};
a0_0x45645e.prototype.getImagePath = function (_0xe00c7f, _0x560239) {
  const _0x493b94 = _0x560239 === undefined ? this.mopeSeasonID : _0x560239;
  var _0x1a58f2 = "";
  _0x1a58f2 = "./assets/s/" + _0x493b94 + "/" + _0xe00c7f;
  return _0x1a58f2;
};
a0_0x45645e.prototype.getImageObjForPath = function (_0x262173, _0x3f0078) {
  var _0x177ca6 = this.getImagePath(_0x262173, _0x3f0078);
  return a0_0x2cc313(_0x177ca6, function (_0x3906a5) {
    console.log(_0x3906a5.src);
  });
};
a0_0x45645e.prototype.setRadius = function (_0x220d97) {
  this.rad = _0x220d97;
};
window.Animal = a0_0x45645e;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x45645e, a0_0x1370b8);
var a0_0x2011f1 = a0_0x48a1fc;
var a0_0x58d04c = a0_0x12658e;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x48a1fc.prototype.animalType = a0_0x4083f6;
a0_0x48a1fc.prototype.animalSpecies = 0;
a0_0x48a1fc.prototype.animalSubSpecies = 0;
a0_0x48a1fc.prototype.segmentNum = 0;
a0_0x48a1fc.prototype.updateZ = function () {
  this.z = 30 - this.segmentNum;
};
a0_0x48a1fc.prototype.customDraw = function (_0x5b6106) {
  a0_0x4ef4f3.save();
  var _0x5650fc = this.segmentNum;
  var _0x3998a3 = this.getSkinImageObj("skins/deathworm/segment_" + _0x5650fc + ".png");
  if (_0x3998a3) {
    var _0x13c8e2 = this.rad * 2;
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x3998a3, -_0x13c8e2, -_0x13c8e2, _0x13c8e2 * 2, _0x13c8e2 * 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x48a1fc.prototype.readCustomData_onNewlyVisible = function (_0x517166) {
  a0_0x48a1fc.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x517166);
  this.segmentNum = _0x517166.readUInt8();
  this.animalSpecies = _0x517166.readUInt8();
  this.animalSubSpecies = _0x517166.readUInt8();
  this.animalPremiumSkin = _0x517166.readUInt8();
  console.log("segment num: " + this.segmentNum);
};
function a0_0x48a1fc(_0x241483, _0x4928ea) {
  a0_0x48a1fc.superClass.call(this, a0_0x5ec541);
  this.animalType = _0x4928ea;
}
window.AnimalBody = a0_0x48a1fc;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x48a1fc, a0_0x5ec541);
var a0_0x58d04c = a0_0x12658e;
a0_0x132103.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x132103.prototype.constructor = a0_0x132103;
a0_0x132103.superClass = a0_0x58d04c;
a0_0x132103.prototype.updateZ = function () {
  this.z = 1002;
};
a0_0x132103.prototype.readUpdatedProperty = function (_0x4fec9c, _0x4edb57) {
  if (_0x4fec9c == a0_0x11e112) {
    this.webTransparency = _0x4edb57.readUInt8();
  }
};
a0_0x132103.prototype.readCustomData_onNewlyVisible = function (_0x2dc091) {
  this.webTransparency = _0x2dc091.readUInt8();
  this.webType = _0x2dc091.readUInt8();
};
a0_0x132103.prototype.customDraw = function (_0x286c0b) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha *= this.webTransparency / 100 * 0.9;
  var _0x32ee30 = this.getSkinImageObj("img/web/" + this.webType + "/spiderWeb.png");
  if (_0x32ee30) {
    var _0x3b2da6 = this.rad;
    a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0x32ee30, -_0x3b2da6, -_0x3b2da6, _0x3b2da6 * 2, _0x3b2da6 * 2);
  }
  a0_0x4ef4f3.restore();
};
function a0_0x132103() {
  a0_0x132103.superClass.call(this, a0_0x4b80cb);
  this.webTransparency = 0;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
window.SpiderWeb = a0_0x132103;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x132103, a0_0x4b80cb);
var a0_0x58d04c = a0_0x45645e;
a0_0x196d02.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x196d02.prototype.constructor = a0_0x196d02;
a0_0x196d02.superClass = a0_0x58d04c;
a0_0x196d02.prototype.animalInfo = function () {
  var _0x367ac6 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x367ac6.aniName = "Octopus";
      break;
    case 111:
      _0x367ac6.aniName = "Classic Octopus";
      break;
    case 112:
      _0x367ac6.aniName = "Gold-trim Octopus";
      break;
    case 200:
      _0x367ac6.aniName = "Vampire Squid";
      break;
    case 201:
      _0x367ac6.aniName = "Fuchsia Tiger";
      break;
    case 202:
      _0x367ac6.aniName = "Na Kika";
      break;
  }
  _0x367ac6.skinName = this.getSkinName();
  _0x367ac6.aniDesc = "";
  _0x367ac6.upgradeText = "UPGRADED to " + _0x367ac6.aniName + "!\nPress W to use your 'Disguise' ability!\n(Hint: wait for prey to bite you- they get stunned!)";
  _0x367ac6.aniCol = "#ff8340";
  return _0x367ac6;
};
a0_0x196d02.prototype.getSkinName = function () {
  let _0x33ae5b = this.getSpeciesPath() + "/octopus";
  _0x33ae5b += this.specType == 0 ? "" : 1;
  return _0x33ae5b;
};
a0_0x196d02.prototype.getSpeciesPath = function () {
  return "ocean/octopus/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x196d02.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x196d02.prototype.getAbilityInfo = function (_0xebca10) {
  var _0x484a24 = {
    abilName: "Disguise"
  };
  _0x484a24.abilImg = "skins/" + this.getSpeciesPath() + "/ability.png";
  _0x484a24.skinThemeID = this.skinThemeID;
  _0x484a24.mopeSeasonID = this.mopeSeasonID;
  return _0x484a24;
};
a0_0x196d02.prototype.drawUnderSkinImg = function () {
  if (this.animalSpecies == 200) {
    return;
  }
  var _0x4515b0 = 500 / 340;
  var _0x13ba50 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/head.png");
  if (_0x13ba50) {
    a0_0x4ef4f3.save();
    var _0x115be6 = 1.1;
    var _0x7be378 = this.rad - this.outlineW;
    a0_0x4ef4f3.drawImage(_0x13ba50, -_0x7be378 * _0x4515b0, -_0x7be378 * _0x115be6 * _0x4515b0, _0x7be378 * 2 * _0x4515b0, _0x7be378 * 2 * _0x4515b0);
    a0_0x4ef4f3.restore();
  }
};
a0_0x196d02.prototype.readCustomData_onNewlyVisible = function (_0x28411e) {
  a0_0x196d02.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x28411e);
  var _0x39f253 = _0x28411e.readUInt8() > 0;
  if (_0x39f253) {
    var _0x11f05a = _0x28411e.readUInt8() > 0;
    var _0x44341d = _0x28411e.readUInt16();
    this.createDisguiseAniObj(_0x11f05a, _0x44341d);
  }
};
a0_0x196d02.prototype.customUpdatedProperty = function (_0x590bbb, _0x27ea97) {
  if (_0x590bbb == a0_0x40b66c) {
    var _0x11c828 = _0x27ea97.readUInt8() > 0;
    if (_0x11c828) {
      var _0x2e1e7b = _0x27ea97.readUInt8() > 0;
      var _0x357af8 = _0x27ea97.readUInt16();
      this.createDisguiseAniObj(_0x2e1e7b, _0x357af8);
    } else {
      this.octoDrawObj = null;
    }
  }
};
a0_0x196d02.prototype.createDisguiseAniObj = function (_0x5a1678, _0x59426a) {
  if (this.octoDrawObj == null) {
    var _0x1d773d = _0x5a1678 ? a0_0x1370b8 : _0x59426a;
    var _0xe0d0d9 = _0x5a1678 ? _0x59426a : null;
    var _0x52a611 = a0_0xa5d548.createGameObjOfOType(_0x1d773d, _0xe0d0d9);
    if (_0x5a1678) {
      _0x52a611.animalType = _0xe0d0d9;
    }
    _0x52a611.oRad = this.oRad;
    _0x52a611.nRad = this.nRad;
    _0x52a611.curBiome = this.curBiome;
    this.octoDrawObj = _0x52a611;
    this.octoDrawObj.mopeSeasonID = 2;
  }
};
a0_0x196d02.prototype.drawUnderSkinImgOutline = function () {
  a0_0x196d02.superClass.prototype.drawUnderSkinImgOutline.call(this);
};
a0_0x196d02.prototype.drawOnTopOfSkinImg = function () {
  a0_0x196d02.superClass.prototype.drawOnTopOfSkinImg.call(this);
  if (this.flag_usingAbility) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 1 - this.underwaterA;
    if (this.octoDisguiseObjT == a0_0x5ca180) {
      this.octoDrawObj.nRad = 25;
    } else if (this.octoDisguiseObjT == a0_0x4a0860) {
      this.octoDrawObj.nRad = 17;
    } else if (this.octoDisguiseObjT == a0_0x4230b4) {
      this.octoDrawObj.nRad = 15;
    } else if (this.octoDisguiseObjT == a0_0x1344db) {
      this.octoDrawObj.nRad = 15;
      this.octoDrawObj.innerRad = 35;
    } else {
      this.octoDrawObj.nRad = this.rad;
    }
    this.octoDrawObj.mopeSeasonID = 2;
    this.octoDrawObj.draw();
    a0_0x4ef4f3.restore();
  }
};
a0_0x196d02.prototype.drawWhenUnderwater = function () {
  a0_0x196d02.superClass.prototype.drawWhenUnderwater.call(this);
};
a0_0x196d02.prototype.octoDisguiseObjT = 0;
a0_0x196d02.prototype.octoIsAnimal = false;
a0_0x196d02.prototype.drawHealthBar = function () {
  if (this.flag_usingAbility) {
    if (this.octoIsAnimal) {
      a0_0x196d02.superClass.prototype.drawNickName.call(this, 1);
      this.octoDrawObj.curBiome = this.curBiome;
      this.hpPer_n = 2;
      this.hpPer = 25;
      this.hpBarA = 1;
    } else {
      return;
    }
  }
  a0_0x4ef4f3.save();
  var _0x17c603 = a0_0x4f736f < this.hpBarTimeoutT ? 1 : 0;
  this.hpBarA += (_0x17c603 - this.hpBarA) * 0.04;
  if (this.hpBarA > 0.001) {
    this.hpPer += (this.hpPer_n - this.hpPer) * 0.1;
    var _0xd4b12 = Math.max(1, this.rad / 25);
    var _0x90276e = _0xd4b12 * 20;
    var _0x4dad45 = _0xd4b12 * 5;
    var _0x36172a = 0;
    var _0xa55345 = -this.rad - _0xd4b12 * 10;
    a0_0x4ef4f3.globalAlpha *= this.hpBarA;
    a0_0x4ef4f3.fillStyle = "rgba(0,0,0,0.35)";
    a0_0x4ef4f3.fillRect(_0x36172a - _0x90276e / 2, _0xa55345 - _0x4dad45 / 2, _0x90276e, _0x4dad45);
    a0_0x4ef4f3.fillStyle = "#16D729";
    var _0x355756 = _0x90276e * (this.hpPer / 100);
    if (this.flag_usingAbility && this.octoIsAnimal) {
      _0x355756 = _0x90276e * (25 / 100);
    }
    a0_0x4ef4f3.fillRect(_0x36172a - _0x90276e / 2, _0xa55345 - _0x4dad45 / 2, _0x355756, _0x4dad45);
  }
  a0_0x4ef4f3.restore();
};
function a0_0x196d02() {
  a0_0x196d02.superClass.call(this, a0_0x1370b8);
}
window.Octopus = a0_0x196d02;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x196d02, a0_0x1370b8, a0_0x2aaf90);
var a0_0x58d04c = a0_0x45645e;
a0_0x10bb59.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x10bb59.prototype.constructor = a0_0x10bb59;
a0_0x10bb59.superClass = a0_0x58d04c;
a0_0x10bb59.prototype.animalData = {};
a0_0x10bb59.prototype.animalInfo = function () {
  if (this.animalData[this.animalSpecies] == undefined) {
    const _0x244bfc = this.animalSpecies === 0 ? "Bald Eagle" : this.animalSpecies === 1 ? "Golden Eagle" : this.animalSpecies === 2 ? "Harpy Eagle!" : this.animalSpecies === 3 ? "Greater Spotted Eagle!" : this.animalSpecies == 111 ? "Classic Eagle" : "Gold-trim Eagle";
    this.animalData[this.animalSpecies] = {
      info: {
        aniName: _0x244bfc,
        aniCol: "#5b400d",
        upgradeText: "UPGRADED to " + _0x244bfc + "!\n                      Eagles can fly up other animals in the air!\n                      " + (this.animalSpecies === 1 ? "(Can even pick monsters!)" : this.animalSpecies === 2 ? "(picks anything including Black Dragon)" : this.animalSpecies === 3 ? "(picks everything!)" : "")
      },
      ability: {
        abilName: "Fly with prey",
        abilImg: "skins/land/eagle/" + this.animalSpecies + "/eagle.png",
        speciesType: this.animalSpecies,
        skinThemeID: this.skinThemeID,
        mopeSeasonID: this.mopeSeasonID
      },
      skin: (() => {
        const _0x442b60 = this.mopeSeasonID === 2 && this.animalSpecies === 0 && this.animalSubSpecies > 0 ? "/" + this.animalSubSpecies : "";
        const _0x182809 = "land/eagle/" + this.animalSpecies + _0x442b60 + "/eagle";
        return {
          path: ["" + _0x182809, _0x182809 + "1", _0x182809 + "2", _0x182809 + "3"],
          wing1: "skins/" + _0x182809 + "_wing1.png",
          wing2: "skins/" + _0x182809 + "_wing2.png",
          head: "skins/" + _0x182809 + "_head.png",
          head1: "skins/" + _0x182809 + "_head1.png",
          head2: "skins/" + _0x182809 + "_head2.png"
        };
      })()
    };
  }
  return this.animalData[this.animalSpecies].info;
};
a0_0x10bb59.prototype.getSkinName = function () {
  return this.animalData[this.animalSpecies].skin.path[this.specType];
};
a0_0x10bb59.prototype.getWing = function (_0x5dfad2) {
  if (_0x5dfad2 == 1) {
    return this.animalData[this.animalSpecies].skin.wing1;
  } else {
    return this.animalData[this.animalSpecies].skin.wing2;
  }
};
a0_0x10bb59.prototype.getHead = function () {
  if (this.specType == 1) {
    return this.animalData[this.animalSpecies].skin.head2;
  } else {
    return this.animalData[this.animalSpecies].skin.head;
  }
};
a0_0x10bb59.prototype.getAbilityInfo = function (_0x213e9c) {
  return this.animalData[this.animalSpecies].ability;
};
a0_0x10bb59.prototype.ANIMATION_NAME = "eagle";
a0_0x10bb59.prototype.drawUnderSkinImg = function () {
  if (this.mopeSeasonID !== 0) {
    return;
  }
  if (this.flag_flying && !this.flag_isGrabbed) {
    a0_0x4ef4f3.save();
    var _0x501867 = a0_0x232cc7(this.ANIMATION_NAME, this.spawnTime);
    if (_0x501867 !== undefined && _0x501867 != null) {
      this.theFrame = _0x501867;
    }
    var _0x920546 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
    var _0x1a2b3f = this.getSkinImageObj(this.getWing(1));
    if (_0x1a2b3f) {
      a0_0x4ef4f3.save();
      var _0x2fd95b = -(-0.2 + _0x920546) * a0_0x2b691e;
      var _0x385786 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(_0x2fd95b);
      var _0x190d3e = 0;
      var _0x423c10 = this.rad;
      var _0x2129a8 = _0x385786 * 2 * 0.7;
      var _0x1390c0 = _0x385786 * 2;
      var _0x3ff0f0 = -0.2;
      var _0x585df1 = 1.2;
      a0_0x4ef4f3.drawImage(_0x1a2b3f, _0x190d3e + _0x2129a8 * -_0x3ff0f0, _0x423c10 + _0x1390c0 * -_0x585df1, _0x2129a8, _0x1390c0);
      a0_0x4ef4f3.restore();
    }
    var _0x1a2b3f = this.getSkinImageObj(this.getWing(2));
    if (_0x1a2b3f) {
      a0_0x4ef4f3.save();
      var _0x2fd95b = -(-0.2 + _0x920546) * a0_0x844a6b(-90);
      var _0x385786 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(_0x2fd95b);
      var _0x190d3e = 0;
      var _0x423c10 = this.rad;
      var _0x2129a8 = _0x385786 * 2 * 0.7;
      var _0x1390c0 = _0x385786 * 2;
      var _0x3ff0f0 = 1.2;
      var _0x585df1 = 1.2;
      a0_0x4ef4f3.drawImage(_0x1a2b3f, _0x190d3e + _0x2129a8 * -_0x3ff0f0, _0x423c10 + _0x1390c0 * -_0x585df1, _0x2129a8, _0x1390c0);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  }
};
a0_0x10bb59.prototype.drawSkinCustomization = function () {
  if (this.mopeSeasonID == 0) {
    return;
  }
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x31bd55 = 500 / 340;
  {
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x4ef4f3.save();
      var _0x43c0d5 = a0_0x232cc7(this.ANIMATION_NAME, this.spawnTime);
      if (_0x43c0d5 !== undefined && _0x43c0d5 != null) {
        this.theFrame = _0x43c0d5;
      }
      var _0x1f1fc5 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      var _0x18662f = this.getSkinImageObj(this.getWing(1));
      if (_0x18662f) {
        a0_0x4ef4f3.save();
        var _0x4a8f33 = -(-0.2 + _0x1f1fc5) * a0_0x2b691e;
        var _0x5625e6 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(45) + _0x4a8f33);
        var _0x15aa78 = 0;
        var _0x23e6c0 = this.rad;
        var _0x5efdbe = _0x5625e6 * 2 * 0.62;
        var _0x59abe = _0x5625e6 * 2.5;
        var _0x3096e7 = 0.2;
        var _0x12e2ce = 1.7;
        a0_0x4ef4f3.drawImage(_0x18662f, _0x15aa78 + _0x5efdbe * -_0x3096e7, _0x23e6c0 + _0x59abe * -_0x12e2ce, _0x5efdbe, _0x59abe);
        a0_0x4ef4f3.restore();
      }
      var _0x18662f = this.getSkinImageObj(this.getWing(2));
      if (_0x18662f) {
        a0_0x4ef4f3.save();
        var _0x4a8f33 = -(-0.2 + _0x1f1fc5) * a0_0x844a6b(-90);
        var _0x5625e6 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(-45) + _0x4a8f33);
        var _0x15aa78 = 0;
        var _0x23e6c0 = this.rad;
        var _0x5efdbe = _0x5625e6 * 2 * 0.62;
        var _0x59abe = _0x5625e6 * 2.5;
        var _0x3096e7 = 0.8;
        var _0x12e2ce = 1.7;
        a0_0x4ef4f3.drawImage(_0x18662f, _0x15aa78 + _0x5efdbe * -_0x3096e7, _0x23e6c0 + _0x59abe * -_0x12e2ce, _0x5efdbe, _0x59abe);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.restore();
    } else if (this.specType == 1 && this.mopeSeasonID != 0) {
      a0_0x4ef4f3.save();
      var _0x24bb22 = (a0_0x4f736f - this.spawnTime) / 1000;
      var _0x1f1fc5 = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x24bb22, 0.7, 0.3, 2) : 0;
      var _0x18662f = this.getSkinImageObj(this.getWing(1));
      if (_0x18662f) {
        a0_0x4ef4f3.save();
        var _0x4a8f33 = -(-0.2 + _0x1f1fc5) * a0_0x844a6b(45);
        var _0x5625e6 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(15) + _0x4a8f33);
        var _0x15aa78 = 0;
        var _0x23e6c0 = this.rad;
        var _0x5efdbe = _0x5625e6 * 2 * 0.8;
        var _0x59abe = _0x5625e6 * 2.2;
        var _0x3096e7 = 0;
        var _0x12e2ce = 1.5;
        a0_0x4ef4f3.drawImage(_0x18662f, _0x15aa78 + _0x5efdbe * -_0x3096e7, _0x23e6c0 + _0x59abe * -_0x12e2ce, _0x5efdbe, _0x59abe);
        a0_0x4ef4f3.restore();
      }
      var _0x18662f = this.getSkinImageObj(this.getWing(2));
      if (_0x18662f) {
        a0_0x4ef4f3.save();
        var _0x4a8f33 = -(-0.2 + _0x1f1fc5) * a0_0x844a6b(-45);
        var _0x5625e6 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(-15) + _0x4a8f33);
        var _0x15aa78 = 0;
        var _0x23e6c0 = this.rad;
        var _0x5efdbe = _0x5625e6 * 2 * 0.8;
        var _0x59abe = _0x5625e6 * 2.2;
        var _0x3096e7 = 1;
        var _0x12e2ce = 1.5;
        a0_0x4ef4f3.drawImage(_0x18662f, _0x15aa78 + _0x5efdbe * -_0x3096e7, _0x23e6c0 + _0x59abe * -_0x12e2ce, _0x5efdbe, _0x59abe);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x3be21f = -0.05;
      if (this.flag_flying) {
        _0x3be21f = 0.1;
      } else if (this.animalSpecies == 2) {
        _0x3be21f = -0.075;
      }
      var _0x17bd25 = this.getSkinImageObj(this.getHead());
      if (_0x17bd25) {
        a0_0x4ef4f3.save();
        var _0x5625e6 = this.rad;
        a0_0x4ef4f3.drawImage(_0x17bd25, -_0x5625e6 * _0x31bd55, (-_0x5625e6 + _0x5625e6 * _0x3be21f) * _0x31bd55, _0x5625e6 * 2 * _0x31bd55, _0x5625e6 * 2 * _0x31bd55);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
function a0_0x10bb59() {
  a0_0x10bb59.superClass.call(this, a0_0x1370b8);
}
window.Eagle = a0_0x10bb59;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x10bb59, a0_0x1370b8, a0_0x52cd8c);
var a0_0x58d04c = a0_0x45645e;
a0_0x5df55f.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5df55f.prototype.constructor = a0_0x5df55f;
a0_0x5df55f.superClass = a0_0x58d04c;
a0_0x5df55f.prototype.getSkinName = function () {
  return "land/ostrich/" + this.animalSpecies + this.getSubSpecies() + "/ostrich";
};
a0_0x5df55f.prototype.getSubSpecies = function () {
  if (this.animalSpecies === 204) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x5df55f.prototype.animalInfo = function () {
  var _0xf2eed6 = {};
  switch (this.animalSpecies) {
    case 0:
      _0xf2eed6.aniName = "Ostrich!";
      break;
    case 1:
      _0xf2eed6.aniName = "Golden Ostrich!";
      break;
    case 2:
      _0xf2eed6.aniName = "Ruffled Ostrich!";
      break;
    case 111:
      _0xf2eed6.aniName = "Classic Ostrich";
      break;
    case 202:
      _0xf2eed6.aniName = "Sunset Ostrich";
      break;
    case 204:
      _0xf2eed6.aniName = "Necromancer Ostrich!";
      break;
  }
  _0xf2eed6.skinName = "land/ostrich/" + this.animalSpecies + this.getSubSpecies() + "/ostrich";
  _0xf2eed6.aniDesc = "";
  _0xf2eed6.upgradeText = "UPGRADED to " + _0xf2eed6.aniName + "! Lay eggs to hatch babies! \nCommand babies by placing your crosshair (right-click/W)-\n They can attack prey!";
  _0xf2eed6.aniCol = "#FF9000";
  return _0xf2eed6;
};
a0_0x5df55f.prototype.getAbilityInfo = function (_0x3c5e23) {
  var _0xa76432 = {
    abilName: "Command Babies!",
    abilImg: "skins/land/ostrich/" + this.animalSpecies + "/ostrich-baby.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0xa76432;
};
a0_0x5df55f.prototype.getSkinImageObj = function (_0xad8487) {
  var _0x5d4643 = this.animalSpecies === 1 || this.animalSpecies === 2 || this.animalSpecies === 204 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0xad8487, _0x5d4643);
};
function a0_0x5df55f() {
  a0_0x5df55f.superClass.call(this, a0_0x1370b8);
}
window.Ostrich = a0_0x5df55f;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5df55f, a0_0x1370b8, a0_0x33fa19);
var a0_0x58d04c = a0_0x45645e;
a0_0x5ebad0.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5ebad0.prototype.constructor = a0_0x5ebad0;
a0_0x5ebad0.superClass = a0_0x58d04c;
a0_0x5ebad0.prototype.getSkinName = function () {
  return "land/ostrich/" + this.animalSpecies + "/ostrich-baby";
};
a0_0x5ebad0.prototype.isEdibleOutlined = function () {
  if (this.mommyID == a0_0x1c918d) {
    return false;
  }
  var _0x4f7fe2 = a0_0x3d5ac5[a0_0x1c918d];
  if (_0x4f7fe2) {
    var _0x25acc0 = _0x4f7fe2.animalType;
    if (_0x25acc0 == a0_0x93d1ea || _0x25acc0 == a0_0xbfada || _0x25acc0 == a0_0x434da0) {
      return false;
    }
  }
  return a0_0x5ebad0.superClass.prototype.isEdibleOutlined.call(this);
  ;
};
a0_0x5ebad0.prototype.getSkinImageObj = function (_0x349e7a) {
  var _0x303fca = this.animalSpecies === 1 || this.animalSpecies === 2 || this.animalSpecies === 204 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x349e7a, _0x303fca);
};
a0_0x5ebad0.prototype.readCustomData_onNewlyVisible = function (_0x2e38cb) {
  a0_0x5ebad0.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x2e38cb);
  this.mommyID = _0x2e38cb.readUInt32();
};
function a0_0x5ebad0() {
  a0_0x5ebad0.superClass.call(this, a0_0x1370b8);
}
window.OstrichBaby = a0_0x5ebad0;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5ebad0, a0_0x1370b8, a0_0x4cfb89);
var a0_0x4d3933 = a0_0x4d3933;
var a0_0x58d04c = a0_0x45645e;
a0_0x4d3933.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4d3933.prototype.constructor = a0_0x4d3933;
a0_0x4d3933.superClass = a0_0x58d04c;
a0_0x4d3933.prototype.getSkinName = function () {
  var _0x5da950 = this.getSpeciesPath("land/falcon") + "/falcon";
  _0x5da950 += this.specType == 0 ? "" : this.specType;
  return _0x5da950;
};
a0_0x4d3933.prototype.animalInfo = function () {
  var _0x517e34 = {};
  var _0x415a58 = "";
  switch (this.animalSpecies) {
    case 0:
      _0x517e34.aniName = "Falcon";
      break;
    case 1:
      _0x517e34.aniName = "Predator";
      _0x415a58 = "\n(No apex is safe from Predator!)";
      break;
    case 2:
      _0x517e34.aniName = "Shaheen";
      _0x415a58 = "\n(Shaheen flies longer and swoop everything!)";
      break;
    case 111:
      _0x517e34.aniName = "Classic Falcon";
      break;
    case 112:
      _0x517e34.aniName = "Gold-trim Falcon";
      break;
    case 202:
      _0x517e34.aniName = "Meteor Falcon";
      break;
  }
  _0x517e34.upgradeText = "UPGRADED to " + _0x517e34.aniName + "! \nFly, and do a powerful dive attack! Aim it well." + _0x415a58;
  _0x517e34.aniCol = "#FF9000";
  _0x517e34.skinName = "land/falcon/" + this.animalSpecies + "/falcon" + (this.specType == 0 ? "" : this.specType);
  return _0x517e34;
};
a0_0x4d3933.prototype.getWing = function (_0x1be5f3, _0x39eb4a, _0x50d3dc) {
  _0x50d3dc = true;
  var _0x2be5be = "skins/land/" + (_0x50d3dc ? this.getSpeciesPath(_0x1be5f3) + "/" : _0x1be5f3 + "/");
  _0x2be5be += _0x1be5f3 + "_wing" + _0x39eb4a + ".png";
  return _0x2be5be;
};
a0_0x4d3933.prototype.getHead = function (_0x4d6b5c, _0x30c371, _0x2cad15) {
  _0x2cad15 = true;
  var _0x395cb6 = "skins/land/" + (_0x2cad15 ? this.getSpeciesPath(_0x4d6b5c) + "/" : _0x4d6b5c + "/");
  _0x395cb6 += _0x4d6b5c + "_head.png";
  return _0x395cb6;
};
a0_0x4d3933.prototype.getAbilityInfo = function (_0x4eca91) {
  var _0x3194a7 = {
    abilName: "Sky dive",
    abilImg: "skins/land/falcon/" + this.animalSpecies + "/falcon_ability.png",
    speciesType: this.animalSpecies,
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x3194a7;
};
a0_0x4d3933.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x584956 = "skins";
  var _0x29ae1c = 500 / 340;
  if (this.flag_flying && !this.flag_isGrabbed && this.specType == 1) {
    a0_0x4ef4f3.save();
    var _0xa7e7bb = a0_0x232cc7("bird", this.spawnTime);
    if (_0xa7e7bb !== undefined && _0xa7e7bb != null) {
      this.theFrame = _0xa7e7bb;
    }
    var _0x525c9c = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
    var _0x47728b = this.getSkinImageObj(this.getWing("falcon", 1, false));
    if (_0x47728b) {
      a0_0x4ef4f3.save();
      var _0x405609 = -(-0.2 + _0x525c9c) * a0_0x844a6b(80);
      var _0x54281d = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(25) + _0x405609);
      var _0x512064 = 0;
      var _0x3f3cd2 = this.rad;
      var _0x574892 = _0x54281d * 2 * 0.65;
      var _0x2538a3 = _0x54281d * 2.5;
      var _0x5f1b95 = 0;
      var _0x11179e = 1.5;
      a0_0x4ef4f3.drawImage(_0x47728b, _0x512064 + _0x574892 * -_0x5f1b95, _0x3f3cd2 + _0x2538a3 * -_0x11179e, _0x574892, _0x2538a3);
      a0_0x4ef4f3.restore();
    }
    var _0x47728b = this.getSkinImageObj(this.getWing("falcon", 2, false));
    if (_0x47728b) {
      a0_0x4ef4f3.save();
      var _0x405609 = -(-0.2 + _0x525c9c) * a0_0x844a6b(-80);
      var _0x54281d = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-25) + _0x405609);
      var _0x512064 = 0;
      var _0x3f3cd2 = this.rad;
      var _0x574892 = _0x54281d * 2 * 0.65;
      var _0x2538a3 = _0x54281d * 2.5;
      var _0x5f1b95 = 1;
      var _0x11179e = 1.5;
      a0_0x4ef4f3.drawImage(_0x47728b, _0x512064 + _0x574892 * -_0x5f1b95, _0x3f3cd2 + _0x2538a3 * -_0x11179e, _0x574892, _0x2538a3);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  } else if (this.flag_flying && this.specType == 2) {
    a0_0x4ef4f3.save();
    var _0x48fd52 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x525c9c = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x48fd52, 0.7, 0.3, 2) : 0;
    var _0x47728b = this.getSkinImageObj(this.getWing("falcon", 1, false));
    if (_0x47728b) {
      a0_0x4ef4f3.save();
      var _0x405609 = - -0.2 * a0_0x844a6b(25);
      var _0x54281d = this.rad * 0.8;
      a0_0x4ef4f3.rotate(_0x405609);
      var _0x512064 = 0;
      var _0x3f3cd2 = this.rad;
      var _0x574892 = _0x54281d * 2 * 0.7;
      var _0x2538a3 = _0x54281d * 2.2;
      var _0x5f1b95 = 0;
      var _0x11179e = 1.5;
      a0_0x4ef4f3.drawImage(_0x47728b, _0x512064 + _0x574892 * -_0x5f1b95, _0x3f3cd2 + _0x2538a3 * -_0x11179e, _0x574892, _0x2538a3);
      a0_0x4ef4f3.restore();
    }
    var _0x47728b = this.getSkinImageObj(this.getWing("falcon", 2, false));
    if (_0x47728b) {
      a0_0x4ef4f3.save();
      var _0x405609 = - -0.2 * a0_0x844a6b(-25);
      var _0x54281d = this.rad * 0.8;
      a0_0x4ef4f3.rotate(_0x405609);
      var _0x512064 = 0;
      var _0x3f3cd2 = this.rad;
      var _0x574892 = _0x54281d * 2 * 0.7;
      var _0x2538a3 = _0x54281d * 2.2;
      var _0x5f1b95 = 1;
      var _0x11179e = 1.5;
      a0_0x4ef4f3.drawImage(_0x47728b, _0x512064 + _0x574892 * -_0x5f1b95, _0x3f3cd2 + _0x2538a3 * -_0x11179e, _0x574892, _0x2538a3);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  } else if (this.flag_flying && this.specType == 3) {
    a0_0x4ef4f3.save();
    var _0x48fd52 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x525c9c = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x48fd52, 0.5, 0.4, 2) : 0;
    var _0x47728b = this.getSkinImageObj(this.getWing("falcon", 1, true));
    if (_0x47728b) {
      a0_0x4ef4f3.save();
      var _0x405609 = -(-0.2 + _0x525c9c) * a0_0x844a6b(45);
      var _0x54281d = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(15) + _0x405609);
      var _0x512064 = 0;
      var _0x3f3cd2 = this.rad;
      var _0x574892 = _0x54281d * 2 * 1;
      var _0x2538a3 = _0x54281d * 2.2;
      var _0x5f1b95 = 0;
      var _0x11179e = 1.5;
      a0_0x4ef4f3.drawImage(_0x47728b, _0x512064 + _0x574892 * -_0x5f1b95, _0x3f3cd2 + _0x2538a3 * -_0x11179e, _0x574892, _0x2538a3);
      a0_0x4ef4f3.restore();
    }
    var _0x47728b = this.getSkinImageObj(this.getWing("falcon", 2, true));
    if (_0x47728b) {
      a0_0x4ef4f3.save();
      var _0x405609 = -(-0.2 + _0x525c9c) * a0_0x844a6b(-45);
      var _0x54281d = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-15) + _0x405609);
      var _0x512064 = 0;
      var _0x3f3cd2 = this.rad;
      var _0x574892 = _0x54281d * 2 * 1;
      var _0x2538a3 = _0x54281d * 2.2;
      var _0x5f1b95 = 1;
      var _0x11179e = 1.5;
      a0_0x4ef4f3.drawImage(_0x47728b, _0x512064 + _0x574892 * -_0x5f1b95, _0x3f3cd2 + _0x2538a3 * -_0x11179e, _0x574892, _0x2538a3);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  }
  if (this.specType != 0 && this.specType != undefined) {
    var _0x3534a3 = this.getSkinImageObj(this.getHead("/falcon", true));
    if (_0x3534a3) {
      a0_0x4ef4f3.save();
      var _0x54281d = this.rad * (this.specType == 3 ? 1.2 : 1);
      var _0x49302c = _0x54281d * 0.2;
      if (this.specType == 3) {
        _0x49302c = _0x54281d * -0.15;
      }
      a0_0x4ef4f3.drawImage(_0x3534a3, -_0x54281d * _0x29ae1c, (-_0x54281d + _0x49302c) * _0x29ae1c, _0x54281d * 2 * _0x29ae1c, _0x54281d * 2 * _0x29ae1c);
      a0_0x4ef4f3.restore();
    }
  }
};
function a0_0x4d3933() {
  a0_0x4d3933.superClass.call(this, a0_0x1370b8);
}
window.Falcon = a0_0x4d3933;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4d3933, a0_0x1370b8, a0_0x1c0686);
var a0_0x58d04c = a0_0x45645e;
a0_0x4f3039.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4f3039.prototype.constructor = a0_0x4f3039;
a0_0x4f3039.superClass = a0_0x58d04c;
a0_0x4f3039.prototype.animalInfo = function () {
  var _0xf8689b = {};
  switch (this.animalSpecies) {
    case 0:
      _0xf8689b.aniName = "Snowy Owl";
      break;
    case 111:
      _0xf8689b.aniName = "Classic Snowy Owl!";
      break;
    case 112:
      _0xf8689b.aniName = "Gold-trim Snowy Owl";
      break;
    case 201:
      _0xf8689b.aniName = "Owlrigami";
      break;
  }
  _0xf8689b.skinName = this.getSkinName();
  _0xf8689b.aniDesc = "";
  _0xf8689b.upgradeText = "UPGRADED to " + _0xf8689b.aniName + "!\nAim the crosshair\nright-click / press W when its on top of prey to attack";
  _0xf8689b.aniCol = "#633838";
  return _0xf8689b;
};
a0_0x4f3039.prototype.getSkinName = function () {
  let _0x3ab36f = this.getSpeciesPath() + "/snowyowl";
  _0x3ab36f += this.specType == 0 ? "" : this.specType;
  return _0x3ab36f;
};
a0_0x4f3039.prototype.getSpeciesPath = function () {
  return "arctic/snowyowl/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4f3039.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x4f3039.prototype.getWing = function (_0x635cdc) {
  var _0xc6eda1 = "skins/" + this.getSpeciesPath();
  _0xc6eda1 += "/snowyowl_wing" + _0x635cdc + ".png";
  return _0xc6eda1;
};
a0_0x4f3039.prototype.getHead = function () {
  var _0x5ebb97 = "skins/" + this.getSpeciesPath();
  _0x5ebb97 += "/snowyowl_head.png";
  return _0x5ebb97;
};
a0_0x4f3039.prototype.getAbilityInfo = function (_0x560b23) {
  var _0x37729a = {
    abilName: "Target Prey!"
  };
  _0x37729a.abilImg = "skins/" + this.getSpeciesPath() + "/snowyowl.png";
  _0x37729a.skinThemeID = this.skinThemeID;
  _0x37729a.mopeSeasonID = this.mopeSeasonID;
  return _0x37729a;
};
a0_0x4f3039.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x3e02b1 = "skins";
  var _0x5a2685 = 500 / 340;
  if (this.flag_flying && !this.flag_isGrabbed && this.specType == 1) {
    a0_0x4ef4f3.save();
    var _0x147ce2 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x5ee76d = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x147ce2, 0.7, 0.4, 2) : this.birdNoAnimationFlyWingAngle;
    var _0x2f9df7 = this.getSkinImageObj(this.getWing(1));
    if (_0x2f9df7) {
      a0_0x4ef4f3.save();
      var _0x32fbaa = -(-0.2 + _0x5ee76d) * a0_0x844a6b(80);
      var _0x368079 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(25) + _0x32fbaa);
      var _0x4c0970 = 0;
      var _0x40693d = this.rad;
      var _0x4cf6e4 = _0x368079 * 2 * 0.65;
      var _0x3e53d1 = _0x368079 * 2.5;
      var _0x4d24c0 = 0;
      var _0x133257 = 1.5;
      a0_0x4ef4f3.drawImage(_0x2f9df7, _0x4c0970 + _0x4cf6e4 * -_0x4d24c0, _0x40693d + _0x3e53d1 * -_0x133257, _0x4cf6e4, _0x3e53d1);
      a0_0x4ef4f3.restore();
    }
    var _0x2f9df7 = this.getSkinImageObj(this.getWing(2));
    if (_0x2f9df7) {
      a0_0x4ef4f3.save();
      var _0x32fbaa = -(-0.2 + _0x5ee76d) * a0_0x844a6b(-80);
      var _0x368079 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-25) + _0x32fbaa);
      var _0x4c0970 = 0;
      var _0x40693d = this.rad;
      var _0x4cf6e4 = _0x368079 * 2 * 0.65;
      var _0x3e53d1 = _0x368079 * 2.5;
      var _0x4d24c0 = 1;
      var _0x133257 = 1.5;
      a0_0x4ef4f3.drawImage(_0x2f9df7, _0x4c0970 + _0x4cf6e4 * -_0x4d24c0, _0x40693d + _0x3e53d1 * -_0x133257, _0x4cf6e4, _0x3e53d1);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  } else if (this.flag_flying && this.specType == 2) {
    a0_0x4ef4f3.save();
    var _0x147ce2 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x5ee76d = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x147ce2, 0.7, 0.3, 2) : 0;
    var _0x2f9df7 = this.getSkinImageObj(this.getWing(1));
    if (_0x2f9df7) {
      a0_0x4ef4f3.save();
      var _0x32fbaa = -(-0.2 + _0x5ee76d) * a0_0x844a6b(45);
      var _0x368079 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(15) + _0x32fbaa);
      var _0x4c0970 = 0;
      var _0x40693d = this.rad;
      var _0x4cf6e4 = _0x368079 * 2 * 0.7;
      var _0x3e53d1 = _0x368079 * 2.2;
      var _0x4d24c0 = 0;
      var _0x133257 = 1.5;
      a0_0x4ef4f3.drawImage(_0x2f9df7, _0x4c0970 + _0x4cf6e4 * -_0x4d24c0, _0x40693d + _0x3e53d1 * -_0x133257, _0x4cf6e4, _0x3e53d1);
      a0_0x4ef4f3.restore();
    }
    var _0x2f9df7 = this.getSkinImageObj(this.getWing(2));
    if (_0x2f9df7) {
      a0_0x4ef4f3.save();
      var _0x32fbaa = -(-0.2 + _0x5ee76d) * a0_0x844a6b(-45);
      var _0x368079 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-15) + _0x32fbaa);
      var _0x4c0970 = 0;
      var _0x40693d = this.rad;
      var _0x4cf6e4 = _0x368079 * 2 * 0.7;
      var _0x3e53d1 = _0x368079 * 2.2;
      var _0x4d24c0 = 1;
      var _0x133257 = 1.5;
      a0_0x4ef4f3.drawImage(_0x2f9df7, _0x4c0970 + _0x4cf6e4 * -_0x4d24c0, _0x40693d + _0x3e53d1 * -_0x133257, _0x4cf6e4, _0x3e53d1);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  } else if (this.flag_flying && this.specType == 3) {
    a0_0x4ef4f3.save();
    var _0x147ce2 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x5ee76d = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x147ce2, 0.5, 0.5, 2) : 0;
    var _0x2f9df7 = this.getSkinImageObj(this.getWing(1));
    if (_0x2f9df7) {
      a0_0x4ef4f3.save();
      var _0x32fbaa = -(-0.2 + _0x5ee76d) * a0_0x844a6b(45);
      var _0x368079 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(25) + _0x32fbaa);
      var _0x4c0970 = 0;
      var _0x40693d = this.rad;
      var _0x4cf6e4 = _0x368079 * 2 * 0.7;
      var _0x3e53d1 = _0x368079 * 2.2;
      var _0x4d24c0 = 0;
      var _0x133257 = 1.5;
      a0_0x4ef4f3.drawImage(_0x2f9df7, _0x4c0970 + _0x4cf6e4 * -_0x4d24c0, _0x40693d + _0x3e53d1 * -_0x133257, _0x4cf6e4, _0x3e53d1);
      a0_0x4ef4f3.restore();
    }
    var _0x2f9df7 = this.getSkinImageObj(this.getWing(2));
    if (_0x2f9df7) {
      a0_0x4ef4f3.save();
      var _0x32fbaa = -(-0.2 + _0x5ee76d) * a0_0x844a6b(-45);
      var _0x368079 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-25) + _0x32fbaa);
      var _0x4c0970 = 0;
      var _0x40693d = this.rad;
      var _0x4cf6e4 = _0x368079 * 2 * 0.7;
      var _0x3e53d1 = _0x368079 * 2.2;
      var _0x4d24c0 = 1;
      var _0x133257 = 1.5;
      a0_0x4ef4f3.drawImage(_0x2f9df7, _0x4c0970 + _0x4cf6e4 * -_0x4d24c0, _0x40693d + _0x3e53d1 * -_0x133257, _0x4cf6e4, _0x3e53d1);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  }
  if (this.specType != 0 && this.specType != undefined) {
    var _0x14103b = this.getSkinImageObj(this.getHead());
    if (_0x14103b) {
      a0_0x4ef4f3.save();
      var _0x368079 = this.rad;
      a0_0x4ef4f3.drawImage(_0x14103b, -_0x368079 * _0x5a2685, (-_0x368079 + _0x368079 * 0.1) * _0x5a2685, _0x368079 * 2 * _0x5a2685, _0x368079 * 2 * _0x5a2685);
      a0_0x4ef4f3.restore();
    }
  }
};
function a0_0x4f3039() {
  a0_0x4f3039.superClass.call(this, a0_0x1370b8);
}
window.SnowyOwl = a0_0x4f3039;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4f3039, a0_0x1370b8, a0_0xdf5a75);
var a0_0xe0822b = a0_0xe0822b;
var a0_0x58d04c = a0_0x45645e;
a0_0xe0822b.prototype = Object.create(a0_0x58d04c.prototype);
a0_0xe0822b.prototype.constructor = a0_0xe0822b;
a0_0xe0822b.superClass = a0_0x58d04c;
a0_0xe0822b.prototype.animalInfo = function () {
  const _0x555324 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x555324.aniName = "Pelican";
      break;
    case 111:
      _0x555324.aniName = "Classic Pelican";
      break;
    case 112:
      _0x555324.aniName = "Gold-trim Pelican";
      break;
  }
  _0x555324.upgradeText = "UPGRADED to " + _0x555324.aniName + "! \nPick up water (and prey!) in your mouth,\nfly, and drop water on prey! (press W again)";
  _0x555324.skinName = this.getSkinName();
  return _0x555324;
};
a0_0xe0822b.prototype.getSpeciesPath = function (_0x35dd42) {
  return "pelican/" + this.animalSpecies;
};
a0_0xe0822b.prototype.getSkinName = function () {
  return this.getSpeciesPath("pelican") + "/pelican" + (this.specType == 0 ? "" : this.specType);
};
a0_0xe0822b.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x30689c = 500 / 340;
  var _0x2bb166 = this.rad - this.outlineW;
  var _0x249e56 = "skins";
  if (this.flag_flying) {
    var _0x46b220 = "";
    _0x46b220 = "pelican";
    a0_0x4ef4f3.save();
    var _0x15001b = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x45671e = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x15001b, 0.9, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
    var _0x5c8377 = this.getSkinImageObj(this.getWing("pelican", 1, true));
    if (_0x5c8377) {
      a0_0x4ef4f3.save();
      var _0x4b1483 = -(-0.2 + _0x45671e) * a0_0x2b691e;
      var _0x2bb166 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(45) + _0x4b1483);
      var _0x21ddeb = 0;
      var _0x13b290 = this.rad;
      var _0x208d31 = _0x2bb166 * 2 * 0.6;
      var _0x4020a6 = _0x2bb166 * 2.3;
      var _0x11840e = 0;
      var _0x5b0e61 = 1.7;
      a0_0x4ef4f3.drawImage(_0x5c8377, _0x21ddeb + _0x208d31 * -_0x11840e, _0x13b290 + _0x4020a6 * -_0x5b0e61, _0x208d31, _0x4020a6);
      a0_0x4ef4f3.restore();
    }
    var _0x5c8377 = this.getSkinImageObj(this.getWing("pelican", 2, true));
    if (_0x5c8377) {
      a0_0x4ef4f3.save();
      var _0x4b1483 = -(-0.2 + _0x45671e) * a0_0x844a6b(-90);
      var _0x2bb166 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-45) + _0x4b1483);
      var _0x21ddeb = 0;
      var _0x13b290 = this.rad;
      var _0x208d31 = _0x2bb166 * 2 * 0.6;
      var _0x4020a6 = _0x2bb166 * 2.3;
      var _0x11840e = 1;
      var _0x5b0e61 = 1.7;
      a0_0x4ef4f3.drawImage(_0x5c8377, _0x21ddeb + _0x208d31 * -_0x11840e, _0x13b290 + _0x4020a6 * -_0x5b0e61, _0x208d31, _0x4020a6);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  } else if (this.specType == 1) {
    var _0x46b220 = "";
    _0x46b220 = "pelican";
    a0_0x4ef4f3.save();
    var _0x15001b = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x45671e = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x15001b, 0.9, 0.3, 2) : 0;
    var _0x5c8377 = this.getSkinImageObj(this.getWing("pelican", 11, true));
    if (_0x5c8377) {
      a0_0x4ef4f3.save();
      var _0x4b1483 = -(-0.2 + _0x45671e) * a0_0x844a6b(45);
      var _0x2bb166 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(45) + _0x4b1483);
      var _0x21ddeb = 0;
      var _0x13b290 = this.rad;
      var _0x208d31 = _0x2bb166 * 2 * 0.7;
      var _0x4020a6 = _0x2bb166 * 2.2;
      var _0x11840e = 0;
      var _0x5b0e61 = 1.7;
      a0_0x4ef4f3.drawImage(_0x5c8377, _0x21ddeb + _0x208d31 * -_0x11840e, _0x13b290 + _0x4020a6 * -_0x5b0e61, _0x208d31, _0x4020a6);
      a0_0x4ef4f3.restore();
    }
    var _0x5c8377 = this.getSkinImageObj(this.getWing("pelican", 21, true));
    if (_0x5c8377) {
      a0_0x4ef4f3.save();
      var _0x4b1483 = -(-0.2 + _0x45671e) * a0_0x844a6b(-45);
      var _0x2bb166 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-45) + _0x4b1483);
      var _0x21ddeb = 0;
      var _0x13b290 = this.rad;
      var _0x208d31 = _0x2bb166 * 2 * 0.7;
      var _0x4020a6 = _0x2bb166 * 2.2;
      var _0x11840e = 1;
      var _0x5b0e61 = 1.7;
      a0_0x4ef4f3.drawImage(_0x5c8377, _0x21ddeb + _0x208d31 * -_0x11840e, _0x13b290 + _0x4020a6 * -_0x5b0e61, _0x208d31, _0x4020a6);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  }
  if (this.specType != 0 && !this.flag_isGrabbed) {
    if (this.specType == 2) {
      var _0x39a285 = _0x249e56 + "/" + this.getSpeciesPath("pelican") + "/ability_pelican.png";
      var _0x906b34 = this.getSkinImageObj(_0x39a285);
      if (_0x906b34) {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.rotate(a0_0x844a6b(180));
        var _0x2bb166 = this.rad * 0.3;
        var _0xe553b0 = this.rad * 1;
        a0_0x4ef4f3.drawImage(_0x906b34, -_0x2bb166 * _0x30689c, -_0x2bb166 - _0xe553b0 * _0x30689c, _0x2bb166 * 2 * _0x30689c, _0x2bb166 * 2 * _0x30689c);
        a0_0x4ef4f3.restore();
      }
    }
    var _0x25fe24 = this.getSkinImageObj(this.getHead("pelican", true));
    if (_0x25fe24) {
      a0_0x4ef4f3.save();
      var _0x2bb166 = this.rad * 1;
      var _0xe553b0 = -this.rad * 0.3;
      a0_0x4ef4f3.drawImage(_0x25fe24, -_0x2bb166 * _0x30689c, -_0x2bb166 + _0xe553b0 * _0x30689c, _0x2bb166 * 2 * _0x30689c, _0x2bb166 * 2 * _0x30689c);
      a0_0x4ef4f3.restore();
    }
  }
};
function a0_0xe0822b() {
  a0_0xe0822b.superClass.call(this, a0_0x1370b8);
}
window.Pelican = a0_0xe0822b;
a0_0xa5d548.setCustomClassForGameObjType(a0_0xe0822b, a0_0x1370b8, a0_0x4e94e8);
var a0_0x58d04c = a0_0x45645e;
a0_0x5f928f.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5f928f.prototype.constructor = a0_0x5f928f;
a0_0x5f928f.superClass = a0_0x58d04c;
a0_0x5f928f.prototype.updateZ = function () {
  this.z = 1003 + this.rad;
};
a0_0x5f928f.prototype.getSkinName = function () {
  var _0x11836e = "";
  if (this.flag_usingAbility && !this.flag_underWater) {
    _0x11836e = "2";
  }
  return "frog/frog" + _0x11836e;
};
a0_0x5f928f.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility && !this.flag_underWater) {
    var _0x1d0112 = this.rad - this.outlineW;
    var _0x3a7f2f = 500 / 340;
    var _0x4b3532 = this.getSkinImageObj("./skins/frog/frogLegs.png");
    if (_0x4b3532) {
      a0_0x4ef4f3.drawImage(_0x4b3532, -_0x1d0112 * _0x3a7f2f, (-_0x1d0112 - _0x1d0112) * _0x3a7f2f, _0x1d0112 * 2 * _0x3a7f2f, _0x1d0112 * 2 * _0x3a7f2f);
    }
  }
};
a0_0x5f928f.prototype.canDrawAnimalSkin = function () {
  return !this.flag_underWater;
};
a0_0x5f928f.prototype.drawUnderWater = function () {
  if (this.flag_underWater) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 0.2;
    a0_0x4ef4f3.scale(1, 1.5);
    a0_0x5c99c1(0, 0, this.rad * 0.5, "#598b30");
    a0_0x5c99c1(0, this.rad * -0.6, this.rad * 0.3, "#64a034");
    a0_0x4ef4f3.restore();
  }
};
function a0_0x5f928f() {
  a0_0x5f928f.superClass.call(this, a0_0x1370b8);
}
window.Frog = a0_0x5f928f;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5f928f, a0_0x1370b8, a0_0x3b5f85);
var a0_0x2011f1 = a0_0x508e8a;
var a0_0x58d04c = a0_0x45645e;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x508e8a.prototype.isAttacking = false;
a0_0x508e8a.prototype.objSkinPath = {};
a0_0x508e8a.prototype.getSkinName = function () {
  return this.objSkinPath[this.getSkinIndex()].skin;
};
a0_0x508e8a.prototype.getSkinIndex = function () {
  if (this.animalSpecies == 2 && (this.isAttacking || this.flag_usingAbility)) {
    return 3;
  }
  return this.animalSpecies;
};
a0_0x508e8a.prototype.setSkinPath = function () {};
a0_0x508e8a.prototype.onAnimalSpeciesSet = function () {
  let _0x12a69d = this.animalSpecies;
  let _0x4ca78f = "";
  let {
    skin: _0x5c6e05,
    wing1: _0xb255eb,
    wing2: _0x2b36d3,
    head: _0x585176
  } = {
    skin: "duck/" + _0x12a69d + "/duck" + _0x4ca78f,
    wing1: "skins/duck/" + _0x12a69d + "/duck_wing1.png",
    wing2: "skins/duck/" + _0x12a69d + "/duck_wing2.png",
    head: "skins/duck/" + _0x12a69d + "/duck_head.png"
  };
  this.objSkinPath[_0x12a69d] = {
    skin: _0x5c6e05,
    wing1: _0xb255eb,
    wing2: _0x2b36d3,
    head: _0x585176
  };
  if (_0x12a69d === 2) {
    _0x4ca78f = 1;
    ({
      skin: _0x5c6e05,
      wing1: _0xb255eb,
      wing2: _0x2b36d3,
      head: _0x585176
    } = {
      skin: "duck/" + _0x12a69d + "/duck" + _0x4ca78f,
      wing1: "skins/duck/" + _0x12a69d + "/duck_wing1.png",
      wing2: "skins/duck/" + _0x12a69d + "/duck_wing2.png",
      head: "skins/duck/" + _0x12a69d + "/duck_head.png"
    });
    this.objSkinPath[3] = {
      skin: _0x5c6e05,
      wing1: _0xb255eb,
      wing2: _0x2b36d3,
      head: _0x585176
    };
  }
};
a0_0x2011f1.prototype.drawSkinCustomization = function () {
  if (this.isAttacking && this.animalSpecies == 2) {
    this.angryGooseAnimation();
  }
  if (this.flag_usingAbility && this.animalSpecies == 2) {
    this.flyingAnimation();
  }
};
a0_0x508e8a.prototype.angryGooseAnimation = function () {
  var _0x55cea5 = this.skinScale;
  a0_0x4ef4f3.save();
  var _0x3a961b = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0xe399ff = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x3a961b, 0.5, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
  var _0x25fee9 = this.getSkinImageObj(this.objSkinPath[this.getSkinIndex()].wing1);
  if (_0x25fee9) {
    a0_0x4ef4f3.save();
    var _0x20fa73 = -(-0.2 + _0xe399ff) * a0_0x844a6b(15);
    var _0xdb9761 = this.rad * 0.8;
    a0_0x4ef4f3.rotate(a0_0x844a6b(15) + _0x20fa73);
    var _0x2ee48b = 0;
    var _0x586876 = this.rad;
    var _0x185f20 = _0xdb9761 * 2 * 0.7;
    var _0x301058 = _0xdb9761 * 2.2;
    var _0xa66ea7 = 0;
    var _0x17771f = 1.5;
    a0_0x4ef4f3.drawImage(_0x25fee9, _0x2ee48b + _0x185f20 * -_0xa66ea7, _0x586876 + _0x301058 * -_0x17771f, _0x185f20, _0x301058);
    a0_0x4ef4f3.restore();
  }
  var _0x25fee9 = this.getSkinImageObj(this.objSkinPath[this.getSkinIndex()].wing2);
  if (_0x25fee9) {
    a0_0x4ef4f3.save();
    var _0x20fa73 = -(-0.2 + _0xe399ff) * a0_0x844a6b(-15);
    var _0xdb9761 = this.rad * 0.8;
    a0_0x4ef4f3.rotate(a0_0x844a6b(-15) + _0x20fa73);
    var _0x2ee48b = 0;
    var _0x586876 = this.rad;
    var _0x185f20 = _0xdb9761 * 2 * 0.7;
    var _0x301058 = _0xdb9761 * 2.2;
    var _0xa66ea7 = 1;
    var _0x17771f = 1.5;
    a0_0x4ef4f3.drawImage(_0x25fee9, _0x2ee48b + _0x185f20 * -_0xa66ea7, _0x586876 + _0x301058 * -_0x17771f, _0x185f20, _0x301058);
    a0_0x4ef4f3.restore();
  }
  var _0x53c343 = this.getSkinImageObj(this.objSkinPath[this.getSkinIndex()].head);
  if (_0x53c343) {
    a0_0x4ef4f3.save();
    var _0xdb9761 = this.rad * 1;
    var _0x4c2455 = -this.rad * 0.1;
    a0_0x4ef4f3.drawImage(_0x53c343, -_0xdb9761 * _0x55cea5, -_0xdb9761 + _0x4c2455 * _0x55cea5, _0xdb9761 * 2 * _0x55cea5, _0xdb9761 * 2 * _0x55cea5);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
a0_0x508e8a.prototype.skinScale = 500 / 340;
a0_0x508e8a.prototype.flyingAnimation = function () {
  var _0x459059 = this.skinScale;
  if (this.flag_flying && !this.flag_isGrabbed) {
    a0_0x4ef4f3.save();
    var _0x5a0e37 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x149230 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x5a0e37, 0.5, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
    var _0x1c6804 = this.getSkinImageObj(this.objSkinPath[this.getSkinIndex()].wing1);
    if (_0x1c6804) {
      a0_0x4ef4f3.save();
      var _0x2770ac = -(-0.2 + _0x149230) * a0_0x2b691e;
      var _0x205991 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(45) + _0x2770ac);
      var _0x15c323 = 0;
      var _0x7b60df = this.rad;
      var _0x3a25c0 = _0x205991 * 2 * 0.62;
      var _0x19d726 = _0x205991 * 2.5;
      var _0xbde067 = 0.2;
      var _0x977b34 = 1.7;
      a0_0x4ef4f3.drawImage(_0x1c6804, _0x15c323 + _0x3a25c0 * -_0xbde067, _0x7b60df + _0x19d726 * -_0x977b34, _0x3a25c0, _0x19d726);
      a0_0x4ef4f3.restore();
    }
    var _0x1c6804 = this.getSkinImageObj(this.objSkinPath[this.getSkinIndex()].wing2);
    if (_0x1c6804) {
      a0_0x4ef4f3.save();
      var _0x2770ac = -(-0.2 + _0x149230) * a0_0x844a6b(-90);
      var _0x205991 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-45) + _0x2770ac);
      var _0x15c323 = 0;
      var _0x7b60df = this.rad;
      var _0x3a25c0 = _0x205991 * 2 * 0.62;
      var _0x19d726 = _0x205991 * 2.5;
      var _0xbde067 = 0.8;
      var _0x977b34 = 1.7;
      a0_0x4ef4f3.drawImage(_0x1c6804, _0x15c323 + _0x3a25c0 * -_0xbde067, _0x7b60df + _0x19d726 * -_0x977b34, _0x3a25c0, _0x19d726);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  }
  if (this.specType != 0 && this.specType != undefined) {
    var _0x2ef08f = this.getSkinImageObj(this.objSkinPath[this.getSkinIndex()].head);
    if (_0x2ef08f) {
      a0_0x4ef4f3.save();
      var _0x205991 = this.rad;
      a0_0x4ef4f3.drawImage(_0x2ef08f, -_0x205991 * _0x459059, (-_0x205991 + _0x205991 * 0.1) * _0x459059, _0x205991 * 2 * _0x459059, _0x205991 * 2 * _0x459059);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x508e8a.prototype.readCustomData_onNewlyVisible = function (_0x44964d) {
  a0_0x508e8a.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x44964d);
  this.isAttacking = _0x44964d.readUInt8();
};
a0_0x508e8a.prototype.readCustomData_onUpdate = function (_0x4646f0) {
  a0_0x508e8a.superClass.prototype.readCustomData_onUpdate.call(this, _0x4646f0);
  this.isAttacking = _0x4646f0.readUInt8();
};
function a0_0x508e8a() {
  a0_0x58d04c.call(this, a0_0x1370b8);
}
window.Duck = a0_0x508e8a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x508e8a, a0_0x1370b8, a0_0x15a05e);
var a0_0x58d04c = a0_0x45645e;
a0_0x4d5ab5.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4d5ab5.prototype.constructor = a0_0x4d5ab5;
a0_0x4d5ab5.superClass = a0_0x58d04c;
a0_0x4d5ab5.prototype.setSkinPath = function () {
  this.objSkinPath = "duck/duckling";
};
a0_0x4d5ab5.prototype.getSkinName = function () {
  return this.objSkinPath;
};
function a0_0x4d5ab5() {
  a0_0x4d5ab5.superClass.call(this, a0_0x1370b8);
}
window.Duckling = a0_0x4d5ab5;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4d5ab5, a0_0x1370b8, a0_0x224417);
var a0_0x58d04c = a0_0x45645e;
a0_0x41240f.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x41240f.prototype.constructor = a0_0x41240f;
a0_0x41240f.superClass = a0_0x58d04c;
a0_0x41240f.prototype.updateZ = function () {
  this.z = 10000 + this.rad;
};
a0_0x41240f.prototype.canUseTailslap = false;
a0_0x41240f.prototype.tailState = 0;
a0_0x41240f.prototype.getSkinName = function () {
  return "volcano/blackdragon/" + this.animalSpecies + "/blackdragon";
};
a0_0x41240f.prototype.leftWingAnim = null;
a0_0x41240f.prototype.drawSkinCustomization = function () {
  if (this.flag_underWater) {
    return;
  }
  var _0x1a91c9 = 500 / 340;
  var _0x4d1400 = this.lava;
  var _0x506eca = 50;
  if (_0x4d1400 < _0x506eca) {
    var _0x1943cf = _0x4d1400 / _0x506eca;
    var _0x53ed3c = this.getSkinImageObj("skins/volcano/blackdragon/" + this.animalSpecies + "/wings.png");
    if (_0x53ed3c) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 1 - _0x1943cf;
      var _0x311155 = this.rad - this.outlineW;
      a0_0x4ef4f3.drawImage(_0x53ed3c, -_0x311155 * _0x1a91c9, -_0x311155 * _0x1a91c9, _0x311155 * 2 * _0x1a91c9, _0x311155 * 2 * _0x1a91c9);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x41240f.prototype.animalInfo = function () {
  var _0x11aa49 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x11aa49.aniName = "Black Dragon";
      break;
    case 1:
      _0x11aa49.aniName = "Golden Black Dragon";
      break;
    case 2:
      _0x11aa49.aniName = "Azure Bringer";
      break;
    case 111:
      _0x11aa49.aniName = "Classic Black Dragon";
      break;
    case 204:
      _0x11aa49.aniName = "Violet Dusk Black Dragon";
      break;
    default:
      break;
  }
  _0x11aa49.aniCol = "#FF9000";
  _0x11aa49.skinName = this.getSkinName();
  _0x11aa49.upgradeText = "UPGRADED to " + _0x11aa49.aniName;
  _0x11aa49.upgradeText += "!\n Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!";
  _0x11aa49.aniCol = "black";
  return _0x11aa49;
};
a0_0x41240f.prototype.getAbilityInfo = function (_0x4f7342) {
  var _0xeb34c = {
    abilName: "Multi Fireballs"
  };
  var _0x517069 = 0;
  switch (this.animalSpecies) {
    case 0:
      _0x517069 = 1;
      break;
    case 1:
      _0x517069 = 2;
      break;
    case 2:
      _0x517069 = 7;
      break;
  }
  _0xeb34c.speciesType = _0x517069;
  _0xeb34c.abilImg = "img/fire/" + _0x517069 + "/0.png";
  _0xeb34c.skinThemeID = this.skinThemeID;
  _0xeb34c.mopeSeasonID = this.mopeSeasonID;
  return _0xeb34c;
};
function a0_0x41240f() {
  this.lava = 100;
  a0_0x41240f.superClass.call(this, a0_0x1370b8);
}
window.BlackDragon = a0_0x41240f;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x41240f, a0_0x1370b8, a0_0x257f12);
var a0_0x441aa8 = a0_0x441aa8;
var a0_0x58d04c = a0_0x45645e;
a0_0x441aa8.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x441aa8.prototype.constructor = a0_0x441aa8;
a0_0x441aa8.superClass = a0_0x58d04c;
a0_0x441aa8.prototype.getSkinName = function () {
  return "/honeybee/0/" + this.animalSubSpecies + "/honeybee" + (this.specType == 0 || this.specType == undefined ? "" : this.specType);
};
a0_0x441aa8.prototype.drawSkinCustomization = function () {
  a0_0x4ef4f3.save();
  var _0x26c03a = a0_0x4f736f - this.spawnTime;
  let _0x3b7cde = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea && !a0_0x252e67;
  let _0x291d3a = _0x3b7cde ? a0_0x430439.honeybee[_0x26c03a % a0_0x430439.honeybee.length] : 0;
  var _0x49d3b5 = frame2 = _0x291d3a;
  var _0xc8aeef = this.rad * 0.6;
  var _0xe3b3b4 = 30;
  var _0xc804b3 = 2;
  var _0x2cbea1 = 20;
  var _0xad6bf8 = this.getSkinImageObj("skins/honeybee/0/" + this.animalSubSpecies + "/honeybee_wing2.png");
  if (_0xad6bf8) {
    a0_0x4ef4f3.save();
    var _0x396bba = -(-_0xc804b3 + frame2) * a0_0x844a6b(-(_0xe3b3b4 - 5));
    a0_0x4ef4f3.globalAlpha = 0.6;
    a0_0x4ef4f3.rotate(a0_0x844a6b(-_0x2cbea1 + 10) + _0x396bba);
    var _0x57772f = 0;
    var _0x1ae732 = this.rad;
    var _0x51b2a0 = _0xc8aeef * 2 * 0.7;
    var _0x853f62 = _0xc8aeef * 2.3;
    var _0x19c751 = 0.5;
    var _0x452064 = 1.6;
    a0_0x4ef4f3.drawImage(_0xad6bf8, _0x57772f + _0x51b2a0 * -_0x19c751, _0x1ae732 + _0x853f62 * -_0x452064, _0x51b2a0, _0x853f62);
    a0_0x4ef4f3.restore();
  }
  var _0xad6bf8 = this.getSkinImageObj("skins/honeybee/0/" + this.animalSubSpecies + "/honeybee_wing1.png");
  if (_0xad6bf8) {
    a0_0x4ef4f3.save();
    var _0x396bba = -(-_0xc804b3 + frame2) * a0_0x844a6b(_0xe3b3b4 - 5);
    a0_0x4ef4f3.globalAlpha = 0.6;
    a0_0x4ef4f3.rotate(a0_0x844a6b(_0x2cbea1 - 10) + _0x396bba);
    var _0x57772f = 0;
    var _0x1ae732 = this.rad;
    var _0x51b2a0 = _0xc8aeef * 2.3 * 0.7;
    var _0x853f62 = _0xc8aeef * 2.3;
    var _0x19c751 = 0.5;
    var _0x452064 = 1.6;
    a0_0x4ef4f3.drawImage(_0xad6bf8, _0x57772f + _0x51b2a0 * -_0x19c751, _0x1ae732 + _0x853f62 * -_0x452064, _0x51b2a0, _0x853f62);
    a0_0x4ef4f3.restore();
  }
  var _0xad6bf8 = this.getSkinImageObj("skins/honeybee/0/" + this.animalSubSpecies + "/honeybee_wing1.png");
  if (_0xad6bf8) {
    a0_0x4ef4f3.save();
    var _0x396bba = -(-_0xc804b3 + _0x49d3b5) * a0_0x844a6b(_0xe3b3b4);
    a0_0x4ef4f3.globalAlpha = 0.5;
    a0_0x4ef4f3.rotate(a0_0x844a6b(_0x2cbea1) + _0x396bba);
    var _0x57772f = 0;
    var _0x1ae732 = this.rad;
    var _0x51b2a0 = _0xc8aeef * 2 * 0.7;
    var _0x853f62 = _0xc8aeef * 2.3;
    var _0x19c751 = 0.5;
    var _0x452064 = 1.7;
    a0_0x4ef4f3.drawImage(_0xad6bf8, _0x57772f + _0x51b2a0 * -_0x19c751, _0x1ae732 + _0x853f62 * -_0x452064, _0x51b2a0, _0x853f62);
    a0_0x4ef4f3.restore();
  }
  var _0xad6bf8 = this.getSkinImageObj("skins/honeybee/0/" + this.animalSubSpecies + "/honeybee_wing2.png");
  if (_0xad6bf8) {
    a0_0x4ef4f3.save();
    var _0x396bba = -(-_0xc804b3 + _0x49d3b5) * a0_0x844a6b(-_0xe3b3b4);
    a0_0x4ef4f3.globalAlpha = 0.5;
    a0_0x4ef4f3.rotate(a0_0x844a6b(-_0x2cbea1) + _0x396bba);
    var _0x57772f = 0;
    var _0x1ae732 = this.rad;
    var _0x51b2a0 = _0xc8aeef * 2 * 0.7;
    var _0x853f62 = _0xc8aeef * 2.3;
    var _0x19c751 = 0.5;
    var _0x452064 = 1.7;
    a0_0x4ef4f3.drawImage(_0xad6bf8, _0x57772f + _0x51b2a0 * -_0x19c751, _0x1ae732 + _0x853f62 * -_0x452064, _0x51b2a0, _0x853f62);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
function a0_0x441aa8() {
  a0_0x441aa8.superClass.call(this, a0_0x1370b8);
}
window.Honeybee = a0_0x441aa8;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x441aa8, a0_0x1370b8, a0_0x1e152a);
var a0_0x149435 = a0_0x149435;
var a0_0x58d04c = a0_0x45645e;
a0_0x149435.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x149435.prototype.constructor = a0_0x149435;
a0_0x149435.superClass = a0_0x58d04c;
a0_0x149435.prototype.animalInfo = function () {
  var _0x62d5f0 = {};
  var _0x1c3e74 = this.animalSpecies;
  switch (this.animalSpecies) {
    case 0:
      _0x62d5f0.aniName = "The Phoenix";
      break;
    case 1:
      _0x62d5f0.aniName = "Golden Phoenix";
      break;
    case 2:
      _0x62d5f0.aniName = "Alpha Phoenix";
      break;
    case 111:
      _0x62d5f0.aniName = "Classic Phoenix";
      break;
    case 200:
      _0x1c3e74 = "/" + this.animalSubSpecies;
      switch (this.animalSubSpecies) {
        case 0:
          _0x62d5f0.aniName = "Aqua Phoenix";
          break;
        case 1:
          _0x62d5f0.aniName = "Ice Phoenix";
          break;
        case 2:
          _0x62d5f0.aniName = "Ash Phoenix";
          break;
        case 3:
          _0x62d5f0.aniName = "Red Giant Phoenix";
          break;
      }
      break;
  }
  _0x62d5f0.aniCol = "#FF9000";
  _0x62d5f0.skinName = "/volcano/phoenix/" + _0x1c3e74 + "/phoenix";
  _0x62d5f0.upgradeText = "UPGRADED to " + _0x62d5f0.aniName + "!\nPhoenix shoot Firetornados to burn their prey alive!";
  return _0x62d5f0;
};
a0_0x149435.prototype.getSkinImageObj = function (_0x4d1b9e) {
  var _0x3f5d36 = this.animalSpecies === 1 || this.animalSpecies === 2 || this.animalSpecies === 200 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x4d1b9e, _0x3f5d36);
};
a0_0x149435.prototype.getAbilityInfo = function (_0x11e5e5) {
  var _0x355494 = {};
  var _0x2a2524 = this.animalSpecies;
  if (this.animalSpecies == 200) {
    _0x2a2524 += "/" + this.animalSubSpecies;
  }
  _0x355494.abilName = "Fire Tornado!";
  _0x355494.abilImg = "skins/volcano/phoenix/" + _0x2a2524 + "/firetornado.png";
  _0x355494.skinThemeID = this.skinThemeID;
  _0x355494.mopeSeasonID = this.mopeSeasonID;
  return _0x355494;
};
a0_0x149435.prototype.getSkinName = function () {
  var _0x3a6310 = this.animalSpecies;
  if (this.animalSpecies == 200) {
    _0x3a6310 += "/" + this.animalSubSpecies;
  }
  return "/volcano/phoenix/" + _0x3a6310 + "/phoenix" + (this.specType == 0 || this.specType == undefined ? "" : this.specType);
};
a0_0x149435.prototype.getSkinPart = function (_0x350d9d) {
  var _0x5b7af4 = this.animalSpecies;
  if (this.animalSpecies == 200) {
    _0x5b7af4 += "/" + this.animalSubSpecies;
  }
  return this.getSkinImageObj("skins/volcano/phoenix/" + _0x5b7af4 + "/" + _0x350d9d + ".png");
};
a0_0x149435.prototype.drawSkinImg = function () {
  if (a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea && !a0_0x56691c && this.animalSpecies != 200) {
    var _0x1dfede = 500 / 340;
    var _0x132503 = this.rad - this.outlineW;
    var _0x2fc1ee = this.getSkinPart("phoenix_body");
    var _0x2f199e = this.getSkinPart("phoenix_head");
    var _0x3c454d = Math.trunc(a0_0x4f736f / 166) % 6;
    var _0x47d317 = this.getSkinPart("/tail_mid/tail_mid_" + _0x3c454d);
    if (_0x47d317) {
      a0_0x4ef4f3.drawImage(_0x47d317, -_0x132503 * _0x1dfede, -_0x132503 * _0x1dfede, _0x132503 * 2 * _0x1dfede, _0x132503 * 2 * _0x1dfede);
    }
    var _0x3c454d = Math.trunc(a0_0x4f736f / 166) % 6;
    var _0x217b8f = Math.trunc(a0_0x4f736f / 250) % 6;
    var _0x562777 = this.getSkinPart("/tail/tail_" + _0x3c454d);
    var _0x295f25 = this.getSkinPart("tail_flipped/tail_" + _0x217b8f);
    if (_0x562777) {
      a0_0x4ef4f3.drawImage(_0x562777, -_0x132503 * _0x1dfede, -_0x132503 * _0x1dfede, _0x132503 * 2 * _0x1dfede, _0x132503 * 2 * _0x1dfede);
    }
    if (_0x295f25) {
      a0_0x4ef4f3.drawImage(_0x295f25, -_0x132503 * _0x1dfede, -_0x132503 * _0x1dfede, _0x132503 * 2 * _0x1dfede, _0x132503 * 2 * _0x1dfede);
    }
    if (_0x2fc1ee) {
      a0_0x4ef4f3.drawImage(_0x2fc1ee, -_0x132503 * _0x1dfede, -_0x132503 * _0x1dfede, _0x132503 * 2 * _0x1dfede, _0x132503 * 2 * _0x1dfede);
    }
    var _0x10c827 = Math.trunc(a0_0x4f736f / 125) % 8;
    var _0x2e8dc = Math.trunc(a0_0x4f736f / 150) % 8;
    var _0x2da99a = this.getSkinPart("wing_flame_orange/wing_flame_orange_" + _0x10c827);
    var _0xb59343 = this.getSkinPart("wing_flame_yellow/wing_flame_yellow_" + _0x2e8dc);
    if (_0x2da99a) {
      a0_0x4ef4f3.drawImage(_0x2da99a, -_0x132503 * _0x1dfede, -_0x132503 * _0x1dfede, _0x132503 * 2 * _0x1dfede, _0x132503 * 2 * _0x1dfede);
    }
    if (_0xb59343) {
      a0_0x4ef4f3.drawImage(_0xb59343, -_0x132503 * _0x1dfede, -_0x132503 * _0x1dfede, _0x132503 * 2 * _0x1dfede, _0x132503 * 2 * _0x1dfede);
    }
    var _0x586535 = this.getSkinPart("wing_flame_orange_flipped/wing_flame_orange_" + _0x10c827);
    var _0x313a68 = this.getSkinPart("wing_flame_yellow_flipped/wing_flame_yellow_" + _0x2e8dc);
    if (_0x586535) {
      a0_0x4ef4f3.drawImage(_0x586535, -_0x132503 * _0x1dfede, -_0x132503 * _0x1dfede, _0x132503 * 2 * _0x1dfede, _0x132503 * 2 * _0x1dfede);
    }
    if (_0x313a68) {
      a0_0x4ef4f3.drawImage(_0x313a68, -_0x132503 * _0x1dfede, -_0x132503 * _0x1dfede, _0x132503 * 2 * _0x1dfede, _0x132503 * 2 * _0x1dfede);
    }
    if (_0x2f199e) {
      a0_0x4ef4f3.drawImage(_0x2f199e, -_0x132503 * _0x1dfede, -_0x132503 * _0x1dfede, _0x132503 * 2 * _0x1dfede, _0x132503 * 2 * _0x1dfede);
    }
  } else {
    a0_0x149435.superClass.prototype.drawSkinImg.call(this);
  }
};
function a0_0x149435() {
  a0_0x149435.superClass.call(this, a0_0x1370b8);
}
window.Phoenix = a0_0x149435;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x149435, a0_0x1370b8, a0_0x472c8a);
var a0_0x4e5ba8 = a0_0x4e5ba8;
var a0_0x58d04c = a0_0x45645e;
a0_0x4e5ba8.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4e5ba8.prototype.constructor = a0_0x4e5ba8;
a0_0x4e5ba8.superClass = a0_0x58d04c;
a0_0x4e5ba8.prototype.animalInfo = function () {
  var _0x13cca0 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x13cca0.aniName = "Pigeon";
      break;
    case 1:
      _0x13cca0.aniName = "Rare White Dove";
      _0x13cca0.upgradeText += "\n(Doves fly faster!)";
      break;
    case 111:
      _0x13cca0.aniName = "Classic Pigeon";
      break;
    case 112:
      _0x13cca0.aniName = "Gold-trim Pigeon";
      break;
    case 202:
      _0x13cca0.aniName = "Thug Pigeon";
      break;
  }
  _0x13cca0.aniCol = "#FF9000";
  _0x13cca0.skinName = this.getSkinName();
  _0x13cca0.upgradeText = "UPGRADED to " + _0x13cca0.aniName + "!\nHold W to fly around. ";
  return _0x13cca0;
};
a0_0x4e5ba8.prototype.getSkinName = function () {
  let _0x1f3867 = this.getSpeciesPath() + "/pigeon";
  _0x1f3867 += this.specType == 0 ? "" : this.specType;
  return _0x1f3867;
};
a0_0x4e5ba8.prototype.getSpeciesPath = function () {
  return "land/pigeon/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4e5ba8.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x4e5ba8.prototype.getWing = function (_0x3662c7) {
  var _0x440305 = "skins/" + this.getSpeciesPath();
  _0x440305 += "/pigeon_wing" + _0x3662c7 + ".png";
  return _0x440305;
};
a0_0x4e5ba8.prototype.getHead = function () {
  var _0x9c3324 = "skins/" + this.getSpeciesPath();
  _0x9c3324 += "/pigeon_head.png";
  return _0x9c3324;
};
a0_0x4e5ba8.prototype.theFrame = 0;
a0_0x4e5ba8.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x10b756 = "skins";
  {
    var _0x26ac63 = 500 / 340;
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x4ef4f3.save();
      var _0x4c9a7b = a0_0x232cc7("bird", this.spawnTime);
      if (_0x4c9a7b !== undefined && _0x4c9a7b != null) {
        this.theFrame = _0x4c9a7b;
      }
      var _0x5e56a7 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      var _0x3057cf = this.getSkinImageObj(this.getWing(1));
      if (_0x3057cf) {
        a0_0x4ef4f3.save();
        var _0x188f9d = -(-0.2 + _0x5e56a7) * a0_0x2b691e;
        var _0x507de0 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x28bda2 + _0x188f9d);
        var _0x13db89 = 0;
        var _0xf8e950 = this.rad;
        var _0x59fb27 = _0x507de0 * 2 * 0.62;
        var _0x5b6d4e = _0x507de0 * 2.5;
        var _0x10f60a = 0.2;
        var _0x1909cc = 1.7;
        a0_0x4ef4f3.drawImage(_0x3057cf, _0x13db89 + _0x59fb27 * -_0x10f60a, _0xf8e950 + _0x5b6d4e * -_0x1909cc, _0x59fb27, _0x5b6d4e);
        a0_0x4ef4f3.restore();
      }
      var _0x3057cf = this.getSkinImageObj(this.getWing(2));
      if (_0x3057cf) {
        a0_0x4ef4f3.save();
        var _0x188f9d = -(-0.2 + _0x5e56a7) * a0_0x844a6b(-90);
        var _0x507de0 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(-45) + _0x188f9d);
        var _0x13db89 = 0;
        var _0xf8e950 = this.rad;
        var _0x59fb27 = _0x507de0 * 2 * 0.62;
        var _0x5b6d4e = _0x507de0 * 2.5;
        var _0x10f60a = 0.8;
        var _0x1909cc = 1.7;
        a0_0x4ef4f3.drawImage(_0x3057cf, _0x13db89 + _0x59fb27 * -_0x10f60a, _0xf8e950 + _0x5b6d4e * -_0x1909cc, _0x59fb27, _0x5b6d4e);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x7e34a5 = this.getSkinImageObj(this.getHead());
      if (_0x7e34a5) {
        a0_0x4ef4f3.save();
        var _0x507de0 = this.rad;
        a0_0x4ef4f3.drawImage(_0x7e34a5, -_0x507de0 * _0x26ac63, (-_0x507de0 + _0x507de0 * 0.1) * _0x26ac63, _0x507de0 * 2 * _0x26ac63, _0x507de0 * 2 * _0x26ac63);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
function a0_0x4e5ba8() {
  a0_0x4e5ba8.superClass.call(this, a0_0x1370b8);
}
window.Pigeon = a0_0x4e5ba8;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4e5ba8, a0_0x1370b8, a0_0xc48b6);
var a0_0xb20036 = a0_0xb20036;
var a0_0x58d04c = a0_0x45645e;
a0_0xb20036.prototype = Object.create(a0_0x58d04c.prototype);
a0_0xb20036.prototype.constructor = a0_0xb20036;
a0_0xb20036.superClass = a0_0x58d04c;
a0_0xb20036.prototype.getSpeciesPath = function (_0x27f0cc) {
  var _0x452dbf = "/land/" + _0x27f0cc + "/" + this.animalSpecies + (this.animalSpecies == 4 ? "/" + this.animalSubSpecies : "");
  return _0x452dbf;
};
a0_0xb20036.prototype.getWing = function (_0xc0dbfc, _0x22ab0f, _0x1bfcf6) {
  var _0x59a795 = "skins/";
  switch (this.animalSpecies) {
    case 5:
    case 6:
    case 200:
    case 220:
      _0x59a795 += this.getSpeciesPath(_0xc0dbfc);
      break;
    default:
      _0x59a795 += "land/" + _0xc0dbfc;
  }
  switch (_0x22ab0f) {
    case 1:
      _0x59a795 += "/" + _0xc0dbfc + "_wing1.png";
      break;
    case 2:
      _0x59a795 += "/" + _0xc0dbfc + "_wing2.png";
      break;
  }
  return _0x59a795;
};
a0_0xb20036.prototype.animalInfo = function () {
  var _0x546a9e = {};
  switch (this.animalSpecies) {
    case 0:
      _0x546a9e.aniName = "Toco Toucan";
      break;
    case 1:
      _0x546a9e.aniName = "Choco Toucan";
      break;
    case 2:
      _0x546a9e.aniName = "Keel-Billed Toucan";
      break;
    case 3:
      _0x546a9e.aniName = "Fiery Toucan";
      break;
    case 4:
      switch (this.animalSubSpecies) {
        case 0:
          _0x546a9e.aniName = "Lava Toucan";
          break;
        case 1:
          _0x546a9e.aniName = "Ice Toucan";
          break;
        case 2:
          _0x546a9e.aniName = "Aqua Toucan";
          break;
      }
      break;
    case 5:
      _0x546a9e.aniName = "Rare Toucan";
      break;
    case 6:
      _0x546a9e.aniName = "Prisma Toucan";
      break;
    case 100:
      _0x546a9e.aniName = "The Dapper";
      break;
    case 111:
      _0x546a9e.aniName = "Classic Toucan";
      break;
    case 200:
      _0x546a9e.aniName = "Ice Toucan";
      break;
    case 112:
      _0x546a9e.aniName = "Gold-trim Toucan";
      break;
    case 202:
      _0x546a9e.aniName = "Corpse Flower Toucan";
      break;
    case 220:
      _0x546a9e.aniName = "Molten Toucan";
      break;
  }
  _0x546a9e.upgradeText = "UPGRADED to " + _0x546a9e.aniName + "!\nHold right click (or W) to fly!\n(HINT: Start flying from a fruit tree or bush to throw fruit upon landing!)";
  _0x546a9e.aniCol = "#FF9000";
  _0x546a9e.skinName = this.getSpeciesPath("toucan") + "/toucan";
  return _0x546a9e;
};
a0_0xb20036.prototype.getSkinName = function () {
  var _0x242dd8 = this.getSpeciesPath("toucan") + "/toucan" + (this.specType == 0 ? "" : this.specType);
  return _0x242dd8;
};
a0_0xb20036.prototype.drawSkinCustomization = function () {
  var _0x265fc6 = 500 / 340;
  if (!this.flag_usingAbility) {
    this.drawBeak();
    return;
  }
  {
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x4ef4f3.save();
      var _0x28a142 = a0_0x232cc7("bird", this.spawnTime);
      if (_0x28a142 !== undefined && _0x28a142 != null) {
        this.theFrame = _0x28a142;
      }
      var _0x58c3fb = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      var _0x1d4251 = this.getSkinImageObj(this.getWing("toucan", 1, true));
      if (_0x1d4251) {
        a0_0x4ef4f3.save();
        var _0x3ec6d3 = -(-0.2 + _0x58c3fb) * a0_0x2b691e;
        var _0x275e62 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(45) + _0x3ec6d3);
        var _0x350c35 = 0;
        var _0x1f0810 = this.rad;
        var _0x4440fa = _0x275e62 * 2 * 0.62;
        var _0x82291d = _0x275e62 * 2.5;
        var _0x288624 = 0.2;
        var _0x3433b4 = 1.7;
        a0_0x4ef4f3.drawImage(_0x1d4251, _0x350c35 + _0x4440fa * -_0x288624, _0x1f0810 + _0x82291d * -_0x3433b4, _0x4440fa, _0x82291d);
        a0_0x4ef4f3.restore();
      }
      var _0x1d4251 = this.getSkinImageObj(this.getWing("toucan", 2, true));
      if (_0x1d4251) {
        a0_0x4ef4f3.save();
        var _0x3ec6d3 = -(-0.2 + _0x58c3fb) * a0_0x844a6b(-90);
        var _0x275e62 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(-45) + _0x3ec6d3);
        var _0x350c35 = 0;
        var _0x1f0810 = this.rad;
        var _0x4440fa = _0x275e62 * 2 * 0.62;
        var _0x82291d = _0x275e62 * 2.5;
        var _0x288624 = 0.8;
        var _0x3433b4 = 1.7;
        a0_0x4ef4f3.drawImage(_0x1d4251, _0x350c35 + _0x4440fa * -_0x288624, _0x1f0810 + _0x82291d * -_0x3433b4, _0x4440fa, _0x82291d);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x1bd13b = this.getSkinImageObj(this.getHead("toucan", true));
      if (_0x1bd13b) {
        a0_0x4ef4f3.save();
        var _0x275e62 = this.rad;
        a0_0x4ef4f3.drawImage(_0x1bd13b, -_0x275e62 * _0x265fc6, (-_0x275e62 + _0x275e62 * 0.1) * _0x265fc6, _0x275e62 * 2 * _0x265fc6, _0x275e62 * 2 * _0x265fc6);
        a0_0x4ef4f3.restore();
      }
      this.drawBeak();
    }
  }
};
a0_0xb20036.prototype.drawBeak = function () {
  if (this.mopeSeasonID == 1) {
    return;
  }
  var _0x58ea64 = 500 / 340;
  var _0x17fdb2 = this.flag_flying && !this.flag_isGrabbed ? 0.25 : 0.1;
  var _0x3c87d3 = "skins/" + this.getSpeciesPath("toucan") + "/toucan_beak.png";
  var _0x498a43 = this.getSkinImageObj(_0x3c87d3);
  if (_0x498a43) {
    a0_0x4ef4f3.save();
    var _0x2e2557 = this.rad;
    a0_0x4ef4f3.drawImage(_0x498a43, -_0x2e2557 * _0x58ea64, (-_0x2e2557 + _0x2e2557 * _0x17fdb2) * _0x58ea64, _0x2e2557 * 2 * _0x58ea64, _0x2e2557 * 2 * _0x58ea64);
    a0_0x4ef4f3.restore();
  }
};
function a0_0xb20036() {
  a0_0xb20036.superClass.call(this, a0_0x1370b8);
  this.doesDrawEffectScale = false;
}
window.Toucan = a0_0xb20036;
a0_0xa5d548.setCustomClassForGameObjType(a0_0xb20036, a0_0x1370b8, a0_0x22e8ad);
var a0_0x181d5f = a0_0x181d5f;
var a0_0x58d04c = a0_0x45645e;
a0_0x181d5f.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x181d5f.prototype.constructor = a0_0x181d5f;
a0_0x181d5f.superClass = a0_0x58d04c;
a0_0x181d5f.prototype.animalInfo = function () {
  var _0x5afb65 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x5afb65.aniName = "Tiger";
      break;
    case 1:
      _0x5afb65.aniName = "Rare White Tiger";
      break;
    case 111:
      _0x5afb65.aniName = "Classic Tiger";
      break;
    case 112:
      _0x5afb65.aniName = "Gold-trim Tiger";
      break;
    case 204:
      _0x5afb65.aniName = "Chimera Tiger";
      break;
  }
  _0x5afb65.aniDesc = "";
  _0x5afb65.upgradeText = "UPGRADED to " + _0x5afb65.aniName + "!\n Tigers can launch an ambush attack (HOLD W to grow a bush)!";
  _0x5afb65.aniCol = "#FF9000";
  _0x5afb65.skinName = this.getSkinName();
  return _0x5afb65;
};
a0_0x181d5f.prototype.getSkinName = function () {
  let _0x3d5561 = this.getSpeciesPath() + "/tiger";
  _0x3d5561 += this.specType == 0 ? "" : this.specType;
  return _0x3d5561;
};
a0_0x181d5f.prototype.getSpeciesPath = function () {
  return "land/tiger/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x181d5f.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x181d5f.prototype.getSkinImageObj = function (_0x473126) {
  var _0x233d48 = this.animalSpecies === 204 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x473126, _0x233d48);
};
function a0_0x181d5f() {
  a0_0x181d5f.superClass.call(this, a0_0x1370b8);
}
window.Tiger = a0_0x181d5f;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x181d5f, a0_0x1370b8, a0_0x31e688);
var a0_0x58d04c = a0_0x45645e;
a0_0x49342e.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x49342e.prototype.constructor = a0_0x49342e;
a0_0x49342e.superClass = a0_0x58d04c;
a0_0x49342e.prototype.animalInfo = function () {
  var _0x165800 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x165800.aniName = "Cobra";
      break;
    case 100:
      _0x165800.aniName = "Wyrmous";
      break;
    case 111:
      _0x165800.aniName = "Classic Cobra";
      break;
    case 112:
      _0x165800.aniName = "Gold-trim Cobra";
      break;
    case 200:
      _0x165800.aniName = "Celestial Cobra";
      break;
  }
  _0x165800.skinName = this.getSkinName();
  _0x165800.aniDesc = "";
  _0x165800.upgradeText = "UPGRADED to " + _0x165800.aniName + "!\n Hold W to Spit venom, and poison animals with your bite!";
  _0x165800.aniCol = "black";
  return _0x165800;
};
a0_0x49342e.prototype.getAbilityInfo = function (_0x42fcc7) {
  var _0x3ab273 = {
    abilName: "Venom Spit",
    abilImg: "skins/land/cobra/" + this.animaLSpecies + "/cobra2.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x3ab273;
};
a0_0x49342e.prototype.getSkinName = function () {
  let _0x5c1673 = this.getSpeciesPath() + "/cobra";
  _0x5c1673 += this.flag_usingAbility ? "2" : "";
  return _0x5c1673;
};
a0_0x49342e.prototype.getSpeciesPath = function () {
  return "land/cobra/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x49342e.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x49342e.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility) {
    return;
  }
  var _0x310415 = this.rad - this.outlineW;
  var _0x2326e5 = 500 / 340;
  var _0x4abf31 = "skins/" + this.getSpeciesPath() + "/tongue.png";
  var _0x119169 = this.getSkinImageObj(_0x4abf31);
  var _0x2ee733 = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x1b9858 = a0_0x1d703e == a0_0x30b084 ? 0 : a0_0xe2d896(_0x2ee733, 0.5, 5, 0.5);
  var _0x304a00 = a0_0x1d703e == a0_0x30b084 ? 0 : 5;
  if (_0x119169) {
    a0_0x4ef4f3.drawImage(_0x119169, -_0x310415 * _0x2326e5, -(_0x310415 + _0x304a00 + _0x1b9858) * _0x2326e5, _0x310415 * 2 * _0x2326e5, _0x310415 * 2 * _0x2326e5);
  }
};
function a0_0x49342e() {
  a0_0x49342e.superClass.call(this, a0_0x1370b8);
}
window.Cobra = a0_0x49342e;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x49342e, a0_0x1370b8, a0_0x1bc37e);
var a0_0x13a46a = a0_0x13a46a;
var a0_0x58d04c = a0_0x12658e;
a0_0x13a46a.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x13a46a.prototype.constructor = a0_0x13a46a;
a0_0x13a46a.superClass = a0_0x58d04c;
a0_0x13a46a.prototype.updateZ = function () {
  this.z = 1005;
};
a0_0x13a46a.prototype.customDraw = function (_0x4c1bf3) {
  if (a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea) {
    var _0x3d1a41 = Math.trunc(a0_0x4f736f / 120) % 5;
    let _0x2862de = "gameobj/" + this.oType + "/" + this.speciesType + "/" + _0x3d1a41 + ".png";
    var _0x24a0a4 = this.getSkinImageObj(_0x2862de);
    if (_0x24a0a4) {
      var _0x19f701 = 0;
      var _0x143701 = this.rad * 0.4;
      var _0x5b54c7 = this.rad * 2 * 4 / 3;
      var _0x2eefbb = this.rad * 2;
      var _0x5d8459 = 0.5;
      var _0x4230ab = 0.95;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.rotate(a0_0x844a6b(0));
      a0_0x4ef4f3.drawImage(_0x24a0a4, _0x19f701 + _0x5b54c7 * -_0x5d8459, _0x143701 + _0x2eefbb * -_0x4230ab, _0x5b54c7, _0x2eefbb);
      a0_0x4ef4f3.restore();
    }
  } else {
    let _0xb3e4fe = "gameobj/" + this.oType + "/" + this.speciesType + "/0.png";
    var _0x24a0a4 = this.getSkinImageObj(_0xb3e4fe);
    if (_0x24a0a4) {
      var _0x19f701 = 0;
      var _0x143701 = this.rad * 0.4;
      var _0x5b54c7 = this.rad * 2 * 4 / 3;
      var _0x2eefbb = this.rad * 2;
      var _0x5d8459 = 0.5;
      var _0x4230ab = 0.95;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.rotate(a0_0x844a6b(0));
      a0_0x4ef4f3.drawImage(_0x24a0a4, _0x19f701 + _0x5b54c7 * -_0x5d8459, _0x143701 + _0x2eefbb * -_0x4230ab, _0x5b54c7, _0x2eefbb);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x13a46a.prototype.readCustomData_onNewlyVisible = function (_0x31ced2) {
  a0_0x13a46a.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x31ced2);
  this.speciesType = _0x31ced2.readUInt16();
  this.speciesSubType = _0x31ced2.readUInt16();
};
function a0_0x13a46a() {
  a0_0x13a46a.superClass.call(this, a0_0x23c396);
  this.webTransparency = 0;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
window.Fire = a0_0x13a46a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x13a46a, a0_0x23c396);
var a0_0x58d04c = a0_0x12658e;
a0_0x860d2f.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x860d2f.prototype.constructor = a0_0x860d2f;
a0_0x860d2f.superClass = a0_0x58d04c;
a0_0x860d2f.prototype.updateZ = function () {
  this.z = 1005;
};
a0_0x860d2f.prototype.ANIMATION_NAME = "fireball";
a0_0x860d2f.prototype.customDraw = function (_0x3db55c) {
  if (a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea) {
    let _0x3ad834 = a0_0x232cc7(this.ANIMATION_NAME, this.spawnTime);
    if (_0x3ad834 == null || _0x3ad834 == NaN) {
      _0x3ad834 = 0;
    }
    var _0x127b35 = Math.trunc(a0_0x4f736f / 120) % 5;
    let _0x308220 = "gameobj/" + this.oType + "/" + this.speciesType + "/" + _0x127b35 + ".png";
    var _0x9d4e57 = this.getSkinImageObj(_0x308220);
    if (_0x9d4e57) {
      var _0xe257b4 = 0;
      var _0x18378b = this.rad * 0.4;
      var _0x27c819 = this.rad * 2 * (2 + _0x3ad834 * 2) / 3;
      var _0x516143 = this.rad * 3.5 * _0x3ad834;
      var _0x5411cf = 0.5;
      var _0x67aa89 = 0.95;
      a0_0x4ef4f3.save();
      {
        a0_0x4ef4f3.globalAlpha *= this.onFireEffA * _0x3ad834;
        a0_0x4ef4f3.rotate(this.angle);
        a0_0x4ef4f3.drawImage(_0x9d4e57, _0xe257b4 + _0x27c819 * -_0x5411cf, _0x18378b + _0x516143 * -_0x67aa89, _0x27c819, _0x516143);
      }
      a0_0x4ef4f3.restore();
    }
  } else {
    let _0x101b9a = "gameobj/" + this.oType + "/" + this.speciesType + "/0.png";
    var _0x9d4e57 = this.getSkinImageObj(_0x101b9a);
    if (_0x9d4e57) {
      var _0xe257b4 = 0;
      var _0x18378b = this.rad * 0.4;
      var _0x27c819 = this.rad * 2 * 4 / 3;
      var _0x516143 = this.rad * 3.5;
      var _0x5411cf = 0.5;
      var _0x67aa89 = 0.95;
      a0_0x4ef4f3.save();
      {
        a0_0x4ef4f3.rotate(this.angle);
        a0_0x4ef4f3.drawImage(_0x9d4e57, _0xe257b4 + _0x27c819 * -_0x5411cf, _0x18378b + _0x516143 * -_0x67aa89, _0x27c819, _0x516143);
      }
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x860d2f.prototype.readCustomData_onNewlyVisible = function (_0x367604) {
  a0_0x860d2f.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x367604);
  this.speciesType = _0x367604.readUInt16();
  this.speciesSubType = _0x367604.readUInt16();
};
function a0_0x860d2f() {
  a0_0x860d2f.superClass.call(this, a0_0xb5f095);
}
window.FireBall = a0_0x860d2f;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x860d2f, a0_0xb5f095);
var a0_0x58d04c = a0_0x12658e;
a0_0x47169a.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x47169a.prototype.constructor = a0_0x47169a;
a0_0x47169a.superClass = a0_0x58d04c;
a0_0x47169a.prototype.nickName = "mope.io";
a0_0x47169a.prototype.fadeAway = false;
a0_0x47169a.prototype.webTransparency = 100;
a0_0x47169a.prototype.carcassType = 0;
a0_0x47169a.prototype.updateZ = function () {
  if (this.flag_flying) {
    this.z = 100000 + this.rad / 10;
  } else {
    this.z = -100;
  }
};
a0_0x47169a.prototype.getNameSize = function () {
  return 6;
};
a0_0x47169a.prototype.setNick = function (_0x5f2e39) {
  _0x5f2e39 = a0_0x4014cf(_0x5f2e39);
  this.nickName = _0x5f2e39;
  if (this.nickTXT == null) {
    this.nickTXT = new a0_0x3d10bd(this.getNameSize(), "#FFFFFF");
    this.nickTXT.strokeW = 1.5;
    this.nickTXT.renderScale = 5;
    this.nickTXT.setText(this.nickName);
  } else {
    this.nickTXT.setFontSize(this.getNameSize());
    this.nickTXT.setText(this.nickName);
  }
};
a0_0x47169a.prototype.customDraw = function (_0x23c2d4) {
  a0_0x4ef4f3.save();
  var _0x22aa69 = 0.3;
  if (this.fadeAway) {
    var _0x10bb13 = this.webTransparency / 100;
    a0_0x4ef4f3.globalAlpha = _0x10bb13;
    _0x22aa69 = Math.min(_0x22aa69, _0x10bb13);
  } else {
    a0_0x4ef4f3.globalAlpha = 0.8;
  }
  var _0xca39cb = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.carcassType + ".png");
  if (_0xca39cb) {
    var _0x1c57fe = this.rad;
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0xca39cb, -_0x1c57fe, -_0x1c57fe, _0x1c57fe * 2, _0x1c57fe * 2);
  }
  a0_0x4ef4f3.restore();
  this.drawNickName(_0x22aa69);
};
a0_0x47169a.prototype.drawNickName = function (_0x354af6) {
  if (!this.spawnedFromDeadAni) {
    return;
  }
  if (this.nickName && this.nickTXT && !a0_0x36b495) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = _0x354af6;
    this.nickTXT.x = 0;
    this.nickTXT.y = this.rad;
    this.nickTXT.draw();
    a0_0x4ef4f3.restore();
  }
};
a0_0x47169a.prototype.spawnedFromDeadAni = false;
a0_0x47169a.prototype.readCustomData_onNewlyVisible = function (_0x4ab1cc) {
  this.spawnedFromDeadAni = _0x4ab1cc.readUInt8() == 1;
  this.animalType = _0x4ab1cc.readUInt16();
  this.animalHomeBiome = _0x4ab1cc.readUInt8();
  this.carcassType = this.lookupCarcassType();
  var _0xf9311 = _0x4ab1cc.readString();
  this.fadeAway = _0x4ab1cc.readUInt8() == 1;
  if (this.fadeAway) {
    this.webTransparency = _0x4ab1cc.readUInt16();
  }
  if (this.spawnedFromDeadAni) {
    this.setNick(_0xf9311 ? _0xf9311 : "mope.io");
  }
};
const a0_0x44d412 = 0;
const a0_0x3b9be7 = 1;
const a0_0x4c5119 = 2;
const a0_0x5227eb = 3;
const a0_0x596ae5 = 4;
const a0_0x1a11c = 5;
const a0_0x486062 = 6;
const a0_0x4c290e = 7;
const a0_0xde4c11 = 8;
const a0_0x4e0b62 = 9;
const a0_0x3d126d = 10;
const a0_0x145558 = 11;
const a0_0x56f6f2 = 12;
const a0_0x56130a = 13;
const a0_0x387fc5 = 14;
const a0_0x1efdb4 = 15;
const a0_0x11cab4 = 16;
const a0_0x2ad696 = 17;
const a0_0x512883 = 18;
const a0_0x161a23 = 19;
const a0_0x2752cb = 20;
a0_0x47169a.prototype.lookupCarcassType = function () {
  const _0x266eb5 = {
    [a0_0x1efdb4]: [a0_0x256160, a0_0x1b4846],
    [a0_0x596ae5]: [a0_0x9f5ea7],
    [a0_0x1a11c]: [a0_0x5f3a6f],
    [a0_0x596ae5]: [a0_0x9f5ea7],
    [a0_0x4c5119]: [a0_0xbfada, a0_0x1bc37e],
    [a0_0x4e0b62]: [a0_0x58bf2a],
    [a0_0x3d126d]: [a0_0x1f838c, a0_0x32203e],
    [a0_0x512883]: [a0_0x32eb58],
    [a0_0x161a23]: [a0_0x4efb3c],
    [a0_0x2752cb]: [a0_0x2a957c],
    [a0_0x2ad696]: [a0_0x252dcd],
    [a0_0xde4c11]: [a0_0x464b86],
    [a0_0x4c290e]: [a0_0x2aaf90, a0_0x30bc31, a0_0x4e6cde],
    [a0_0x56f6f2]: [a0_0x722c30],
    [a0_0x387fc5]: [a0_0xbf4f2c, a0_0x15fd74],
    [a0_0x56130a]: [a0_0xce170f],
    [a0_0x145558]: [a0_0x1f8603],
    [a0_0x11cab4]: [a0_0x257f12, a0_0x9fe8e0],
    [a0_0x486062]: [a0_0x434da0, a0_0x30aa6a, a0_0x1132a8, a0_0x34beb5],
    [a0_0x3b9be7]: [a0_0x17136b, a0_0x52cd8c, a0_0x3ce38d, a0_0x1c0686, a0_0x472c8a, a0_0x322c99, a0_0x4e94e8, a0_0xc48b6, a0_0x22e8ad, a0_0xdf5a75, a0_0x2d643d, a0_0x69c437, a0_0x4a36ac, a0_0x559bf8, a0_0x254dfc, a0_0x402d5a, a0_0x258c5d, a0_0x33fa19, a0_0x4cfb89, a0_0x562756, a0_0xe8222c, a0_0x47c97f]
  };
  if (_0x266eb5 instanceof Array) {
    const _0x27762a = Object.keys(_0x266eb5);
    for (let _0x321c5c = 0; _0x321c5c < _0x27762a.length; _0x321c5c++) {
      const _0x20155a = _0x27762a[_0x321c5c];
      if (_0x266eb5[_0x20155a].includes(this.animalType)) {
        return _0x20155a;
      }
    }
  }
  if (this.animalHomeBiome == a0_0x2f0085) {
    return a0_0x5227eb;
  }
  return a0_0x44d412;
};
a0_0x47169a.prototype.readUpdatedProperty = function (_0x2027f8, _0xa45143) {
  if (_0x2027f8 == a0_0xf57be7) {
    this.flag_flying = _0xa45143.readUInt8() == 1;
  } else if (_0x2027f8 == a0_0x1b73d8) {
    this.webTransparency = _0xa45143.readUInt16();
  }
};
function a0_0x47169a() {
  a0_0x47169a.superClass.call(this, a0_0x4ece86);
  this.shrinkedRad = 0;
}
window.AnimalCarcass = a0_0x47169a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x47169a, a0_0x4ece86);
var a0_0x58d04c = a0_0x12658e;
a0_0x1a7ea2.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1a7ea2.prototype.constructor = a0_0x1a7ea2;
a0_0x1a7ea2.superClass = a0_0x58d04c;
a0_0x1a7ea2.prototype.chilliType = 0;
a0_0x1a7ea2.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x1a7ea2.prototype.setSkinPath = function () {
  var _0x499ab5 = "chilli";
  _0x499ab5 += this.isEdibleOutlined() ? "_e" : "";
  this.objSkinPath = "gameobj/" + this.oType + "/" + this.chilliType + "/" + _0x499ab5 + ".png";
};
a0_0x1a7ea2.prototype.customDraw = function (_0x15ba3c) {
  a0_0x4ef4f3.save();
  var _0x4f236c = this.getSkinImageObj(this.objSkinPath);
  if (_0x4f236c) {
    var _0x49aaeb = this.rad;
    if (this.specType2 == 1) {
      if (this.angle == 0) {
        this.angle = this.rPer * Math.PI * 2;
      }
      this.angle += 0.4;
      a0_0x4ef4f3.rotate(this.angle);
    } else if (this.specType2 == 2) {
      a0_0x4ef4f3.rotate(this.angle);
    } else {
      a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
    }
    a0_0x4ef4f3.drawImage(_0x4f236c, -_0x49aaeb, -_0x49aaeb, _0x49aaeb * 2, _0x49aaeb * 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x1a7ea2.prototype.readCustomData_onNewlyVisible = function (_0x24c662) {
  this.chilliType = _0x24c662.readUInt8();
};
function a0_0x1a7ea2() {
  a0_0x1a7ea2.superClass.call(this, a0_0x2be05c);
  this.doesDrawEffectScale = false;
}
window.Chilli = a0_0x1a7ea2;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1a7ea2, a0_0x2be05c);
var a0_0x1018cb = a0_0x1018cb;
var a0_0x58d04c = a0_0x45645e;
a0_0x1018cb.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1018cb.prototype.constructor = a0_0x1018cb;
a0_0x1018cb.superClass = a0_0x58d04c;
a0_0x1018cb.prototype.objSkinSpotsCanvas = null;
a0_0x1018cb.prototype.animalInfo = function () {
  var _0x2a8a02 = {};
  this.animalName = "";
  switch (this.animalSpecies) {
    case 0:
      _0x2a8a02.aniName = "Cheetah";
      _0x2a8a02.upgradeText = "UPGRADED to Cheetah!\n Press W to get a speed boost!";
      this.animalName = "cheetah";
      break;
    case 1:
      _0x2a8a02.aniName = "Jaguar";
      _0x2a8a02.upgradeText = "UPGRADED to JAGUAR!\n Press W to get a speed boost!\n(Jaguars can climb hills!)";
      this.animalName = "jaguar";
      break;
    case 2:
      _0x2a8a02.aniName = "Leopard";
      _0x2a8a02.upgradeText = "UPGRADED to LEOPARD!\n Press W to get a speed boost!\n(Leopards can dive longer)";
      this.animalName = "leopard";
      break;
    case 3:
      _0x2a8a02.aniName = "Black Panther";
      _0x2a8a02.upgradeText = "UPGRADED to Black Panther!\n Press W to get a speed boost!\n(Black Panthers are fast on mud)";
      this.animalName = "blackpanther";
      break;
    case 100:
      _0x2a8a02.aniName = "Big Cookie";
      _0x2a8a02.upgradeText = "UPGRADED to Big Cookie!\n Press W to get a speed boost!\n(Big Cookies are fast on mud)";
      this.animalName = "100/bigcat";
      break;
    case 111:
      _0x2a8a02.aniName = "Classic Cheetah";
      _0x2a8a02.upgradeText = "UPGRADED to Classic Cheetah!\n Press W to get a speed boost!";
      this.animalName = "cheetah";
      break;
    case 112:
      _0x2a8a02.aniName = "Gold-trim Cheetah";
      _0x2a8a02.upgradeText = "UPGRADED to Gold-trim Cheetah!\n Press W to get a speed boost!";
      this.animalName = "cheetah";
      break;
    case 202:
      _0x2a8a02.aniName = "C.M.Y.K NeoN Cheetak";
      _0x2a8a02.upgradeText = "UPGRADED to C.M.Y.K NeoN Cheetak!\n Press W to get a speed boost!\n(C.M.Y.K NeoN Cheetaks are fast on mud)";
      this.animalName = "cheetah";
      break;
    case 204:
      _0x2a8a02.aniName = "Genie Cheetah";
      _0x2a8a02.upgradeText = "UPGRADED to Genie Cheetah!\n Press W to get a speed boost!\n(Genie Cheetah are fast on mud)";
      this.animalName = "genie_cheetah";
      break;
  }
  _0x2a8a02.aniCol = "#CAC05B";
  _0x2a8a02.skinName = this.getSkinName();
  return _0x2a8a02;
};
a0_0x1018cb.prototype.getSkinName = function () {
  return this.getSpeciesPath() + "/" + this.animalName;
};
a0_0x1018cb.prototype.getSpeciesPath = function () {
  return "land/bigcat/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x1018cb.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x1018cb() {
  a0_0x1018cb.superClass.call(this, a0_0x1370b8);
}
window.BigCat = a0_0x1018cb;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1018cb, a0_0x1370b8, a0_0x54d85e);
function a0_0x45352d(_0x10d32a, _0x17d4bc, _0x48ca7d, _0x5d5647, _0x20ee4e, _0x4d761a, _0x474009) {
  var _0x5a1f1c = a0_0xba590d;
  this.x = _0x10d32a;
  this.y = _0x17d4bc;
  this.w = _0x48ca7d;
  this.h = _0x5d5647;
  this.label = _0x20ee4e;
  this.font = Number(_0x4d761a) ? Number(_0x4d761a) : 30;
  this.isVisible = true;
  this.hoverColor = "#16932A";
  this.defaultColor = "#0aa633";
  this.alpha = 1;
  this.txtAlpha = 1;
  this.ctx = _0x474009 === undefined || _0x474009 == null ? a0_0x4ef4f3 : _0x474009;
  this.labelColor = "white";
  this.buttonTXT = new a0_0x3d10bd(12, this.labelColor);
  this.buttonTXT.renderScale = 1.5;
  this.drawButtonRect = true;
  this.isHighLighted = false;
  this.showLabeleOnHover = false;
  this.textShadow = false;
  this.buttonScaleF = 1;
  this.strokeWidth = _0x5a1f1c * 4;
  this.setLabelColor = function (_0x43a80f) {
    this.buttonTXT = new a0_0x3d10bd(12, _0x43a80f);
    this.buttonTXT.renderScale = 1.5;
  };
  this.testPosHitsButton = function (_0x1393dd, _0x2e1c94) {
    var _0x520679 = this.x;
    var _0x1d4a1a = this.x + this.w;
    var _0x4bbdcf = this.y;
    var _0x5be2da = this.y + this.h;
    if (_0x1393dd < _0x520679 || _0x1393dd > _0x1d4a1a) {
      return false;
    }
    if (_0x2e1c94 < _0x4bbdcf || _0x2e1c94 > _0x5be2da) {
      return false;
    } else {
      return true;
    }
  };
  this.setPosAndSize = function (_0x3311d3, _0x123253, _0x534110, _0x5087ec, _0x1d7a41, _0xd2fe7b) {
    this.w = _0x534110;
    this.h = _0x5087ec;
    this.x = _0x3311d3 + _0x534110 * (0.5 - _0x1d7a41);
    this.y = _0x123253 + _0x5087ec * (0.5 - _0xd2fe7b);
  };
  this.draw = function () {
    if (!this.isVisible) {
      return;
    }
    this.update();
    this.ctx.save();
    this.ctx.translate(this.x, this.y);
    this.ctx.scale(this.buttonScaleF, this.buttonScaleF);
    var _0x57a2aa = this.alpha;
    if (this.drawButtonRect) {
      this.ctx.fillStyle = this.defaultColor;
      this.ctx.strokeStyle = "#116c17";
      this.ctx.lineWidth = this.strokeWidth;
      this.roundRect(0, 0, this.w, this.h, 5, true, true);
      if (this.isHighLighted) {
        this.ctx.fillStyle = this.hoverColor;
        this.roundRect(0, 0, this.w, this.h, 5, true, false);
      }
    }
    if (!this.showLabeleOnHover) {
      this.ctx.globalAlpha = this.txtAlpha;
      this.drawText(this.w / 2, this.h / 2);
    } else if (this.isHighLighted && this.showLabeleOnHover) {
      this.drawTextOnHowever();
    }
    this.ctx.restore();
    this.onAfterDraw();
  };
  this.drawTextOnHowever = function () {
    this.drawText(this.w / 2, this.h / 2);
  };
  this.beforeDrawText = function () {};
  this.drawText = function (_0x5c7f71, _0x43306c) {
    this.buttonTXT.setText(this.label);
    this.buttonTXT.strokeW = this.isHighLighted && !this.textShadow ? 0 : 1;
    this.buttonTXT.setFontSize(this.font);
    this.buttonTXT.setColor(this.labelColor);
    this.buttonTXT.x = _0x5c7f71;
    this.buttonTXT.y = _0x43306c;
    this.beforeDrawText();
    this.buttonTXT.draw();
  };
  this.roundRect = function (_0x4856dd, _0x3feded, _0x23bf46, _0x362d05, _0x58126, _0x58bba6, _0x13b3e7) {
    if (typeof _0x13b3e7 == "undefined") {
      _0x13b3e7 = true;
    }
    if (typeof _0x58126 === "undefined") {
      _0x58126 = 5;
    }
    if (typeof _0x58126 === "number") {
      _0x58126 = {
        tl: _0x58126,
        tr: _0x58126,
        br: _0x58126,
        bl: _0x58126
      };
    } else {
      var _0x3a32f7 = {
        tl: 0,
        tr: 0,
        br: 0,
        bl: 0
      };
      for (var _0x2b66bb in _0x3a32f7) {
        _0x58126[_0x2b66bb] = _0x58126[_0x2b66bb] || _0x3a32f7[_0x2b66bb];
      }
    }
    this.ctx.globalAlpha = this.alpha;
    this.ctx.lineWidth = 2;
    this.ctx.beginPath();
    this.ctx.moveTo(_0x4856dd + _0x58126.tl, _0x3feded);
    this.ctx.lineTo(_0x4856dd + _0x23bf46 - _0x58126.tr, _0x3feded);
    this.ctx.quadraticCurveTo(_0x4856dd + _0x23bf46, _0x3feded, _0x4856dd + _0x23bf46, _0x3feded + _0x58126.tr);
    this.ctx.lineTo(_0x4856dd + _0x23bf46, _0x3feded + _0x362d05 - _0x58126.br);
    this.ctx.quadraticCurveTo(_0x4856dd + _0x23bf46, _0x3feded + _0x362d05, _0x4856dd + _0x23bf46 - _0x58126.br, _0x3feded + _0x362d05);
    this.ctx.lineTo(_0x4856dd + _0x58126.bl, _0x3feded + _0x362d05);
    this.ctx.quadraticCurveTo(_0x4856dd, _0x3feded + _0x362d05, _0x4856dd, _0x3feded + _0x362d05 - _0x58126.bl);
    this.ctx.lineTo(_0x4856dd, _0x3feded + _0x58126.tl);
    this.ctx.quadraticCurveTo(_0x4856dd, _0x3feded, _0x4856dd + _0x58126.tl, _0x3feded);
    this.ctx.closePath();
    if (_0x58bba6) {
      this.ctx.fill();
    }
    if (_0x13b3e7) {
      this.ctx.stroke();
    }
  };
  this.onClick = function () {};
  this.onMouseMove = function () {};
  this.onMouseIn = function () {};
  this.onMouseOut = function () {};
  this.isMouseIn = false;
  this.setMouseRawPos = function (_0x613032, _0x860f90) {
    this.rawX = _0x613032;
    this.rawY = _0x860f90;
    if (this.testPosHitsButton(this.rawX, this.rawY)) {
      if (!this.isMouseIn) {
        this.isMouseIn = true;
        this.onMouseIn();
      }
    } else if (this.isMouseIn) {
      this.isMouseIn = false;
      this.onMouseOut();
    }
  };
  this.update = function () {};
  this.onInterfaceReset = function () {
    a0_0x48ae1a(this.label + ".onInterfaceReset");
  };
  this.onAfterDraw = function () {};
}
window.InterfaceButton = a0_0x45352d;
a0_0x5e9215.prototype = {
  mode: 0,
  state: 0,
  myPlayer: null
};
a0_0x5e9215.prototype.chatAllowed = true;
a0_0x5e9215.prototype.isHalloween = false;
a0_0x5e9215.prototype.stamp = 0;
a0_0x5e9215.prototype.interface = function () {};
a0_0x5e9215.prototype.drawMap = function () {};
a0_0x5e9215.prototype.interfaceReset = function () {};
a0_0x5e9215.prototype.main = function (_0x391d46) {};
a0_0x5e9215.prototype.onInit = function (_0x19f329) {};
a0_0x5e9215.prototype.drawCustomObjs = function (_0x37e92c) {};
a0_0x5e9215.prototype.worldUpdate = function (_0x219c31) {};
a0_0x5e9215.prototype.setPlayer = function () {
  this.myPlayer = a0_0x3d5ac5[a0_0x1c918d];
};
function a0_0x5e9215() {}
window.GameMode = a0_0x5e9215;
var a0_0x58d04c = a0_0x5e9215;
a0_0x23609a.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x23609a.prototype.constructor = a0_0x23609a;
a0_0x23609a.superClass = a0_0x58d04c;
a0_0x23609a.prototype.safeArea = null;
function a0_0x23609a(_0x203df4) {
  this.mode = _0x203df4;
  this.stamp = +new Date();
  this.chatAllowed = true;
  this.createInterfaceButtons();
}
a0_0x23609a.prototype.wastedPopups = [];
a0_0x23609a.prototype.playerDisplayNum = 0;
a0_0x23609a.prototype.setServerPlayerCount = function () {
  a0_0xb8f1f9.setText(a0_0x248f5f(a0_0x47046b) + " online");
  if (a0_0x25d08e) {
    a0_0x25d08e.setPlayersCount(a0_0x47046b);
  }
  this.playerDisplayNum = this.playerDisplayNum == 0 ? 1 : 0;
};
a0_0x23609a.prototype.interface = function () {
  if (this.state == -1 || this.mode != a0_0xe92752) {
    return;
  }
  if (a0_0x290640) {
    for (var _0x51bcb1 = this.wastedPopups.length - 1; _0x51bcb1 >= 0; _0x51bcb1--) {
      var _0x108244 = this.wastedPopups[_0x51bcb1];
      _0x108244.draw();
      if (_0x108244.timedOut) {
        this.wastedPopups.splice(_0x51bcb1, 1);
      }
    }
  }
  if (this.endScreenCanvas != null) {
    if (this.endScreenCanvas.width) {
      a0_0x4ef4f3.drawImage(this.endScreenCanvas, a0_0x11866b / 2 - this.endScreenCanvas.width / 2, a0_0x24bc92 * 15, this.endScreenCanvas.width, this.endScreenCanvas.height);
    }
    if (!a0_0x290640 || isGhost) {
      a0_0x4b95c7(true);
    }
  }
  this.drawInterfaceButtons();
};
a0_0x23609a.prototype.interfaceReset = function () {
  this.endScreenCanvas = null;
  this.dangerCircleMiniMapCanvas = null;
  this.wastedPopups = [];
  this.lastWastedPopupT = 0;
  this.playercount = 0;
  this.safeArea = null;
  if (this.interfaceButtons) {
    for (var _0x4e3cb1 = 0; _0x4e3cb1 < this.interfaceButtons.length; _0x4e3cb1++) {
      var _0x46de12 = this.interfaceButtons[_0x4e3cb1];
      _0x46de12.onInterfaceReset();
    }
  }
  this.interfaceButtons = [];
};
a0_0x23609a.prototype.onInit = function () {};
a0_0x23609a.prototype.playercount = 0;
a0_0x23609a.prototype.setPlayerCount = function (_0x5c2d95) {
  this.playercount = _0x5c2d95;
};
a0_0x23609a.prototype.showPlayerCount = function () {
  a0_0x4ef4f3.save();
  var _0x5df882 = a0_0x11866b / 2;
  var _0x4d320e = a0_0xba590d * 50;
  var _0x1da2dd = a0_0xba590d * 300;
  a0_0x4ef4f3.globalAlpha = 0.35;
  a0_0x4ef4f3.fillStyle = "black";
  var _0x1a0468 = a0_0xba590d * 30;
  a0_0x4ef4f3.fillRect(_0x5df882 - _0x1da2dd / 2, _0x1a0468, _0x1da2dd, _0x4d320e);
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.fillStyle = "white";
  a0_0x4ef4f3.font = a0_0xba590d * 30 + "px Arial";
  a0_0x4ef4f3.lineWidth = 1;
  a0_0x4ef4f3.textAlign = "center";
  a0_0x4ef4f3.textBaseline = "middle";
  a0_0x4ef4f3.shadowOffsetX = 1;
  a0_0x4ef4f3.shadowOffsetY = 1;
  a0_0x4ef4f3.shadowColor = "black";
  _0x1a0468 += a0_0xba590d * 25;
  var _0x2e7cf8 = " player";
  if (this.playercount > 1) {
    _0x2e7cf8 += "s";
  }
  if (this.state == battleRoyal_inProgress) {
    _0x2e7cf8 += " alive!";
  } else if (this.state == a0_0x55f22d || this.state == battleRoyal_ready) {
    _0x2e7cf8 += " joined";
  }
  a0_0x4ef4f3.fillText(this.playercount + _0x2e7cf8, _0x5df882, _0x1a0468);
  a0_0x4ef4f3.restore();
};
a0_0x23609a.prototype.lbCanvas = null;
a0_0x23609a.prototype.leaderboard = function (_0x342052) {
  if (this.lbCanvas == null) {
    this.lbCanvas = document.createElement("canvas");
  }
  if (_0x342052) {
    var _0x27468f = this.lbCanvas.getContext("2d");
    var _0x3375ed = 55;
    var _0x46b95a = 22;
    _0x3375ed = _0x3375ed + _0x46b95a * _0x342052.length;
    this.lbCanvas.width = 270;
    this.lbCanvas.height = _0x3375ed;
    _0x27468f.globalAlpha = 0.2;
    _0x27468f.fillStyle = "#000000";
    _0x27468f.fillRect(0, 0, this.lbCanvas.width, this.lbCanvas.height);
    _0x27468f.globalAlpha = 1;
    _0x27468f.fillStyle = "#FFFFFF";
    var _0x5c5daf = a0_0xa68ef0.name;
    _0x27468f.font = "24px Arial";
    if (a0_0x1d703e != a0_0x30b084) {
      _0x27468f.shadowOffsetX = 1;
      _0x27468f.shadowOffsetY = 1;
    }
    _0x27468f.shadowColor = "black";
    _0x27468f.fillText(_0x5c5daf, this.lbCanvas.width / 2 - _0x27468f.measureText(_0x5c5daf).width / 2, 40);
    var _0x5eb5d6;
    _0x27468f.textAlign = "left";
    _0x27468f.font = "17px Arial";
    _0x5eb5d6 = 0;
    for (; _0x5eb5d6 < _0x342052.length; ++_0x5eb5d6) {
      _0x5c5daf = a0_0x36b495 ? "" : _0x342052[_0x5eb5d6].name || "mope.io";
      _0x5c5daf += " (" + a0_0x4cf280(_0x342052[_0x5eb5d6].xp) + ")";
      _0x27468f.fillStyle = "#FFFFFF";
      _0x27468f.fillText(_0x5c5daf, 15, 65 + _0x46b95a * _0x5eb5d6);
    }
  }
};
a0_0x23609a.prototype.drawLeaderboard = function () {
  if (a0_0x290640) {
    if (!a0_0x409384) {
      if (a0_0x3e3656) {
        if (a0_0x3e3656.width) {
          a0_0x4ef4f3.drawImage(a0_0x3e3656, a0_0x24bc92 * 10, a0_0x24bc92 * 10, a0_0x3e3656.width * a0_0xba590d, a0_0x3e3656.height * a0_0xba590d);
        }
      }
    }
  }
};
a0_0x23609a.prototype.btnPlayAgain = null;
a0_0x23609a.prototype.showStats = true;
a0_0x23609a.prototype.interfaceButtons = [];
a0_0x23609a.prototype.createInterfaceButtons = function () {
  this.interfaceButtons = [];
};
a0_0x23609a.prototype.drawInterfaceButtons = function () {
  if (this.interfaceButtons) {
    for (var _0x2e9c22 = 0; _0x2e9c22 < this.interfaceButtons.length; _0x2e9c22++) {
      var _0x277484 = this.interfaceButtons[_0x2e9c22];
      if (_0x277484.isVisible) {
        _0x277484.draw();
      }
    }
  }
};
a0_0x23609a.prototype.onResize = function () {
  this.drawInterfaceButtons();
};
a0_0x23609a.prototype.readPlayerStats = function (_0x32a227) {
  var _0x1c8e95 = [];
  _0x1c8e95.rank = _0x32a227.readUInt16();
  _0x1c8e95.timeAlive = _0x32a227.readUInt16();
  _0x1c8e95.totalKills = _0x32a227.readUInt16();
  _0x1c8e95.topRank = _0x32a227.readUInt16();
  _0x1c8e95.maxXP = _0x32a227.readUInt32();
  _0x1c8e95.killedBy = _0x32a227.readString();
  return _0x1c8e95;
};
a0_0x23609a.prototype.playerInfo = function (_0x3e27e5) {
  if (isGhost && !a0_0x51a46a) {
    var _0x5396f6 = this.readPlayerStats(_0x3e27e5);
    this.buildEndScreenHTML(_0x5396f6);
  } else if (!isGhost) {
    this.endScreenCanvas = null;
  }
};
a0_0x23609a.prototype.playerWorldUpdate = function (_0xa577b9) {};
a0_0x23609a.prototype.worldUpdate = function (_0xd67b8c) {};
a0_0x23609a.prototype.drawMap = function () {
  if (a0_0x290640) {
    if (a0_0x1528ea) {
      return;
    }
    if (a0_0x25d08e) {
      a0_0x25d08e.drawMap();
    }
    this.drawLeaderboard();
  }
};
a0_0x23609a.prototype.pieChartCanvas = null;
a0_0x23609a.prototype.teamColors = {
  0: "white",
  1: "#B6CF40"
};
a0_0x23609a.prototype.endScreenDisplayed = false;
a0_0x23609a.prototype.buildEndScreenHTML = function (_0x46427b) {
  if (this.endScreenDisplayed) {
    return;
  }
  this.endScreenDisplayed = true;
  var _0x1714a9 = "";
  _0x1714a9 += "<div class='msg'>YOU WERE #" + _0x46427b.rank + "</div>";
  _0x1714a9 += "<div class='row'>";
  _0x1714a9 += "<div class='label'>Killed by:</div>";
  _0x1714a9 += "<div class='value2'>" + _0x46427b.killedBy + "</div>";
  _0x1714a9 += "</div>";
  _0x1714a9 += "<div class='row'>";
  _0x1714a9 += "<div class='col1'>";
  _0x1714a9 += "<div class='label'>Time alive:</div>";
  _0x1714a9 += "<div class='value'>" + a0_0x3d4b84(_0x46427b.timeAlive) + "</div>";
  _0x1714a9 += "</div>";
  _0x1714a9 += "<div class='col2'>";
  _0x1714a9 += "<div class='label'>Total kills:</div>";
  _0x1714a9 += "<div class='value'>" + _0x46427b.totalKills + "</div>";
  _0x1714a9 += "</div>";
  _0x1714a9 += "</div>";
  _0x1714a9 += "<div class='row'>";
  _0x1714a9 += "<div class='col1'>";
  _0x1714a9 += "<div class='label'>Top rank:</div>";
  _0x1714a9 += "<div class='value'>" + _0x46427b.topRank + "</div>";
  _0x1714a9 += "</div>";
  _0x1714a9 += "<div class='col2'>";
  _0x1714a9 += "<div class='label'>Max xp:</div>";
  _0x1714a9 += "<div class='value'>" + a0_0x4cf280(_0x46427b.maxXP) + "</div>";
  _0x1714a9 += "</div>";
  _0x1714a9 += "</div>";
  _0x1714a9 += "<div style='clear:both;'></div>";
  _0x1714a9 += "<div class='btnDiv'>";
  _0x1714a9 += "<button id='btnMopeOptions' class='btn'>      CONTINUE      </button>";
  _0x1714a9 += "</div>";
  _0x1714a9 += "<div style='clear:both;'></div>";
  var _0xb7064b = document.getElementById("endScreen");
  if (_0xb7064b) {
    _0xb7064b.innerHTML = _0x1714a9;
    _0xb7064b.style.display = "block";
  }
  if (!a0_0x290640 || isGhost) {
    a0_0x144cc0();
  }
};
a0_0x23609a.prototype.endScreenCanvas = null;
a0_0x23609a.prototype.buildEndScreen = function (_0x36df60, _0x48842c) {
  if (this.endScreenCanvas == null) {
    this.endScreenCanvas = document.createElement("canvas");
  }
  if (this.endScreenCanvas == null) {
    return;
  }
  var _0x4ec676 = this.endScreenCanvas.getContext("2d");
  var _0x2e5141 = 55;
  var _0x215d42 = 40;
  var _0x257299 = 5;
  var _0x10da61 = 240;
  var _0x1bdd99 = 420;
  _0x2e5141 = _0x10da61 + _0x257299 * 2;
  this.endScreenCanvas.width = _0x1bdd99 + _0x257299 * 2;
  this.endScreenCanvas.height = _0x2e5141;
  _0x4ec676.globalAlpha = 0.2;
  _0x4ec676.fillStyle = "#000000";
  _0x4ec676.fillRect(0, 0, this.endScreenCanvas.width, this.endScreenCanvas.height);
  _0x4ec676.fillStyle = "#000000";
  _0x4ec676.fillRect(_0x257299, _0x257299, this.endScreenCanvas.width - _0x257299 * 2, this.endScreenCanvas.height - _0x257299 * 2);
  var _0xb53f99 = _0x257299;
  _0x4ec676.globalAlpha = 1;
  _0x4ec676.fillStyle = "#FFFFFF";
  _0x4ec676.font = "30px Arial";
  _0xb53f99 += 55;
  var _0x2e90cb = "Final Stats";
  _0x4ec676.font = "30px Arial";
  _0x4ec676.fillText(_0x2e90cb, this.endScreenCanvas.width / 2 - _0x4ec676.measureText(_0x2e90cb).width / 2, _0xb53f99);
  _0x4ec676.font = "20px Arial";
  _0xb53f99 += 45;
  _0x2e90cb = "You were #" + _0x48842c.rank;
  _0x4ec676.fillText(_0x2e90cb, this.endScreenCanvas.width / 2 - _0x4ec676.measureText(_0x2e90cb).width / 2, _0xb53f99);
  _0xb53f99 += 40;
  var _0x4f8fcc = a0_0x3d4b84(_0x48842c.timeAlive);
  var _0xf4b2df = _0x257299 + 15;
  a0_0x4d940a(_0x4ec676, "Killed by", _0x48842c.killedBy, _0xf4b2df, _0xb53f99);
  _0xb53f99 += 40;
  a0_0x4d940a(_0x4ec676, "Time Alive", a0_0x3d4b84(_0x48842c.timeAlive), _0xf4b2df, _0xb53f99);
  _0xf4b2df += 210;
  a0_0x4d940a(_0x4ec676, "Total Kills", _0x48842c.totalKills, _0xf4b2df, _0xb53f99);
  _0xb53f99 += 40;
  _0xf4b2df = _0x257299 + 15;
  a0_0x4d940a(_0x4ec676, "Top rank", _0x48842c.topRank, _0xf4b2df, _0xb53f99);
  _0xf4b2df += 210;
  a0_0x4d940a(_0x4ec676, "Max XP", a0_0x4cf280(_0x48842c.maxXP), _0xf4b2df, _0xb53f99);
  _0xb53f99 += 50;
};
a0_0x23609a.prototype.lastWastedPopupT = 0;
a0_0x23609a.prototype.onPlayerWasted = function (_0x4d772a) {
  if ((a0_0x4f736f - this.lastWastedPopupT) / 1000 > 0.7) {
    this.lastWastedPopupT = a0_0x4f736f;
    var _0x299472 = new a0_0x1b0782(_0x4d772a + " wasted!", 40, "red", 1500);
    this.wastedPopups.push(_0x299472);
  }
};
a0_0x23609a.prototype.lastWastedPopupT = 0;
a0_0x23609a.prototype.msgDisplayPlayersOnMiniMap = function (_0x2ebfc1) {
  a0_0xc38c87 = [];
  var _0xcbfb0f = _0x2ebfc1.readUInt16();
  for (var _0x403c04 = 0; _0x403c04 < _0xcbfb0f; _0x403c04++) {
    a0_0xc38c87.push({
      id: _0x2ebfc1.readUInt32(),
      x: _0x2ebfc1.readUInt32() / 100,
      y: _0x2ebfc1.readUInt32() / 100,
      rad: 3
    });
  }
};
window.FreeForAll = a0_0x23609a;
var a0_0x58d04c = a0_0x5e9215;
a0_0x7b7abd.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x7b7abd.prototype.constructor = a0_0x7b7abd;
a0_0x7b7abd.superClass = a0_0x58d04c;
a0_0x7b7abd.prototype.safeArea = null;
var a0_0x5cbb29 = false;
function a0_0x7b7abd(_0x2ce0f9) {
  this.mode = a0_0x342dbf;
  this.chatAllowed = true;
  this.createInterfaceButtons();
  console.log("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
  console.log("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
  console.log("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
  console.log("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
  console.log("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
}
a0_0x7b7abd.prototype.wastedPopups = [];
a0_0x7b7abd.prototype.playerDisplayNum = 0;
a0_0x7b7abd.prototype.setServerPlayerCount = function () {
  if (this.playerDisplayNum == 0) {
    a0_0xb8f1f9.setText(a0_0x248f5f(a0_0x47046b) + " mopers");
  } else {
    a0_0xb8f1f9.setText(a0_0x248f5f(a0_0x536016) + " on server");
  }
  if (a0_0x25d08e) {
    a0_0x25d08e.setPlayersCount(a0_0x47046b);
  }
  this.playerDisplayNum = this.playerDisplayNum == 0 ? 1 : 0;
};
a0_0x7b7abd.prototype.interface = function () {
  if (this.state == -1 || this.mode != a0_0xe92752) {
    return;
  }
  if (a0_0x290640) {
    for (var _0x3c4580 = this.wastedPopups.length - 1; _0x3c4580 >= 0; _0x3c4580--) {
      var _0x50daf9 = this.wastedPopups[_0x3c4580];
      _0x50daf9.draw();
      if (_0x50daf9.timedOut) {
        this.wastedPopups.splice(_0x3c4580, 1);
      }
    }
  }
  if (this.endScreenCanvas != null) {
    if (this.endScreenCanvas.width) {
      a0_0x4ef4f3.drawImage(this.endScreenCanvas, a0_0x11866b / 2 - this.endScreenCanvas.width / 2, a0_0x24bc92 * 15, this.endScreenCanvas.width, this.endScreenCanvas.height);
    }
    if (!a0_0x290640 || isGhost) {
      a0_0x4b95c7(true);
    }
  }
  this.drawInterfaceButtons();
};
a0_0x7b7abd.prototype.interfaceReset = function () {
  this.endScreenCanvas = null;
  this.dangerCircleMiniMapCanvas = null;
  this.wastedPopups = [];
  this.lastWastedPopupT = 0;
  this.playercount = 0;
  this.safeArea = null;
  a0_0x493f20 = null;
  a0_0x2e7f0f = null;
  if (this.interfaceButtons) {
    for (var _0x11aa70 = 0; _0x11aa70 < this.interfaceButtons.length; _0x11aa70++) {
      var _0x30a79b = this.interfaceButtons[_0x11aa70];
      _0x30a79b.onInterfaceReset();
    }
  }
  this.interfaceButtons = [];
};
a0_0x7b7abd.prototype.onInit = function () {};
a0_0x7b7abd.prototype.playercount = 0;
a0_0x7b7abd.prototype.setPlayerCount = function (_0x56ba84) {
  this.playercount = _0x56ba84;
};
a0_0x7b7abd.prototype.showPlayerCount = function () {
  a0_0x4ef4f3.save();
  var _0x9d7b8c = a0_0x11866b / 2;
  var _0x525dcb = a0_0xba590d * 50;
  var _0x2a86d3 = a0_0xba590d * 300;
  a0_0x4ef4f3.globalAlpha = 0.35;
  a0_0x4ef4f3.fillStyle = "black";
  var _0x9cea89 = a0_0xba590d * 30;
  a0_0x4ef4f3.fillRect(_0x9d7b8c - _0x2a86d3 / 2, _0x9cea89, _0x2a86d3, _0x525dcb);
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.fillStyle = "white";
  a0_0x4ef4f3.font = a0_0xba590d * 30 + "px Arial";
  a0_0x4ef4f3.lineWidth = 1;
  a0_0x4ef4f3.textAlign = "center";
  a0_0x4ef4f3.textBaseline = "middle";
  a0_0x4ef4f3.shadowOffsetX = 1;
  a0_0x4ef4f3.shadowOffsetY = 1;
  a0_0x4ef4f3.shadowColor = "black";
  _0x9cea89 += a0_0xba590d * 25;
  var _0x1a5dab = " player";
  if (this.playercount > 1) {
    _0x1a5dab += "s";
  }
  if (this.state == battleRoyal_inProgress) {
    _0x1a5dab += " alive!";
  } else if (this.state == a0_0x55f22d || this.state == battleRoyal_ready) {
    _0x1a5dab += " joined";
  }
  a0_0x4ef4f3.fillText(this.playercount + _0x1a5dab, _0x9d7b8c, _0x9cea89);
  a0_0x4ef4f3.restore();
};
a0_0x7b7abd.prototype.lbCanvas = null;
a0_0x7b7abd.prototype.leaderboard = function (_0x5e5a18) {
  if (this.lbCanvas == null) {
    this.lbCanvas = document.createElement("canvas");
  }
  if (_0x5e5a18) {
    var _0x4ae613 = this.lbCanvas.getContext("2d");
    var _0x4821e7 = 55;
    var _0xe41f5c = 22;
    _0x4821e7 = _0x4821e7 + _0xe41f5c * _0x5e5a18.length;
    this.lbCanvas.width = 270;
    this.lbCanvas.height = _0x4821e7;
    _0x4ae613.globalAlpha = 0.2;
    _0x4ae613.fillStyle = "#000000";
    _0x4ae613.fillRect(0, 0, this.lbCanvas.width, this.lbCanvas.height);
    _0x4ae613.globalAlpha = 1;
    _0x4ae613.fillStyle = "#FFFFFF";
    var _0xaf4db6 = a0_0xa68ef0.name;
    _0x4ae613.font = "24px Arial";
    if (!options_lowGraphics) {
      _0x4ae613.shadowOffsetX = 1;
      _0x4ae613.shadowOffsetY = 1;
    }
    _0x4ae613.shadowColor = "black";
    _0x4ae613.fillText(_0xaf4db6, this.lbCanvas.width / 2 - _0x4ae613.measureText(_0xaf4db6).width / 2, 40);
    var _0x2ef65c;
    _0x4ae613.textAlign = "left";
    _0x4ae613.font = "17px Arial";
    _0x2ef65c = 0;
    for (; _0x2ef65c < _0x5e5a18.length; ++_0x2ef65c) {
      _0xaf4db6 = a0_0x36b495 ? "" : _0x5e5a18[_0x2ef65c].name || "mope.io";
      _0xaf4db6 += " (" + a0_0x4cf280(_0x5e5a18[_0x2ef65c].xp) + ")";
      _0x4ae613.fillStyle = "#FFFFFF";
      _0x4ae613.fillText(_0xaf4db6, 15, 65 + _0xe41f5c * _0x2ef65c);
    }
  }
};
a0_0x7b7abd.prototype.drawLeaderboard = function () {
  if (a0_0x290640) {
    if (this.pieChartCanvas != null) {
      if (this.pieChartCanvas.width) {
        a0_0x4ef4f3.drawImage(this.pieChartCanvas, a0_0x24bc92 * 20, a0_0x24bc92 * 20, this.pieChartCanvas.width, this.pieChartCanvas.height);
      }
    }
  }
  a0_0x2b4400();
};
a0_0x7b7abd.prototype.btnPlayAgain = null;
a0_0x7b7abd.prototype.showStats = true;
a0_0x7b7abd.prototype.interfaceButtons = [];
a0_0x7b7abd.prototype.createInterfaceButtons = function () {
  this.interfaceButtons = [];
};
a0_0x7b7abd.prototype.drawInterfaceButtons = function () {
  if (this.interfaceButtons) {
    for (var _0xce2167 = 0; _0xce2167 < this.interfaceButtons.length; _0xce2167++) {
      var _0xd7ccb2 = this.interfaceButtons[_0xce2167];
      if (_0xd7ccb2.isVisible) {
        _0xd7ccb2.draw();
      }
    }
  }
};
a0_0x7b7abd.prototype.onResize = function () {
  this.drawInterfaceButtons();
};
a0_0x7b7abd.prototype.readPlayerStats = function (_0x23e369) {
  var _0x410112 = [];
  _0x410112.rank = _0x23e369.readUInt16();
  _0x410112.timeAlive = _0x23e369.readUInt16();
  _0x410112.totalKills = _0x23e369.readUInt16();
  _0x410112.topRank = _0x23e369.readUInt16();
  _0x410112.maxXP = _0x23e369.readUInt32();
  _0x410112.killedBy = _0x23e369.readString();
  return _0x410112;
};
a0_0x7b7abd.prototype.playerInfo = function (_0x357e23) {
  if (isGhost && !a0_0x51a46a) {
    var _0x35748d = this.readPlayerStats(_0x357e23);
    this.buildEndScreenHTML(_0x35748d);
  } else if (!isGhost) {
    this.endScreenCanvas = null;
  }
};
a0_0x7b7abd.prototype.worldUpdate = function (_0xff0a0a) {
  var _0x5b1ffa = minimapW / 200;
  var _0xec3e05 = minimapH / 200;
  var _0x22882d = _0xff0a0a.readUInt32() * _0x5b1ffa;
  var _0x58a564 = _0xff0a0a.readUInt32() * _0xec3e05;
  var _0x3cef22 = _0xff0a0a.readUInt32() * 5;
  a0_0x493f20 = {
    x: _0x22882d,
    y: _0x58a564,
    rad: _0x3cef22 * (minimapW / a0_0x425049)
  };
  this.nonZombiePlayersCount = _0xff0a0a.readUInt16();
  this.zombieCount = _0xff0a0a.readUInt16();
  if (!a0_0x5cbb29) {
    this.zombiePlayers = [];
    for (i = 0; i < this.zombieCount; i++) {
      var _0x22882d = _0xff0a0a.readUInt16() / 4;
      var _0x58a564 = _0xff0a0a.readUInt16() / 4;
      var _0x49691e = _0xff0a0a.readUInt16() / 10;
      this.zombiePlayers.push({
        x: _0x22882d,
        y: _0x58a564,
        rad: _0x49691e
      });
    }
  }
};
var a0_0x2e7f0f = null;
function a0_0x2b4400() {
  if (!a0_0x2e7f0f) {
    a0_0x2e7f0f = document.createElement("canvas");
  }
  a0_0x2e7f0f.width = minimapW;
  a0_0x2e7f0f.height = minimapH;
  var _0x5f001d = a0_0x2e7f0f.getContext("2d");
  _0x5f001d.clearRect(0, 0, a0_0x2e7f0f.width, a0_0x2e7f0f.height);
  _0x5f001d.save();
  var _0x49d91d = Math.max(3, a0_0x493f20.rad);
  var _0x2c76b2 = a0_0x493f20.x;
  var _0x556566 = a0_0x493f20.y;
  _0x5f001d.translate(_0x2c76b2, _0x556566);
  _0x5f001d.save();
  _0x5f001d.globalAlpha = 1;
  a0_0x4e8008(_0x5f001d, 0, 0, a0_0x493f20.rad, 5, "white");
  _0x5f001d.restore();
  var _0x467472 = a0_0xba590d * minimapW * 1.5;
  var _0x33965e = a0_0xba590d * minimapH * 1.5;
  var _0x27d1a7 = 1;
  var _0x594ae9 = "red";
  a0_0x15cbc9(_0x5f001d, a0_0x493f20.rad, Math.PI * 0, _0x594ae9, _0x27d1a7, _0x467472, _0x33965e);
  a0_0x15cbc9(_0x5f001d, a0_0x493f20.rad, Math.PI * 0.5, _0x594ae9, _0x27d1a7, _0x467472, _0x33965e);
  a0_0x15cbc9(_0x5f001d, a0_0x493f20.rad, Math.PI * 1, _0x594ae9, _0x27d1a7, _0x467472, _0x33965e);
  a0_0x15cbc9(_0x5f001d, a0_0x493f20.rad, Math.PI * 1.5, _0x594ae9, _0x27d1a7, _0x467472, _0x33965e);
  _0x5f001d.restore();
  if (a0_0x2e7f0f) {
    a0_0x4ef4f3.drawImage(a0_0x2e7f0f, a0_0x11866b - (a0_0x24bc92 * 10 + a0_0x39a461.width * a0_0xba590d), a0_0x24bc92 * 10, minimapW * a0_0xba590d, minimapH * a0_0xba590d);
  }
}
a0_0x7b7abd.prototype.drawZombiePlayers = function () {
  if (this.zombiePlayers) {
    for (t = 0; t < this.zombiePlayers.length; t++) {
      a0_0x2a2f94(this.zombiePlayers[t], "#adff32", 1);
    }
  }
};
a0_0x7b7abd.prototype.drawMap = function () {
  this.buildPieChart();
  if (!a0_0x5cbb29) {
    this.drawZombiePlayers();
  }
};
a0_0x7b7abd.prototype.pieChartCanvas = null;
a0_0x7b7abd.prototype.teamColors = {
  0: "white",
  1: "#B6CF40"
};
a0_0x7b7abd.prototype.buildPieChart = function () {
  if (this.pieChartCanvas == null) {
    this.pieChartCanvas = document.createElement("canvas");
  }
  if (this.pieChartCanvas == null) {
    return;
  }
  var _0x15c716 = this.pieChartCanvas.getContext("2d");
  var _0x67fd92 = {
    0: this.nonZombiePlayersCount,
    1: this.zombieCount
  };
  a0_0x2943a2 = a0_0x5cbb29 ? 1 : 0;
  var _0x410bd1 = new a0_0x315805({
    pad: 30,
    canvas: this.pieChartCanvas,
    data: _0x67fd92,
    colors: this.teamColors
  });
  var _0x2d0b78 = 55;
  var _0x170ef7 = 40;
  var _0x41cb6d = 5;
  var _0x40eb46 = 200;
  var _0xd3c75e = 200;
  _0x2d0b78 = _0x40eb46 + _0x41cb6d * 2;
  this.pieChartCanvas.width = _0xd3c75e + _0x41cb6d * 2;
  this.pieChartCanvas.height = _0x2d0b78;
  _0x410bd1.draw();
  _0x15c716.globalAlpha = 0.2;
  var _0x5a48c1 = _0x41cb6d;
  _0x15c716.globalAlpha = 0.5;
  _0x15c716.fillStyle = "white";
  _0x15c716.font = "20px Arial";
  var _0x5a48c1 = 200;
  str = a0_0xa68ef0.name;
  _0x15c716.fillText(str, this.pieChartCanvas.width / 2 - _0x15c716.measureText(str).width / 2 - 15, _0x5a48c1);
};
a0_0x7b7abd.prototype.endScreenDisplayed = false;
a0_0x7b7abd.prototype.buildEndScreenHTML = function (_0x1ae9f1) {
  if (this.endScreenDisplayed) {
    return;
  }
  this.endScreenDisplayed = true;
  var _0x27aac1 = "";
  _0x27aac1 += "<div class='msg'>YOU WERE #" + _0x1ae9f1.rank + "</div>";
  _0x27aac1 += "<div class='row'>";
  _0x27aac1 += "<div class='label'>Killed by:</div>";
  _0x27aac1 += "<div class='value2'>" + _0x1ae9f1.killedBy + "</div>";
  _0x27aac1 += "</div>";
  _0x27aac1 += "<div class='row'>";
  _0x27aac1 += "<div class='col1'>";
  _0x27aac1 += "<div class='label'>Time alive:</div>";
  _0x27aac1 += "<div class='value'>" + a0_0x3d4b84(_0x1ae9f1.timeAlive) + "</div>";
  _0x27aac1 += "</div>";
  _0x27aac1 += "<div class='col2'>";
  _0x27aac1 += "<div class='label'>Total kills:</div>";
  _0x27aac1 += "<div class='value'>" + _0x1ae9f1.totalKills + "</div>";
  _0x27aac1 += "</div>";
  _0x27aac1 += "</div>";
  _0x27aac1 += "<div class='row'>";
  _0x27aac1 += "<div class='col1'>";
  _0x27aac1 += "<div class='label'>Top rank:</div>";
  _0x27aac1 += "<div class='value'>" + _0x1ae9f1.topRank + "</div>";
  _0x27aac1 += "</div>";
  _0x27aac1 += "<div class='col2'>";
  _0x27aac1 += "<div class='label'>Max xp:</div>";
  _0x27aac1 += "<div class='value'>" + a0_0x4cf280(_0x1ae9f1.maxXP) + "</div>";
  _0x27aac1 += "</div>";
  _0x27aac1 += "</div>";
  _0x27aac1 += "<div style='clear:both;'></div>";
  _0x27aac1 += "<div class='btnDiv'>";
  _0x27aac1 += "<button id='btnMopeOptions' class='btn'>      CONTINUE      </button>";
  _0x27aac1 += "</div>";
  _0x27aac1 += "<div style='clear:both;'></div>";
  var _0x2ae59f = document.getElementById("endScreen");
  if (_0x2ae59f) {
    _0x2ae59f.innerHTML = _0x27aac1;
    _0x2ae59f.style.display = "block";
  }
  if (!a0_0x290640 || isGhost) {
    a0_0x144cc0();
  }
};
a0_0x7b7abd.prototype.endScreenCanvas = null;
a0_0x7b7abd.prototype.buildEndScreen = function (_0x32f2fa, _0xd9feb6) {
  if (this.endScreenCanvas == null) {
    this.endScreenCanvas = document.createElement("canvas");
  }
  if (this.endScreenCanvas == null) {
    return;
  }
  var _0x4d0750 = this.endScreenCanvas.getContext("2d");
  var _0x37d5f0 = 55;
  var _0x3815d5 = 40;
  var _0x776ec2 = 5;
  var _0xc3b92c = 240;
  var _0x21028c = 420;
  _0x37d5f0 = _0xc3b92c + _0x776ec2 * 2;
  this.endScreenCanvas.width = _0x21028c + _0x776ec2 * 2;
  this.endScreenCanvas.height = _0x37d5f0;
  _0x4d0750.globalAlpha = 0.2;
  _0x4d0750.fillStyle = "#000000";
  _0x4d0750.fillRect(0, 0, this.endScreenCanvas.width, this.endScreenCanvas.height);
  _0x4d0750.fillStyle = "#000000";
  _0x4d0750.fillRect(_0x776ec2, _0x776ec2, this.endScreenCanvas.width - _0x776ec2 * 2, this.endScreenCanvas.height - _0x776ec2 * 2);
  var _0x2a8847 = _0x776ec2;
  _0x4d0750.globalAlpha = 1;
  _0x4d0750.fillStyle = "#FFFFFF";
  _0x4d0750.font = "30px Arial";
  _0x2a8847 += 55;
  var _0x5b1247 = "Final Stats";
  _0x4d0750.font = "30px Arial";
  _0x4d0750.fillText(_0x5b1247, this.endScreenCanvas.width / 2 - _0x4d0750.measureText(_0x5b1247).width / 2, _0x2a8847);
  _0x4d0750.font = "20px Arial";
  _0x2a8847 += 45;
  _0x5b1247 = "You were #" + _0xd9feb6.rank;
  _0x4d0750.fillText(_0x5b1247, this.endScreenCanvas.width / 2 - _0x4d0750.measureText(_0x5b1247).width / 2, _0x2a8847);
  _0x2a8847 += 40;
  var _0x2f5d9e = a0_0x3d4b84(_0xd9feb6.timeAlive);
  var _0x4a87f7 = _0x776ec2 + 15;
  a0_0x4d940a(_0x4d0750, "Killed by", _0xd9feb6.killedBy, _0x4a87f7, _0x2a8847);
  _0x2a8847 += 40;
  a0_0x4d940a(_0x4d0750, "Time Alive", a0_0x3d4b84(_0xd9feb6.timeAlive), _0x4a87f7, _0x2a8847);
  _0x4a87f7 += 210;
  a0_0x4d940a(_0x4d0750, "Total Kills", _0xd9feb6.totalKills, _0x4a87f7, _0x2a8847);
  _0x2a8847 += 40;
  _0x4a87f7 = _0x776ec2 + 15;
  a0_0x4d940a(_0x4d0750, "Top rank", _0xd9feb6.topRank, _0x4a87f7, _0x2a8847);
  _0x4a87f7 += 210;
  a0_0x4d940a(_0x4d0750, "Max XP", a0_0x4cf280(_0xd9feb6.maxXP), _0x4a87f7, _0x2a8847);
  _0x2a8847 += 50;
};
function a0_0x15cbc9(_0x59482f, _0x5d37ee, _0x2c62da, _0x448a9c, _0x3f7ac3, _0x34d05f, _0x1f65b5) {
  _0x59482f.save();
  _0x59482f.globalAlpha = _0x3f7ac3;
  _0x59482f.fillStyle = _0x448a9c;
  _0x59482f.rotate(_0x2c62da);
  _0x59482f.save();
  _0x59482f.strokeStyle = "white";
  _0x59482f.beginPath();
  _0x59482f.arc(0, 0, _0x5d37ee, 0, Math.PI * 0.5, false);
  _0x59482f.stroke();
  _0x59482f.restore();
  _0x59482f.save();
  _0x59482f.beginPath();
  _0x59482f.arc(0, 0, _0x5d37ee, 0, Math.PI * 0.5, false);
  _0x59482f.lineTo(0, _0x34d05f);
  _0x59482f.lineTo(_0x1f65b5, _0x34d05f);
  _0x59482f.lineTo(_0x1f65b5, 0);
  _0x59482f.closePath();
  _0x59482f.fill();
  _0x59482f.restore();
  _0x59482f.restore();
}
a0_0x7b7abd.prototype.lastWastedPopupT = 0;
a0_0x7b7abd.prototype.onPlayerWasted = function (_0xd944d3) {
  if ((a0_0x4f736f - this.lastWastedPopupT) / 1000 > 0.7) {
    this.lastWastedPopupT = a0_0x4f736f;
    var _0xb6cb06 = new a0_0x1b0782(_0xd944d3 + " wasted!", 40, "red", 1500);
    this.wastedPopups.push(_0xb6cb06);
  }
};
window.ZombieMode = a0_0x7b7abd;
var a0_0x58d04c = a0_0x5e9215;
a0_0x4044e4.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4044e4.prototype.constructor = a0_0x4044e4;
a0_0x4044e4.superClass = a0_0x58d04c;
a0_0x4044e4.prototype.safeArea = null;
var a0_0x5cbb29 = false;
a0_0x4044e4.prototype.wastedPopups = [];
a0_0x4044e4.prototype.playerDisplayNum = 0;
a0_0x4044e4.prototype.setServerPlayerCount = function () {
  if (this.playerDisplayNum == 0) {
    a0_0xb8f1f9.setText(a0_0x248f5f(a0_0x47046b) + " mopers");
  } else {
    a0_0xb8f1f9.setText(a0_0x248f5f(a0_0x536016) + " on server");
  }
  if (a0_0x25d08e) {
    a0_0x25d08e.setPlayersCount(a0_0x47046b);
  }
  this.playerDisplayNum = this.playerDisplayNum == 0 ? 1 : 0;
};
a0_0x4044e4.prototype.interface = function () {
  if (this.state == -1 || this.mode != a0_0xe92752) {
    return;
  }
  if (a0_0x290640) {
    for (var _0x3214fb = this.wastedPopups.length - 1; _0x3214fb >= 0; _0x3214fb--) {
      var _0x18820f = this.wastedPopups[_0x3214fb];
      _0x18820f.draw();
      if (_0x18820f.timedOut) {
        this.wastedPopups.splice(_0x3214fb, 1);
      }
    }
  }
  if (this.endScreenCanvas != null) {
    if (this.endScreenCanvas.width) {
      a0_0x4ef4f3.drawImage(this.endScreenCanvas, a0_0x11866b / 2 - this.endScreenCanvas.width / 2, a0_0x24bc92 * 15, this.endScreenCanvas.width, this.endScreenCanvas.height);
    }
    if (!a0_0x290640 || isGhost) {
      a0_0x4b95c7(true);
    }
  }
  this.drawInterfaceButtons();
  this.gameMode_screenMsg();
};
a0_0x4044e4.prototype.interfaceReset = function () {
  this.endScreenCanvas = null;
  this.dangerCircleMiniMapCanvas = null;
  this.wastedPopups = [];
  this.lastWastedPopupT = 0;
  this.playercount = 0;
  this.safeArea = null;
  a0_0x493f20 = null;
  a0_0x2e7f0f = null;
  if (this.interfaceButtons) {
    for (var _0x19c841 = 0; _0x19c841 < this.interfaceButtons.length; _0x19c841++) {
      var _0x20c978 = this.interfaceButtons[_0x19c841];
      _0x20c978.onInterfaceReset();
    }
  }
  this.interfaceButtons = [];
};
a0_0x4044e4.prototype.onInit = function () {};
a0_0x4044e4.prototype.playercount = 0;
a0_0x4044e4.prototype.setPlayerCount = function (_0x2ca558) {
  this.playercount = _0x2ca558;
};
a0_0x4044e4.prototype.showPlayerCount = function () {
  a0_0x4ef4f3.save();
  var _0x226c6d = a0_0x11866b / 2;
  var _0x30c323 = a0_0xba590d * 50;
  var _0x55d953 = a0_0xba590d * 300;
  a0_0x4ef4f3.globalAlpha = 0.35;
  a0_0x4ef4f3.fillStyle = "black";
  var _0x4604af = a0_0xba590d * 30;
  a0_0x4ef4f3.fillRect(_0x226c6d - _0x55d953 / 2, _0x4604af, _0x55d953, _0x30c323);
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.fillStyle = "white";
  a0_0x4ef4f3.font = a0_0xba590d * 30 + "px Arial";
  a0_0x4ef4f3.lineWidth = 1;
  a0_0x4ef4f3.textAlign = "center";
  a0_0x4ef4f3.textBaseline = "middle";
  a0_0x4ef4f3.shadowOffsetX = 1;
  a0_0x4ef4f3.shadowOffsetY = 1;
  a0_0x4ef4f3.shadowColor = "black";
  _0x4604af += a0_0xba590d * 25;
  var _0x3e09e7 = " player";
  if (this.playercount > 1) {
    _0x3e09e7 += "s";
  }
  if (this.state == battleRoyal_inProgress) {
    _0x3e09e7 += " alive!";
  } else if (this.state == a0_0x55f22d || this.state == battleRoyal_ready) {
    _0x3e09e7 += " joined";
  }
  a0_0x4ef4f3.fillText(this.playercount + _0x3e09e7, _0x226c6d, _0x4604af);
  a0_0x4ef4f3.restore();
};
a0_0x4044e4.prototype.lbCanvas = null;
a0_0x4044e4.prototype.leaderboard = function (_0x590310) {
  if (this.lbCanvas == null) {
    this.lbCanvas = document.createElement("canvas");
  }
  if (_0x590310) {
    var _0xbbbf2f = this.lbCanvas.getContext("2d");
    var _0x5af4cc = 55;
    var _0x6620a3 = 22;
    _0x5af4cc = _0x5af4cc + _0x6620a3 * _0x590310.length;
    this.lbCanvas.width = 270;
    this.lbCanvas.height = _0x5af4cc;
    _0xbbbf2f.globalAlpha = 0.2;
    _0xbbbf2f.fillStyle = "#000000";
    _0xbbbf2f.fillRect(0, 0, this.lbCanvas.width, this.lbCanvas.height);
    _0xbbbf2f.globalAlpha = 1;
    _0xbbbf2f.fillStyle = "#FFFFFF";
    var _0x39bce0 = a0_0xa68ef0.name;
    _0xbbbf2f.font = "24px Arial";
    if (!options_lowGraphics) {
      _0xbbbf2f.shadowOffsetX = 1;
      _0xbbbf2f.shadowOffsetY = 1;
    }
    _0xbbbf2f.shadowColor = "black";
    _0xbbbf2f.fillText(_0x39bce0, this.lbCanvas.width / 2 - _0xbbbf2f.measureText(_0x39bce0).width / 2, 40);
    var _0x17a8b5;
    _0xbbbf2f.textAlign = "left";
    _0xbbbf2f.font = "17px Arial";
    _0x17a8b5 = 0;
    for (; _0x17a8b5 < _0x590310.length; ++_0x17a8b5) {
      _0x39bce0 = a0_0x36b495 ? "" : _0x590310[_0x17a8b5].name || "mope.io";
      _0x39bce0 += " (" + a0_0x4cf280(_0x590310[_0x17a8b5].xp) + ")";
      _0xbbbf2f.fillStyle = "#FFFFFF";
      _0xbbbf2f.fillText(_0x39bce0, 15, 65 + _0x6620a3 * _0x17a8b5);
    }
  }
};
a0_0x4044e4.prototype.drawLeaderboard = function () {
  if (a0_0x290640) {
    if (this.pieChartCanvas != null) {
      if (this.pieChartCanvas.width) {
        a0_0x4ef4f3.drawImage(this.pieChartCanvas, a0_0x24bc92 * 20, a0_0x24bc92 * 20, this.pieChartCanvas.width, this.pieChartCanvas.height);
      }
    }
  }
  if (a0_0x493f20) {
    a0_0x2b4400();
  }
};
a0_0x4044e4.prototype.btnPlayAgain = null;
a0_0x4044e4.prototype.showStats = true;
a0_0x4044e4.prototype.interfaceButtons = [];
a0_0x4044e4.prototype.createInterfaceButtons = function () {
  this.interfaceButtons = [];
};
a0_0x4044e4.prototype.drawInterfaceButtons = function () {
  if (this.interfaceButtons) {
    for (var _0x8f31d5 = 0; _0x8f31d5 < this.interfaceButtons.length; _0x8f31d5++) {
      var _0x4612c0 = this.interfaceButtons[_0x8f31d5];
      if (_0x4612c0.isVisible) {
        _0x4612c0.draw();
      }
    }
  }
};
a0_0x4044e4.prototype.onResize = function () {
  this.drawInterfaceButtons();
};
a0_0x4044e4.prototype.readPlayerStats = function (_0x30020a) {
  var _0xa9d654 = [];
  _0xa9d654.rank = _0x30020a.readUInt16();
  _0xa9d654.timeAlive = _0x30020a.readUInt16();
  _0xa9d654.totalKills = _0x30020a.readUInt16();
  _0xa9d654.topRank = _0x30020a.readUInt16();
  _0xa9d654.maxXP = _0x30020a.readUInt32();
  _0xa9d654.killedBy = _0x30020a.readString();
  return _0xa9d654;
};
a0_0x4044e4.prototype.playerInfo = function (_0x1feafa) {
  if (isGhost && !a0_0x51a46a) {
    var _0x3a8921 = this.readPlayerStats(_0x1feafa);
    this.buildEndScreenHTML(_0x3a8921);
  } else if (!isGhost) {
    this.endScreenCanvas = null;
  }
};
var a0_0x55f22d = 0;
var a0_0x157304 = 1;
var a0_0x157304 = 1;
var a0_0x581ddf = 2;
var a0_0x5d451a = 4;
var a0_0xc4456a = 4;
a0_0x4044e4.prototype.worldUpdate = function (_0x2e820f) {
  a0_0x417918 = _0x2e820f.readUInt8();
  if (a0_0x417918 == a0_0x581ddf) {
    var _0x342b09 = minimapW / 200;
    var _0x45f023 = minimapH / 200;
    var _0x98491e = _0x2e820f.readUInt32() * _0x342b09;
    var _0x2a32c0 = _0x2e820f.readUInt32() * _0x45f023;
    var _0x42eed4 = _0x2e820f.readUInt32() * 5;
    a0_0x493f20 = {
      x: _0x98491e,
      y: _0x2a32c0,
      rad: _0x42eed4 * (minimapW / a0_0x425049)
    };
  } else {
    a0_0x493f20 = null;
  }
};
a0_0x4044e4.prototype.handleMessage = function (_0x5946cd) {
  var _0x2c08eb = _0x5946cd.readUInt8();
  switch (_0x2c08eb) {
    case a0_0x29f970:
      {
        var _0x4f3147 = _0x5946cd.readString();
        this.setStatusBarMessage(_0x4f3147, 15);
        break;
      }
    case a0_0x513ca2:
      {
        this.alivePlayers = _0x5946cd.readUInt16();
        this.playerCountMsg = _0x5946cd.readString();
        this.setPlayerCountMsg();
        break;
      }
    case a0_0x5a9b23:
      {
        this.timeRemain = _0x5946cd.readUInt16();
        break;
      }
    case 33:
      {
        var _0x439911 = _0x5946cd.readUInt16();
        isGhost = true;
        this.showStats = true;
        a0_0x409384 = false;
        a0_0x12b93();
      }
      break;
    case 34:
      {
        a0_0x3099a9 = "You WON!";
        respawnXp = 0;
        a0_0x51b69f = 80;
        a0_0x4e7d32 = "limegreen";
        a0_0x375ff0 = +new Date() + 5000;
        a0_0x409384 = false;
        a0_0x12b93();
      }
      break;
    case 35:
      {}
      break;
    case 36:
      {
        var _0x48ce27 = _0x5946cd.readUInt8();
        var _0x57f688 = [];
        for (_0x8536c0 = 0; _0x8536c0 < _0x48ce27; ++_0x8536c0) {
          _0x57f688.push({
            name: _0x5946cd.readString(),
            xp: _0x5946cd.readUInt32()
          });
        }
        this.leaderboard(_0x57f688);
      }
      break;
    case 37:
      {
        var _0xf3d9e2 = _0x5946cd.readUInt16();
        var _0x4ff049 = a0_0x3d4b84(_0xf3d9e2);
        if (this.state == 4) {
          var _0x4f3147 = "Game restarts in " + _0x4ff049;
          if (_0xf3d9e2 < 3) {
            _0x4f3147 = "Starting new game";
          }
          this.setMessage(_0x4f3147, 500);
        } else {
          var _0x4f3147 = "Battle begins in " + _0x4ff049;
          if (_0xf3d9e2 < 3) {
            if (_0x4ff049 == "") {
              _0x4f3147 = "Starting new battle!";
            } else {
              _0x4f3147 = "Starting new battle! (" + _0x4ff049 + ")";
            }
          }
          this.setMessage(_0x4f3147, 500);
          if (_0xf3d9e2 == 0) {
            a0_0x574163("SURVIVE!", 2500);
          }
        }
      }
      break;
    case 38:
      {
        this.playersJoined = _0x5946cd.readUInt16();
        if (this.playersJoined > 0) {
          this.setPlayerCount(this.playersJoined);
        }
      }
      break;
    case 39:
      {
        var _0xf3d9e2 = _0x5946cd.readUInt16();
        var _0x4ff049 = a0_0x3d4b84(_0xf3d9e2);
        if (!isGhost) {
          var _0x4f3147 = "Heatwave expanding in " + _0x4ff049;
          if (_0xf3d9e2 < 4) {
            _0x4f3147 = "Heatwave expands now!";
          }
          this.setMessage(_0x4f3147, 500);
          if (_0xf3d9e2 == 0) {
            a0_0x574163("STAY SAFE!", 2500);
          }
        }
      }
      break;
    case 40:
      {
        if (isGhost) {
          this.setMessage("You have been eliminated!", 500);
        } else {
          this.setMessage("Stay in safe area!", 500);
        }
      }
      break;
    case 41:
      {
        a0_0x417918 = this.state = _0x5946cd.readUInt8();
        this.playersJoined = _0x5946cd.readUInt16();
        if (this.playersJoined > 0) {
          this.setPlayerCount(this.playersJoined);
        }
        if (this.state == a0_0x55f22d) {
          this.setMessage("Waiting for players", 1000);
        } else if (this.state == battleRoyal_gameReset) {
          a0_0x52538f();
        }
      }
      break;
    case 42:
      {
        var _0x3d7646 = _0x5946cd.readUInt8() == 1;
        if (_0x3d7646) {
          this.setMessage("You WON!", 15000);
        } else {
          this.setMessage("You LOST!", 15000);
        }
      }
      break;
    case 43:
      {
        a0_0x95d5a0 = true;
        if (a0_0x14ed4d()) {
          a0_0xee3c71.close();
        }
      }
      break;
    case 44:
      {
        var _0x1a3db0 = _0x5946cd.readString();
        if (_0x1a3db0 && _0x1a3db0.length > 0) {
          this.onPlayerWasted(_0x1a3db0);
        }
      }
      break;
    case 45:
      {
        console.log("Msg_battleroyal_endScreen");
        var _0x7a69da = null;
        var _0x4598f7 = 0;
        if (!a0_0x39882a) {
          _0x7a69da = this.readPlayerStats(_0x5946cd);
          _0x4598f7 = _0x7a69da.totalPlayers;
        } else {
          _0x4598f7 = _0x5946cd.readUInt16();
        }
        var _0x3cfbaf = [];
        if (_0x4598f7 > 0) {
          if (_0x4598f7 > 5) {
            _0x4598f7 = 5;
          }
          for (var _0x8536c0 = 0; _0x8536c0 < _0x4598f7; ++_0x8536c0) {
            _0x3cfbaf.push({
              playerName: _0x5946cd.readString(),
              wins: _0x5946cd.readUInt8()
            });
          }
        }
        if (_0x3cfbaf != null || _0x7a69da != null) {
          this.endScreenDisplayed = false;
          this.buildEndScreenHTML(_0x3cfbaf, _0x7a69da);
        }
      }
      break;
    case 46:
      {
        var _0xf3d9e2 = _0x5946cd.readUInt16();
        if (_0xf3d9e2 == 0) {
          this.setMessage("Battle Ended", 500);
        } else {
          var _0x4ff049 = a0_0x3d4b84(_0xf3d9e2);
          if (!isGhost) {
            this.setMessage("Battle Ending in " + _0x4ff049, 500);
          }
        }
      }
    case 48:
      {
        var _0x7a69da = this.readPlayerStats(_0x5946cd);
        this.buildEndScreen(null, _0x7a69da);
      }
  }
};
var a0_0x2e7f0f = null;
function a0_0x2b4400() {
  if (!a0_0x2e7f0f) {
    a0_0x2e7f0f = document.createElement("canvas");
  }
  a0_0x2e7f0f.width = minimapW;
  a0_0x2e7f0f.height = minimapH;
  var _0x1f2782 = a0_0x2e7f0f.getContext("2d");
  _0x1f2782.clearRect(0, 0, a0_0x2e7f0f.width, a0_0x2e7f0f.height);
  _0x1f2782.save();
  var _0x4f75ff = Math.max(3, a0_0x493f20.rad);
  var _0x35b160 = a0_0x493f20.x;
  var _0x27272f = a0_0x493f20.y;
  _0x1f2782.translate(_0x35b160, _0x27272f);
  _0x1f2782.save();
  _0x1f2782.globalAlpha = 1;
  a0_0x4e8008(_0x1f2782, 0, 0, a0_0x493f20.rad, 5, "white");
  _0x1f2782.restore();
  var _0x2d4c6d = a0_0xba590d * minimapW * 1.5;
  var _0x1daf2e = a0_0xba590d * minimapH * 1.5;
  var _0x6f977f = 1;
  var _0x3c0e54 = "red";
  a0_0x15cbc9(_0x1f2782, a0_0x493f20.rad, Math.PI * 0, _0x3c0e54, _0x6f977f, _0x2d4c6d, _0x1daf2e);
  a0_0x15cbc9(_0x1f2782, a0_0x493f20.rad, Math.PI * 0.5, _0x3c0e54, _0x6f977f, _0x2d4c6d, _0x1daf2e);
  a0_0x15cbc9(_0x1f2782, a0_0x493f20.rad, Math.PI * 1, _0x3c0e54, _0x6f977f, _0x2d4c6d, _0x1daf2e);
  a0_0x15cbc9(_0x1f2782, a0_0x493f20.rad, Math.PI * 1.5, _0x3c0e54, _0x6f977f, _0x2d4c6d, _0x1daf2e);
  _0x1f2782.restore();
  if (a0_0x2e7f0f) {
    a0_0x4ef4f3.drawImage(a0_0x2e7f0f, a0_0x11866b - (a0_0x24bc92 * 10 + a0_0x39a461.width * a0_0xba590d), a0_0x24bc92 * 10, minimapW * a0_0xba590d, minimapH * a0_0xba590d);
  }
}
a0_0x4044e4.prototype.drawZombiePlayers = function () {
  if (this.zombiePlayers) {
    for (t = 0; t < this.zombiePlayers.length; t++) {
      a0_0x2a2f94(this.zombiePlayers[t], "#adff32", 1);
    }
  }
};
a0_0x4044e4.prototype.drawMap = function () {
  this.buildPieChart();
  if (!a0_0x5cbb29) {
    this.drawZombiePlayers();
  }
};
a0_0x4044e4.prototype.pieChartCanvas = null;
a0_0x4044e4.prototype.teamColors = {
  0: "white",
  1: "#B6CF40"
};
a0_0x4044e4.prototype.buildPieChart = function () {
  if (this.pieChartCanvas == null) {
    this.pieChartCanvas = document.createElement("canvas");
  }
  if (this.pieChartCanvas == null) {
    return;
  }
  var _0x2c6f60 = this.pieChartCanvas.getContext("2d");
  var _0x143d01 = {
    0: this.nonZombiePlayersCount,
    1: this.zombieCount
  };
  a0_0x2943a2 = a0_0x5cbb29 ? 1 : 0;
  var _0x156d6a = new a0_0x315805({
    pad: 30,
    canvas: this.pieChartCanvas,
    data: _0x143d01,
    colors: this.teamColors
  });
  var _0x1636e2 = 55;
  var _0x205961 = 40;
  var _0x2c38b3 = 5;
  var _0x1e0c09 = 200;
  var _0x512e6a = 200;
  _0x1636e2 = _0x1e0c09 + _0x2c38b3 * 2;
  this.pieChartCanvas.width = _0x512e6a + _0x2c38b3 * 2;
  this.pieChartCanvas.height = _0x1636e2;
  _0x156d6a.draw();
  _0x2c6f60.globalAlpha = 0.2;
  var _0x3f4fb1 = _0x2c38b3;
  _0x2c6f60.globalAlpha = 0.5;
  _0x2c6f60.fillStyle = "white";
  _0x2c6f60.font = "20px Arial";
  var _0x3f4fb1 = 200;
  str = a0_0xa68ef0.name;
  _0x2c6f60.fillText(str, this.pieChartCanvas.width / 2 - _0x2c6f60.measureText(str).width / 2 - 15, _0x3f4fb1);
};
a0_0x4044e4.prototype.endScreenDisplayed = false;
a0_0x4044e4.prototype.buildEndScreenHTML = function (_0x48b005) {
  if (this.endScreenDisplayed) {
    return;
  }
  this.endScreenDisplayed = true;
  var _0x441ae = "";
  _0x441ae += "<div class='msg'>YOU WERE #" + _0x48b005.rank + "</div>";
  _0x441ae += "<div class='row'>";
  _0x441ae += "<div class='label'>Killed by:</div>";
  _0x441ae += "<div class='value2'>" + _0x48b005.killedBy + "</div>";
  _0x441ae += "</div>";
  _0x441ae += "<div class='row'>";
  _0x441ae += "<div class='col1'>";
  _0x441ae += "<div class='label'>Time alive:</div>";
  _0x441ae += "<div class='value'>" + a0_0x3d4b84(_0x48b005.timeAlive) + "</div>";
  _0x441ae += "</div>";
  _0x441ae += "<div class='col2'>";
  _0x441ae += "<div class='label'>Total kills:</div>";
  _0x441ae += "<div class='value'>" + _0x48b005.totalKills + "</div>";
  _0x441ae += "</div>";
  _0x441ae += "</div>";
  _0x441ae += "<div class='row'>";
  _0x441ae += "<div class='col1'>";
  _0x441ae += "<div class='label'>Top rank:</div>";
  _0x441ae += "<div class='value'>" + _0x48b005.topRank + "</div>";
  _0x441ae += "</div>";
  _0x441ae += "<div class='col2'>";
  _0x441ae += "<div class='label'>Max xp:</div>";
  _0x441ae += "<div class='value'>" + a0_0x4cf280(_0x48b005.maxXP) + "</div>";
  _0x441ae += "</div>";
  _0x441ae += "</div>";
  _0x441ae += "<div style='clear:both;'></div>";
  _0x441ae += "<div class='btnDiv'>";
  _0x441ae += "<button id='btnMopeOptions' class='btn'>      CONTINUE      </button>";
  _0x441ae += "</div>";
  _0x441ae += "<div style='clear:both;'></div>";
  var _0x4c0c68 = document.getElementById("endScreen");
  if (_0x4c0c68) {
    _0x4c0c68.innerHTML = _0x441ae;
    _0x4c0c68.style.display = "block";
  }
  if (!a0_0x290640 || isGhost) {
    a0_0x4b95c7(true);
  }
};
a0_0x4044e4.prototype.endScreenCanvas = null;
a0_0x4044e4.prototype.buildEndScreen = function (_0x38a353, _0xec5ca4) {
  if (this.endScreenCanvas == null) {
    this.endScreenCanvas = document.createElement("canvas");
  }
  if (this.endScreenCanvas == null) {
    return;
  }
  var _0x1847e5 = this.endScreenCanvas.getContext("2d");
  var _0x4f80ce = 55;
  var _0x1eb077 = 40;
  var _0x32fa38 = 5;
  var _0x127535 = 240;
  var _0x3f2554 = 420;
  _0x4f80ce = _0x127535 + _0x32fa38 * 2;
  this.endScreenCanvas.width = _0x3f2554 + _0x32fa38 * 2;
  this.endScreenCanvas.height = _0x4f80ce;
  _0x1847e5.globalAlpha = 0.2;
  _0x1847e5.fillStyle = "#000000";
  _0x1847e5.fillRect(0, 0, this.endScreenCanvas.width, this.endScreenCanvas.height);
  _0x1847e5.fillStyle = "#000000";
  _0x1847e5.fillRect(_0x32fa38, _0x32fa38, this.endScreenCanvas.width - _0x32fa38 * 2, this.endScreenCanvas.height - _0x32fa38 * 2);
  var _0x255616 = _0x32fa38;
  _0x1847e5.globalAlpha = 1;
  _0x1847e5.fillStyle = "#FFFFFF";
  _0x1847e5.font = "30px Arial";
  _0x255616 += 55;
  var _0x1d262e = "Final Stats";
  _0x1847e5.font = "30px Arial";
  _0x1847e5.fillText(_0x1d262e, this.endScreenCanvas.width / 2 - _0x1847e5.measureText(_0x1d262e).width / 2, _0x255616);
  _0x1847e5.font = "20px Arial";
  _0x255616 += 45;
  _0x1d262e = "You were #" + _0xec5ca4.rank;
  _0x1847e5.fillText(_0x1d262e, this.endScreenCanvas.width / 2 - _0x1847e5.measureText(_0x1d262e).width / 2, _0x255616);
  _0x255616 += 40;
  var _0x4bfd3b = a0_0x3d4b84(_0xec5ca4.timeAlive);
  var _0x3cbe70 = _0x32fa38 + 15;
  a0_0x4d940a(_0x1847e5, "Killed by", _0xec5ca4.killedBy, _0x3cbe70, _0x255616);
  _0x255616 += 40;
  a0_0x4d940a(_0x1847e5, "Time Alive", a0_0x3d4b84(_0xec5ca4.timeAlive), _0x3cbe70, _0x255616);
  _0x3cbe70 += 210;
  a0_0x4d940a(_0x1847e5, "Total Kills", _0xec5ca4.totalKills, _0x3cbe70, _0x255616);
  _0x255616 += 40;
  _0x3cbe70 = _0x32fa38 + 15;
  a0_0x4d940a(_0x1847e5, "Top rank", _0xec5ca4.topRank, _0x3cbe70, _0x255616);
  _0x3cbe70 += 210;
  a0_0x4d940a(_0x1847e5, "Max XP", a0_0x4cf280(_0xec5ca4.maxXP), _0x3cbe70, _0x255616);
  _0x255616 += 50;
};
function a0_0x15cbc9(_0x38554a, _0x61dbbf, _0x5123a5, _0x201684, _0x293d34, _0x36b08e, _0x3758b7) {
  _0x38554a.save();
  _0x38554a.globalAlpha = _0x293d34;
  _0x38554a.fillStyle = _0x201684;
  _0x38554a.rotate(_0x5123a5);
  _0x38554a.save();
  _0x38554a.strokeStyle = "white";
  _0x38554a.beginPath();
  _0x38554a.arc(0, 0, _0x61dbbf, 0, Math.PI * 0.5, false);
  _0x38554a.stroke();
  _0x38554a.restore();
  _0x38554a.save();
  _0x38554a.beginPath();
  _0x38554a.arc(0, 0, _0x61dbbf, 0, Math.PI * 0.5, false);
  _0x38554a.lineTo(0, _0x36b08e);
  _0x38554a.lineTo(_0x3758b7, _0x36b08e);
  _0x38554a.lineTo(_0x3758b7, 0);
  _0x38554a.closePath();
  _0x38554a.fill();
  _0x38554a.restore();
  _0x38554a.restore();
}
a0_0x4044e4.prototype.lastWastedPopupT = 0;
a0_0x4044e4.prototype.onPlayerWasted = function (_0xf1c478) {
  if ((a0_0x4f736f - this.lastWastedPopupT) / 1000 > 0.7) {
    this.lastWastedPopupT = a0_0x4f736f;
    var _0x478eaf = new a0_0x1b0782(_0xf1c478 + " wasted!", 40, "red", 1500);
    this.wastedPopups.push(_0x478eaf);
  }
};
a0_0x4044e4.prototype.screenTextEndT = 0;
a0_0x4044e4.prototype.screenTextMsg = "";
a0_0x4044e4.prototype.setMessage = function (_0x50d95b, _0x5bbfe4) {
  this.screenTextMsg = _0x50d95b;
  if (_0x5bbfe4 == 0) {
    this.screenTextEndT = +new Date() + _0x5bbfe4;
  } else {
    this.screenTextEndT = +new Date() + _0x5bbfe4;
  }
};
a0_0x4044e4.prototype.screenMessage = function () {
  var _0x53efa4 = 1;
  var _0x4ea86b = (this.screenTextEndT - a0_0x4f736f) / 1000 / _0x53efa4;
  _0x4ea86b = _0x4ea86b < 0 ? 0 : _0x4ea86b > 1 ? 1 : _0x4ea86b;
  if (_0x4ea86b > 0) {
    a0_0x4ef4f3.save();
    var _0x8363b6 = a0_0x11866b / 2;
    var _0x20fa09 = a0_0xba590d * 60;
    var _0x297369 = (a0_0x11866b / 2 - 100) * a0_0xba590d;
    a0_0x4ef4f3.globalAlpha = 0.35;
    a0_0x4ef4f3.fillStyle = "black";
    var _0x484854 = a0_0x8379e6 - a0_0x8379e6 * 0.2;
    a0_0x4ef4f3.fillRect(_0x8363b6 - _0x297369 / 2, _0x484854 - _0x20fa09 / 2, _0x297369, _0x20fa09);
    a0_0x4ef4f3.globalAlpha = 1;
    a0_0x4ef4f3.globalAlpha = _0x4ea86b;
    a0_0x4ef4f3.globalAlpha = 1;
    a0_0x4ef4f3.fillStyle = "white";
    a0_0x4ef4f3.font = a0_0xba590d * 40 + "px Arial";
    a0_0x4ef4f3.lineWidth = 1;
    a0_0x4ef4f3.textAlign = "center";
    a0_0x4ef4f3.textBaseline = "middle";
    a0_0x4ef4f3.shadowOffsetX = 1;
    a0_0x4ef4f3.shadowOffsetY = 1;
    a0_0x4ef4f3.shadowColor = "black";
    a0_0x4ef4f3.fillText(this.screenTextMsg, a0_0x11866b / 2, _0x484854);
    a0_0x4ef4f3.restore();
  }
};
var a0_0x46c549 = new Array();
a0_0x4044e4.prototype.setStatusBarMessage = function (_0x5ef937, _0x15b4ba) {
  var _0x1ef81d = 40;
  var _0x41f46c = 1;
  var _0x288ebd = "white";
  var _0x2e0a5d = a0_0x11866b / 2;
  var _0x9b3fe8 = a0_0x8379e6 - a0_0x8379e6 * 0.15;
  var _0x14213a = a0_0x11866b / 2 - 100;
  var _0x3c3e62 = 60;
  var _0x58ab40 = "black";
  var _0x339fef = 0.1;
  var _0x23544a = +new Date() + _0x15b4ba * 1000;
  this.msg_statusbar = {
    txt: _0x5ef937,
    txt_size: _0x1ef81d,
    txt_alpha: _0x41f46c,
    txt_color: _0x288ebd,
    x: _0x2e0a5d,
    y: _0x9b3fe8,
    bg_w: _0x14213a,
    bg_h: _0x3c3e62,
    bg_color: _0x58ab40,
    bg_alpha: _0x339fef,
    dur: _0x23544a
  };
};
a0_0x4044e4.prototype.msg_statusbar = null;
a0_0x4044e4.prototype.msg_playerCount = null;
var a0_0x488af8 = 0.1;
a0_0x4044e4.prototype.setPlayerCountMsg = function () {
  var _0x42b13c = 20;
  var _0x2de472 = 1;
  var _0x1c5c11 = "white";
  var _0x24fe36 = a0_0x11866b / 2;
  var _0x17cebe = 30;
  var _0x52b490 = 100;
  var _0x419914 = 40;
  var _0x63758a = "black";
  var _0x1818b4 = 0.1;
  var _0x568c53 = "";
  if (this.playerCountMsg != "alive") {
    _0x419914 = 70;
    _0x568c53 = this.playerCountMsg + "\n" + this.alivePlayers + " joined";
  } else {
    _0x568c53 = this.alivePlayers + " alive";
  }
  var _0x2387e1 = +new Date() + 60000;
  this.msg_playerCount = {
    txt: _0x568c53,
    txt_size: _0x42b13c,
    txt_alpha: _0x2de472,
    txt_color: _0x1c5c11,
    x: _0x24fe36,
    y: _0x17cebe,
    bg_w: _0x52b490,
    bg_h: _0x419914,
    bg_color: _0x63758a,
    bg_alpha: _0x1818b4,
    dur: _0x2387e1
  };
};
a0_0x4044e4.prototype.gameMode_screenMsg = function () {
  if (this.msg_statusbar) {
    this.drawMessage(this.msg_statusbar);
    if (this.msg_statusbar.dur - a0_0x4f736f < 0) {
      this.msg_statusbar = null;
    }
  }
  if (this.msg_playerCount) {
    this.drawMessage(this.msg_playerCount);
  }
};
a0_0x4044e4.prototype.drawMessage = function (_0x5a29d0) {
  if (_0x5a29d0 && _0x5a29d0.txt) {
    this.drawMessageBar(_0x5a29d0.txt, _0x5a29d0.txt_size, _0x5a29d0.txt_alpha, _0x5a29d0.txt_color, _0x5a29d0.x, _0x5a29d0.y, _0x5a29d0.bg_w, _0x5a29d0.bg_h, _0x5a29d0.bg_color, _0x5a29d0.bg_alpha, _0x5a29d0.dur);
  }
};
a0_0x4044e4.prototype.drawMessageBar = function (_0x2f8e0e, _0x34f1de, _0x96614e, _0x19c336, _0x3fe541, _0x1302f6, _0x2a61e6, _0x13e008, _0x3f71ce, _0x387568, _0x3374c6) {
  var _0x552ff1 = 1;
  {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = _0x387568;
    a0_0x4ef4f3.fillStyle = _0x3f71ce;
    _0x34f1de = _0x34f1de * a0_0xba590d;
    a0_0x4ef4f3.font = _0x34f1de + "px Arial";
    var _0x556ac8 = _0x3fe541;
    var _0x1dd7b0 = _0x1302f6;
    var _0x37d152 = _0x2f8e0e.split("\n");
    var _0x177702 = _0x34f1de * _0x37d152.length * 1.5 * a0_0xba590d;
    var _0x291d6d = 0;
    for (var _0x36d788 = 0; _0x36d788 < _0x37d152.length; ++_0x36d788) {
      _0x291d6d = Math.max(_0x291d6d, a0_0x4ef4f3.measureText(_0x37d152[_0x36d788]).width);
    }
    _0x291d6d = _0x291d6d * 1.5 * a0_0xba590d;
    a0_0x4ef4f3.fillRect(_0x556ac8 - _0x291d6d / 2, _0x1dd7b0 - _0x177702 / 2, _0x291d6d, _0x177702);
    a0_0x4ef4f3.globalAlpha = _0x96614e;
    a0_0x4ef4f3.fillStyle = _0x19c336;
    a0_0x4ef4f3.lineWidth = 1;
    a0_0x4ef4f3.textAlign = "center";
    a0_0x4ef4f3.textBaseline = "middle";
    a0_0x4ef4f3.shadowOffsetX = 1;
    a0_0x4ef4f3.shadowOffsetY = 1;
    a0_0x4ef4f3.shadowColor = "black";
    if (_0x37d152.length > 1) {
      _0x1dd7b0 -= a0_0xba590d * 10;
    } else {
      _0x1dd7b0 += a0_0xba590d * 5;
    }
    for (var _0x36d788 = 0; _0x36d788 < _0x37d152.length; _0x36d788++) {
      a0_0x4ef4f3.fillText(_0x37d152[_0x36d788], _0x556ac8, _0x1dd7b0);
      _0x1dd7b0 += _0x34f1de * (_0x36d788 + 1);
    }
    a0_0x4ef4f3.restore();
  }
};
function a0_0x4044e4(_0x2de3c4) {
  this.mode = a0_0x5bd4ac;
  this.chatAllowed = true;
  this.createInterfaceButtons();
}
window.BattleRoyale = a0_0x4044e4;
function a0_0x315805(_0x4d52fb) {
  this.options = _0x4d52fb;
  this.radius = _0x4d52fb.radius;
  this.pad = _0x4d52fb.pad;
  this.canvas = _0x4d52fb.canvas;
  this._ctx = this.canvas.getContext("2d");
  this.colors = _0x4d52fb.colors;
  this.radius = Math.min(this.canvas.width / 2, this.canvas.height / 2);
  this.draw = function () {
    var _0x3b0e7b = 0;
    var _0x3b0987 = 0;
    this._ctx.save();
    this._ctx.globalAlpha = 0.3;
    this.drawCircle(this.canvas.width / 2 - this.pad / 2, this.canvas.height / 2 - this.pad / 2, this.radius - this.pad, "white");
    this._ctx.restore();
    for (var _0x2ff7b1 in this.options.data) {
      var _0x379471 = this.options.data[_0x2ff7b1];
      _0x3b0e7b += _0x379471;
    }
    var _0x2d7187 = 0;
    for (_0x2ff7b1 in this.options.data) {
      this._ctx.save();
      this._ctx.lineWidth = 4;
      this._ctx.strokeStyle = "white";
      this._ctx.globalAlpha = 0.3;
      var _0x29e05b = 0;
      if (a0_0x2943a2 == _0x2ff7b1) {
        this._ctx.globalAlpha = 0.6;
        _0x29e05b = 8;
      }
      _0x379471 = this.options.data[_0x2ff7b1];
      var _0x1313a4 = Math.PI * 2 * _0x379471 / _0x3b0e7b;
      this.drawPieSlice(this.canvas.width / 2 - this.pad / 2, this.canvas.height / 2 - this.pad / 2, this.radius - this.pad, _0x2d7187, _0x2d7187 + _0x1313a4, this.colors[_0x2ff7b1], _0x29e05b);
      this._ctx.restore();
      _0x2d7187 += _0x1313a4;
      _0x3b0987++;
    }
  };
  this.drawPieSlice = function (_0x55d9a0, _0x50c49f, _0x2ffa94, _0x5e58e3, _0x28f7db, _0x4cbea1, _0x3e25f9) {
    this._ctx.fillStyle = _0x4cbea1;
    this._ctx.beginPath();
    this._ctx.moveTo(_0x55d9a0, _0x50c49f);
    this._ctx.arc(_0x55d9a0, _0x50c49f, _0x2ffa94 + _0x3e25f9, _0x5e58e3, _0x28f7db);
    this._ctx.closePath();
    this._ctx.fill();
    if (_0x3e25f9 > 0) {
      this._ctx.stroke();
    }
  };
  this.drawCircle = function (_0x5beac3, _0x1abf10, _0x415b8d, _0x1f0eba) {
    this._ctx.fillStyle = _0x1f0eba;
    this._ctx.beginPath();
    this._ctx.moveTo(_0x5beac3, _0x1abf10);
    this._ctx.arc(_0x5beac3, _0x1abf10, _0x415b8d, 0, Math.PI * 2);
    this._ctx.closePath();
    this._ctx.fill();
  };
}
var a0_0x58d04c = a0_0x5e9215;
a0_0x1640f9.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1640f9.prototype.constructor = a0_0x1640f9;
a0_0x1640f9.superClass = a0_0x58d04c;
a0_0x1640f9.prototype.safeArea = null;
a0_0x1640f9.prototype.teamColors = {
  0: "#cccccc",
  1: "#ffff00",
  2: "#01effc",
  3: "#bb00ff"
};
function a0_0x1640f9() {
  this.mode = a0_0x16237b;
  this.createInterfaceButtons();
}
a0_0x1640f9.prototype.wastedPopups = [];
a0_0x1640f9.prototype.playerDisplayNum = 0;
a0_0x1640f9.prototype.eventText = null;
a0_0x1640f9.prototype.setServerPlayerCount = function () {
  switch (this.playerDisplayNum) {
    case 1:
    case 2:
      a0_0xb8f1f9.setText("On Server: " + a0_0x248f5f(a0_0x50b61) + " playing " + nPlayersUnique + " unqiue");
      this.playerDisplayNum++;
      break;
    case 3:
    case 4:
      a0_0xb8f1f9.setText("Modes Total: " + gamemodes_alive + " playing, " + gamemodes_unique + " unique");
      this.playerDisplayNum++;
      break;
    case 5:
      var _0x2b0ceb = gamemodes_unique / a0_0x47046b * 100;
      a0_0xb8f1f9.setText("Milestone 2: " + a0_0x248f5f(_0x2b0ceb.toFixed(2)) + "% (" + gamemodes_unique + " of " + a0_0x47046b + ")");
      this.playerDisplayNum++;
      break;
    case 6:
      this.playerDisplayNum = 0;
      break;
    default:
      a0_0xb8f1f9.setText(a0_0x248f5f(a0_0x47046b) + " across Mope!");
      this.playerDisplayNum++;
      break;
  }
  if (a0_0x25d08e) {
    a0_0x25d08e.setPlayersCount(a0_0x47046b);
  }
};
const a0_0x49f5bb = 1;
const a0_0x2c1017 = 2;
const a0_0x36edc4 = 3;
const a0_0x193bbd = 4;
const a0_0x513c0e = 5;
const a0_0x5e93b3 = 6;
const a0_0x37a815 = 7;
a0_0x1640f9.prototype.socketMessages = function (_0x5596c1) {
  var _0xb5d966 = _0x5596c1.readUInt8();
  switch (_0xb5d966) {
    case a0_0x49f5bb:
      {
        let _0x4f1bd3 = _0x5596c1.readUInt8();
        let _0x2a10dc = _0x5596c1.readString();
        _0x2a10dc = "Nice, your team has unlocked '" + _0x2a10dc + "' buff.";
        this.showBuffMessage("success", _0x2a10dc, _0x4f1bd3, 6);
        break;
      }
    case a0_0x2c1017:
      {
        let _0x14a8b7 = _0x5596c1.readUInt8();
        let _0x347de3 = _0x5596c1.readString();
        _0x347de3 = "Oh no, '" + _0x347de3 + "' buff has been compromised!";
        this.showBuffMessage("error", _0x347de3, _0x14a8b7, 6);
        if (this.isApocalypseInprogress) {}
        break;
      }
    case a0_0x36edc4:
      {
        console.log("APOCALYPSE_STARTED");
        this.apocalypseType = _0x5596c1.readString();
        this.triggeredByTeamID = _0x5596c1.readUInt8();
        this.apocalypseStatus = _0x5596c1.readString();
        this.timeLeft = _0x5596c1.readUInt16() / 100;
        break;
      }
    case a0_0x193bbd:
      {
        console.log("APOCALYPSE_ENDED");
        this.apocalypseType = null;
        this.triggeredByTeamID = 0;
        this.apocalypseStatus = null;
        this.timeLeft = 0;
        a0_0x1fcf24("Apocalypse is over. Now, you can go anywhere freely!", "success", 6);
        break;
      }
    case a0_0x513c0e:
      {
        this.isApocalypseInprogress = _0x5596c1.readUInt8() == 1;
        if (this.isApocalypseInprogress) {
          this.apocalypseType = _0x5596c1.readString();
          this.triggeredByTeamID = _0x5596c1.readUInt8();
          this.apocalypseStatus = _0x5596c1.readString();
          this.timeLeft = _0x5596c1.readUInt16() / 100;
        }
        break;
      }
    case a0_0x5e93b3:
      {
        this.team1 = _0x5596c1.readUInt16();
        this.team2 = _0x5596c1.readUInt16();
        this.team3 = _0x5596c1.readUInt16();
        this.updatePieChart({
          1: this.team1,
          2: this.team2,
          3: this.team3
        });
        this.drawPieLeaderboard();
        break;
      }
    case a0_0x37a815:
      {
        let _0x5231d2 = _0x5596c1.readUInt8();
        this.capturedStones = [];
        for (var _0x4d5d07 = 0; _0x4d5d07 < _0x5231d2; _0x4d5d07++) {
          this.capturedStones.push({
            stoneBuffID: _0x5596c1.readUInt8(),
            hp: _0x5596c1.readUInt8() / 100
          });
        }
        break;
      }
  }
};
a0_0x1640f9.prototype.getStoneBuffIcon = function (_0x17c20d) {
  switch (_0x17c20d) {
    case 1:
      return "/assets/s/2/gameobj/78/incentive/1.png";
    case 2:
      return "/assets/s/2/gameobj/78/incentive/2.png";
    case 3:
      return "/assets/s/2/gameobj/78/incentive/3.png";
    case 4:
      return "/assets/s/2/gameobj/78/incentive/4.png";
    case 5:
      return "/assets/s/2/gameobj/78/incentive/5.png";
    case 6:
      return "/assets/s/2/gameobj/78/incentive/6.png";
    case 7:
      return "/assets/s/2/gameobj/78/incentive/7.png";
    case 8:
      return "/assets/s/2/gameobj/78/incentive/8.png";
    case 9:
      return "/assets/s/2/gameobj/78/incentive/9.png";
    case 10:
      return "/assets/s/2/gameobj/78/incentive/10.png";
    case 11:
      return "/assets/s/2/gameobj/78/incentive/11.png";
    case 12:
      return "/assets/s/2/gameobj/78/incentive/12.png";
    case 13:
      return "/assets/s/2/gameobj/78/incentive/13.png";
  }
};
a0_0x1640f9.prototype.showBuffMessage = function (_0x58a7ad, _0x4080c8, _0x5d5a03, _0x3d803c) {
  a0_0x3c26a4();
  var _0x20a74d = document.getElementsByTagName("body")[0];
  if (_0x20a74d) {
    let _0x118706 = document.getElementById("gameAreaWrapper");
    let _0x317d4f = a0_0x1cbc41("mopeshop-popup");
    let _0x390297 = this.getStoneBuffIcon(_0x5d5a03);
    let _0x34ab8a = a0_0x1cbc41("mopeshop-popup-icon", "");
    _0x34ab8a.innerHTML = "<img src='" + _0x390297 + "'/>";
    let _0x3d19c7 = a0_0x1cbc41("msg", _0x58a7ad);
    let _0x344083 = a0_0x1cbc41("text");
    _0x344083.innerHTML = _0x4080c8;
    let _0x571ec8 = a0_0x1cbc41("closeMsg", "");
    _0x571ec8.onclick = function () {
      a0_0x3c26a4();
    };
    _0x3d19c7.appendChild(_0x34ab8a);
    _0x3d19c7.appendChild(_0x571ec8);
    _0x3d19c7.appendChild(_0x344083);
    _0x317d4f.appendChild(_0x3d19c7);
    _0x20a74d.insertBefore(_0x317d4f, _0x118706);
    if (_0x3d803c !== undefined && _0x3d803c > 0) {
      setTimeout(a0_0x3c26a4, _0x3d803c * 1000);
    }
  }
};
a0_0x1640f9.prototype.interface = function () {
  if (this.state == -1 || this.mode != a0_0xe92752) {
    return;
  }
  if (a0_0x290640) {
    if (this.pieChartCanvas != null) {
      if (this.pieChartCanvas.width) {
        a0_0x4ef4f3.drawImage(this.pieChartCanvas, 0, 0, this.pieChartCanvas.width, this.pieChartCanvas.height);
      }
    }
  }
  this.drawInterfaceButtons();
};
a0_0x1640f9.prototype.drawMap = function () {
  if (a0_0x290640) {
    if (a0_0x1528ea) {
      return;
    }
    this.drawPieLeaderboard();
    this.drawTeamPlayers();
    if (a0_0x25d08e) {
      a0_0x25d08e.drawMap();
    }
    this.onApocalypseUpdated();
  }
};
a0_0x1640f9.prototype.interfaceReset = function () {
  this.endScreenCanvas = null;
  this.dangerCircleMiniMapCanvas = null;
  this.wastedPopups = [];
  this.lastWastedPopupT = 0;
  this.playercount = 0;
  this.safeArea = null;
  if (this.interfaceButtons) {
    for (var _0x3aec39 = 0; _0x3aec39 < this.interfaceButtons.length; _0x3aec39++) {
      var _0x5c0085 = this.interfaceButtons[_0x3aec39];
      _0x5c0085.onInterfaceReset();
    }
  }
  this.interfaceButtons = [];
};
a0_0x1640f9.prototype.onInit = function () {};
a0_0x1640f9.prototype.playercount = 0;
a0_0x1640f9.prototype.setPlayerCount = function (_0x59eaeb) {
  this.playercount = _0x59eaeb;
};
a0_0x1640f9.prototype.showPlayerCount = function () {
  a0_0x4ef4f3.save();
  var _0x5012fc = a0_0x11866b / 2;
  var _0x536f63 = a0_0xba590d * 50;
  var _0x187b87 = a0_0xba590d * 300;
  a0_0x4ef4f3.globalAlpha = 0.35;
  a0_0x4ef4f3.fillStyle = "black";
  var _0xb0697f = a0_0xba590d * 30;
  a0_0x4ef4f3.fillRect(_0x5012fc - _0x187b87 / 2, _0xb0697f, _0x187b87, _0x536f63);
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.fillStyle = "white";
  a0_0x4ef4f3.font = a0_0xba590d * 30 + "px Arial";
  a0_0x4ef4f3.lineWidth = 1;
  a0_0x4ef4f3.textAlign = "center";
  a0_0x4ef4f3.textBaseline = "middle";
  a0_0x4ef4f3.shadowOffsetX = 1;
  a0_0x4ef4f3.shadowOffsetY = 1;
  a0_0x4ef4f3.shadowColor = "black";
  _0xb0697f += a0_0xba590d * 25;
  var _0x589f7a = " player";
  if (this.playercount > 1) {
    _0x589f7a += "s";
  }
  if (this.state == battleRoyal_inProgress) {
    _0x589f7a += " alive!";
  } else if (this.state == a0_0x55f22d || this.state == battleRoyal_ready) {
    _0x589f7a += " joined";
  }
  a0_0x4ef4f3.fillText(this.playercount + _0x589f7a, _0x5012fc, _0xb0697f);
  a0_0x4ef4f3.restore();
};
a0_0x1640f9.prototype.lbCanvas = null;
a0_0x1640f9.prototype.leaderboard = function (_0x4f8a9b) {};
a0_0x1640f9.prototype.btnPlayAgain = null;
a0_0x1640f9.prototype.showStats = true;
a0_0x1640f9.prototype.interfaceButtons = [];
a0_0x1640f9.prototype.createInterfaceButtons = function () {
  this.interfaceButtons = [];
};
a0_0x1640f9.prototype.drawInterfaceButtons = function () {
  if (this.interfaceButtons) {
    for (var _0x33ded3 = 0; _0x33ded3 < this.interfaceButtons.length; _0x33ded3++) {
      var _0xa6d691 = this.interfaceButtons[_0x33ded3];
      if (_0xa6d691.isVisible) {
        _0xa6d691.draw();
      }
    }
  }
};
a0_0x1640f9.prototype.onResize = function () {
  this.drawInterfaceButtons();
};
a0_0x1640f9.prototype.playerInfo = function (_0x4c2f90) {};
a0_0x1640f9.prototype.playerWorldUpdate = function (_0x489f80) {
  return;
  this.team1 = _0x489f80.readUInt16();
  this.team2 = _0x489f80.readUInt16();
  this.team3 = _0x489f80.readUInt16();
  this.isApocalypseInprogress = _0x489f80.readUInt8() == 1;
  if (this.isApocalypseInprogress) {
    this.apocalypseType = _0x489f80.readString();
    this.triggeredByTeamID = _0x489f80.readUInt8();
    this.apocalypseStatus = _0x489f80.readString();
    this.timeLeft = _0x489f80.readUInt16() / 100;
  } else {}
  let _0x2d9449 = _0x489f80.readUInt8();
  this.capturedStones = [];
  for (var _0x4b38b5 = 0; _0x4b38b5 < _0x2d9449; _0x4b38b5++) {
    this.capturedStones.push({
      stoneBuffID: _0x489f80.readUInt8(),
      hp: _0x489f80.readUInt8() / 100
    });
  }
};
a0_0x1640f9.prototype.onApocalypseUpdated = function () {
  if (this.isApocalypseInprogress) {
    if (this.eventText == null) {
      this.eventText = new a0_0x3d10bd(20, "white");
      this.eventText.setFontSize(a0_0xba590d * 28);
    }
    if (this.eventText) {
      this.eventText.x = a0_0x11866b / 2;
      this.eventText.y = a0_0x8379e6 * 0.2;
      this.eventText.draw();
    }
  }
};
a0_0x1640f9.prototype.bonusRoundTimer = null;
a0_0x1640f9.prototype.pieChartCanvas = null;
a0_0x1640f9.prototype.setBonusRoundTimer = function (_0x48c861) {
  var _0x76b2e0 = "" + _0x48c861;
  if (this.bonusRoundTimer == null) {
    this.bonusRoundTimer = new a0_0x3d10bd(40, "#FFFFFF");
    this.bonusRoundTimer.strokeW = 2;
    this.bonusRoundTimer.multiLine = true;
    this.bonusRoundTimer.renderScale = 5;
    this.bonusRoundTimer.setText(_0x76b2e0);
  } else {
    this.bonusRoundTimer.setFontSize(40);
    this.bonusRoundTimer.setText(_0x76b2e0);
  }
};
a0_0x1640f9.prototype.drawMiniMapObjects = function (_0x150582) {
  if (this.teamStones) {
    for (let _0x15d64c = 0; _0x15d64c < this.teamStones.length; _0x15d64c++) {
      let _0x4f1d59 = this.teamStones[_0x15d64c];
      if (_0x4f1d59) {
        _0x4f1d59.c = "black";
        _0x150582.drawCircle(_0x4f1d59);
      }
    }
    _0x150582.updateMapData();
  }
};
a0_0x1640f9.prototype.teamStones = [];
a0_0x1640f9.prototype.teamModePieChart = null;
a0_0x1640f9.prototype.updatePieChart = function (_0x41a635) {
  if (this.pieChartCanvas == null) {
    this.pieChartCanvas = document.createElement("canvas");
    this.teamModePieChart = new a0_0x315805({
      pad: 30,
      canvas: this.pieChartCanvas,
      colors: this.teamColors
    });
  }
  if (this.teamModePieChart) {
    this.teamModePieChart.setData(_0x41a635);
  }
};
a0_0x1640f9.prototype.drawPieLeaderboard = function () {
  if (this.pieChartCanvas == null) {
    return;
  }
  var _0x436213 = this.pieChartCanvas.getContext("2d");
  var _0x1dd494 = 5;
  var _0x23a35c = 200;
  var _0x27e832 = 200;
  this.pieChartCanvas.width = _0x23a35c;
  this.pieChartCanvas.height = _0x27e832 + 20;
  this.teamModePieChart.draw();
  _0x436213.globalAlpha = 0.2;
  var _0x10fae2 = _0x1dd494;
  _0x436213.globalAlpha = 0.5;
  _0x436213.fillStyle = "white";
  _0x436213.font = "20px Arial";
  var _0x10fae2 = 210;
  str = a0_0xa68ef0.name;
  _0x436213.fillText(str, this.pieChartCanvas.width / 2 - _0x436213.measureText(str).width / 2, _0x10fae2);
};
a0_0x1640f9.prototype.inviteScreenCanvas = null;
a0_0x1640f9.prototype.endScreenCanvas = null;
a0_0x1640f9.prototype.endScreenDisplayed = false;
function a0_0x315805(_0x2e3946) {
  this.options = _0x2e3946;
  this.radius = _0x2e3946.radius;
  this.pad = _0x2e3946.pad;
  this.canvas = _0x2e3946.canvas;
  this._ctx = this.canvas.getContext("2d");
  this.colors = _0x2e3946.colors;
  this.radius = Math.min(this.canvas.width / 2, this.canvas.height / 2);
  this.showBg = false;
  this.setData = function (_0x1b18a4) {
    this.options.data = _0x1b18a4;
  };
  this.draw = function () {
    var _0xce6cd3 = 0;
    var _0x1e218f = 0;
    if (this.showBg) {
      this._ctx.save();
      this._ctx.beginPath();
      this._ctx.globalAlpha = 0.1;
      this._ctx.fillStyle = "black";
      this._ctx.rect(0, 0, this.canvas.width, this.canvas.height);
      this._ctx.fill();
      this._ctx.restore();
    }
    var _0x48c1f7 = this.canvas.width / 2;
    var _0x4dd4b1 = this.canvas.height / 2;
    this._ctx.save();
    this._ctx.globalAlpha = 0.3;
    this.drawCircle(_0x48c1f7, _0x4dd4b1, this.radius, "white");
    this._ctx.restore();
    for (var _0x5da47b in this.options.data) {
      var _0x5e70af = this.options.data[_0x5da47b];
      _0xce6cd3 += _0x5e70af;
    }
    var _0x5075bb = 0;
    for (_0x5da47b in this.options.data) {
      this._ctx.save();
      this._ctx.lineWidth = 4;
      this._ctx.strokeStyle = "white";
      this._ctx.globalAlpha = 0.3;
      var _0x33362e = 0;
      if (a0_0x2943a2 == _0x5da47b) {
        this._ctx.globalAlpha = 0.6;
        _0x33362e = 8;
      }
      _0x5e70af = this.options.data[_0x5da47b];
      var _0xe37356 = Math.PI * 2 * _0x5e70af / _0xce6cd3;
      this.drawPieSlice(_0x48c1f7, _0x4dd4b1, this.radius, _0x5075bb, _0x5075bb + _0xe37356, this.colors[_0x5da47b], _0x33362e);
      this._ctx.restore();
      _0x5075bb += _0xe37356;
      _0x1e218f++;
    }
  };
  this.drawPieSlice = function (_0x57afe5, _0x559d31, _0x33700f, _0x2e1efe, _0x3c0ebc, _0x1509e9, _0x5b436d) {
    this._ctx.fillStyle = _0x1509e9;
    this._ctx.beginPath();
    this._ctx.moveTo(_0x57afe5, _0x559d31);
    this._ctx.arc(_0x57afe5, _0x559d31, _0x33700f + _0x5b436d, _0x2e1efe, _0x3c0ebc);
    this._ctx.closePath();
    this._ctx.fill();
    if (_0x5b436d > 0) {
      this._ctx.stroke();
    }
  };
  this.drawCircle = function (_0x532b14, _0xbd98c5, _0x1182c3, _0x595a3b) {
    this._ctx.fillStyle = _0x595a3b;
    this._ctx.beginPath();
    this._ctx.moveTo(_0x532b14, _0xbd98c5);
    this._ctx.arc(_0x532b14, _0xbd98c5, _0x1182c3, 0, Math.PI * 2);
    this._ctx.closePath();
    this._ctx.fill();
  };
}
a0_0x1640f9.prototype.stonesCanvas = null;
a0_0x1640f9.prototype.getSkinImageObj = function (_0x295045) {
  var _0x13c45a = "./assets/s/2/" + _0x295045;
  return a0_0x2cc313(_0x13c45a, function (_0x4dc877) {});
};
a0_0x1640f9.prototype.playerUI = [];
a0_0x1640f9.prototype.drawPlayerUI = function (_0xd501f3) {};
a0_0x1640f9.prototype.drawStoneCount = function (_0x405a36, _0x14bda3, _0x4fdb11, _0x5860d1) {
  _0x405a36.save();
  _0x405a36.globalAlpha = 0.5;
  let _0xb7c5f7 = "./assets/s/2/gameobj/78/stone" + _0x14bda3 + ".png";
  let _0x567411 = a0_0x2cc313(_0xb7c5f7);
  if (_0x567411) {
    _0x405a36.drawImage(_0x567411, 10, _0x5860d1, 40, 40);
    _0x5860d1 += 50;
    _0x405a36.fillStyle = "black";
    _0x405a36.fillText(_0x4fdb11 + "", 60, _0x5860d1 - 18);
  }
  _0x405a36.restore();
};
a0_0x1640f9.prototype.drawTeamPlayers = function () {
  if (this.teamPlayers) {
    var _0x34440c = this.teamColors[a0_0x2943a2];
    for (t = 0; t < this.teamPlayers.length; t++) {
      a0_0x2a2f94(this.teamPlayers[t], _0x34440c, 1);
    }
  }
};
a0_0x1640f9.prototype.getTeamColor = function (_0x34f8cd) {
  switch (_0x34f8cd) {
    case 1:
      return "yellow";
    case 2:
      return "cyan";
    case 3:
      return "purple";
  }
  return "gray";
};
a0_0x1640f9.prototype.msgDisplayPlayersOnMiniMap = function (_0xa37748) {
  a0_0xc38c87 = [];
  var _0x2aae26 = _0xa37748.readUInt16();
  for (var _0x6e43 = 0; _0x6e43 < _0x2aae26; _0x6e43++) {
    a0_0xc38c87.push({
      teamID: _0xa37748.readUInt16(),
      x: _0xa37748.readUInt32() / 100,
      y: _0xa37748.readUInt32() / 100,
      rad: 3
    });
  }
};
a0_0x1640f9.prototype.readGameRoomPropertyUpdate = function (_0x1fb822) {
  var _0x4d55f4 = _0x1fb822.readUInt8();
  for (var _0x5e4bfc = 0; _0x5e4bfc < _0x4d55f4; _0x5e4bfc++) {
    var _0x59a2c1 = _0x1fb822.readUInt8();
    this.readUpdatedPropertyItem(_0x59a2c1, _0x1fb822);
  }
};
a0_0x1640f9.prototype.readUpdatedPropertyItem = function (_0x35897b, _0x3eb4d8) {
  if (_0x35897b == a0_0x51809a) {
    console.log("TEAMMODE_APOCALYPSE_STARTED");
    this.isApocalypseInprogress = _0x3eb4d8.readUInt8() == 1;
  } else if (_0x35897b == a0_0x491051) {
    console.log("TEAMMODE_APOCALYPSE_ENDED");
    this.isApocalypseInprogress = _0x3eb4d8.readUInt8() == 1;
  } else if (_0x35897b == a0_0x2db0df) {
    console.log("TEAMMODE_APOCALYPSE_TIME_LEFT");
    let _0x461f2a = _0x3eb4d8.readUInt16();
  }
};
window.TeamMode = a0_0x1640f9;
var a0_0x58d04c = a0_0x5e9215;
a0_0x3b7151.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3b7151.prototype.constructor = a0_0x3b7151;
a0_0x3b7151.superClass = a0_0x58d04c;
a0_0x3b7151.prototype.safeArea = null;
function a0_0x3b7151(_0xa85d95) {
  this.mode = _0xa85d95;
  this.stamp = +new Date();
  this.chatAllowed = true;
  this.createInterfaceButtons();
}
a0_0x3b7151.prototype.wastedPopups = [];
a0_0x3b7151.prototype.playerDisplayNum = 0;
a0_0x3b7151.prototype.setServerPlayerCount = function () {
  a0_0xb8f1f9.setText(a0_0x248f5f(a0_0x47046b) + " online");
  if (a0_0x25d08e) {
    a0_0x25d08e.setPlayersCount(a0_0x47046b);
  }
  this.playerDisplayNum = this.playerDisplayNum == 0 ? 1 : 0;
};
a0_0x3b7151.prototype.interface = function () {
  if (this.state == -1 || this.mode != a0_0xe92752) {
    return;
  }
  if (a0_0x290640) {
    for (var _0x3b4650 = this.wastedPopups.length - 1; _0x3b4650 >= 0; _0x3b4650--) {
      var _0x31d945 = this.wastedPopups[_0x3b4650];
      _0x31d945.draw();
      if (_0x31d945.timedOut) {
        this.wastedPopups.splice(_0x3b4650, 1);
      }
    }
  }
  if (this.endScreenCanvas != null) {
    if (this.endScreenCanvas.width) {
      a0_0x4ef4f3.drawImage(this.endScreenCanvas, a0_0x11866b / 2 - this.endScreenCanvas.width / 2, a0_0x24bc92 * 15, this.endScreenCanvas.width, this.endScreenCanvas.height);
    }
    if (!a0_0x290640 || isGhost) {
      a0_0x4b95c7(true);
    }
  }
  this.drawInterfaceButtons();
};
a0_0x3b7151.prototype.interfaceReset = function () {
  this.endScreenCanvas = null;
  this.dangerCircleMiniMapCanvas = null;
  this.wastedPopups = [];
  this.lastWastedPopupT = 0;
  this.playercount = 0;
  this.safeArea = null;
  if (this.interfaceButtons) {
    for (var _0xe8c1ae = 0; _0xe8c1ae < this.interfaceButtons.length; _0xe8c1ae++) {
      var _0x86bb06 = this.interfaceButtons[_0xe8c1ae];
      _0x86bb06.onInterfaceReset();
    }
  }
  this.interfaceButtons = [];
};
a0_0x3b7151.prototype.onInit = function () {};
a0_0x3b7151.prototype.playercount = 0;
a0_0x3b7151.prototype.setPlayerCount = function (_0x4298e5) {
  this.playercount = _0x4298e5;
};
a0_0x3b7151.prototype.showPlayerCount = function () {
  a0_0x4ef4f3.save();
  var _0xa0b702 = a0_0x11866b / 2;
  var _0x575fe8 = a0_0xba590d * 50;
  var _0x14e79e = a0_0xba590d * 300;
  a0_0x4ef4f3.globalAlpha = 0.35;
  a0_0x4ef4f3.fillStyle = "black";
  var _0x5c296a = a0_0xba590d * 30;
  a0_0x4ef4f3.fillRect(_0xa0b702 - _0x14e79e / 2, _0x5c296a, _0x14e79e, _0x575fe8);
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.fillStyle = "white";
  a0_0x4ef4f3.font = a0_0xba590d * 30 + "px Arial";
  a0_0x4ef4f3.lineWidth = 1;
  a0_0x4ef4f3.textAlign = "center";
  a0_0x4ef4f3.textBaseline = "middle";
  a0_0x4ef4f3.shadowOffsetX = 1;
  a0_0x4ef4f3.shadowOffsetY = 1;
  a0_0x4ef4f3.shadowColor = "black";
  _0x5c296a += a0_0xba590d * 25;
  var _0x1c7a6b = " player";
  if (this.playercount > 1) {
    _0x1c7a6b += "s";
  }
  if (this.state == battleRoyal_inProgress) {
    _0x1c7a6b += " alive!";
  } else if (this.state == a0_0x55f22d || this.state == battleRoyal_ready) {
    _0x1c7a6b += " joined";
  }
  a0_0x4ef4f3.fillText(this.playercount + _0x1c7a6b, _0xa0b702, _0x5c296a);
  a0_0x4ef4f3.restore();
};
a0_0x3b7151.prototype.lbCanvas = null;
a0_0x3b7151.prototype.leaderboard = function (_0x5726eb) {
  if (this.lbCanvas == null) {
    this.lbCanvas = document.createElement("canvas");
  }
  if (_0x5726eb) {
    var _0x50b41c = this.lbCanvas.getContext("2d");
    var _0xe9bcac = 55;
    var _0x5b126 = 22;
    _0xe9bcac = _0xe9bcac + _0x5b126 * _0x5726eb.length;
    this.lbCanvas.width = 270;
    this.lbCanvas.height = _0xe9bcac;
    _0x50b41c.globalAlpha = 0.2;
    _0x50b41c.fillStyle = "#000000";
    _0x50b41c.fillRect(0, 0, this.lbCanvas.width, this.lbCanvas.height);
    _0x50b41c.globalAlpha = 1;
    _0x50b41c.fillStyle = "#FFFFFF";
    var _0x30ad07 = a0_0xa68ef0.name;
    _0x50b41c.font = "24px Arial";
    if (a0_0x1d703e != a0_0x30b084) {
      _0x50b41c.shadowOffsetX = 1;
      _0x50b41c.shadowOffsetY = 1;
    }
    _0x50b41c.shadowColor = "black";
    _0x50b41c.fillText(_0x30ad07, this.lbCanvas.width / 2 - _0x50b41c.measureText(_0x30ad07).width / 2, 40);
    var _0x2ba535;
    _0x50b41c.textAlign = "left";
    _0x50b41c.font = "17px Arial";
    _0x2ba535 = 0;
    for (; _0x2ba535 < _0x5726eb.length; ++_0x2ba535) {
      _0x30ad07 = a0_0x36b495 ? "" : _0x5726eb[_0x2ba535].name || "mope.io";
      _0x30ad07 += " (" + a0_0x4cf280(_0x5726eb[_0x2ba535].xp) + ")";
      _0x50b41c.fillStyle = "#FFFFFF";
      _0x50b41c.fillText(_0x30ad07, 15, 65 + _0x5b126 * _0x2ba535);
    }
  }
};
a0_0x3b7151.prototype.drawLeaderboard = function () {
  if (a0_0x290640) {
    if (!a0_0x409384) {
      if (a0_0x3e3656) {
        if (a0_0x3e3656.width) {
          a0_0x4ef4f3.drawImage(a0_0x3e3656, a0_0x24bc92 * 10, a0_0x24bc92 * 10, a0_0x3e3656.width * a0_0xba590d, a0_0x3e3656.height * a0_0xba590d);
        }
      }
    }
  }
};
a0_0x3b7151.prototype.btnPlayAgain = null;
a0_0x3b7151.prototype.showStats = true;
a0_0x3b7151.prototype.interfaceButtons = [];
a0_0x3b7151.prototype.createInterfaceButtons = function () {
  this.interfaceButtons = [];
};
a0_0x3b7151.prototype.drawInterfaceButtons = function () {
  if (this.interfaceButtons) {
    for (var _0x595fb4 = 0; _0x595fb4 < this.interfaceButtons.length; _0x595fb4++) {
      var _0x6359bc = this.interfaceButtons[_0x595fb4];
      if (_0x6359bc.isVisible) {
        _0x6359bc.draw();
      }
    }
  }
};
a0_0x3b7151.prototype.onResize = function () {
  this.drawInterfaceButtons();
};
a0_0x3b7151.prototype.readPlayerStats = function (_0x13fe3b) {
  var _0x4d094b = [];
  _0x4d094b.rank = _0x13fe3b.readUInt16();
  _0x4d094b.timeAlive = _0x13fe3b.readUInt16();
  _0x4d094b.totalKills = _0x13fe3b.readUInt16();
  _0x4d094b.topRank = _0x13fe3b.readUInt16();
  _0x4d094b.maxXP = _0x13fe3b.readUInt32();
  _0x4d094b.killedBy = _0x13fe3b.readString();
  return _0x4d094b;
};
a0_0x3b7151.prototype.playerInfo = function (_0x37e65f) {
  if (isGhost && !a0_0x51a46a) {
    var _0x5eaa2a = this.readPlayerStats(_0x37e65f);
    this.buildEndScreenHTML(_0x5eaa2a);
  } else if (!isGhost) {
    this.endScreenCanvas = null;
  }
};
a0_0x3b7151.prototype.playerWorldUpdate = function (_0x4aab59) {};
a0_0x3b7151.prototype.worldUpdate = function (_0x2a90bd) {};
a0_0x3b7151.prototype.drawMap = function () {
  if (a0_0x290640) {
    if (a0_0x1528ea) {
      return;
    }
    if (a0_0x25d08e) {
      a0_0x25d08e.drawMap();
    }
    this.drawLeaderboard();
  }
};
a0_0x3b7151.prototype.pieChartCanvas = null;
a0_0x3b7151.prototype.teamColors = {
  0: "white",
  1: "#B6CF40"
};
a0_0x3b7151.prototype.endScreenDisplayed = false;
a0_0x3b7151.prototype.buildEndScreenHTML = function (_0xc034d) {
  if (this.endScreenDisplayed) {
    return;
  }
  this.endScreenDisplayed = true;
  var _0x31dd05 = "";
  _0x31dd05 += "<div class='msg'>YOU WERE #" + _0xc034d.rank + "</div>";
  _0x31dd05 += "<div class='row'>";
  _0x31dd05 += "<div class='label'>Killed by:</div>";
  _0x31dd05 += "<div class='value2'>" + _0xc034d.killedBy + "</div>";
  _0x31dd05 += "</div>";
  _0x31dd05 += "<div class='row'>";
  _0x31dd05 += "<div class='col1'>";
  _0x31dd05 += "<div class='label'>Time alive:</div>";
  _0x31dd05 += "<div class='value'>" + a0_0x3d4b84(_0xc034d.timeAlive) + "</div>";
  _0x31dd05 += "</div>";
  _0x31dd05 += "<div class='col2'>";
  _0x31dd05 += "<div class='label'>Total kills:</div>";
  _0x31dd05 += "<div class='value'>" + _0xc034d.totalKills + "</div>";
  _0x31dd05 += "</div>";
  _0x31dd05 += "</div>";
  _0x31dd05 += "<div class='row'>";
  _0x31dd05 += "<div class='col1'>";
  _0x31dd05 += "<div class='label'>Top rank:</div>";
  _0x31dd05 += "<div class='value'>" + _0xc034d.topRank + "</div>";
  _0x31dd05 += "</div>";
  _0x31dd05 += "<div class='col2'>";
  _0x31dd05 += "<div class='label'>Max xp:</div>";
  _0x31dd05 += "<div class='value'>" + a0_0x4cf280(_0xc034d.maxXP) + "</div>";
  _0x31dd05 += "</div>";
  _0x31dd05 += "</div>";
  _0x31dd05 += "<div style='clear:both;'></div>";
  _0x31dd05 += "<div class='btnDiv'>";
  _0x31dd05 += "<button id='btnMopeOptions' class='btn'>      CONTINUE      </button>";
  _0x31dd05 += "</div>";
  _0x31dd05 += "<div style='clear:both;'></div>";
  var _0x4d7bd2 = document.getElementById("endScreen");
  if (_0x4d7bd2) {
    _0x4d7bd2.innerHTML = _0x31dd05;
    _0x4d7bd2.style.display = "block";
  }
  if (!a0_0x290640 || isGhost) {
    a0_0x144cc0();
  }
};
a0_0x3b7151.prototype.endScreenCanvas = null;
a0_0x3b7151.prototype.buildEndScreen = function (_0x102667, _0x1e0e1d) {
  if (this.endScreenCanvas == null) {
    this.endScreenCanvas = document.createElement("canvas");
  }
  if (this.endScreenCanvas == null) {
    return;
  }
  var _0x3c059a = this.endScreenCanvas.getContext("2d");
  var _0x419d77 = 55;
  var _0xa7d567 = 40;
  var _0x52fc3c = 5;
  var _0x1add53 = 240;
  var _0x3c1928 = 420;
  _0x419d77 = _0x1add53 + _0x52fc3c * 2;
  this.endScreenCanvas.width = _0x3c1928 + _0x52fc3c * 2;
  this.endScreenCanvas.height = _0x419d77;
  _0x3c059a.globalAlpha = 0.2;
  _0x3c059a.fillStyle = "#000000";
  _0x3c059a.fillRect(0, 0, this.endScreenCanvas.width, this.endScreenCanvas.height);
  _0x3c059a.fillStyle = "#000000";
  _0x3c059a.fillRect(_0x52fc3c, _0x52fc3c, this.endScreenCanvas.width - _0x52fc3c * 2, this.endScreenCanvas.height - _0x52fc3c * 2);
  var _0x42016a = _0x52fc3c;
  _0x3c059a.globalAlpha = 1;
  _0x3c059a.fillStyle = "#FFFFFF";
  _0x3c059a.font = "30px Arial";
  _0x42016a += 55;
  var _0x53bf6e = "Final Stats";
  _0x3c059a.font = "30px Arial";
  _0x3c059a.fillText(_0x53bf6e, this.endScreenCanvas.width / 2 - _0x3c059a.measureText(_0x53bf6e).width / 2, _0x42016a);
  _0x3c059a.font = "20px Arial";
  _0x42016a += 45;
  _0x53bf6e = "You were #" + _0x1e0e1d.rank;
  _0x3c059a.fillText(_0x53bf6e, this.endScreenCanvas.width / 2 - _0x3c059a.measureText(_0x53bf6e).width / 2, _0x42016a);
  _0x42016a += 40;
  var _0x239ba2 = a0_0x3d4b84(_0x1e0e1d.timeAlive);
  var _0x272e7c = _0x52fc3c + 15;
  a0_0x4d940a(_0x3c059a, "Killed by", _0x1e0e1d.killedBy, _0x272e7c, _0x42016a);
  _0x42016a += 40;
  a0_0x4d940a(_0x3c059a, "Time Alive", a0_0x3d4b84(_0x1e0e1d.timeAlive), _0x272e7c, _0x42016a);
  _0x272e7c += 210;
  a0_0x4d940a(_0x3c059a, "Total Kills", _0x1e0e1d.totalKills, _0x272e7c, _0x42016a);
  _0x42016a += 40;
  _0x272e7c = _0x52fc3c + 15;
  a0_0x4d940a(_0x3c059a, "Top rank", _0x1e0e1d.topRank, _0x272e7c, _0x42016a);
  _0x272e7c += 210;
  a0_0x4d940a(_0x3c059a, "Max XP", a0_0x4cf280(_0x1e0e1d.maxXP), _0x272e7c, _0x42016a);
  _0x42016a += 50;
};
a0_0x3b7151.prototype.lastWastedPopupT = 0;
a0_0x3b7151.prototype.onPlayerWasted = function (_0x16be1e) {
  if ((a0_0x4f736f - this.lastWastedPopupT) / 1000 > 0.7) {
    this.lastWastedPopupT = a0_0x4f736f;
    var _0x13a04d = new a0_0x1b0782(_0x16be1e + " wasted!", 40, "red", 1500);
    this.wastedPopups.push(_0x13a04d);
  }
};
a0_0x3b7151.prototype.lastWastedPopupT = 0;
a0_0x3b7151.prototype.msgDisplayPlayersOnMiniMap = function (_0x2cdd3c) {
  a0_0xc38c87 = [];
  var _0x2864e1 = _0x2cdd3c.readUInt16();
  for (var _0x4dbe6a = 0; _0x4dbe6a < _0x2864e1; _0x4dbe6a++) {
    a0_0xc38c87.push({
      id: _0x2cdd3c.readUInt32(),
      x: _0x2cdd3c.readUInt32() / 100,
      y: _0x2cdd3c.readUInt32() / 100,
      rad: 3
    });
  }
};
window.WildMope = a0_0x3b7151;
var a0_0x5887e2 = null;
const a0_0x4a024c = ["skin", "animal", "deal", "feature"];
function a0_0x4a6f83() {
  if (a0_0x1669d8) {
    a0_0x1669d8.onLogon();
  }
}
function a0_0x1b1184() {
  var _0x55227e = document.getElementById("shop");
  if (_0x55227e) {
    _0x55227e.parentNode.removeChild(_0x55227e);
    a0_0x2a8a64();
  }
  a0_0x4ce186();
  var _0x142dca = document.getElementById("shopbutton2");
  if (_0x142dca) {
    _0x142dca.disabled = false;
  }
  var _0x213d1a = document.getElementById("shopbutton3");
  if (_0x213d1a) {
    _0x213d1a.disabled = false;
  }
}
function a0_0x4ce186() {
  const _0xb281a = a0_0x541c8c.prototype.changedWardrobeItems;
  const _0x75007d = Object.keys(a0_0x541c8c.prototype.wardrobeItems);
  const _0x2fcb45 = [];
  for (let _0x2bcb5d = 0; _0x2bcb5d < _0x75007d.length; _0x2bcb5d++) {
    const _0x1fdf58 = _0x75007d[_0x2bcb5d];
    const _0x240e9b = a0_0x541c8c.prototype.wardrobeItems[_0x1fdf58].equippedSkin;
    const _0x89ef22 = _0xb281a[_0x1fdf58];
    if (_0x89ef22 === undefined) {
      continue;
    }
    if (_0x89ef22 != _0x240e9b) {
      _0x2fcb45.push({
        id: _0x1fdf58,
        changedSkin: _0x89ef22
      });
    }
  }
  a0_0x541c8c.prototype.changedWardrobeItems = {};
  if (_0x2fcb45.length <= 0) {
    return;
  }
  a0_0x5c4e63(_0x2fcb45, (_0x295119, _0x25d2d2) => {
    if (!_0x295119) {
      a0_0x1fcf24("AccountServer: Wardrobe: " + _0x25d2d2, "error", 10000);
    }
  });
}
function a0_0x4ee28b() {
  a0_0x1b1184();
  a0_0x1669d8.removeBlockOverlay();
  if (a0_0x5887e2) {
    a0_0x5887e2.style.display = "none";
  }
  a0_0x1669d8.load();
  a0_0x2a8a64();
}
function a0_0x27da32() {
  var _0x53e7a9 = document.getElementById("shop_div");
  if (_0x53e7a9) {
    let _0x2ddeb6 = 638;
    let _0x1c2ef = 345;
    var _0x20b4d5 = 0.9;
    var _0x197adc = Math.min(1, Math.min(a0_0x3a3d1a * _0x20b4d5, _0x2ddeb6) / _0x2ddeb6);
    var _0x61c103 = Math.min(1, Math.min(a0_0x3510c5 * _0x20b4d5, _0x1c2ef) / _0x1c2ef);
    var _0x3ee5a3 = Math.min(_0x197adc, _0x61c103);
    _0x53e7a9.style.transform = "scale(" + _0x3ee5a3 + ")";
    var _0x546580 = Math.min(0, a0_0x3a3d1a / 2 - _0x2ddeb6 / 2) / _0x20b4d5;
    _0x53e7a9.style.marginLeft = _0x546580 != 0 ? _0x546580 + "px" : "auto";
  }
}
function a0_0x1fcf24(_0x434e77, _0x2bee0a, _0x4fefbb) {
  a0_0x3c26a4();
  var _0x1ce93c = document.getElementsByTagName("body")[0];
  if (_0x1ce93c) {
    var _0x2a19ec = document.getElementById("gameAreaWrapper");
    var _0x307136 = a0_0x1cbc41("mopeshop-popup");
    var _0x1e3659 = a0_0x1cbc41("msg", _0x2bee0a);
    var _0x46ef34 = a0_0x1cbc41("text");
    _0x46ef34.innerHTML = _0x434e77;
    var _0x1a3dab = a0_0x1cbc41("closeMsg", "");
    _0x1a3dab.innerHTML = "X";
    _0x1a3dab.onclick = function () {
      a0_0x3c26a4();
    };
    _0x1e3659.appendChild(_0x1a3dab);
    _0x1e3659.appendChild(_0x46ef34);
    _0x307136.appendChild(_0x1e3659);
    _0x1ce93c.insertBefore(_0x307136, _0x2a19ec);
    if (_0x4fefbb !== undefined && _0x4fefbb > 0) {
      setTimeout(a0_0x3c26a4, _0x4fefbb * 1000);
    }
  }
}
function a0_0x3c26a4() {
  var _0xa5f2 = document.getElementById("mopeshop-popup");
  if (_0xa5f2) {
    _0xa5f2.parentNode.removeChild(_0xa5f2);
  }
}
function a0_0x1cbc41(_0x3b7873, _0x5064ce) {
  var _0x4c719a = a0_0xfa272f("div", _0x3b7873, _0x5064ce);
  return _0x4c719a;
}
function a0_0x1b61d9(_0x58c979, _0x5a73fa, _0x3de6da) {
  var _0x3aed1a = a0_0xfa272f("div", _0x58c979, _0x5a73fa);
  _0x3aed1a.innerHTML = _0x3de6da;
  return _0x3aed1a;
}
function a0_0xfa272f(_0x519b7f, _0x45cb92, _0x571d41) {
  if (_0x519b7f == undefined) {
    return null;
  }
  var _0x63bc87 = document.createElement(_0x519b7f);
  if (_0x45cb92 != undefined) {
    _0x63bc87.id = _0x45cb92;
  }
  if (_0x571d41 != undefined) {
    _0x63bc87.className = _0x571d41;
  }
  return _0x63bc87;
}
function a0_0x3b7a9a() {
  var _0x573e19 = a0_0x473b10.coins;
  if (_0x573e19 > -1) {
    if (("" + _0x573e19).length > 10) {
      return ("" + _0x573e19).substring(0, 4) + " PI.COINS";
    }
    return _0x573e19;
  } else {
    return "LOGIN";
  }
}
function a0_0x280dc0() {
  return a0_0x473b10.coins > -1;
}
function a0_0x1622c(_0x225a32) {
  if (_0x225a32 && a0_0x1669d8) {
    a0_0x1669d8.load(_0x225a32);
  } else {
    a0_0x1b1184();
    a0_0x1669d8 = new a0_0x541c8c();
    a0_0x1669d8.load();
  }
}
var a0_0x4a2f17 = {
  customClassesForOType: {},
  setCustomClassForShopItem: function (_0xbc1802, _0x32dd9a, _0x440542) {
    if (!this.customClassesForOType[_0x32dd9a]) {
      this.customClassesForOType[_0x32dd9a] = {
        oTypeMainClass: null,
        secondaryTypeClasses: {}
      };
    }
    var _0x5a72a2 = this.customClassesForOType[_0x32dd9a];
    if (_0x440542 == null) {
      if (_0x5a72a2.oTypeMainClass != null) {
        console.log("ERROR 'GameObjType.setCustomClassForGameObjType': a class (" + this.customClassesForOType[_0x32dd9a] + ") is already set for oType " + _0x32dd9a + "! Check for duplicate calls!");
      }
      _0x5a72a2.oTypeMainClass = _0xbc1802;
    } else {
      if (_0x440542 in _0x5a72a2.secondaryTypeClasses) {
        console.log("ERROR 'GameObjType.setCustomClassForGameObjType': a class is already set for oType " + _0x32dd9a + " AND secondaryType (eg. animalType) " + _0x440542 + "! Check for duplicate calls!");
      }
      _0x5a72a2.secondaryTypeClasses[_0x440542] = _0xbc1802;
    }
    this.onClassSet(_0xbc1802, _0x32dd9a, _0x440542);
  },
  getClassForGameObjType: function (_0x3745fc, _0x47d4dc) {
    if (_0x3745fc in this.customClassesForOType) {
      var _0x27221e = this.customClassesForOType[_0x3745fc];
      if (_0x47d4dc == null || _0x47d4dc == 0) {
        return _0x27221e.oTypeMainClass;
      } else if (_0x47d4dc in _0x27221e.secondaryTypeClasses) {
        return _0x27221e.secondaryTypeClasses[_0x47d4dc];
      } else {
        return _0x27221e.oTypeMainClass;
      }
    } else {
      return a0_0x181096;
    }
  },
  newlyVis_createGameObjFromMsg: function (_0x563de4, _0x1450c0) {
    var _0x217379 = _0x1450c0.oType;
    var _0x661a7d = null;
    if (_0x217379 == a0_0x1370b8) {
      _0x661a7d = _0x1450c0.animalType;
    }
    var _0x37fbd9 = a0_0x4a2f17.createGameObjOfOType(_0x217379, _0x661a7d);
    _0x37fbd9.itemType = _0x563de4;
    _0x37fbd9.worldUpd_readMsgNewlyVisible(_0x1450c0, _0x217379, _0x661a7d);
    return _0x37fbd9;
  },
  createGameObjOfOType: function (_0x2a760c, _0x1a9731) {
    var _0x4058bd = this.getClassForGameObjType(_0x2a760c, _0x1a9731);
    var _0x387611 = new _0x4058bd(_0x2a760c, _0x1a9731);
    return _0x387611;
  },
  onClassSet: function (_0x37cf02) {}
};
a0_0x181096.prototype = {
  id: 0,
  oType: 0,
  itemType: null
};
function a0_0x181096(_0x4c7adc) {
  this.oType = _0x4c7adc;
}
a0_0x181096.prototype.setObjTypes = function (_0x42cefb, _0x505599) {
  this.oType = _0x42cefb;
};
a0_0x181096.prototype.loadShopData = function (_0x4d14a8) {
  this.data = _0x4d14a8;
  this.id = _0x4d14a8.id;
  this.itemType = _0x4d14a8.itemType;
  this.price = _0x4d14a8.price;
  this.onAfterLoad();
};
a0_0x181096.prototype.onAfterLoad = function () {
  this.btn = new a0_0x269f7f(this);
};
a0_0x181096.prototype.worldUpd_readMsgNewlyVisible = function (_0x484986, _0x2550bb, _0x490bfa) {
  this.setObjTypes(_0x2550bb, _0x490bfa);
  this.loadShopData(_0x484986);
};
a0_0x181096.prototype.getImage = function () {
  return null;
};
a0_0x181096.prototype.generateHtml = function () {};
window.ShopItem = a0_0x181096;
a0_0x269f7f.prototype = {
  itemID: 0,
  shopItem: null
};
function a0_0x269f7f(_0x4add04) {
  this.shopItem = _0x4add04;
}
a0_0x269f7f.prototype.generateHtml = function (_0x134c79) {
  var _0x3f08ea = a0_0xfa272f("div", "btn_" + this.shopItem.id, "buybutton");
  if (this.shopItem.price >= 0) {
    var _0x32cfb5 = new Image();
    _0x32cfb5.className = "buycoin-img";
    _0x32cfb5.src = "shop/mopecoin.png";
    _0x32cfb5.loading = "lazy";
    var _0x2bee28 = a0_0xfa272f("span", "", "buycoin-price");
    var _0x42d7e7 = this.shopItem.price == 0 ? "FREE" : this.shopItem.price;
    if (this.shopItem.saleType == 2) {
      _0x42d7e7 = this.shopItem.salePrice;
    }
    _0x2bee28.innerHTML = _0x42d7e7;
    _0x3f08ea.appendChild(_0x32cfb5);
    _0x3f08ea.appendChild(_0x2bee28);
    var _0x5bdddb = this;
    if (_0x134c79 == undefined || _0x134c79 == a0_0x416d92) {
      _0x3f08ea.onclick = function () {
        _0x5bdddb.onClick();
      };
    }
  } else {
    _0x3f08ea.innerHTML = "OWNED";
  }
  switch (this.shopItem.data.itemType) {
    case 0:
      _0x3f08ea.setAttribute("title", "Click to buy " + this.shopItem.data.skinName.replace("\n", " "));
      break;
    case 2:
      _0x3f08ea.setAttribute("title", "Click to buy this deal");
      break;
  }
  return _0x3f08ea;
};
a0_0x269f7f.prototype.onClick = function () {
  if (!a0_0x280dc0()) {
    a0_0x1669d8.showLoginScreen();
  } else {
    a0_0x1669d8.buyConfirmationOverlay(this.shopItem);
  }
  a0_0x2e715b();
};
window.BuyButton = a0_0x269f7f;
var a0_0x2011f1 = a0_0x2f2223;
var a0_0x58d04c = a0_0x181096;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
function a0_0x2f2223() {
  a0_0x2f2223.superClass.call(this, 1000);
  this.oType = 1000;
  this.itemType = 1;
}
a0_0x2f2223.prototype.prefix = null;
a0_0x2f2223.prototype.bonus = 0;
a0_0x2f2223.prototype.loadShopData = function (_0x2b1532) {
  a0_0x2f2223.superClass.prototype.loadShopData.call(this, _0x2b1532);
  this.prefix = _0x2b1532.prefix;
  this.bonus = _0x2b1532.bonus;
  this.value = _0x2b1532.value;
  this.onAfterLoad();
};
a0_0x2f2223.prototype.worldUpd_readMsgNewlyVisible = function (_0x45644a, _0x22bb4d, _0x4c51f8) {
  this.loadShopData(_0x45644a);
};
a0_0x2f2223.prototype.generateHtml = function () {
  var _0x3f1fa0 = a0_0xfa272f("div", "", "coin-row");
  var _0x18734a = a0_0xfa272f("div", "", "coin-prefix");
  var _0x2d0a73 = a0_0xfa272f("div", "", "coin-value");
  var _0x52d5e7 = a0_0xfa272f("div", "", "coin-plus");
  var _0x413a89 = a0_0xfa272f("div", "", "coin-bonus");
  var _0x475b0a = a0_0xfa272f("div", "", "coin-equ");
  var _0x37f5f9 = a0_0xfa272f("div", "", "coin-total");
  var _0x2ea12e = a0_0xfa272f("div", "", "coin-dollars");
  var _0x234183 = a0_0xfa272f("div", "", "coin-buy");
  var _0x127a94 = a0_0xfa272f("div", "", "coin-img");
  var _0x9b6597 = a0_0xfa272f("div", "", "coin-img");
  var _0x154c8a = new Image();
  var _0x617309 = new Image();
  _0x154c8a.src = "shop/mopecoin.png";
  _0x617309.src = "shop/mopecoin.png";
  _0x127a94.appendChild(_0x154c8a);
  _0x9b6597.appendChild(_0x617309);
  _0x18734a.innerHTML = "&nbsp;" + this.prefix;
  if (this.prefix != "") {
    _0x18734a.className = _0x18734a.className + " popular";
  } else {
    _0x413a89.className = _0x413a89.className + " nopopular";
  }
  _0x2d0a73.innerHTML = "&nbsp;" + this.value;
  _0x52d5e7.innerHTML = "+";
  _0x413a89.innerHTML = "&nbsp;" + this.bonus + "%";
  _0x475b0a.innerHTML = "=";
  _0x234183.innerHTML = "BUY";
  _0x37f5f9.innerHTML = "&nbsp;" + Number(this.value) * (Number(this.bonus + 100) / 100);
  _0x2ea12e.innerHTML = "$" + this.price;
  _0x3f1fa0.appendChild(_0x18734a);
  _0x3f1fa0.appendChild(_0x127a94);
  _0x3f1fa0.appendChild(_0x2d0a73);
  _0x3f1fa0.appendChild(_0x52d5e7);
  _0x3f1fa0.appendChild(_0x413a89);
  _0x3f1fa0.appendChild(_0x475b0a);
  _0x3f1fa0.appendChild(_0x9b6597);
  _0x3f1fa0.appendChild(_0x37f5f9);
  _0x3f1fa0.appendChild(_0x2ea12e);
  _0x3f1fa0.appendChild(_0x234183);
  return _0x3f1fa0;
};
a0_0x4a2f17.setCustomClassForShopItem(a0_0x2f2223, 1000);
window.MopeCoin = a0_0x2f2223;
var a0_0x2011f1 = a0_0x222f6a;
var a0_0x58d04c = a0_0x181096;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
function a0_0x222f6a(_0x4d4fc8, _0x17b57b) {
  a0_0x222f6a.superClass.call(this, a0_0x1370b8);
  this.animalType = _0x17b57b;
  this.setBiome(this.animalType);
}
a0_0x222f6a.prototype.setBiome = function (_0x155620) {
  switch (_0x155620) {
    case a0_0x15fd74:
    case a0_0x256160:
    case a0_0xbf4f2c:
    case a0_0x252dcd:
    case a0_0x562756:
    case a0_0x4efb3c:
    case a0_0x93d1ea:
    case a0_0xbfada:
    case a0_0x33fa19:
      this.biome = a0_0x1bed8b;
      break;
    case a0_0x30bc31:
    case a0_0x5f3a6f:
    case a0_0x4e6cde:
    case a0_0x1132a8:
    case a0_0x434da0:
      this.biome = a0_0x2f0085;
      break;
    case a0_0x415f2f:
    case a0_0x38090e:
    case a0_0x2a957c:
    case a0_0x5510d8:
      this.biome = a0_0x5fac87;
      break;
    case a0_0x9fe8e0:
    case a0_0x257f12:
    case a0_0x1b4846:
    case a0_0x472c8a:
      this.biome = a0_0x282b9e;
      break;
    case a0_0x527dbe:
    case a0_0x47c97f:
    case a0_0x2ed274:
    case a0_0x25f6dd:
      this.biome = a0_0xc64a03;
      break;
    default:
      break;
  }
};
a0_0x222f6a.prototype.loadShopData = function (_0x23eb33) {
  a0_0x222f6a.superClass.prototype.loadShopData.call(this, _0x23eb33);
  this.animalSpecies = _0x23eb33.animalSpecies;
  this.shopImg = "shop/" + _0x23eb33.shopImg;
  this.skinImage = _0x23eb33.skinImage;
  this.skinName = _0x23eb33.skinName;
  this.saleType = _0x23eb33.saleType;
  this.salePrice = _0x23eb33.salePrice;
};
a0_0x222f6a.prototype.setObjTypes = function (_0x3b0eed, _0xcc415d) {
  this.animalType = _0xcc415d;
};
a0_0x222f6a.prototype.getAnimalName = function () {
  switch (this.animalType) {
    case a0_0x151054:
      return "rabbit";
    case a0_0x3d5a13:
      return "pig";
    case a0_0x2d73e5:
      return "fox";
    case a0_0x31131a:
      return "deer";
    case a0_0x2347de:
      return "mole";
    case a0_0x4f39e9:
      return "zebra";
    case a0_0x1a694e:
      return "lion";
    case a0_0x54d85e:
      return "bigcat";
    case a0_0x5a613b:
      return "bear";
    case a0_0x20917b:
      return "croc";
    case a0_0x32eb58:
      return "rhino";
    case a0_0x93d1ea:
      return "hippo";
    case a0_0x256160:
      return "dragon";
    case a0_0x722c30:
      return "shrimp";
    case a0_0x5e41c4:
      return "trout";
    case a0_0xce170f:
      return "crab";
    case a0_0x464b86:
      return "squid";
    case a0_0x30aa6a:
      return "shark";
    case a0_0x56d530:
      return "stingray";
    case a0_0x58bf2a:
      return "turtle";
    case a0_0x1f8603:
      return "seahorse";
    case a0_0x574c01:
      return "jellyfish";
    case a0_0x4e6cde:
      return "kraken";
    case a0_0x265cfd:
      return "pufferfish";
    case a0_0x434da0:
      return "killerwhale";
    case a0_0x9f5ea7:
      return "swordfish";
    case a0_0x18ddf3:
      return "gorilla";
    case a0_0x2aaf90:
      return "octopus";
    case a0_0x3bbebf:
      return "wolf";
    case a0_0x1218ca:
      return "arctichare";
    case a0_0x38090e:
      return "yeti";
    case a0_0x31fe5e:
      return "chipmunk";
    case a0_0x1f838c:
      return "muskox";
    case a0_0x254dfc:
      return "penguin";
    case a0_0x162473:
      return "polarbear";
    case a0_0x34beb5:
      return "seal";
    case a0_0x1b4543:
      return "snowleopard";
    case a0_0x6e4e18:
      return "walrus";
    case a0_0x563df4:
      return "reindeer";
    case a0_0x1a160c:
      return "arcticfox";
    case a0_0x40cc4c:
      return "wolverine";
    case a0_0x2a957c:
      return "mammoth";
    case a0_0x41fd5c:
      return "donkey";
    case a0_0x101193:
      return "snail";
    case a0_0x257f12:
      return "blackdragon";
    case a0_0x5510d8:
      return "sabertoothtiger";
    case a0_0x4efb3c:
      return "elephant";
    case a0_0x1132a8:
      return "bluewhale";
    case a0_0x1bc37e:
      return "cobra";
    case a0_0xbfada:
      return "boaconstrictor";
    case a0_0x252dcd:
      return "giantspider";
    case a0_0xbf4f2c:
      return "trex";
    case a0_0x31e688:
      return "tiger";
    case a0_0x2adefe:
      return "giraffe";
    case a0_0x52cd8c:
      return "eagle";
    case a0_0x313367:
      return "hedgehog";
    case a0_0x15a05e:
      return "duck";
    case a0_0x224417:
      return "duckling";
    case a0_0x1d5499:
      return "lemming";
    case a0_0x5f3a6f:
      return "kingcrab";
    case a0_0x3b5f85:
      return "frog";
    case a0_0x33fa19:
      return "ostrich";
    case a0_0x4e94e8:
      return "pelican";
    case a0_0x1c0686:
      return "falcon";
    case a0_0xdf5a75:
      return "snowyowl";
    case a0_0x1e152a:
      return "honeybee";
    case a0_0x472c8a:
      return "phoenix";
    case a0_0x4cfb89:
      return "ostrichbaby";
    case a0_0x30bc31:
      return "seamonster";
    case a0_0x1b4846:
      return "landmonster";
    case a0_0x415f2f:
      return "icemonster";
    case a0_0x15fd74:
      return "dinomonster";
    case a0_0xc48b6:
      return "pigeon";
    case a0_0x22e8ad:
      return "toucan";
    case a0_0x2d643d:
      return "macaw";
    case a0_0x17136b:
      return "flamingo";
    case a0_0x562756:
      return "cassowary";
    case a0_0x402d5a:
      return "chicken";
    case a0_0xe8222c:
      return "woodpecker";
    case a0_0x4a36ac:
      return "peacock";
    case a0_0x2995a9:
      return "kangaroorat";
    case a0_0x33a740:
      return "desertchipmunk";
    case a0_0x33cfa9:
      return "meerkat";
    case a0_0x4b0faa:
      return "gazelle";
    case a0_0x4a9541:
      return "armadillo";
    case a0_0xffe9fd:
      return "fennecfox";
    case a0_0x303d9b:
      return "camel";
    case a0_0x1ce2e4:
      return "warthog";
    case a0_0x4450f0:
      return "hyena";
    case a0_0x240c0c:
      return "rattlesnake";
    case a0_0x69c437:
      return "vulture";
    case a0_0x32203e:
      return "bison";
    case a0_0x25f6dd:
      return "komododragon";
    case a0_0x527dbe:
      return "giantscorpion";
    case a0_0x47c97f:
      return "pterodactyl";
    case a0_0x1487f6:
      return "gobibear";
    case a0_0x2ed274:
      return "blackwidow";
    case a0_0x14a39f:
      return "bulletant";
    case a0_0x59b734:
      return "markhor";
  }
};
a0_0x222f6a.prototype.getSkinPath = function (_0x14e7b3) {
  var _0x30ed29 = this.animalSpecies > 0 ? this.animalSpecies : "";
  var _0xaf6a5c = a0_0x1669d8.ifMultiAssetSkin(this.animalType, this.skinImage);
  var _0x597559 = this.skinImage == undefined ? this.shopImg : "skins/" + _0xaf6a5c;
  if (_0x14e7b3) {
    _0x597559 += _0x14e7b3;
  }
  return _0x597559 + ".png";
};
a0_0x222f6a.prototype.getImage = function () {
  const _0x2d9f4c = "assets/s/" + this.data.season + "/" + this.getSkinPath();
  if (a0_0x4af0f9[_0x2d9f4c]) {
    return a0_0x4af0f9[_0x2d9f4c];
  }
  var _0x2f1d10 = new Image();
  _0x2f1d10.className = "animalSkin_" + this.animalType;
  _0x2f1d10.src = _0x2d9f4c;
  _0x2f1d10.loading = "lazy";
  a0_0x4af0f9[_0x2d9f4c] = _0x2f1d10;
  return _0x2f1d10;
};
a0_0x222f6a.prototype.getImagePromo = function (_0x3a759f) {
  const _0x842ba6 = "assets/s/" + this.data.season + "/" + this.getSkinPath(_0x3a759f);
  if (a0_0x4af0f9[_0x842ba6]) {
    return a0_0x4af0f9[_0x842ba6];
  }
  var _0x176b62 = new Image();
  _0x176b62.className = "animalSkin_" + this.animalType;
  _0x176b62.src = _0x842ba6;
  _0x176b62.loading = "lazy";
  a0_0x4af0f9[_0x842ba6] = _0x176b62;
  return _0x176b62;
};
a0_0x222f6a.prototype.getSkinName = function () {
  var _0x4d9e76 = this.skinName;
  return _0x4d9e76.replace("\n", "<br>");
};
a0_0x222f6a.prototype.generateHtml = function (_0x2b4351) {
  var _0x4e8c49 = "item skin " + (this.price == -1 ? " itemOwned" : " buyItem") + " aniItem_" + this.animalType;
  if (_0x2b4351 == a0_0x591a9f) {
    _0x4e8c49 = _0x4e8c49 + " confirm_item";
  }
  var _0xd4cf67 = a0_0x1cbc41("", _0x4e8c49);
  var _0x5722d4 = a0_0x1cbc41("", "image biome_" + this.biome);
  var _0xb6230b = a0_0x1cbc41("", "price");
  _0x5722d4.setAttribute("title", this.getSkinName().replace("<br>", " "));
  _0xb6230b.innerHTML = this.getSkinName();
  var _0xe1623f = this.getImage();
  _0x5722d4.appendChild(_0xe1623f);
  if (this.price > 0) {
    var _0x25060d = "";
    if (this.saleType == 1) {
      _0x25060d = "NEW";
    } else if (this.saleType == 2) {
      _0x25060d = "SALE";
    }
    if (this.salePrice != this.price && this.saleType > 0) {
      _0x25060d += " -" + Math.floor((1 - this.salePrice / this.price) * 100) + "%";
    }
    if (_0x25060d != "") {
      var _0x4546f5 = a0_0x1cbc41("newItem_" + this.animalType, "newItem");
      _0x4546f5.innerHTML = _0x25060d;
      _0xd4cf67.appendChild(_0x4546f5);
    }
  }
  if (this.data.tier !== undefined) {
    var _0x4282a7 = a0_0x1cbc41("tier", "tier");
    _0x4282a7.innerHTML = "T" + this.data.tier;
    _0x4282a7.title = "Animal Tier: " + this.data.tier;
    _0x5722d4.appendChild(_0x4282a7);
  }
  if (a0_0x1669d8.showSeason) {
    if (this.data.season !== undefined) {
      var _0x1f4c63 = a0_0x1cbc41("season", "season");
      _0x1f4c63.innerHTML = "S" + this.data.season;
      _0x1f4c63.title = "Released in Mopeio Season " + this.data.season;
      _0x5722d4.appendChild(_0x1f4c63);
    }
  }
  _0xd4cf67.appendChild(_0x5722d4);
  _0xd4cf67.appendChild(_0xb6230b);
  if (this.price >= 0) {
    _0xd4cf67.appendChild(this.btn.generateHtml(_0x2b4351));
  } else if (_0x2b4351 != a0_0x1fdb65) {
    var _0x6eaeac = this;
  }
  return _0xd4cf67;
};
window.AnimalSkin = a0_0x222f6a;
a0_0x4a2f17.setCustomClassForShopItem(a0_0x222f6a, a0_0x1370b8);
function a0_0x541c8c() {
  if (a0_0x280dc0()) {
    var _0x544717 = document.getElementById("divButtons");
    _0x544717.style.display = "none";
  }
  console.log("@@@@ Mopeio Shop: v 1.0 b @@@@");
  var _0x34c606 = document.getElementById("shopbutton2");
  var _0x244da7 = document.getElementById("shopbutton3");
  var _0x2cabec = document.getElementById("btnLogin");
  var _0x337514 = document.getElementById("btnLogout2");
  _0x2cabec.onclick = function () {
    a0_0x3726b6("login");
  };
  _0x337514.onclick = function () {
    a0_0x2abc85();
  };
  _0x34c606.onclick = function () {
    this.disabled = true;
    a0_0x3726b6();
  };
  _0x244da7.onclick = function () {
    this.disabled = true;
    a0_0x3726b6();
  };
  var _0x198649 = document.getElementById("onconnectDiv");
  if (_0x198649) {}
}
a0_0x541c8c.prototype.items = [];
a0_0x541c8c.prototype.datatab = [];
a0_0x541c8c.prototype.showSeason = true;
a0_0x541c8c.prototype.getPackageInfo = function (_0xaf54c9) {};
a0_0x541c8c.prototype.itemIdToItem = {};
a0_0x541c8c.prototype.purchasedItems = [];
a0_0x541c8c.prototype.changedWardrobeItems = {};
a0_0x541c8c.prototype.load = function (_0x11e7c3) {
  var _0x340706 = this;
  if (a0_0x368ea0) {
    var _0x235418 = document.getElementById("divButtons");
    _0x235418.style.display = "none";
  }
  var _0x5f222d = {
    shopItems: [],
    settings: []
  };
  a0_0x4986ad(function (_0x1b9d01, _0x403b7c) {
    if (!_0x1b9d01) {
      a0_0x1fcf24("Could not connect to AccountServer!", "itemDoesntExist", 5);
      var _0x4d2094 = document.getElementById("shopOverlay");
      if (_0x4d2094) {
        _0x4d2094.parentNode.removeChild(_0x4d2094);
      }
      return;
    }
    if (_0x403b7c) {
      for (var _0x493ef7 = 0; _0x493ef7 < _0x403b7c.items.length; _0x493ef7++) {
        var _0x5511a7 = _0x403b7c.items[_0x493ef7];
        _0x5f222d.shopItems.push(_0x5511a7);
      }
      if (_0x403b7c.settings) {
        for (var _0x493ef7 = 0; _0x493ef7 < _0x403b7c.settings.length; _0x493ef7++) {
          _0x5f222d.settings.push(_0x403b7c.settings[_0x493ef7]);
        }
      }
    }
    var _0x4184dc = {
      tab: "Skins",
      shopItems: []
    };
    var _0x5d7019 = {
      tab: "Golden",
      shopItems: []
    };
    var _0x409fce = {
      tab: "Locked",
      shopItems: []
    };
    var _0x35f357 = {
      tab: "Halloween",
      shopItems: []
    };
    var _0x12f3ed = {
      tab: "Deals",
      shopItems: []
    };
    var _0x20467d = {
      tab: "Features",
      shopItems: []
    };
    var _0x565a07 = [];
    var _0x15f127 = [_0x4184dc, _0x20467d, _0x12f3ed];
    for (_0x493ef7 = 0; _0x493ef7 < _0x5f222d.shopItems.length; _0x493ef7++) {
      var _0x8ccca7 = _0x5f222d.shopItems[_0x493ef7];
      switch (_0x8ccca7.shopCategory) {
        case 0:
          {
            var _0x5540af = a0_0x1f3ae3({
              animalType: _0x8ccca7.animalType,
              animalSpecies: _0x8ccca7.animalSpecies,
              animalSubSpecies: _0x8ccca7.animalSubSpecies
            });
            if (_0x5540af) {
              _0x8ccca7.id = _0x8ccca7.itemId;
              _0x8ccca7.oType = a0_0x1370b8;
              _0x8ccca7.skinName = _0x5540af.aniName || _0x8ccca7.itemId;
              _0x8ccca7.skinImage = _0x5540af.skinName + ".ui";
              _0x4184dc.shopItems.push(_0x8ccca7);
            } else {
              console.log("No animal type data for shop item " + _0x8ccca7.itemId);
            }
          }
          break;
        case 1:
          {
            if (_0x8ccca7.itemType == 1) {
              var _0x5540af = a0_0x1f3ae3({
                animalType: _0x8ccca7.animalType,
                animalSpecies: _0x8ccca7.animalSpecies,
                animalSubSpecies: _0x8ccca7.animalSubSpecies
              });
              if (_0x5540af) {
                _0x8ccca7.id = _0x8ccca7.itemId;
                _0x8ccca7.oType = a0_0x1370b8;
                _0x8ccca7.skinName = _0x5540af.aniName || _0x8ccca7.itemId;
                _0x8ccca7.skinImage = _0x5540af.skinName + ".ui";
                _0x4184dc.shopItems.push(_0x8ccca7);
              } else {
                console.log("No animal type data for shop item " + _0x8ccca7.itemId);
              }
            } else if (_0x8ccca7.itemType == 3) {
              _0x8ccca7.id = _0x8ccca7.itemId;
              _0x8ccca7.oType = a0_0x1b433c;
              _0x20467d.shopItems.push(_0x8ccca7);
            }
          }
          break;
        case 2:
          {
            _0x8ccca7.id = _0x8ccca7.itemId;
            _0x8ccca7.oType = a0_0x339da0;
            _0x12f3ed.shopItems.push(_0x8ccca7);
          }
          break;
          break;
        default:
      }
    }
    var _0x4b9a35 = {
      skins: _0x15f127
    };
    a0_0x541c8c.prototype.itemIdToItem = {};
    a0_0x541c8c.prototype.shop = {
      ownedSkins: [],
      ownedAnimals: [],
      ownedDeals: [],
      ownedProps: [],
      settings: [],
      skins: [],
      props: [],
      banners: _0x5f222d.banners
    };
    var _0x17f83e = [];
    for (t = 0; t < _0x4b9a35.skins.length; t++) {
      var _0x3870b5 = _0x4b9a35.skins[t];
      for (_0x493ef7 = 0; _0x493ef7 < _0x3870b5.shopItems.length; _0x493ef7++) {
        var _0x20c152 = _0x3870b5.shopItems[_0x493ef7];
        var _0x576a85 = a0_0x4a2f17.newlyVis_createGameObjFromMsg(_0x20c152.itemType, _0x20c152);
        if (_0x576a85.price == -1 && _0x576a85.data.itemType == 0) {
          if (!a0_0x541c8c.prototype.shop.ownedSkins[_0x20c152.itemId]) {
            a0_0x541c8c.prototype.shop.ownedSkins[_0x20c152.itemId] = _0x576a85;
            a0_0x541c8c.prototype.shop.ownedSkins.push(_0x576a85);
          }
        } else if (_0x576a85.price == -1 && _0x576a85.data.itemType == 1) {
          if (!a0_0x541c8c.prototype.shop.ownedAnimals[_0x20c152.itemId]) {
            a0_0x541c8c.prototype.shop.ownedAnimals[_0x20c152.itemId] = _0x576a85;
            a0_0x541c8c.prototype.shop.ownedAnimals.push(_0x576a85);
          }
        } else if (_0x576a85.price == -1 && _0x576a85.data.itemType == 2) {
          a0_0x541c8c.prototype.shop.ownedDeals.push(_0x576a85);
        }
        a0_0x541c8c.prototype.itemIdToItem[_0x20c152.itemId] = _0x20c152;
        _0x17f83e.push(_0x576a85);
      }
    }
    a0_0x541c8c.prototype.shop.allItems = _0x17f83e;
    for (d = 0; d < a0_0x541c8c.prototype.shop.ownedDeals.length; d++) {
      var _0x1a35d8 = a0_0x541c8c.prototype.shop.ownedDeals[d];
      for (s = 0; s < _0x17f83e.length; s++) {
        var _0x20c152 = _0x17f83e[s];
        if (_0x20c152.data.promotions && _0x20c152.data.promotions.indexOf(_0x1a35d8.itemId) > -1) {
          _0x20c152.price = -1;
          if (!a0_0x541c8c.prototype.shop.ownedSkins[_0x20c152.data.itemId]) {
            a0_0x541c8c.prototype.shop.ownedSkins.push(_0x20c152);
          }
        }
      }
    }
    for (_0x493ef7 = 0; _0x493ef7 < a0_0x541c8c.prototype.shop.allItems.length; _0x493ef7++) {
      a0_0x541c8c.prototype.shop.allItems[a0_0x541c8c.prototype.shop.allItems[_0x493ef7].data.itemId] = a0_0x541c8c.prototype.shop.allItems[_0x493ef7];
    }
    for (t = 0; t < _0x4b9a35.skins.length; t++) {
      var _0x3870b5 = _0x4b9a35.skins[t];
      var _0x533b86 = _0x3870b5.tab;
      var _0xf85bc = {
        name: _0x533b86,
        items: []
      };
      a0_0x541c8c.prototype.shop.skins.push(_0xf85bc);
      a0_0x541c8c.prototype.shop.skins[_0x533b86] = _0xf85bc;
      for (_0x493ef7 = 0; _0x493ef7 < _0x3870b5.shopItems.length; _0x493ef7++) {
        var _0x20c152 = _0x3870b5.shopItems[_0x493ef7];
        for (a = 0; a < _0x17f83e.length; a++) {
          var _0x51c379 = _0x17f83e[a];
          if (_0x20c152.id == _0x51c379.id && _0x51c379.price > -1) {
            _0xf85bc.items.push(_0x51c379);
          }
        }
      }
    }
    if (a0_0x32758a) {
      a0_0xd93903((_0x1eaf8e, _0x1e6b0a) => {
        if (!_0x1eaf8e) {
          a0_0x1fcf24("AccountServer: Failed to load your purchases: " + _0x1e6b0a, "error", 10000);
        } else {
          a0_0x541c8c.prototype.shop.settings = _0x1e6b0a.settings;
          a0_0x541c8c.prototype.purchasedItems = _0x1e6b0a.purchases;
          a0_0x541c8c.prototype.wardrobeItems = _0x1e6b0a.wardrobe;
          a0_0x541c8c.prototype.createPurchases();
        }
        if (_0x11e7c3) {
          a0_0x1669d8.updateshop_div();
        } else {
          a0_0x541c8c.prototype.buildInterface(false);
        }
        a0_0x1669d8.onShopLoaded();
      });
    } else {
      if (_0x11e7c3) {
        a0_0x1669d8.updateshop_div();
      } else {
        a0_0x541c8c.prototype.buildInterface(false);
      }
      a0_0x1669d8.onShopLoaded();
    }
  });
};
a0_0x541c8c.prototype.loadData = function () {
  var _0x2bb3a4 = {
    shopItems: [],
    settings: []
  };
  a0_0x4986ad(function (_0x457b48, _0x321e17) {
    if (!_0x457b48) {
      a0_0x1fcf24("Could not connect to AccountServer!", "itemDoesntExist", 5);
      var _0x4bd2fb = document.getElementById("shopOverlay");
      if (_0x4bd2fb) {
        _0x4bd2fb.parentNode.removeChild(_0x4bd2fb);
      }
      return;
    }
    if (_0x321e17) {
      for (var _0x37ed22 = 0; _0x37ed22 < _0x321e17.items.length; _0x37ed22++) {
        var _0x355e56 = _0x321e17.items[_0x37ed22];
        _0x2bb3a4.shopItems.push(_0x355e56);
      }
      if (_0x321e17.settings) {
        for (var _0x37ed22 = 0; _0x37ed22 < _0x321e17.settings.length; _0x37ed22++) {
          _0x2bb3a4.settings.push(_0x321e17.settings[_0x37ed22]);
        }
      }
    }
    var _0x1fb3c0 = {
      tab: "Skins",
      shopItems: []
    };
    var _0xace661 = {
      tab: "Features",
      shopItems: []
    };
    var _0x9a8b80 = {
      tab: "Deals",
      shopItems: []
    };
    var _0x135ad9 = [_0x1fb3c0, _0xace661, _0x9a8b80];
    for (_0x37ed22 = 0; _0x37ed22 < _0x2bb3a4.shopItems.length; _0x37ed22++) {
      var _0x454a38 = _0x2bb3a4.shopItems[_0x37ed22];
      switch (_0x454a38.shopCategory) {
        case 0:
          {
            var _0x42f149 = a0_0x1f3ae3({
              animalType: _0x454a38.animalType,
              animalSpecies: _0x454a38.animalSpecies,
              animalSubSpecies: _0x454a38.animalSubSpecies
            });
            if (_0x42f149) {
              _0x454a38.id = _0x454a38.itemId;
              _0x454a38.oType = a0_0x1370b8;
              _0x454a38.skinName = _0x42f149.aniName || _0x454a38.itemId;
              _0x454a38.skinImage = _0x42f149.skinName + ".ui";
              _0x1fb3c0.shopItems.push(_0x454a38);
            } else {}
            break;
          }
        case 2:
          {
            _0x454a38.id = _0x454a38.itemId;
            _0x454a38.oType = a0_0x339da0;
            _0x9a8b80.shopItems.push(_0x454a38);
          }
          break;
          break;
        default:
      }
    }
    var _0x8ec5f9 = {
      skins: _0x135ad9
    };
    a0_0x541c8c.prototype.itemIdToItem = {};
    a0_0x541c8c.prototype.shop = {
      ownedSkins: [],
      ownedDeals: [],
      ownedProps: [],
      settings: [],
      skins: [],
      props: [],
      banners: _0x2bb3a4.banners
    };
    var _0x282842 = [];
    for (t = 0; t < _0x8ec5f9.skins.length; t++) {
      var _0x301ef4 = _0x8ec5f9.skins[t];
      for (_0x37ed22 = 0; _0x37ed22 < _0x301ef4.shopItems.length; _0x37ed22++) {
        var _0x236f2a = _0x301ef4.shopItems[_0x37ed22];
        var _0x59cd80 = a0_0x4a2f17.newlyVis_createGameObjFromMsg(_0x236f2a.itemType, _0x236f2a);
        if (_0x59cd80.price == -1 && _0x59cd80.data.itemType == 0) {
          if (!a0_0x541c8c.prototype.shop.ownedSkins[_0x236f2a.itemId]) {
            a0_0x541c8c.prototype.shop.ownedSkins[_0x236f2a.itemId] = _0x59cd80;
            a0_0x541c8c.prototype.shop.ownedSkins.push(_0x59cd80);
          }
        } else if (_0x59cd80.price == -1 && _0x59cd80.data.itemType == 2) {
          a0_0x541c8c.prototype.shop.ownedDeals.push(_0x59cd80);
        }
        a0_0x541c8c.prototype.itemIdToItem[_0x236f2a.itemId] = _0x236f2a;
        _0x282842.push(_0x59cd80);
      }
    }
    a0_0x541c8c.prototype.shop.allItems = _0x282842;
    for (d = 0; d < a0_0x541c8c.prototype.shop.ownedDeals.length; d++) {
      var _0x232685 = a0_0x541c8c.prototype.shop.ownedDeals[d];
      for (s = 0; s < _0x282842.length; s++) {
        var _0x236f2a = _0x282842[s];
        if (_0x236f2a.data.promotions && _0x236f2a.data.promotions.indexOf(_0x232685.itemId) > -1) {
          _0x236f2a.price = -1;
          if (!a0_0x541c8c.prototype.shop.ownedSkins[_0x236f2a.data.itemId]) {
            a0_0x541c8c.prototype.shop.ownedSkins.push(_0x236f2a);
          }
        }
      }
    }
    for (_0x37ed22 = 0; _0x37ed22 < a0_0x541c8c.prototype.shop.allItems.length; _0x37ed22++) {
      a0_0x541c8c.prototype.shop.allItems[a0_0x541c8c.prototype.shop.allItems[_0x37ed22].data.itemId] = a0_0x541c8c.prototype.shop.allItems[_0x37ed22];
    }
    for (t = 0; t < _0x8ec5f9.skins.length; t++) {
      var _0x301ef4 = _0x8ec5f9.skins[t];
      var _0x4cb459 = _0x301ef4.tab;
      var _0x1ba4c0 = {
        name: _0x4cb459,
        items: []
      };
      a0_0x541c8c.prototype.shop.skins.push(_0x1ba4c0);
      a0_0x541c8c.prototype.shop.skins[_0x4cb459] = _0x1ba4c0;
      for (_0x37ed22 = 0; _0x37ed22 < _0x301ef4.shopItems.length; _0x37ed22++) {
        var _0x236f2a = _0x301ef4.shopItems[_0x37ed22];
        for (a = 0; a < _0x282842.length; a++) {
          var _0x5adf84 = _0x282842[a];
          if (_0x236f2a.id == _0x5adf84.id && _0x5adf84.price > -1) {
            _0x1ba4c0.items.push(_0x5adf84);
          }
        }
      }
    }
    if (!a0_0x32758a) {
      return;
    }
    a0_0xd93903((_0x82971, _0x49f301) => {
      if (!_0x82971) {
        a0_0x1fcf24("AccountServer: Failed to load your purchases: " + _0x49f301, "error", 10000);
      } else {
        a0_0x541c8c.prototype.shop.settings = _0x49f301.settings;
        a0_0x541c8c.prototype.purchasedItems = _0x49f301.purchases;
        a0_0x541c8c.prototype.wardrobeItems = _0x49f301.wardrobe;
        a0_0x541c8c.prototype.createPurchases();
      }
    });
  });
};
a0_0x541c8c.prototype.createPurchases = () => {
  const _0x12f156 = a0_0x541c8c.prototype;
  _0x12f156.shop.ownedSkins = [];
  _0x12f156.shop.ownedAnimals = [];
  _0x12f156.shop.ownedDeals = [];
  for (let _0x23010d = 0; _0x23010d < _0x12f156.shop.allItems.length; _0x23010d++) {
    const _0x4bb193 = _0x12f156.shop.allItems[_0x23010d];
    if (_0x12f156.purchasedItems.includes(_0x4bb193.id)) {
      _0x4bb193.price = -1;
      switch (_0x4bb193.data.shopCategory) {
        case 0:
          _0x12f156.shop.ownedSkins[_0x4bb193.id] = _0x4bb193;
          _0x12f156.shop.ownedSkins.push(_0x4bb193);
          break;
        case 1:
          _0x12f156.shop.ownedAnimals[_0x4bb193.id] = _0x4bb193;
          _0x12f156.shop.ownedAnimals.push(_0x4bb193);
          break;
        case 2:
          _0x12f156.shop.ownedDeals.push(_0x4bb193);
          break;
      }
    }
  }
};
a0_0x541c8c.prototype.ownedItems = new Array();
a0_0x541c8c.prototype.setFilter = function (_0x2570cd) {
  this.item_filter = _0x2570cd;
};
a0_0x541c8c.prototype.setFilterCat = function (_0x9b0ed6) {
  this.item_filter_cat = _0x9b0ed6;
};
a0_0x541c8c.prototype.setPriceFilter = function (_0x107ae5) {
  this.item_pricefilter = _0x107ae5;
};
a0_0x541c8c.prototype.showTab = function (_0x532ee2) {
  if (this.tabId != this.selectedTab) {
    this.setFilter("all");
  } else {
    this.setFilter(this.item_filter);
  }
  this.textFilter = "";
  this.textFilterWardrobe = "";
  var _0x4c2190 = document.getElementsByClassName("tab");
  var _0x402e2b = document.getElementsByClassName("title");
  for (i = 0; i < _0x402e2b.length; i++) {
    if (_0x402e2b[i].id == "" + _0x532ee2) {
      _0x402e2b[i].className = "title selected";
    } else {
      _0x402e2b[i].className = "title notselected";
    }
  }
  for (i = 0; i < _0x4c2190.length; i++) {
    if (_0x4c2190[i].id == "tab-" + _0x532ee2) {
      _0x4c2190[i].className = "tab selected";
    } else {
      _0x4c2190[i].className = "tab notselected";
    }
  }
  this.selectedTab = _0x532ee2;
  if (_0x532ee2 != "MopeShop" && _0x532ee2 != "Coins" && _0x532ee2 != "CLOTHING") {
    this.setVisiblePage(_0x532ee2, this.curTabPage);
  }
};
a0_0x541c8c.prototype.shop = null;
a0_0x541c8c.prototype.shopDiv = null;
a0_0x541c8c.prototype.buildInterface = function (_0x2122e5) {
  var _0x2e4c72 = document.getElementById("shopOverlay");
  if (_0x2e4c72) {
    _0x2e4c72.parentNode.removeChild(_0x2e4c72);
  }
  this.shopDiv = document.createElement("div");
  this.shopDiv.id = "shop";
  this.shopDiv.className = "shop center";
  var _0x59ec35 = document.getElementsByTagName("body")[0];
  _0x59ec35.prepend(this.shopDiv);
  this.showShopButtons();
  if (this.callback) {
    this.callback();
    this.callback = null;
  }
  a0_0x27da32();
};
a0_0x541c8c.prototype.wardrobeItems = {};
a0_0x541c8c.prototype.onShopLoaded = function () {
  if (a0_0x368ea0) {
    var _0x29ff4c = document.getElementById("divButtons");
    _0x29ff4c.style.display = "none";
  }
  if (this.actionBtn) {
    if (this.actionBtn == "login") {
      this.showLoginScreen();
    } else if (this.actionBtn == "reg") {
      this.showLoginScreen(true);
    }
    this.actionBtn = null;
  } else if (this.upgradeMenu_callback != null) {
    this.upgradeMenu_callback();
  }
};
a0_0x541c8c.prototype.callback = null;
a0_0x541c8c.prototype.updateshop_div = function () {
  console.log("--- update shop_div ---");
  console.log("this.selectedTab: " + this.selectedTab);
  if (this.selectedTab == "mySettings") {
    this.showShopButtons();
    this.selectedTab = "mySettings";
    this.showTab(this.selectedTab);
  } else {
    this.buildInterface(false);
    this.skinsInterface();
    this.showTab(this.selectedTab);
  }
};
a0_0x541c8c.prototype.removeBlockOverlay = function (_0x2567b2, _0x48299a) {
  var _0x218c5e = document.getElementById("blockOverlay");
  if (_0x218c5e) {
    _0x218c5e.parentNode.removeChild(_0x218c5e);
  }
};
a0_0x541c8c.prototype.blockOverlay = function (_0x58ea3b, _0x402723) {
  var _0x3796e3 = document.getElementById("shop_div");
  if (_0x3796e3) {
    var _0x5a10c0 = a0_0x1cbc41("blockOverlay", "");
    var _0x47225e = a0_0x1cbc41("plzwait", "");
    _0x47225e.innerHTML = "PLEASE WAIT...";
    _0x5a10c0.appendChild(_0x47225e);
    _0x3796e3.prepend(_0x5a10c0);
  }
};
var a0_0x416d92 = 0;
var a0_0x591a9f = 1;
var a0_0x1fdb65 = 2;
a0_0x541c8c.prototype.upgradeMenu_callback = null;
a0_0x541c8c.prototype.buyConfirmationOverlay = function (_0x1d44d1, _0x54a7db) {
  var _0x1d2c8b = document.getElementById("shop_div");
  if (_0x1d2c8b) {
    var _0x281c7e = a0_0x1cbc41("blockOverlay", "confirmPurchase " + a0_0x4a024c[_0x1d44d1.itemType]);
    var _0x7f79b7 = a0_0x1cbc41("purchaseItemInfo", "purchaseItemInfo");
    _0x281c7e.appendChild(_0x7f79b7);
    var _0x412a8c = _0x1d44d1.generateHtml(a0_0x591a9f);
    _0x7f79b7.appendChild(_0x412a8c);
    var _0x4bbe80 = a0_0x1cbc41("itemDetail", "itemDetail");
    _0x7f79b7.appendChild(_0x4bbe80);
    if (_0x1d44d1.data.info != undefined) {
      var _0x1f3a57 = a0_0x1cbc41("itemInfoText", "");
      _0x1f3a57.innerHTML = _0x1d44d1.data.info;
      _0x4bbe80.appendChild(_0x1f3a57);
    }
    var _0x193a78 = a0_0x1cbc41("areyousure", "");
    _0x193a78.innerHTML = "ARE YOU SURE YOU WANT TO PURCHASE THIS ITEM?";
    _0x4bbe80.appendChild(_0x193a78);
    if (_0x1d44d1.data.itemType == 2) {
      _0x412a8c.onmousemove = function () {
        $(".bundleSkins_" + _0x1d44d1.itemId).css("display", "block");
      };
      _0x412a8c.onmouseout = function () {
        $(".bundleSkins_" + _0x1d44d1.itemId).css("display", "none");
      };
    }
    var _0x2eeef1 = a0_0xfa272f("div", "btn_confirmBuy", "confirmBuybutton");
    _0x2eeef1.innerHTML = "CONFIRM";
    var _0xf06cce = _0x1d44d1.id;
    _0x2eeef1.onclick = function () {
      a0_0x1669d8.removeBlockOverlay();
      a0_0x1669d8.blockOverlay();
      a0_0x31665a(_0xf06cce, function (_0x53355c, _0x3cea6a) {
        if (_0x53355c) {
          a0_0x1fcf24("Purchase successful!", "success", 5);
          a0_0x367ad9();
          a0_0x1622c();
        } else {
          a0_0x1fcf24("AccountServer: " + _0x3cea6a, "error", 15);
        }
        a0_0x1669d8.removeBlockOverlay();
      });
    };
    _0x4bbe80.appendChild(_0x2eeef1);
    var _0xc69a82 = a0_0xfa272f("div", "btn_cancelBuy", "cancelBuybutton");
    _0xc69a82.innerHTML = "CANCEL";
    _0xc69a82.onclick = function () {
      a0_0x1669d8.removeBlockOverlay();
    };
    _0x4bbe80.appendChild(_0xc69a82);
    if (_0x1d44d1.data.itemType == 2 || _0x1d44d1.data.itemType == 3) {
      _0x1d44d1.fillItemDetails(_0x4bbe80);
    }
    _0x1d2c8b.prepend(_0x281c7e);
  } else {
    console.log("shop div not found...");
  }
};
a0_0x541c8c.prototype.isSkinAlreadyOwned = function () {};
a0_0x541c8c.prototype.itemDetailsOverlay = function (_0x251fe9, _0x386a7a) {
  console.log("@@@@@@@@@@@@ itemDetailsOverlay");
  var _0x7b6c1f = document.getElementById("shop_div");
  if (_0x7b6c1f) {
    var _0xb8c318 = a0_0x1cbc41("blockOverlay", "confirmPurchase item-details " + a0_0x4a024c[_0x251fe9.shopItem.itemType]);
    var _0x3853aa = a0_0x1cbc41("purchaseItemInfo", "purchaseItemInfo ");
    _0xb8c318.appendChild(_0x3853aa);
    var _0x21d2a9 = _0x251fe9.shopItem.generateHtml(_0x386a7a);
    _0x3853aa.appendChild(_0x21d2a9);
    var _0x36fc10 = a0_0x1cbc41("itemDetail", "itemDetail " + _0x251fe9.shopItem.data.itemType);
    _0x3853aa.appendChild(_0x36fc10);
    if (_0x251fe9.shopItem.data.itemType == 2) {
      _0x21d2a9.onmousemove = function () {
        $(".bundleSkins_" + _0x251fe9.shopItem.itemId).css("display", "block");
      };
      _0x21d2a9.onmouseout = function () {
        $(".bundleSkins_" + _0x251fe9.shopItem.itemId).css("display", "none");
      };
    }
    var _0x48d5fa = a0_0xfa272f("div", "btn_cancelBuy", "cancelBuybutton");
    _0x48d5fa.innerHTML = "CLOSE";
    _0x48d5fa.onclick = function () {
      a0_0x1669d8.removeBlockOverlay();
    };
    _0x36fc10.appendChild(_0x48d5fa);
    if (_0x251fe9.shopItem.data.itemType == 2) {
      var _0x28c0b6 = a0_0x1cbc41("bundleSkins", "bundleSkins_" + _0x251fe9.shopItem.itemId);
      _0x36fc10.appendChild(_0x28c0b6);
      console.log("############### dislay deal info");
      console.log(_0x251fe9.shopItem.data);
      if (_0x251fe9.shopItem.data.aniTypes === undefined) {
        for (i = 0; i < a0_0x1669d8.shop.allItems.length; i++) {
          var _0x4f509e = a0_0x1669d8.shop.allItems[i];
          if (_0x4f509e && _0x4f509e.data.promotions && _0x4f509e.data.promotions.toLowerCase().indexOf(_0x251fe9.shopItem.itemId.toLowerCase()) > -1) {
            var _0x2be982 = this.getPostFixForItem(_0x251fe9.shopItem.itemId);
            var _0x2f854c = _0x4f509e.getImagePromo(_0x2be982);
            _0x2f854c.className = "bundleSkinImg";
            _0x2f854c.width = "40px";
            _0x28c0b6.appendChild(_0x2f854c);
          }
        }
      } else if (this.data.aniTypes) {
        for (i = 0; i < this.data.aniTypes.length; i++) {
          var _0x46ae66 = a0_0x1669d8.getSkinPath(this.data.aniTypes[i], this.data.theme);
          if (_0x46ae66 !== undefined) {
            var _0x2f854c = null;
            if (a0_0x4af0f9[_0x46ae66]) {
              _0x2f854c = a0_0x4af0f9[_0x46ae66];
            } else {
              _0x2f854c = new Image();
              _0x2f854c.src = _0x46ae66;
              _0x2f854c.loading = "lazy";
              _0x2f854c.className = "bundleSkinImg";
              _0x2f854c.width = "40px";
              a0_0x4af0f9[_0x46ae66] = _0x2f854c;
            }
            _0x28c0b6.appendChild(_0x2f854c);
          }
        }
      }
    } else if (_0x251fe9.shopItem.data.itemType == 0) {
      var _0x4c98c6 = a0_0x1cbc41("skinInfo", "skin-info");
      _0x36fc10.appendChild(_0x4c98c6);
      _0x4c98c6.appendChild(this.createField("filed1", "value1", "skin-info-field", "skin-info-label", "skin-info-value"));
      _0x4c98c6.appendChild(this.createField("filed2", "value2", "skin-info-field", "skin-info-label", "skin-info-value"));
      _0x4c98c6.appendChild(this.createField("filed3", "value3", "skin-info-field", "skin-info-label", "skin-info-value"));
      _0x4c98c6.appendChild(this.createField("filed4", "value4", "skin-info-field", "skin-info-label", "skin-info-value"));
      _0x4c98c6.appendChild(this.createField("filed5", "value5", "skin-info-field", "skin-info-label", "skin-info-value"));
    }
    _0x7b6c1f.prepend(_0xb8c318);
  }
};
a0_0x541c8c.prototype.showLoginScreen = function (_0x1e2606) {
  var _0x3c2ba2 = document.getElementById("shop_div");
  if (_0x3c2ba2) {
    var _0x14208f = a0_0x1cbc41("blockOverlay", "confirmPurchase item-details ");
    var _0x502462 = a0_0x1cbc41("purchaseItemInfo", "purchaseItemInfo ");
    _0x14208f.appendChild(_0x502462);
    var _0x2e623f = a0_0x1cbc41("itemDetail2", "itemDetail2 ");
    _0x502462.appendChild(_0x2e623f);
    var _0x325689 = a0_0x1cbc41("mobilelogininfo", "");
    _0x2e623f.appendChild(_0x325689);
    var _0x3364d2 = a0_0xfa272f("div", "btn_cancelBuy", "cancelBuybutton");
    _0x325689.innerHTML = "LOGIN YOUR ACCOUNT";
    a0_0x5887e2 = document.getElementById("loginButtons");
    if (a0_0x5887e2) {
      console.log("login buttons");
      a0_0x5887e2.style.display = "block";
    }
    _0x3364d2.innerHTML = "CLOSE";
    _0x3364d2.onclick = function () {
      a0_0x1669d8.removeBlockOverlay();
      if (a0_0x5887e2) {
        a0_0x5887e2.style.display = "none";
      }
    };
    _0x2e623f.appendChild(_0x3364d2);
    _0x3c2ba2.prepend(_0x14208f);
  }
  a0_0x2e715b();
};
a0_0x541c8c.prototype.getSkinPath = function (_0x3467e4, _0x35dbc8) {
  var _0x48da2b = a0_0xa5d548.createGameObjOfOType(a0_0x1370b8, _0x3467e4);
  _0x48da2b.animalType = _0x3467e4;
  _0x48da2b.animalSpecies = 0;
  _0x48da2b.animalSubSpecies = 0;
  _0x48da2b.animalPremiumSkin = 0;
  _0x48da2b.curBiome = 0;
  _0x48da2b.lava = 100;
  _0x48da2b.mopeSeasonID = 0;
  _0x48da2b.skinThemeID = _0x35dbc8;
  var _0x8e04db = _0x48da2b.animalInfo();
  var _0x50e19d = _0x48da2b.getSkinImagePathForShop(_0x8e04db.skinName);
  _0x50e19d = this.ifMultiAssetSkin(_0x3467e4, _0x50e19d);
  return _0x50e19d + ".ui.png";
};
a0_0x541c8c.prototype.ifMultiAssetSkin = function (_0x502eac, _0x71b2bd) {
  return _0x71b2bd;
};
a0_0x541c8c.prototype.getPostFixForItem = function (_0x27a2c1) {
  switch (_0x27a2c1) {
    case "halloween_pufferMace":
      return "1";
  }
  return null;
};
a0_0x541c8c.prototype.createField = function (_0x24b8d5, _0x1eb32c, _0x55adb2, _0x9306ef, _0x2ce791) {
  var _0xd628fb = a0_0x1cbc41("", _0x55adb2);
  var _0x24b8d5 = a0_0x1cbc41("", _0x9306ef);
  var _0x1eb32c = a0_0x1cbc41("", _0x2ce791);
  _0xd628fb.appendChild(_0x24b8d5);
  _0xd628fb.appendChild(_0x1eb32c);
  return _0xd628fb;
};
a0_0x541c8c.prototype.addCloseButton = function (_0x5a656a) {
  var _0x103ec6 = a0_0xfa272f("div", "close-shop");
  _0x103ec6.onclick = function () {
    a0_0x1b1184();
  };
  _0x103ec6.innerHTML = "X";
  _0x5a656a.appendChild(_0x103ec6);
};
a0_0x541c8c.prototype.updateCoinsBalance = function () {
  console.log("coins balance updated");
  var _0x6e76dc = a0_0x473b10;
  _0x6e76dc.level = Math.round(a0_0x1da5bb(1, 10));
  _0x6e76dc.xp = 50;
  _0x6e76dc.xpNextLvl = _0x6e76dc.xp + 300;
  var _0x30d0c2 = Math.round(_0x6e76dc.xp);
  var _0xc17a10 = document.getElementById("coins");
  if (_0xc17a10) {
    _0xc17a10.innerHTML = this.coinsFormat(a0_0x3b7a9a());
    var _0x2b4d80 = document.getElementById("userxp-barbar");
    var _0x143583 = document.getElementById("userxp-val");
    var _0x523552 = document.getElementById("userxp-star");
    _0x143583.innerHTML = _0x30d0c2 + " / " + _0x6e76dc.xpNextLvl;
    _0x30d0c2 = _0x30d0c2 / _0x6e76dc.xpNextLvl * 100;
    _0x2b4d80.style.width = _0x30d0c2 + "px";
    _0x523552.innerHTML = _0x6e76dc.level;
  }
  var _0x20bd05 = document.getElementById("coins2");
  if (_0x20bd05) {
    _0x20bd05.innerHTML = a0_0x3b7a9a();
    var _0x2b4d80 = document.getElementById("userxp-barbar2");
    var _0x143583 = document.getElementById("userxp-val2");
    var _0x523552 = document.getElementById("userxp-star2");
    _0x143583.innerHTML = _0x30d0c2 + " / " + _0x6e76dc.xpNextLvl;
    _0x30d0c2 = _0x30d0c2 / _0x6e76dc.xpNextLvl * 100;
    _0x2b4d80.style.width = _0x30d0c2 + "px";
    _0x523552.innerHTML = _0x6e76dc.level;
  }
};
a0_0x541c8c.prototype.coinsFormat = function (_0x3a7324) {
  console.log("coinsFormat");
  var _0x29ebda = "" + _0x3a7324;
  if (_0x3a7324 == 0) {
    return _0x3a7324;
  }
  _0x29ebda = _0x29ebda.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  console.log("formatted");
  return _0x29ebda;
};
a0_0x541c8c.prototype.showUserExpBarAndCoinsBalance = function (_0x202433) {
  var _0x240555 = a0_0xfa272f("li", "user-exp", "user-exp");
  var _0x2e16bb = a0_0xfa272f("div", "userxp-bar", "userxp-bar");
  var _0x1cf7e8 = a0_0xfa272f("div", "userxp-barbar", "userxp-barbar");
  var _0x563be6 = a0_0xfa272f("div", "userxp-val", "userxp-val");
  var _0x32ccc4 = a0_0xfa272f("div", "userxp-star", "userxp-star");
  var _0x2fd3a2 = a0_0x473b10;
  var _0x3c2016 = a0_0xfa272f("li", "coins-balance", "coins-balance");
  var _0x5a0910 = new Image();
  _0x5a0910.src = "shop/mopecoin.png";
  _0x5a0910.className = "buycoin-img";
  if (a0_0x280dc0()) {
    _0x3c2016.appendChild(_0x5a0910);
  }
  var _0x3de4ce = a0_0xfa272f("span", "coins", "coins");
  _0x3de4ce.innerHTML = a0_0x3b7a9a();
  _0x3c2016.appendChild(_0x3de4ce);
  _0x3c2016.setAttribute("title", "add more coins");
  _0x202433.appendChild(_0x3c2016);
  _0x3c2016.onclick = function () {
    if (a0_0x280dc0()) {
      a0_0x1669d8.coinsInterface();
    } else {
      a0_0x1669d8.showLoginScreen();
    }
    a0_0x2a8a64();
  };
};
a0_0x541c8c.prototype.enableClothingShop = false;
a0_0x541c8c.prototype.showShopButtons = function () {
  this.deleteTab();
  var _0x3781ec = a0_0x1cbc41("shop_div", "");
  var _0x306dbd = a0_0xfa272f("ul");
  this.addCloseButton2(_0x306dbd);
  _0x3781ec.appendChild(_0x306dbd);
  var _0xa0282 = {
    name: "MopeShop"
  };
  var _0x4f8782 = a0_0xfa272f("li", _0xa0282.name, "title");
  _0x4f8782.innerHTML = "SHOP";
  _0x4f8782.onclick = function () {
    a0_0x1669d8.showTab(this.id);
  };
  _0x306dbd.appendChild(_0x4f8782);
  var _0x1d5ac5 = a0_0xfa272f("div", "tab-" + _0xa0282.name, "tab");
  var _0x32f474 = a0_0xfa272f("div", undefined, "content");
  var _0x3483ef = a0_0xfa272f("div", undefined, "content-inner");
  var _0x2576b5 = a0_0xfa272f("div", "content-items-" + _0xa0282.name, "content-items");
  _0x3483ef.append(_0x2576b5);
  _0x2576b5.style.width = "610px";
  var _0x20de96 = a0_0xfa272f("div", undefined, "box coinsBox");
  var _0x14840b = a0_0xfa272f("div", undefined, "box skinsBox");
  var _0x527c15 = a0_0xfa272f("div", undefined, "box skinsBox");
  var _0x3c1f75 = a0_0xfa272f("div", undefined, "box dealsBox");
  _0x14840b.onclick = function () {
    a0_0x1669d8.selectedTab = "Skins";
    a0_0x1669d8.skinsInterface();
    a0_0x2a8a64();
  };
  _0x527c15.onclick = function () {
    a0_0x1669d8.selectedTab = "Features";
    a0_0x1669d8.skinsInterface();
    a0_0x2a8a64();
  };
  _0x3c1f75.onclick = function () {
    a0_0x1669d8.selectedTab = "Deals";
    a0_0x1669d8.skinsInterface();
    a0_0x2a8a64();
  };
  _0x20de96.onclick = function () {
    a0_0x1669d8.coinsInterface();
    a0_0x2a8a64();
  };
  var _0x4cf86e = a0_0xfa272f("div", undefined, "title");
  var _0x1b84cd = a0_0xfa272f("div", undefined, "img");
  var _0x5d8695 = new Image();
  _0x5d8695.src = "shop/coins.png";
  _0x1b84cd.appendChild(_0x5d8695);
  _0x4cf86e.innerHTML = "COINS";
  _0x20de96.appendChild(_0x1b84cd);
  _0x20de96.appendChild(_0x4cf86e);
  var _0x37eb60 = a0_0xfa272f("div", undefined, "title");
  var _0x586982 = a0_0xfa272f("div", undefined, "img");
  var _0x3c7987 = new Image();
  _0x3c7987.src = "shop/skins.png";
  _0x586982.appendChild(_0x3c7987);
  _0x37eb60.innerHTML = "SKINS";
  _0x14840b.appendChild(_0x586982);
  _0x14840b.appendChild(_0x37eb60);
  var _0x512502 = a0_0xfa272f("div", undefined, "title");
  var _0x52335f = a0_0xfa272f("div", undefined, "img");
  var _0x3c7987 = new Image();
  _0x3c7987.src = "shop/features.png";
  _0x52335f.appendChild(_0x3c7987);
  _0x512502.innerHTML = "FEATURES";
  _0x527c15.appendChild(_0x52335f);
  _0x527c15.appendChild(_0x512502);
  var _0x17e277 = a0_0xfa272f("div", undefined, "title");
  var _0x875bb5 = a0_0xfa272f("div", undefined, "img");
  var _0x513d1b = new Image();
  _0x513d1b.src = "shop/deals/deals.png";
  _0x875bb5.appendChild(_0x513d1b);
  _0x17e277.innerHTML = "DEALS";
  _0x3c1f75.appendChild(_0x875bb5);
  _0x3c1f75.appendChild(_0x17e277);
  _0x2576b5.appendChild(_0x14840b);
  _0x2576b5.appendChild(_0x527c15);
  _0x2576b5.appendChild(_0x3c1f75);
  _0x2576b5.appendChild(_0x20de96);
  if (this.enableClothingShop) {
    var _0x165cf4 = a0_0xfa272f("div", undefined, "box clothsBox");
    _0x165cf4.onclick = function () {
      a0_0x1669d8.clothsInterface();
      a0_0x2a8a64();
    };
    var _0x1af2ea = a0_0xfa272f("div", undefined, "title");
    var _0x1db67b = a0_0xfa272f("div", undefined, "img");
    var _0xc041b0 = new Image();
    _0xc041b0.src = "shop/clothing.png";
    _0x1db67b.appendChild(_0xc041b0);
    _0x1af2ea.innerHTML = "CLOTHING";
    _0x165cf4.appendChild(_0x1db67b);
    _0x165cf4.appendChild(_0x1af2ea);
    _0x2576b5.appendChild(_0x165cf4);
  }
  _0x32f474.append(_0x3483ef);
  _0x32f474.append(a0_0xfa272f("div", "", "separator"));
  _0x3483ef.append(a0_0xfa272f("div", "", "separator"));
  _0x2576b5.append(a0_0xfa272f("div", "", "separator"));
  _0x1d5ac5.append(_0x32f474);
  _0x1d5ac5.append(a0_0xfa272f("div", "", "separator"));
  _0x3781ec.appendChild(_0x1d5ac5);
  this.createMyPurchasesTab(_0x306dbd, _0x3781ec, [...a0_0x1669d8.shop.ownedSkins, ...a0_0x1669d8.shop.ownedAnimals]);
  this.createMyDealsTab(_0x306dbd, _0x3781ec, a0_0x1669d8.shop.ownedDeals);
  this.createWardrobeTab(_0x306dbd, _0x3781ec, []);
  this.createMySettingsTab(_0x306dbd, _0x3781ec, a0_0x1669d8.shop.settings);
  this.showUserExpBarAndCoinsBalance(_0x306dbd);
  _0x3781ec.append(a0_0xfa272f("div", "", "separator"));
  this.shopDiv.appendChild(_0x3781ec);
  this.showTab("MopeShop");
  a0_0x27da32();
};
a0_0x541c8c.prototype.createLogoutBtn = function (_0x2811ea) {
  var _0x3be844 = a0_0xfa272f("div", "divLogoutBtn", a0_0x280dc0() ? "logout" : "login");
  _0x3be844.innerHTML = a0_0x280dc0() ? "LOGOUT" : "LOGIN";
  _0x3be844.onclick = function () {
    if (a0_0x280dc0()) {
      a0_0x2abc85();
    } else {
      a0_0x1669d8.showLoginScreen();
    }
  };
  _0x2811ea.append(_0x3be844);
};
a0_0x541c8c.prototype.getSkinDataById = function (_0x608eac) {
  return a0_0x541c8c.prototype.itemIdToItem[_0x608eac];
};
a0_0x541c8c.prototype.applyWardrobeFilter = function (_0x2d23b0) {
  for (let _0x456b91 = 0; _0x456b91 < _0x2d23b0.children.length; _0x456b91++) {
    const _0x4cb02b = _0x2d23b0.children[_0x456b91];
    _0x4cb02b.style.display = _0x4cb02b.children[1].innerText.toLowerCase().includes(a0_0x1669d8.textFilterWardrobe.toLowerCase()) ? "block" : "none";
  }
};
a0_0x541c8c.prototype.createWardrobeTab = function (_0x2d546a, _0x2725ca, _0x32a7e2) {
  var _0x3f788d = {
    name: "mopeWardrobe"
  };
  var _0x4e2e6f = a0_0xfa272f("li", _0x3f788d.name, "title");
  _0x4e2e6f.innerHTML = "WARDROBE";
  _0x4e2e6f.onclick = function () {
    a0_0x1669d8.curTabPage = 0;
    if (!a0_0x280dc0()) {
      a0_0x1669d8.showLoginScreen();
      return;
    }
    a0_0x1669d8.showTab(this.id);
  };
  _0x2d546a.appendChild(_0x4e2e6f);
  if (!this.item_filter) {
    this.item_filter = "all";
  }
  var _0x374cfe = a0_0xfa272f("div", "tab-" + _0x3f788d.name, "tab");
  var _0x48e966 = a0_0xfa272f("div", undefined, "content content-wardrobe");
  var _0x1d118a = a0_0xfa272f("div", undefined, "content-inner");
  var _0xef2387 = a0_0xfa272f("div", "content-items-" + _0x3f788d.name, "content-items");
  var _0x2f6b21 = a0_0xfa272f("div", "item-filters", "item-filters");
  var _0x427a9f = a0_0xfa272f("span", undefined, "filter-label");
  _0x427a9f.innerHTML = "Filter: ";
  _0x2f6b21.appendChild(_0x427a9f);
  const _0x38f68e = a0_0xfa272f("input", "", "filter");
  _0x38f68e.type = "text";
  _0x38f68e.placeholder = "Search...";
  const _0x2553f8 = a0_0xfa272f("div", null, "mopeWardrobeGrid");
  _0xef2387.appendChild(_0x2553f8);
  _0x38f68e.oninput = function (_0xfd6460) {
    a0_0x1669d8.textFilterWardrobe = _0xfd6460.target.value;
    a0_0x541c8c.prototype.applyWardrobeFilter(_0x2553f8);
  };
  _0x2f6b21.appendChild(_0x38f68e);
  _0x1d118a.append(_0xef2387);
  _0xef2387.style.maxWidth = "100%";
  _0x48e966.appendChild(_0x2f6b21);
  _0x48e966.append(_0x1d118a);
  _0x48e966.append(a0_0xfa272f("div", "", "separator"));
  _0x1d118a.append(a0_0xfa272f("div", "", "separator"));
  _0xef2387.append(a0_0xfa272f("div", "", "separator"));
  _0x374cfe.append(_0x48e966);
  _0x374cfe.append(a0_0xfa272f("div", "", "separator"));
  _0x2725ca.appendChild(_0x374cfe);
  if (!a0_0x368ea0) {
    return;
  }
  const _0x5d4d58 = Object.keys(a0_0x541c8c.prototype.wardrobeItems);
  for (let _0x28c470 = 0; _0x28c470 < _0x5d4d58.length; _0x28c470++) {
    const _0x12c09c = _0x5d4d58[_0x28c470];
    const _0x419b85 = a0_0xa5d548.createGameObjOfOType(a0_0x1370b8, _0x12c09c);
    _0x419b85.animalType = _0x12c09c;
    const _0x59852b = _0x419b85.animalInfo().aniName;
    _0x419b85.animalSpecies = 0;
    _0x419b85.animalSubSpecies = 0;
    _0x419b85.mopeSeasonID = 1;
    _0x419b85.animalPremiumSkin = 0;
    _0x419b85.skinThemeID = 0;
    const _0x6a714c = a0_0x541c8c.prototype.changedWardrobeItems[_0x12c09c] ? a0_0x541c8c.prototype.changedWardrobeItems[_0x12c09c] : a0_0x541c8c.prototype.wardrobeItems[_0x12c09c].equippedSkin;
    if (_0x6a714c && _0x6a714c != "RANDOM") {
      const _0x11ea2b = a0_0x541c8c.prototype.getSkinDataById(_0x6a714c);
      if (_0x11ea2b) {
        _0x419b85.animalSpecies = _0x11ea2b.animalSpecies;
        _0x419b85.animalSubSpecies = _0x11ea2b.animalSubSpecies;
        _0x419b85.mopeSeasonID = _0x11ea2b.season;
      }
    }
    a0_0x541c8c.prototype.createWardrobeItem(_0x2553f8, _0x419b85, _0x59852b);
  }
};
a0_0x541c8c.prototype.createWardrobeItem = function (_0x42bc9a, _0x110cbc, _0x549104) {
  const _0x3b18bd = a0_0x1cbc41(null, "mopeWardrobeItemContainer");
  const _0x18bb15 = a0_0x1cbc41(null, "mopeWardrobeImgOuter");
  const _0x43227d = a0_0x1cbc41(null, "mopeWardrobeItemTitle");
  const _0x1d9adc = a0_0xfa272f("select", null, "mopeWardrobeItemSelect");
  _0x43227d.innerText = _0x549104;
  const _0x3ebdee = "assets/s/" + _0x110cbc.mopeSeasonID + "/skins/" + _0x110cbc.getSkinName() + ".ui.png?w=1&v=" + a0_0x3ee1ec;
  const _0x54af01 = a0_0x4af0f9[_0x3ebdee];
  const _0x5b7f6f = _0x54af01 ? _0x54af01 : a0_0xfa272f("img", null, null);
  if (!_0x54af01) {
    _0x5b7f6f.src = _0x3ebdee;
    _0x5b7f6f.loading = "lazy";
    a0_0x4af0f9[_0x3ebdee] = _0x5b7f6f;
  }
  _0x18bb15.append(_0x5b7f6f);
  _0x3b18bd.append(_0x18bb15, _0x43227d, _0x1d9adc);
  _0x42bc9a.append(_0x3b18bd);
  const _0x2ceba6 = a0_0x541c8c.prototype.wardrobeItems[_0x110cbc.animalType].available;
  const _0x4393e8 = a0_0x541c8c.prototype.changedWardrobeItems[_0x110cbc.animalType] ? a0_0x541c8c.prototype.changedWardrobeItems[_0x110cbc.animalType] : a0_0x541c8c.prototype.wardrobeItems[_0x110cbc.animalType].equippedSkin;
  for (let _0x1c4678 = 0; _0x1c4678 < _0x2ceba6.length; _0x1c4678++) {
    const _0x370957 = _0x2ceba6[_0x1c4678];
    const _0x1d59ed = a0_0x541c8c.prototype.getSkinDataById(_0x370957);
    let _0x2cda08 = _0x370957 == null || _0x370957 === "RANDOM" ? _0x549104 : _0x370957;
    if (_0x1d59ed) {
      _0x110cbc.animalSpecies = _0x1d59ed.animalSpecies;
      _0x110cbc.animalSubSpecies = _0x1d59ed.animalSubSpecies;
      _0x110cbc.mopeSeasonID = _0x1d59ed.season;
      _0x2cda08 = _0x110cbc.animalInfo().aniName || _0x370957;
    }
    if (_0x2cda08 == _0x370957) {
      console.error("Missing name declaration for: " + _0x370957);
    }
    const _0x34e4dc = a0_0xfa272f("option");
    _0x34e4dc.innerText = _0x370957 == "RANDOM" ? "Random" : _0x2cda08.replace("\n", " ");
    _0x1d9adc.appendChild(_0x34e4dc);
    _0x34e4dc.dataset.aniType = _0x110cbc.animalType;
    _0x34e4dc.dataset.skinType = _0x370957;
    if (_0x370957 == _0x4393e8) {
      _0x1d9adc.selectedIndex = _0x1c4678;
    }
  }
  _0x1d9adc.oninput = () => {
    const _0x22037e = _0x2ceba6[_0x1d9adc.selectedIndex];
    a0_0x541c8c.prototype.changedWardrobeItems[_0x110cbc.animalType] = _0x22037e;
    const _0x3152ee = a0_0x541c8c.prototype.getSkinDataById(_0x22037e);
    if (_0x3152ee) {
      _0x110cbc.animalSpecies = _0x3152ee.animalSpecies;
      _0x110cbc.animalSubSpecies = _0x3152ee.animalSubSpecies;
      _0x110cbc.mopeSeasonID = _0x3152ee.season;
    } else {
      _0x110cbc.animalSpecies = 0;
      _0x110cbc.animalSubSpecies = 0;
      _0x110cbc.mopeSeasonID = 1;
    }
    _0x110cbc.animalInfo();
    const _0x30db4c = "assets/s/" + _0x110cbc.mopeSeasonID + "/skins/" + _0x110cbc.getSkinName() + ".ui.png?w=1&v=" + a0_0x3ee1ec;
    const _0x2ac811 = a0_0x4af0f9[_0x30db4c];
    const _0x1ac0d7 = _0x2ac811 ? _0x2ac811 : a0_0xfa272f("img", null, null);
    if (!_0x2ac811) {
      _0x1ac0d7.src = _0x30db4c;
      _0x1ac0d7.loading = "lazy";
      a0_0x4af0f9[_0x30db4c] = _0x1ac0d7;
    }
    if (_0x18bb15.lastChild) {
      _0x18bb15.lastChild.remove();
    }
    _0x18bb15.append(_0x1ac0d7);
  };
};
a0_0x541c8c.prototype.textFilter = "";
a0_0x541c8c.prototype.createMyPurchasesTab = function (_0xeffee6, _0x2f4f73, _0xa060f0) {
  var _0x2b3ee8 = {
    name: "myPurchases"
  };
  var _0x3b9c35 = a0_0xfa272f("li", _0x2b3ee8.name, "title");
  _0x3b9c35.innerHTML = "PURCHASES";
  _0x3b9c35.onclick = function () {
    a0_0x1669d8.curTabPage = 0;
    if (!a0_0x280dc0()) {
      a0_0x1669d8.showLoginScreen();
      return;
    }
    a0_0x1669d8.showTab(this.id);
  };
  _0xeffee6.appendChild(_0x3b9c35);
  if (!this.item_filter) {
    this.item_filter = "all";
  }
  var _0x352938 = a0_0xfa272f("div", "tab-" + _0x2b3ee8.name, "tab");
  var _0x2b2aa1 = a0_0xfa272f("div", undefined, "content");
  var _0x5087c7 = a0_0xfa272f("div", undefined, "content-inner");
  var _0x3a8e03 = a0_0xfa272f("div", "content-items-" + _0x2b3ee8.name, "content-items");
  var _0x528241 = a0_0xfa272f("div", "item-filters", "item-filters");
  var _0x197571 = ["all", "skins", "animals"];
  var _0x189cd0 = a0_0xfa272f("span", undefined, "filter-label");
  _0x189cd0.innerHTML = "Filter: ";
  _0x528241.appendChild(_0x189cd0);
  _0x5087c7.append(_0x3a8e03);
  if (_0x2b3ee8.name == "Coins") {
    _0x3a8e03.style.width = "615px";
  } else {
    _0x3a8e03.style.width = "530px";
  }
  _0x2b2aa1.append(_0x5087c7);
  _0x2b2aa1.append(a0_0xfa272f("div", "", "separator"));
  _0x5087c7.append(a0_0xfa272f("div", "", "separator"));
  _0x3a8e03.append(a0_0xfa272f("div", "", "separator"));
  _0x352938.append(_0x2b2aa1);
  _0x352938.append(a0_0xfa272f("div", "", "separator"));
  _0x2f4f73.appendChild(_0x352938);
  var _0x465b3d = a0_0xfa272f("div", "pages-" + _0x2b3ee8.name, "content-items-pages");
  let _0x4b1455 = null;
  for (i = 0; i < _0x197571.length; i++) {
    let _0xd8f91 = a0_0xfa272f("span", undefined, "filter " + (this.item_filter == _0x197571[i] ? "selected" : "") + " filter-" + _0x197571[i]);
    if (this.item_filter == _0x197571[i]) {
      _0x4b1455 = _0xd8f91;
    }
    _0xd8f91.setAttribute("data-filter", _0x197571[i]);
    _0xd8f91.setAttribute("data-tab", _0x2b3ee8.name);
    _0xd8f91.innerHTML = _0x197571[i];
    _0xd8f91.onclick = function () {
      _0x4b1455.classList.remove("selected");
      _0xd8f91.classList.add("selected");
      _0x4b1455 = _0xd8f91;
      a0_0x1669d8.item_filter = $(_0xd8f91).data("filter");
      a0_0x1669d8.selectedTab = $(_0xd8f91).data("tab");
      a0_0x541c8c.prototype.applyFilter(_0x3a8e03, _0x465b3d, _0xa060f0);
    };
    _0x528241.appendChild(_0xd8f91);
  }
  const _0x560398 = a0_0xfa272f("input", "", "filter");
  _0x560398.type = "text";
  _0x560398.placeholder = "Search...";
  _0x560398.oninput = function (_0x3c1a97) {
    a0_0x1669d8.textFilter = _0x3c1a97.target.value;
    a0_0x541c8c.prototype.applyFilter(_0x3a8e03, _0x465b3d, _0xa060f0);
  };
  _0x528241.appendChild(_0x560398);
  var _0x37eb32 = a0_0xfa272f("div", "left-" + _0x2b3ee8.name, "left");
  var _0xdb9bc2 = a0_0xfa272f("div", "right-" + _0x2b3ee8.name, "right");
  _0xdb9bc2.onclick = function () {
    a0_0x1669d8.scrollItems(this, true);
  };
  _0x37eb32.onclick = function () {
    a0_0x1669d8.scrollItems(this, false);
  };
  _0x5087c7.append(_0x3a8e03);
  if (_0xa060f0.length > 0) {
    _0x2b2aa1.appendChild(_0x528241);
    _0x5087c7.className += " w530";
    a0_0x541c8c.prototype.updatePurchasesFilter(_0x3a8e03, _0x465b3d, _0xa060f0, _0xa060f0);
    for (i = 0; i < _0xa060f0.length; i++) {
      var _0x3418bc = _0xa060f0[i];
      var _0x134097 = _0x3418bc.generateHtml();
      _0x134097.classList.add("data-index-" + i);
      _0x3a8e03.appendChild(_0x134097);
    }
    _0x2b2aa1.append(_0x37eb32);
    _0x2b2aa1.append(_0x5087c7);
    _0x2b2aa1.append(_0xdb9bc2);
    _0x2b2aa1.append(_0x465b3d);
  } else {
    var _0x223ca1 = a0_0x1cbc41("div", "nopurchases");
    _0x223ca1.innerHTML = "You don't have any item to show here!";
    _0x5087c7.append(_0x223ca1);
    _0x2b2aa1.append(_0x5087c7);
  }
};
a0_0x541c8c.prototype.applyFilter = function (_0x27d06, _0x3671b2, _0x20dc59) {
  let _0x4ac878 = _0x20dc59;
  switch (a0_0x1669d8.item_filter) {
    case "all":
      _0x4ac878 = _0x20dc59;
      break;
    case "skins":
      _0x4ac878 = _0x20dc59.filter(_0x1858b0 => _0x1858b0.itemType == 0);
      break;
    case "animals":
      _0x4ac878 = _0x20dc59.filter(_0x5df118 => _0x5df118.itemType == 1);
      break;
    case "deals":
      _0x4ac878 = _0x20dc59.filter(_0x273ab0 => _0x273ab0.itemType == 2);
      break;
  }
  _0x4ac878 = _0x4ac878.filter(_0x591cd8 => _0x591cd8.skinName.toLowerCase().replace("\n", " ").includes(a0_0x1669d8.textFilter.toLowerCase()));
  a0_0x541c8c.prototype.updatePurchasesFilter(_0x27d06, _0x3671b2, _0x4ac878, _0x20dc59);
};
a0_0x541c8c.prototype.updatePurchasesFilter = function (_0x584444, _0x52d3c8, _0x205bcc, _0x5d3dd4) {
  var _0x55e182 = Math.ceil(_0x205bcc.length / 4);
  _0x584444.setAttribute("data-pages", _0x55e182);
  _0x584444.setAttribute("data-curPage", 0);
  _0x584444.style.width = _0x55e182 * 530 + "px";
  _0x52d3c8.innerHTML = "Page: 1 of " + _0x55e182;
  for (let _0x19fcaf = 0; _0x19fcaf < _0x5d3dd4.length; _0x19fcaf++) {
    const _0x3b03e8 = _0x5d3dd4[_0x19fcaf];
    const _0x56f8c8 = _0x205bcc.includes(_0x3b03e8);
    const _0x2b0358 = _0x584444.querySelector(".data-index-" + _0x19fcaf);
    if (_0x2b0358) {
      _0x2b0358.style.display = _0x56f8c8 ? "block" : "none";
    }
  }
};
a0_0x541c8c.prototype.createMyAnimalsTab = function (_0x15a269, _0xa88a93, _0xdabfe4) {
  var _0x3eadd4 = {
    name: "myAnimals"
  };
  var _0x444b82 = a0_0xfa272f("li", _0x3eadd4.name, "title");
  _0x444b82.innerHTML = "MY FEATURES";
  _0x444b82.onclick = function () {
    a0_0x1669d8.curTabPage = 0;
    if (!a0_0x280dc0()) {
      a0_0x1669d8.showLoginScreen();
      return;
    }
    a0_0x1669d8.showTab(this.id);
  };
  _0x15a269.appendChild(_0x444b82);
  var _0x33449f = a0_0xfa272f("div", "tab-" + _0x3eadd4.name, "tab");
  var _0x15b29c = a0_0xfa272f("div", undefined, "content");
  var _0x4087e6 = a0_0xfa272f("div", undefined, "content-inner");
  var _0x623f95 = a0_0xfa272f("div", "content-items-" + _0x3eadd4.name, "content-items");
  _0x4087e6.append(_0x623f95);
  if (_0x3eadd4.name == "Coins") {
    _0x623f95.style.width = "615px";
  } else {
    _0x623f95.style.width = "530px";
  }
  _0x15b29c.append(_0x4087e6);
  _0x15b29c.append(a0_0xfa272f("div", "", "separator"));
  _0x4087e6.append(a0_0xfa272f("div", "", "separator"));
  _0x623f95.append(a0_0xfa272f("div", "", "separator"));
  _0x33449f.append(_0x15b29c);
  _0x33449f.append(a0_0xfa272f("div", "", "separator"));
  _0xa88a93.appendChild(_0x33449f);
  var _0x515a64 = a0_0xfa272f("div", "left-" + _0x3eadd4.name, "left");
  var _0x4302e7 = a0_0xfa272f("div", "pages-" + _0x3eadd4.name, "content-items-pages");
  var _0x360537 = a0_0xfa272f("div", "right-" + _0x3eadd4.name, "right");
  _0x360537.onclick = function () {
    a0_0x1669d8.scrollItems(this, true);
  };
  _0x515a64.onclick = function () {
    a0_0x1669d8.scrollItems(this, false);
  };
  _0x4087e6.append(_0x623f95);
  if (_0xdabfe4.length > 0) {
    _0x4087e6.className += " w530";
    var _0x4dc91d = Math.ceil(_0xdabfe4.length / 4);
    _0x623f95.setAttribute("data-pages", _0x4dc91d);
    _0x623f95.setAttribute("data-curPage", 0);
    _0x623f95.style.width = _0x4dc91d * 530 + "px";
    _0x4302e7.innerHTML = "Page: 1 of " + _0x4dc91d;
    for (i = 0; i < _0xdabfe4.length; i++) {
      var _0x17ae40 = _0xdabfe4[i];
      _0x623f95.appendChild(_0x17ae40.generateHtml());
    }
    _0x15b29c.append(_0x515a64);
    _0x15b29c.append(_0x4087e6);
    _0x15b29c.append(_0x360537);
    _0x15b29c.append(_0x4302e7);
  } else {
    var _0x2edfd7 = a0_0x1cbc41("div", "nopurchases");
    _0x2edfd7.innerHTML = "You don't have any item to show here!";
    _0x4087e6.append(_0x2edfd7);
    _0x15b29c.append(_0x4087e6);
  }
};
a0_0x541c8c.prototype.createMyDealsTab = function (_0x3c948a, _0x59e7e9, _0x4e34e4) {
  var _0x4879f6 = {
    name: "myDeals"
  };
  var _0x2480f2 = a0_0xfa272f("li", _0x4879f6.name, "title");
  _0x2480f2.innerHTML = "MY DEALS";
  _0x2480f2.onclick = function () {
    a0_0x1669d8.curTabPage = 0;
    if (!a0_0x280dc0()) {
      a0_0x1669d8.showLoginScreen();
      return;
    }
    a0_0x1669d8.showTab(this.id);
  };
  _0x3c948a.appendChild(_0x2480f2);
  var _0x371ff3 = a0_0xfa272f("div", "tab-" + _0x4879f6.name, "tab");
  var _0x56078d = a0_0xfa272f("div", undefined, "content");
  var _0x25a5c7 = a0_0xfa272f("div", undefined, "content-inner");
  var _0x213585 = a0_0xfa272f("div", "content-items-" + _0x4879f6.name, "content-items");
  _0x25a5c7.append(_0x213585);
  if (_0x4879f6.name == "Coins") {
    _0x213585.style.width = "615px";
  } else {
    _0x213585.style.width = "530px";
  }
  _0x56078d.append(_0x25a5c7);
  _0x56078d.append(a0_0xfa272f("div", "", "separator"));
  _0x25a5c7.append(a0_0xfa272f("div", "", "separator"));
  _0x213585.append(a0_0xfa272f("div", "", "separator"));
  _0x371ff3.append(_0x56078d);
  _0x371ff3.append(a0_0xfa272f("div", "", "separator"));
  _0x59e7e9.appendChild(_0x371ff3);
  var _0x364b3f = a0_0xfa272f("div", "left-" + _0x4879f6.name, "left");
  var _0x1bbb34 = a0_0xfa272f("div", "pages-" + _0x4879f6.name, "content-items-pages");
  var _0x280733 = a0_0xfa272f("div", "right-" + _0x4879f6.name, "right");
  _0x280733.onclick = function () {
    a0_0x1669d8.scrollItems(this, true);
  };
  _0x364b3f.onclick = function () {
    a0_0x1669d8.scrollItems(this, false);
  };
  _0x25a5c7.append(_0x213585);
  if (_0x4e34e4.length > 0) {
    _0x25a5c7.className += " w530";
    var _0x3f37d3 = Math.ceil(_0x4e34e4.length / 2);
    _0x213585.setAttribute("data-pages", _0x3f37d3);
    _0x213585.setAttribute("data-curPage", 0);
    _0x213585.style.width = _0x3f37d3 * 530 + "px";
    _0x1bbb34.innerHTML = "Page: 1 of " + _0x3f37d3;
    for (i = 0; i < _0x4e34e4.length; i++) {
      var _0x4c42fc = _0x4e34e4[i];
      _0x213585.appendChild(_0x4c42fc.generateHtml());
    }
    _0x56078d.append(_0x364b3f);
    _0x56078d.append(_0x25a5c7);
    _0x56078d.append(_0x280733);
    _0x56078d.append(_0x1bbb34);
  } else {
    var _0xf177e6 = a0_0x1cbc41("div", "nopurchases");
    _0xf177e6.innerHTML = "You don't have any item to show here!";
    _0x25a5c7.append(_0xf177e6);
    _0x56078d.append(_0x25a5c7);
  }
};
a0_0x541c8c.prototype.createMySettingsTab = function (_0x2b5d67, _0x319a0c, _0x1cbc91) {
  var _0x2a814a = {
    name: "mySettings"
  };
  var _0x3aff04 = a0_0xfa272f("li", _0x2a814a.name, "title");
  _0x3aff04.innerHTML = "SETTINGS";
  _0x3aff04.onclick = function () {
    a0_0x1669d8.curTabPage = 0;
    if (!a0_0x280dc0()) {
      a0_0x1669d8.showLoginScreen();
      return;
    }
    a0_0x1669d8.showTab(this.id);
  };
  _0x2b5d67.appendChild(_0x3aff04);
  var _0x54dcea = a0_0xfa272f("div", "tab-" + _0x2a814a.name, "tab");
  var _0x8f3f48 = a0_0xfa272f("div", undefined, "content");
  var _0x1f152c = a0_0xfa272f("div", undefined, "content-inner");
  var _0x4f02ff = a0_0xfa272f("div", "content-items-" + _0x2a814a.name, "content-items");
  _0x1f152c.append(_0x4f02ff);
  _0x8f3f48.append(_0x1f152c);
  _0x8f3f48.append(a0_0xfa272f("div", "", "separator"));
  _0x1f152c.append(a0_0xfa272f("div", "", "separator"));
  _0x4f02ff.append(a0_0xfa272f("div", "", "separator"));
  _0x54dcea.append(_0x8f3f48);
  _0x54dcea.append(a0_0xfa272f("div", "", "separator"));
  _0x319a0c.appendChild(_0x54dcea);
  _0x1f152c.append(_0x4f02ff);
  if (_0x1cbc91 && _0x1cbc91.length > 0) {
    for (i = 0; i < _0x1cbc91.length; i++) {
      var _0x368c03 = _0x1cbc91[i];
      var _0x510c90 = a0_0xfa272f("div", undefined, "fileddiv");
      var _0x1d1eb7 = a0_0xfa272f("div", undefined, "field-label");
      var _0x18ea39 = a0_0xfa272f("div", undefined, "field-value");
      var _0x1ba59f = _0x368c03.value == -1 ? "BUY" : _0x368c03.value == 0 ? "EQUIP" : "UNEQUIP";
      var _0x6eb8e8 = a0_0xfa272f("div", "action_" + _0x368c03.handle, "field-action " + _0x1ba59f);
      _0x6eb8e8.setAttribute("data-actionid", "action_" + _0x368c03.handle);
      _0x6eb8e8.setAttribute("data-handle", _0x368c03.handle);
      if (_0x368c03.value == -1) {
        _0x6eb8e8.onclick = function () {
          if (!a0_0x280dc0()) {
            a0_0x1669d8.showLoginScreen();
          } else {
            var _0x1b79f0 = a0_0x1669d8.getItemByName($(this).data("handle"));
            if (_0x1b79f0 != null) {
              a0_0x1669d8.buyConfirmationOverlay(_0x1b79f0);
            }
          }
        };
        _0x18ea39.setAttribute("width", "300px");
        _0x6eb8e8.title = _0x6eb8e8.innerHTML = "CLICK HERE TO BUY THIS ITEM";
      } else if (_0x368c03.type == "clicktoview") {
        _0x6eb8e8.innerHTML = !_0x368c03.visible ? "*******" : _0x368c03.value;
        _0x6eb8e8.title = !_0x368c03.visible ? "CLICK TO VIEW" : "CLICK TO HIDE";
        _0x6eb8e8.setAttribute("data-value", _0x368c03.value);
        _0x6eb8e8.setAttribute("data-visible", _0x368c03.visible == true);
        _0x6eb8e8.onclick = function () {
          var _0x39c264 = $(this).data("visible");
          if (!_0x39c264) {
            $(this).html($(this).data("value"));
            $(this).data("visible", true);
          } else {
            $(this).html("*******");
            $(this).data("visible", false);
          }
        };
      } else if (_0x368c03.type == "action") {
        _0x6eb8e8.onclick = function () {
          a0_0x1669d8.playerSettings_update($(this).data("handle"));
        };
        _0x6eb8e8.innerHTML = _0x368c03.value == 0 ? "EQUIP" : "UNEQUIP";
        _0x6eb8e8.title = _0x368c03.value == 0 ? "CLICK TO EQUIP" : "CLICK TO UNEQUIP";
      } else if (_0x368c03.type == "display") {
        var _0x134d8e = "" + _0x368c03.value;
        _0x6eb8e8.innerHTML = _0x134d8e == "null" ? 0 : _0x134d8e;
      }
      _0x1d1eb7.innerHTML = _0x368c03.label;
      _0x18ea39.appendChild(_0x6eb8e8);
      _0x510c90.appendChild(_0x1d1eb7);
      _0x510c90.appendChild(_0x18ea39);
      _0x4f02ff.appendChild(_0x510c90);
    }
    _0x4f02ff.style.width = "530px";
  } else {
    var _0x562886 = a0_0x1cbc41("div", "nopurchases");
    _0x562886.innerHTML = "You don't have any item to show here!";
    _0x1f152c.append(_0x562886);
    _0x8f3f48.append(_0x1f152c);
  }
};
a0_0x541c8c.prototype.getItemByName = function (_0x38aefd) {
  if (this.shop.allItems) {
    for (i = 0; i < this.shop.allItems.length; i++) {
      if (this.shop.allItems[i].itemId == _0x38aefd) {
        return this.shop.allItems[i];
      }
    }
  }
  return null;
};
a0_0x541c8c.prototype.deleteTab = function () {
  var _0x2c40c4 = document.getElementById("shop_div");
  if (_0x2c40c4) {
    _0x2c40c4.parentNode.removeChild(_0x2c40c4);
  }
};
a0_0x541c8c.prototype.getShopFilters = function () {};
a0_0x541c8c.prototype.skinsInterface = function () {
  this.deleteTab();
  var _0x40c2f2 = a0_0x1cbc41("shop_div", "");
  var _0x1540a0 = a0_0xfa272f("ul");
  _0x40c2f2.appendChild(_0x1540a0);
  this.addCloseButton2(_0x1540a0);
  this.addBackButton(_0x1540a0);
  for (t = 0; t < this.shop.skins.length; t++) {
    var _0x2cbffb = this.shop.skins[t];
    var _0x287f35 = a0_0xfa272f("li", _0x2cbffb.name, "title");
    var _0x52e0af = a0_0xfa272f("a");
    _0x287f35.innerHTML = _0x2cbffb.name;
    _0x52e0af.setAttribute("href", "#tab-" + _0x2cbffb.name);
    _0x287f35.onclick = function () {
      a0_0x1669d8.curTabPage = 0;
      a0_0x1669d8.showTab(this.id);
      a0_0x2a8a64();
    };
    _0x1540a0.appendChild(_0x287f35);
    var _0x1958ef = a0_0xfa272f("div", "tab-" + _0x2cbffb.name, "tab");
    var _0x5909a8 = a0_0xfa272f("div", undefined, "content");
    var _0x23d1f3 = a0_0xfa272f("div", undefined, "content-inner w530");
    var _0x539394 = a0_0xfa272f("div", "item-filters", "item-filters");
    var _0xf1055a = a0_0xfa272f("div", "content-items-" + _0x2cbffb.name, "content-items");
    var _0x2f06b2 = a0_0xfa272f("div", "left-" + _0x2cbffb.name, "left");
    var _0x1f6160 = a0_0xfa272f("div", "left-" + _0x2cbffb.name, "right");
    var _0x3dfa80 = a0_0xfa272f("div", "pages-" + _0x2cbffb.name, "content-items-pages");
    if (this.item_filter == undefined) {
      this.item_filter = "all";
    }
    var _0x444757 = ["all", "new", "sale", "normal", "high-price", "low-price"];
    var _0x40eda7 = a0_0xfa272f("span", undefined, "filter-label");
    _0x40eda7.innerHTML = "Filter: ";
    _0x539394.appendChild(_0x40eda7);
    var _0x2509fb = [];
    for (i = 0; i < _0x2cbffb.items.length; i++) {
      var _0x23ddc4 = _0x2cbffb.items[i];
      if (!_0x23ddc4.data.canBuy) {
        continue;
      }
      if (a0_0x541c8c.prototype.shop.ownedSkins[_0x23ddc4.id]) {
        continue;
      }
      if (a0_0x541c8c.prototype.shop.ownedAnimals[_0x23ddc4.id]) {
        continue;
      }
      if (a0_0x541c8c.prototype.shop.ownedDeals[_0x23ddc4.id]) {
        continue;
      }
      if (this.item_filter == "all") {
        _0x2509fb.push(_0x23ddc4);
      } else if (this.item_filter == "new" && _0x23ddc4.saleType == 1) {
        _0x2509fb.push(_0x23ddc4);
      } else if (this.item_filter == "sale" && _0x23ddc4.saleType == 2) {
        _0x2509fb.push(_0x23ddc4);
      } else if (this.item_filter == "normal" && _0x23ddc4.saleType == 0) {
        _0x2509fb.push(_0x23ddc4);
      } else if (this.item_filter == "high-price" || this.item_filter == "low-price") {
        _0x2509fb.push(_0x23ddc4);
      }
    }
    if (this.item_filter == "low-price") {
      var _0x4988ae = _0x2509fb.slice(0);
      _0x4988ae.sort(function (_0x257a35, _0x4e6419) {
        return _0x257a35.price - _0x4e6419.price;
      });
      _0x2509fb = _0x4988ae;
    } else if (this.item_filter == "high-price") {
      var _0x5da324 = _0x2509fb.slice(0);
      _0x5da324.sort(function (_0x26917c, _0x268c0a) {
        return _0x268c0a.price - _0x26917c.price;
      });
      _0x2509fb = _0x5da324;
    }
    _0x23d1f3.append(_0xf1055a);
    var _0x42a0b6 = 4;
    if (_0x2cbffb.name == "Deals") {
      _0x42a0b6 = 2;
    }
    var _0x5d407d = Math.ceil(_0x2509fb.length / _0x42a0b6);
    for (i = 0; i < _0x444757.length; i++) {
      var _0x40eda7 = a0_0xfa272f("span", undefined, "filter " + (this.item_filter == _0x444757[i] ? "selected" : "") + " filter-" + _0x444757[i]);
      _0x40eda7.setAttribute("data-filter", _0x444757[i]);
      _0x40eda7.setAttribute("data-tab", _0x2cbffb.name);
      _0x40eda7.innerHTML = _0x444757[i];
      _0x40eda7.onclick = function () {
        a0_0x1669d8.item_filter = $(this).data("filter");
        a0_0x1669d8.selectedTab = $(this).data("tab");
        a0_0x1669d8.skinsInterface();
        a0_0x1669d8.setVisiblePage(a0_0x1669d8.selectedTab, 0);
        a0_0x1669d8.showTab(a0_0x1669d8.selectedTab);
      };
      _0x539394.appendChild(_0x40eda7);
    }
    _0x1f6160.onclick = function () {
      a0_0x1669d8.scrollItems(this, true);
    };
    _0x2f06b2.onclick = function () {
      a0_0x1669d8.scrollItems(this, false);
    };
    _0xf1055a.setAttribute("data-pages", _0x5d407d);
    _0xf1055a.setAttribute("data-curPage", 0);
    if (_0x2cbffb.name == "Coins") {
      _0xf1055a.style.width = "615px";
    } else {
      _0xf1055a.style.width = _0x5d407d * 530 + "px";
    }
    _0x3dfa80.innerHTML = "Page: 1 of " + _0x5d407d;
    if (_0x2cbffb.items.length > 0) {
      _0x5909a8.append(_0x539394);
      if (_0x2509fb.length > 0) {
        for (i = 0; i < _0x2509fb.length; i++) {
          var _0x23ddc4 = _0x2509fb[i];
          _0xf1055a.appendChild(_0x23ddc4.generateHtml());
        }
        _0x5909a8.append(_0x2f06b2);
        _0x5909a8.append(_0x23d1f3);
        _0x5909a8.append(_0x1f6160);
        _0x5909a8.append(_0x3dfa80);
      } else {
        var _0xf19222 = a0_0x1cbc41("div", "nopurchases");
        _0xf19222.innerHTML = "No items to show with this filter!";
        _0x23d1f3.append(_0xf19222);
        _0x5909a8.append(_0x23d1f3);
      }
    } else {
      var _0xf19222 = a0_0x1cbc41("div", "nopurchases");
      _0xf19222.innerHTML = "You don't have any item to show here!";
      _0x23d1f3.append(_0xf19222);
      _0x5909a8.append(_0x23d1f3);
    }
    _0x5909a8.append(a0_0xfa272f("div", "", "separator"));
    _0x23d1f3.append(a0_0xfa272f("div", "", "separator"));
    _0xf1055a.append(a0_0xfa272f("div", "", "separator"));
    _0x1958ef.append(_0x5909a8);
    _0x1958ef.append(a0_0xfa272f("div", "", "separator"));
    _0x40c2f2.appendChild(_0x1958ef);
  }
  this.showUserExpBarAndCoinsBalance(_0x1540a0);
  _0x40c2f2.append(a0_0xfa272f("div", "", "separator"));
  this.shopDiv.appendChild(_0x40c2f2);
  this.showTab(this.selectedTab);
};
a0_0x541c8c.prototype.dealsInterface = function () {
  this.deleteTab();
  var _0x167403 = a0_0x1cbc41("shop_div", "boxshadow");
  var _0x4ae9c3 = a0_0xfa272f("ul");
  _0x167403.appendChild(_0x4ae9c3);
  this.addCloseButton2(_0x4ae9c3);
  this.addBackButton(_0x4ae9c3);
  for (t = 0; t < this.shop.skins.length; t++) {
    var _0x1de3c2 = this.shop.skins[t];
    var _0x2a442d = a0_0xfa272f("li", _0x1de3c2.name, "title");
    var _0x1fea78 = a0_0xfa272f("a");
    _0x2a442d.innerHTML = _0x1de3c2.name;
    _0x1fea78.setAttribute("href", "#tab-" + _0x1de3c2.name);
    _0x2a442d.onclick = function () {
      a0_0x1669d8.curTabPage = 0;
      a0_0x1669d8.showTab(this.id);
      a0_0x2a8a64();
    };
    _0x4ae9c3.appendChild(_0x2a442d);
    var _0x24121b = a0_0xfa272f("div", "tab-" + _0x1de3c2.name, "tab");
    var _0x1393d8 = a0_0xfa272f("div", undefined, "content");
    var _0x8f4c57 = a0_0xfa272f("div", undefined, "content-inner w530");
    var _0x22fb55 = a0_0xfa272f("div", "content-items-" + _0x1de3c2.name, "content-items");
    var _0x2b33cc = a0_0xfa272f("div", "left-" + _0x1de3c2.name, "left");
    var _0x414469 = a0_0xfa272f("div", "pages-" + _0x1de3c2.name, "content-items-pages");
    var _0x1e3821 = a0_0xfa272f("div", "left-" + _0x1de3c2.name, "right");
    _0x1e3821.onclick = function () {
      a0_0x1669d8.scrollItems(this, true);
    };
    _0x2b33cc.onclick = function () {
      a0_0x1669d8.scrollItems(this, false);
    };
    _0x8f4c57.append(_0x22fb55);
    var _0x5851f4 = Math.ceil(_0x1de3c2.items.length / 2);
    _0x22fb55.setAttribute("data-pages", _0x5851f4);
    _0x22fb55.setAttribute("data-curPage", 0);
    if (_0x1de3c2.name == "Coins") {
      _0x22fb55.style.width = "615px";
    } else {
      _0x22fb55.style.width = _0x5851f4 * 530 + "px";
    }
    _0x414469.innerHTML = "Page: 1 of " + _0x5851f4;
    for (i = 0; i < _0x1de3c2.items.length; i++) {
      var _0x325634 = _0x1de3c2.items[i];
      _0x22fb55.appendChild(_0x325634.generateHtml());
    }
    _0x1393d8.append(_0x2b33cc);
    _0x1393d8.append(_0x8f4c57);
    _0x1393d8.append(_0x1e3821);
    _0x1393d8.append(_0x414469);
    _0x1393d8.append(a0_0xfa272f("div", "", "separator"));
    _0x8f4c57.append(a0_0xfa272f("div", "", "separator"));
    _0x22fb55.append(a0_0xfa272f("div", "", "separator"));
    _0x24121b.append(_0x1393d8);
    _0x24121b.append(a0_0xfa272f("div", "", "separator"));
    _0x167403.appendChild(_0x24121b);
  }
  this.showUserExpBarAndCoinsBalance(_0x4ae9c3);
  _0x167403.append(a0_0xfa272f("div", "", "separator"));
  this.shopDiv.appendChild(_0x167403);
  this.showTab(this.selectedTab);
};
a0_0x541c8c.prototype.props = {
  hatsColor: "",
  beardsColor: "",
  glassesColor: "",
  scarfsColor: ""
};
a0_0x541c8c.prototype.propBought = {
  hats: {
    white: 1,
    red: 0,
    green: 0,
    blue: 1,
    pink: 0,
    gold: 0
  },
  beards: {
    white: 0,
    red: 1,
    green: 0,
    blue: 0,
    pink: 0,
    gold: 1
  },
  glasses: {
    white: 0,
    red: 1,
    green: 1,
    blue: 0,
    pink: 0,
    gold: 0
  },
  scarfs: {
    white: 0,
    red: 1,
    green: 0,
    blue: 1,
    pink: 0,
    gold: 1
  }
};
a0_0x541c8c.prototype.hasBoughtProp = function (_0x366b60, _0x46114c) {
  var _0x4cdbde = this.propBought[_0x366b60][_0x46114c];
  if (_0x4cdbde === 1) {
    return true;
  }
  return false;
};
a0_0x541c8c.prototype.isPropSelected = function (_0x2f9119, _0x29f264) {
  var _0xbb3954 = this.getPropColorNum(_0x29f264);
  var _0x2b2093 = this.props[_0x2f9119 + "Color"];
  return _0x2b2093 === _0xbb3954;
};
a0_0x541c8c.prototype.showProp = function (_0x452a4a) {
  var _0x35e053 = document.getElementById("propDisplay");
  _0x35e053.style.display = "block";
  var _0xbd3a11 = document.getElementById("btn-" + _0x452a4a);
  if (_0xbd3a11) {
    var _0x533f80 = document.getElementById("btn-hats");
    var _0x47141e = document.getElementById("btn-glasses");
    var _0x217c55 = document.getElementById("btn-beards");
    var _0x15d74c = document.getElementById("btn-scarfs");
    _0x533f80.className = "clothingbtn";
    _0x47141e.className = "clothingbtn";
    _0x217c55.className = "clothingbtn";
    _0x15d74c.className = "clothingbtn";
    _0xbd3a11.className = "clothingbtn selected";
    var _0x82d439 = document.getElementById("propColors");
    _0x82d439.innerHTML = "";
    var _0x24b2f4 = a0_0xfa272f("div", "propColor-white", "propColor propColor-white" + (this.isPropSelected(_0x452a4a, "white") ? " selected" : "") + (this.hasBoughtProp(_0x452a4a, "white") ? " bought" : ""));
    var _0xd76367 = a0_0xfa272f("div", "propColor-red", "propColor propColor-red" + (this.isPropSelected(_0x452a4a, "red") ? " selected" : "") + (this.hasBoughtProp(_0x452a4a, "red") ? " bought" : ""));
    var _0x21f7aa = a0_0xfa272f("div", "propColor-green", "propColor propColor-green" + (this.isPropSelected(_0x452a4a, "green") ? " selected" : "") + (this.hasBoughtProp(_0x452a4a, "green") ? " bought" : ""));
    var _0x2a754f = a0_0xfa272f("div", "propColor-blue", "propColor propColor-blue" + (this.isPropSelected(_0x452a4a, "blue") ? " selected" : "") + (this.hasBoughtProp(_0x452a4a, "blue") ? " bought" : ""));
    var _0x45e5e2 = a0_0xfa272f("div", "propColor-pink", "propColor propColor-pink" + (this.isPropSelected(_0x452a4a, "pink") ? " selected" : "") + (this.hasBoughtProp(_0x452a4a, "pink") ? " bought" : ""));
    var _0x21ff5f = a0_0xfa272f("div", "propColor-gold", "propColor propColor-gold" + (this.isPropSelected(_0x452a4a, "gold") ? " selected" : "") + (this.hasBoughtProp(_0x452a4a, "gold") ? " bought" : ""));
    _0x24b2f4.appendChild(a0_0xfa272f("div", "", "color"));
    _0xd76367.appendChild(a0_0xfa272f("div", "", "color"));
    _0x21f7aa.appendChild(a0_0xfa272f("div", "", "color"));
    _0x2a754f.appendChild(a0_0xfa272f("div", "", "color"));
    _0x45e5e2.appendChild(a0_0xfa272f("div", "", "color"));
    _0x21ff5f.appendChild(a0_0xfa272f("div", "", "color"));
    _0x24b2f4.onclick = function () {
      a0_0x1669d8.setPropColor(_0x452a4a, "white");
    };
    _0xd76367.onclick = function () {
      a0_0x1669d8.setPropColor(_0x452a4a, "red");
    };
    _0x21f7aa.onclick = function () {
      a0_0x1669d8.setPropColor(_0x452a4a, "green");
    };
    _0x2a754f.onclick = function () {
      a0_0x1669d8.setPropColor(_0x452a4a, "blue");
    };
    _0x45e5e2.onclick = function () {
      a0_0x1669d8.setPropColor(_0x452a4a, "pink");
    };
    _0x21ff5f.onclick = function () {
      a0_0x1669d8.setPropColor(_0x452a4a, "gold");
    };
    _0x82d439.appendChild(_0x24b2f4);
    _0x82d439.appendChild(_0xd76367);
    _0x82d439.appendChild(_0x21f7aa);
    _0x82d439.appendChild(_0x2a754f);
    _0x82d439.appendChild(_0x45e5e2);
    _0x82d439.appendChild(_0x21ff5f);
    var _0x299716 = document.getElementById("propBuyDiv");
    _0x299716.innerHTML = "";
  }
};
a0_0x541c8c.prototype.propAnimal = null;
a0_0x541c8c.prototype.updatePropsForAnimal = function () {
  console.log(this.props);
  var _0x40ed23 = a0_0x4083f6;
  var _0x3a80b4 = a0_0xa5d548.createGameObjOfOType(a0_0x1370b8, _0x40ed23);
  _0x3a80b4.animalType = _0x40ed23;
  _0x3a80b4.animalSpecies = 0;
  _0x3a80b4.animalSubSpecies = 0;
  _0x3a80b4.animalPremiumSkin = 0;
  var _0x4b5cfd = a0_0x1cbc41("", "propimg");
  var _0x4b1b33 = a0_0x1cbc41("", "propimg");
  var _0x4e1f05 = a0_0x1cbc41("", "propimg");
  var _0x3c9d02 = a0_0x1cbc41("", "propimg");
  var _0x46b2c4 = a0_0x1cbc41("", "propimg");
  var _0x1dd5cb = document.getElementById("propAnimal");
  _0x1dd5cb.innerHTML = "";
  var _0x2a1f0f = "skins/" + _0x3a80b4.animalInfo().skinName + ".png";
  var _0xbc7b4b = "/props/" + _0x40ed23 + "/beards/" + this.props.beardsColor + ".png";
  var _0xc998e3 = "/props/" + _0x40ed23 + "/hats/" + this.props.hatsColor + ".png";
  var _0x4f6577 = "/props/" + _0x40ed23 + "/scarfs/" + this.props.scarfsColor + ".png";
  var _0x50dca5 = "/props/" + _0x40ed23 + "/glasses/" + this.props.glassesColor + ".png";
  console.log(_0xbc7b4b);
  _0x4b1b33.style.backgroundImage = "url(" + _0xbc7b4b + ")";
  _0x4b5cfd.style.backgroundImage = "url(" + _0x2a1f0f + ")";
  _0x4e1f05.style.backgroundImage = "url(" + _0xc998e3 + ")";
  _0x3c9d02.style.backgroundImage = "url(" + _0x4f6577 + ")";
  _0x46b2c4.style.backgroundImage = "url(" + _0x50dca5 + ")";
  _0x1dd5cb.appendChild(_0x4b1b33);
  _0x1dd5cb.appendChild(_0x4b5cfd);
  _0x1dd5cb.appendChild(_0x3c9d02);
  _0x1dd5cb.appendChild(_0x46b2c4);
  _0x1dd5cb.appendChild(_0x4e1f05);
};
a0_0x541c8c.prototype.getPropColorNum = function (_0x2a6d9c) {
  switch (_0x2a6d9c) {
    case "white":
      return 0;
    case "red":
      return 1;
    case "green":
      return 2;
    case "blue":
      return 3;
    case "pink":
      return 4;
    case "gold":
      return 5;
  }
};
a0_0x541c8c.prototype.setPropColor = function (_0x1bb5f0, _0xf230eb) {
  var _0xab7229 = _0x1bb5f0 + "Color";
  var _0x120c5b = document.getElementById("propColor-" + _0xf230eb);
  var _0x4819b4 = document.getElementById("propColor-red");
  var _0x51c9e4 = document.getElementById("propColor-green");
  var _0x3a02f5 = document.getElementById("propColor-blue");
  var _0x164294 = document.getElementById("propColor-pink");
  var _0x3a9ee6 = document.getElementById("propColor-white");
  var _0x1eeed0 = document.getElementById("propColor-gold");
  _0x4819b4.className = "propColor propColor-red" + (this.hasBoughtProp(_0x1bb5f0, "red") ? " bought" : "");
  _0x51c9e4.className = "propColor propColor-green" + (this.hasBoughtProp(_0x1bb5f0, "green") ? " bought" : "");
  _0x3a02f5.className = "propColor propColor-blue" + (this.hasBoughtProp(_0x1bb5f0, "blue") ? " bought" : "");
  _0x164294.className = "propColor propColor-pink" + (this.hasBoughtProp(_0x1bb5f0, "pink") ? " bought" : "");
  _0x3a9ee6.className = "propColor propColor-white" + (this.hasBoughtProp(_0x1bb5f0, "white") ? " bought" : "");
  _0x1eeed0.className = "propColor propColor-gold" + (this.hasBoughtProp(_0x1bb5f0, "gold") ? " bought" : "");
  var _0x32deee = document.getElementById("propBuyDiv");
  _0x32deee.innerHTML = "";
  var _0x1c8da2 = a0_0xfa272f("div", "propBuyBtn", "buybutton");
  _0x1c8da2.onclick = function () {
    alert("buy prop: " + _0x1bb5f0 + " color: " + _0xf230eb);
  };
  if (this.isPropSelected(_0x1bb5f0, _0xf230eb)) {
    this.props[_0xab7229] = "";
    _0x120c5b.className = "propColor propColor-" + _0xf230eb;
  } else {
    this.props[_0xab7229] = this.getPropColorNum(_0xf230eb);
    _0x120c5b.className = "propColor propColor-" + _0xf230eb + " selected";
    if (!this.hasBoughtProp(_0x1bb5f0, _0xf230eb)) {
      var _0x29e546 = new Image();
      _0x29e546.className = "buycoin-img";
      _0x29e546.src = "shop/mopecoin.png";
      var _0x3010b9 = a0_0xfa272f("span", "", "buycoin-price");
      _0x3010b9.innerHTML = 100 + this.getPropColorNum(_0xf230eb) * 100;
      _0x1c8da2.appendChild(_0x29e546);
      _0x1c8da2.appendChild(_0x3010b9);
      _0x32deee.appendChild(_0x1c8da2);
    }
  }
  this.updatePropsForAnimal();
};
a0_0x541c8c.prototype.addBackButton = function (_0x50d9f3) {
  var _0x356697 = a0_0xfa272f("li", "back", "title ");
  var _0x706b4b = new Image();
  _0x706b4b.src = "shop/back.png";
  _0x356697.appendChild(_0x706b4b);
  _0x356697.onclick = function () {
    a0_0x1669d8.showShopButtons();
  };
  _0x50d9f3.appendChild(_0x356697);
};
a0_0x541c8c.prototype.addCloseButton2 = function (_0x13c4d2) {
  var _0x58a5d9 = a0_0xfa272f("li", "closebtn", "title ");
  var _0x71e5f5 = new Image();
  _0x71e5f5.src = "shop/close.png";
  _0x58a5d9.appendChild(_0x71e5f5);
  _0x58a5d9.onclick = function () {
    a0_0x1b1184();
  };
  _0x13c4d2.appendChild(_0x58a5d9);
};
a0_0x541c8c.prototype.coinsInterface = function () {
  if (a0_0x4bd42e) {
    alert("COIN PURCHASE IS DISABLED ON BETA");
    return;
  }
  if (!a0_0x280dc0()) {
    a0_0x1669d8.showLoginScreen();
    return;
  }
  a0_0x44f6a9();
  return;
  this.deleteTab();
  var _0x4174ee = a0_0x1cbc41("shop_div", "");
  var _0x38c4a7 = a0_0xfa272f("ul");
  _0x4174ee.appendChild(_0x38c4a7);
  this.addCloseButton2(_0x38c4a7);
  this.addBackButton(_0x38c4a7);
  for (t = 0; t < this.shop.coins.length; t++) {
    var _0x3ccb44 = this.shop.coins[t];
    var _0x463f2f = a0_0xfa272f("li", _0x3ccb44.name, "title");
    _0x463f2f.innerHTML = _0x3ccb44.name;
    _0x463f2f.onclick = function () {
      a0_0x1669d8.showTab(this.id);
    };
    _0x38c4a7.appendChild(_0x463f2f);
    var _0x328831 = a0_0xfa272f("div", "tab-" + _0x3ccb44.name, "tab");
    var _0x524b78 = a0_0xfa272f("div", undefined, "content");
    var _0x4f3f69 = a0_0xfa272f("div", undefined, "content-inner");
    var _0x3388e0 = a0_0xfa272f("div", "content-items-" + _0x3ccb44.name, "content-items");
    var _0x57a5b1 = a0_0xfa272f("div", "left-" + _0x3ccb44.name, "left");
    var _0x587b31 = a0_0xfa272f("div", "pages-" + _0x3ccb44.name, "content-items-pages");
    var _0x52ab14 = a0_0xfa272f("div", "left-" + _0x3ccb44.name, "right");
    _0x52ab14.onclick = function () {
      a0_0x1669d8.scrollItems(this, true);
    };
    _0x57a5b1.onclick = function () {
      a0_0x1669d8.scrollItems(this, false);
    };
    _0x4f3f69.append(_0x3388e0);
    var _0x3fddd6 = Math.ceil(_0x3ccb44.items.length / 4);
    _0x3388e0.setAttribute("data-pages", _0x3fddd6);
    _0x3388e0.setAttribute("data-curPage", 0);
    if (_0x3ccb44.name == "Coins") {
      _0x3388e0.style.width = "615px";
    } else {
      _0x3388e0.style.width = _0x3fddd6 * 530 + "px";
    }
    _0x587b31.innerHTML = "Page: 1 of " + _0x3fddd6;
    for (i = 0; i < _0x3ccb44.items.length; i++) {
      var _0x5761ea = _0x3ccb44.items[i];
      _0x3388e0.appendChild(_0x5761ea.generateHtml());
    }
    _0x524b78.append(_0x4f3f69);
    _0x524b78.append(a0_0xfa272f("div", "", "separator"));
    _0x4f3f69.append(a0_0xfa272f("div", "", "separator"));
    _0x3388e0.append(a0_0xfa272f("div", "", "separator"));
    _0x328831.append(_0x524b78);
    _0x328831.append(a0_0xfa272f("div", "", "separator"));
    _0x4174ee.appendChild(_0x328831);
  }
  this.showUserExpBarAndCoinsBalance(_0x38c4a7);
  _0x4174ee.append(a0_0xfa272f("div", "", "separator"));
  this.shopDiv.appendChild(_0x4174ee);
  this.showTab("Coins");
};
a0_0x541c8c.prototype.curTabPage = 0;
a0_0x541c8c.prototype.setVisiblePage = function (_0x35fa8d, _0x26c02c) {
  var _0x55af0c = document.getElementById("pages-" + _0x35fa8d);
  if (!_0x55af0c) {
    return;
  }
  var _0x51e6a1 = "content-items-" + _0x35fa8d;
  var _0xb24471 = document.getElementById(_0x51e6a1);
  if (_0xb24471) {
    var _0xb6cd8c = _0xb24471.getAttribute("data-pages");
    _0xb24471.setAttribute("data-curPage", _0x26c02c);
    this.curTabPage = _0x26c02c;
    _0x55af0c.innerHTML = "Page: " + (_0x26c02c + 1) + " of " + _0xb6cd8c;
    var _0x2c8efe = _0x26c02c * -528;
    _0xb24471.style.left = _0x2c8efe + "px";
    _0xb24471.style.webkitAnimation = "";
  }
};
a0_0x541c8c.prototype.scrollItems = function (_0x7d1446, _0x7fb005) {
  var _0x386796 = _0x7d1446.id.split("-")[1];
  var _0x29e1af = "content-items-" + _0x386796;
  var _0x198c79 = document.getElementById(_0x29e1af);
  var _0x2c849c = _0x198c79.getAttribute("data-pages");
  var _0x33b941 = Number(_0x198c79.getAttribute("data-curPage"));
  if (_0x33b941 < _0x2c849c - 1 && _0x7fb005) {
    _0x33b941++;
  } else if (_0x33b941 > 0 && !_0x7fb005) {
    _0x33b941--;
  }
  this.setVisiblePage(_0x386796, _0x33b941);
};
a0_0x541c8c.prototype.version = 0.2;
a0_0x541c8c.prototype.onLogon = function () {
  console.log("MopeShop " + this.version + " onLogon");
  if (a0_0x368ea0) {
    var _0x16d3cb = document.getElementById("accountsDiv");
    if (_0x16d3cb) {
      var _0x223d96 = a0_0x1cbc41("profilePic", "profilePic");
      var _0x371494 = new Image();
      var _0x49b708 = a0_0x1cbc41("profileName", "profileName");
      _0x223d96.appendChild(_0x371494);
      if (a0_0x4aacaa) {
        _0x371494.src = a0_0x4aacaa;
      }
      _0x49b708.innerHTML = a0_0x485594;
      _0x16d3cb.appendChild(_0x223d96);
      var _0x510a40 = a0_0x473b10;
      var _0x23ade7 = a0_0xfa272f("div", "user-exp2", "user-exp");
      var _0x5cb9c4 = a0_0xfa272f("div", "userxp-bar2", "userxp-bar");
      var _0x5b071b = a0_0xfa272f("div", "userxp-barbar2", "userxp-barbar");
      var _0x30d9db = a0_0xfa272f("div", "userxp-val2", "userxp-val");
      var _0x1d579d = a0_0xfa272f("div", "userxp-star2", "userxp-star");
      var _0x18e6bc = 100;
      _0x30d9db.innerHTML = _0x18e6bc + " / " + _0x510a40.xpNextLvl;
      _0x18e6bc = _0x18e6bc / _0x510a40.xpNextLvl * 100;
      _0x5b071b.style.width = _0x18e6bc + "px";
      _0x1d579d.innerHTML = _0x510a40.level;
      _0x5cb9c4.appendChild(_0x5b071b);
      _0x23ade7.appendChild(_0x5cb9c4);
      _0x23ade7.appendChild(_0x30d9db);
      _0x23ade7.appendChild(_0x1d579d);
      var _0x30df87 = a0_0xfa272f("div", "coins-balance2", "coins-balance");
      var _0x3d25e7 = new Image();
      _0x3d25e7.src = "shop/mopecoin.png";
      _0x3d25e7.className = "buycoin-img";
      _0x30df87.appendChild(_0x3d25e7);
      var _0x1186b0 = a0_0xfa272f("div", "coins2", "coins");
      _0x1186b0.innerHTML = a0_0x3b7a9a();
      _0x30df87.appendChild(_0x1186b0);
      _0x30df87.setAttribute("title", "add more coins");
      _0x30df87.onclick = function () {
        a0_0x1b1184();
        a0_0x1669d8 = new a0_0x541c8c();
        a0_0x541c8c.prototype.callback = function () {
          this.coinsInterface();
          a0_0x541c8c.prototype.callback = null;
        };
        a0_0x1669d8.load();
      };
      var _0x332b17 = a0_0x1cbc41("userNameExpDiv", "userNameExpDiv");
      _0x332b17.appendChild(_0x49b708);
      _0x332b17.appendChild(a0_0x1cbc41(undefined, "clear"));
      _0x332b17.appendChild(_0x23ade7);
      _0x332b17.appendChild(a0_0x1cbc41(undefined, "clear"));
      _0x332b17.appendChild(_0x30df87);
      _0x16d3cb.appendChild(_0x332b17);
      _0x16d3cb.appendChild(a0_0x1cbc41(undefined, "clear"));
    }
  }
};
a0_0x541c8c.prototype.playerSettings_update = function (_0x362453) {
  console.log("update: " + _0x362453);
  a0_0x1669d8.removeBlockOverlay();
  a0_0x1669d8.blockOverlay();
  a0_0x48b746(_0x362453, function (_0xb61311, _0x5689aa) {
    if (_0xb61311) {
      a0_0x1fcf24("Settings updated successfully!", "success", 5);
      var _0x5aea11 = 1;
      _0x5aea11 += 1;
      if (a0_0x368ea0) {
        _0x5aea11 += a0_0x5162d0(a0_0x32758a).length + 2;
        _0x5aea11 += a0_0x5162d0(a0_0x3cda19).length + 2;
      }
      var _0x490c27 = new a0_0x49f976(_0x5aea11);
      _0x490c27.writeUInt8(71);
      _0x490c27.writeUInt8(a0_0x368ea0 ? 1 : 0);
      if (a0_0x368ea0) {
        _0x490c27.writeString(a0_0x32758a);
        _0x490c27.writeString(a0_0x3cda19);
      }
      a0_0x217e77(_0x490c27);
      a0_0x1622c(true);
      a0_0x367ad9();
    } else {
      switch (_0x5689aa) {
        case "alreadyowned":
          a0_0x1fcf24("AccountServer: item already purchased!", _0x5689aa, 15);
          break;
        case "cantafford":
          a0_0x1fcf24("AccountServer: not enough coins to buy this!", _0x5689aa, 15);
          break;
        case "urlnotfound":
          a0_0x1fcf24("AccountServer: Can't reach server at this moment!", "itemDoesntExist", 15);
          break;
      }
    }
    a0_0x1669d8.removeBlockOverlay();
  });
};
window.MopeShop = a0_0x541c8c;
var a0_0x1669d8 = new a0_0x541c8c();
var a0_0xf1c342 = document.getElementById("divButtons");
if (a0_0x368ea0) {
  a0_0xf1c342.style.display = "none";
} else {
  a0_0xf1c342.style.display = "block";
}
function a0_0x3726b6(_0x1a5ff6) {
  var _0x4a8ac4 = document.createElement("div");
  _0x4a8ac4.id = "shopOverlay";
  _0x4a8ac4.className = "shopOverlay center";
  var _0x9060de = document.createElement("div");
  _0x9060de.className = "shopOverlay_plzwait";
  _0x9060de.innerHTML = "Please wait...";
  _0x4a8ac4.appendChild(_0x9060de);
  var _0x283a79 = document.getElementsByTagName("body")[0];
  _0x283a79.prepend(_0x4a8ac4);
  if (_0x1a5ff6) {
    a0_0x1669d8.actionBtn = _0x1a5ff6;
  }
  a0_0x4ee28b();
}
function a0_0x483bce(_0x555f84) {
  var _0x1bc612 = a0_0xfa272f("input", "txtCopy");
  _0x1bc612.setAttribute("type", "text");
  _0x1bc612.setAttribute("value", _0x555f84);
  console.log(_0x1bc612);
  _0x1bc612.select();
  _0x1bc612.setSelectionRange(0, 99999);
  document.execCommand("copy");
  alert("Copied the text: " + _0x1bc612.value);
}
a0_0x1669d8.loadData();
a0_0x541c8c.prototype.getAnimalInfo = function (_0xe1450d, _0x83d88d) {
  switch (_0xe1450d) {
    case "sampleTestSkin":
      return [a0_0x4083f6, 250, "Sample Mouse", "land/mouse/250/mouse"];
    case "summer21_seamonster":
      return [a0_0x30bc31, 201, "Ancient Tortoise", "ocean/seamonster/201/seamonster"];
    case "summer21_puffer":
      return [a0_0x265cfd, 201, "Omniball Puffer", "ocean/pufferfish/201/pufferfish"];
    case "summer21_turtle":
      return [a0_0x58bf2a, 201, "Kiwi Turtle", "ocean/turtle/201/turtle"];
    case "summer21_octopus":
      return [a0_0x2aaf90, 201, "Fuchsia Tiger", "ocean/octopus/201/octopus.ui"];
    case "summer21_orca":
      return [a0_0x434da0, 201, "Lifeguard Orca", "ocean/killerwhale/201/killerwhale"];
    case "summer21_iceMonster":
      return [a0_0x415f2f, 201, "Cryo Coach Monster", "arctic/icemonster/201/icemonster"];
    case "summer21_mammoth":
      return [a0_0x2a957c, 201, "Lost Tourist", "arctic/mammoth/201/mammoth"];
    case "summer21_crab":
      return [a0_0xce170f, 201, "Coconut Crab", "ocean/crab/201/crab"];
    case "summer21_hare":
      return [a0_0x1218ca, 201, "Snow Cone Hare", "arctic/arctichare/201/arctichare"];
    case "summer21_shrimp":
      return [a0_0x722c30, 201, "Chef Shrimp", "ocean/shrimp/201/shrimp"];
    case "summer21_walrus":
      return [a0_0x6e4e18, 201, "Walrusmelon", "arctic/walrus/201/walrus"];
    case "summer21_squid":
      return [a0_0x464b86, 201, "Seacoast Squid", "ocean/squid/201/squid.ui"];
    case "summer21_fox":
      return [a0_0x2d73e5, 201, "Forest Sprit Fox", "arctic/arcticfox/201/arcticfox"];
    case "summer21_seal":
      return [a0_0x34beb5, 201, "Hawaiian Monk", "arctic/seal/201/seal"];
    case "summer21_wolf":
      return [a0_0x3bbebf, 201, "Pineapple Wolf", "arctic/wolf/201/wolf"];
    case "summer21_markhor":
      return [a0_0x59b734, 201, "Fruity Ice Markhor", "arctic/markhor/201/1/markhor"];
    case "summer21_warthog":
      return [a0_0x1ce2e4, 201, "Flame Tiki", "desert/warthog/201/warthog"];
    case "summer21_chicken":
      return [a0_0x402d5a, 201, "Countryside Chick", "land/chicken/201/chicken"];
    case "summer21_owl":
      return [a0_0xdf5a75, 201, "Snowy Owrigami", "arctic/snowyowl/201/snowyowl"];
    case "summer21_zebra":
      return [a0_0x4f39e9, 201, "Playground Zebra", "land/zebra/201/zebra"];
    case "summer21_croc":
      return [a0_0x20917b, 201, "Big Hoss", "land/croc/0/201/croc"];
    case "summer21_meerkat":
      return [a0_0x33cfa9, 201, "Scubakat", "desert/meerkat/201/meerkat"];
    case "summer21_rhino":
      return [a0_0x32eb58, 201, "Shrub Rhino", "land/rhino/201/rhino"];
    case "summer21_elephant":
      return [a0_0x4efb3c, 201, "Leiphant", "land/elephant/0/201/elephant"];
    case "summer21_pig":
      return [a0_0x3d5a13, 201, "Floaty Pig", "land/pig/201/pig"];
    case "summer21_camel":
      return [a0_0x303d9b, 201, "Balloon Warrior", "desert/camel/201/camel"];
    case "summer21_hyena":
      return [a0_0x4450f0, 201, "DJ Hyena", "desert/hyena/201/hyena"];
    case "summer21_gorilla":
      return [a0_0x18ddf3, 201, "Explorer Ape", "land/gorilla/0/201/gorilla"];
    case "summer21_squishyYeti":
      return [a0_0x38090e, 201, "Squishy Yeti", "arctic/yeti/201/yeti"];
    case "summer21_squishyKraken":
      return [a0_0x4e6cde, 201, "Squishy Kraken", "ocean/kraken/201/kraken"];
    case "summer21_squishyDragon":
      return [a0_0x256160, 201, "Squishy Dragon", "land/dragon/0/201/dragon"];
    case "summer21_mermaidWhale":
      return [a0_0x1132a8, 201, "Mermaid Whale", "ocean/bluewhale/0/201/bluewhale"];
    case "summer21_seafoamJellyfish":
      return [a0_0x574c01, 201, "Seafoam Jellyfish", "ocean/jellyfish/201/jellyfish"];
    case "summer21_bubblyMouse":
      return [a0_0x4083f6, 201, "Bubbly Mouse", "land/mouse/201/mouse"];
    case "summer21_surfboardChomper":
      return [a0_0x30aa6a, 201, "Surfboard Chomper", "ocean/shark/201/shark"];
    case "summer21_surferPenguin":
      return [a0_0x254dfc, 201, "Surfer Penguin", "arctic/penguin/201/penguin"];
    case "summer21_waterGunHorse":
      return [a0_0x1f8603, 201, "Water Gun Horse", "ocean/seahorse/201/seahorse"];
    case "summer21_sunburnReindeer":
      return [a0_0x563df4, 201, "Sunburn Reindeer", "arctic/reindeer/201/reindeer"];
    case "summer21_surfboardSwordfish":
      return [a0_0x9f5ea7, 201, "Surfboardfish", "ocean/swordfish/0/201/swordfish"];
    case "summer21_popsicleTrout":
      return [a0_0x5e41c4, 201, "Popsicle Trout", "ocean/trout/0/201/trout"];
    case "summer21_playfulChipmunk":
      return [a0_0x31fe5e, 201, "Playful Munk", "arctic/chipmunk/201/chipmunk"];
    case "summer21_fireworkOx":
      return [a0_0x1f838c, 201, "Fireworks Ox", "arctic/muskox/201/muskox"];
    case "summer21_chocolateStingray":
      return [a0_0x56d530, 201, "Chocolate Ray", "ocean/stingray/201/stingray.ui"];
    case "summer21_connoisseurBear":
      return [a0_0x162473, 201, "Cola Connoisseur", "arctic/bear/201/bear"];
    case "summer21_coralQueen":
      return [a0_0x1b4543, 201, "Coral Queen", "arctic/snowleopard/201/snowleopard"];
    case "summer21_strawbertoothTiger":
      return [a0_0x5510d8, 201, "Strawbertooth", "arctic/sabertooth/201/sabertooth"];
    case "skin_leatherBackTurtle":
      return [a0_0x58bf2a, 200, "Leather Back\nTurtle", "ocean/turtle/200/turtle"];
    case "skin_celestialCobra":
      return [a0_0x1bc37e, 200, "Celestial Cobra", "land/cobra/200/cobra"];
    case "skin_brazenBull":
      return [a0_0x1f838c, 200, "Brazen Bull", "arctic/muskox/200/muskox"];
    case "skin_luckyCharmMonster":
      return [a0_0x30bc31, 200, "Luckycharm Monster", "ocean/seamonster/200/seamonster"];
    case "skin_iceToucan":
      return [a0_0x22e8ad, 200, "Ice Toucan", "land/toucan/200/toucan"];
    case "skin_clowoudLion":
      return [a0_0x1a694e, 200, "Clowoud Lion", "land/lion/200/0/lion"];
    case "skin_sunsetClowoudLion":
      return [a0_0x1a694e, 200, "Sunset\nClowoud Lion", "land/lion/200/1/lion"];
    case "skin_stormClowoudLion":
      return [a0_0x1a694e, 200, "Storm\nClowoud Lion", "land/lion/200/2/lion"];
    case "skin_kaijuRex":
      return [a0_0xbf4f2c, 200, "Kaiju Rex", "land/trex/200/trex"];
    case "skin_warTHog":
      return [a0_0x1ce2e4, 200, "WarT. Hog", "desert/warthog/200/warthog"];
    case "skin_velvetChimp":
      return [a0_0x33a740, 200, "Velvet\nChipmunk", "desert/chipmunk/200/chipmunk"];
    case "skin_aquaPhoenix":
      return [a0_0x472c8a, 200, "Aqua Phoenix", "volcano/phoenix/200/0/phoenix"];
    case "skin_icePhoenix":
      return [a0_0x472c8a, 200, "Ice Phoenix", "volcano/phoenix/200/1/phoenix"];
    case "skin_ashPhoenix":
      return [a0_0x472c8a, 200, "Ash Phoenix", "volcano/phoenix/200/2/phoenix"];
    case "skin_redGiantPhoenix":
      return [a0_0x472c8a, 200, "Red Giant\nPhoenix", "volcano/phoenix/200/3/phoenix"];
    case "skin_goofyDragon":
      return [a0_0x256160, 200, "Goofy Dragon", "land/dragon/0/101/dragon"];
    case "skin_desertDragon":
      return [a0_0x256160, 200, "Desert Dragon", "land/dragon/0/102/dragon"];
    case "skin_forgeDragon":
      return [a0_0x256160, 200, "Forge Dragon", "land/dragon/0/103/dragon"];
    case "skin_mythicalSerpent":
      return [a0_0x256160, 200, "Mythical Serpent", "land/dragon/0/104/dragon"];
    case "skin_fireyDragon":
      return [a0_0x256160, 200, "Firey Dragon", "land/dragon/0/105/dragon"];
    case "skin_technoSaber":
      return [a0_0x5510d8, 200, "Techno\nSabertooth", "arctic/sabertooth/200/sabertooth"];
    case "skin_iceFox":
      return [a0_0x1a160c, 200, "Ice Fox", "arctic/arcticfox/200/arcticfox"];
    case "skin_clownfish":
      return [a0_0x5e41c4, 200, "Clownfish", "ocean/trout/0/200/trout"];
    case "skin_tullyMonster":
      return [a0_0x1f8603, 200, "Tully\nMonster", "ocean/seahorse/200/seahorse"];
    case "skin_vampireSquid":
      return [a0_0x2aaf90, 200, "Vampire\nSquid", "ocean/octopus/200/octopus"];
    case "skin_cuttlefish":
      return [a0_0x464b86, 200, "Cuttle Fish", "ocean/squid/200/squid"];
    case "skin_deluxeShrimp":
      return [a0_0x722c30, 200, "Deluxe\nShrimp", "ocean/shrimp/200/shrimp"];
    case "skin_monochromeRabbit":
      return [a0_0x151054, 200, "Monochrome\nRabbit", "land/rabbit/200/rabbit"];
    case "skin_nightFox":
      return [a0_0x2d73e5, 200, "Thief of\nThe Night", "land/fox/200/fox"];
    case "skin_plagueRaptor":
      return [a0_0x4a36ac, 200, "Plague\nRaptor", "land/peacock/200/peacock.ui"];
    case "skin_titanBison":
      return [a0_0x32203e, 200, "Titan Bison", "desert/bison/200/bison"];
    case "skin_dowagerVarande":
      return [a0_0x25f6dd, 200, "Dowager Varande", "desert/komododragon/200/0/komodo"];
    case "skin_emeprorVarande":
      return [a0_0x25f6dd, 200, "Emepror Varande", "desert/komododragon/200/1/komodo"];
    case "skin_rubyDevil":
      return [a0_0x15fd74, 200, "Ruby Devil", "land/dinomonster/200/dinomonster"];
    case "skin_metalicCrab":
      return [a0_0xce170f, 200, "Metallic Crab", "ocean/crab/200/crab"];
    case "skin_queenFlame":
      return [a0_0x9fe8e0, 200, "Queen Flame", "volcano/kingdragon/200/kingdragon"];
    case "halloween_wyrmous":
      return [a0_0x1bc37e, 100, "Wyrmous", "land/cobra/100/cobra"];
    case "halloween_equusthulhu":
      return [a0_0x41fd5c, 100, "Equusthulhu", "land/donkey/100/donkey"];
    case "halloween_frostaline":
      return [a0_0x1b4543, 100, "Frostaline", "arctic/snowleopard/100/snowleopard"];
    case "halloween_pufferMace":
      return [a0_0x265cfd, 100, "Puffermace", "ocean/pufferfish/100/pufferfish"];
    case "halloween_carnageodactyl":
      return [a0_0x47c97f, 100, "Carnageodactyl", "desert/pterodactyl/100/pterodactyl_ability"];
    case "halloween_mrDollar":
      return [a0_0xbf4f2c, 100, "Mr. Dollar", "land/trex/100/trex"];
    case "halloween_wendigoDeer":
      return [a0_0x31131a, 100, "The Wendigo", "land/deer/100/deer"];
    case "halloween_cactiRat":
      return [a0_0x2995a9, 100, "Cacti Rat", "desert/kangaroorat/100/kangaroorat"];
    case "halloween_hiPower":
      return [a0_0x93d1ea, 100, "Swampster", "land/hippo/100/hippo"];
    case "halloween_puumpkat":
      return [a0_0x33cfa9, 100, "Puumpkat", "desert/meerkat/100/meerkat"];
    case "halloween_doomedarius":
      return [a0_0x303d9b, 100, "The Doomedarius", "desert/camel/100/camel"];
    case "halloween_roboMouse":
      return [a0_0x4083f6, 100, "Robo Mouse", "land/mouse/100/mouse"];
    case "halloween_uncleSam":
      return [a0_0x20917b, 100, "Uncle Sam", "land/croc/0/100/croc"];
    case "halloween_zombieMole":
      return [a0_0x2347de, 100, "Zombie Mole", "land/mole/100/mole"];
    case "halloween_flammyHart":
      return [a0_0x4b0faa, 100, "Flammy Hart", "desert/gazelle/100/gazelle"];
    case "halloween_gummyViper":
      return [a0_0x240c0c, 100, "Gummy Viper", "desert/rattlesnake/100/rattlesnake"];
    case "halloween_grimRipper":
      return [a0_0x18ddf3, 100, "Grim Reaper", "land/gorilla/0/100/gorilla"];
    case "halloween_bigCookie":
      return [a0_0x54d85e, 100, "Big Cookie", "land/bigcat/100/bigcat"];
    case "halloween_gargolgon":
      return [a0_0x256160, 100, "The Gargon", "land/dragon/0/100/dragon"];
    case "halloween_candyRus":
      return [a0_0x6e4e18, 100, "Candy Rus", "arctic/walrus/100/walrus"];
    case "halloween_mantilian":
      return [a0_0x1a694e, 100, "The Mantilian", "land/lion/100/lion"];
    case "halloween_phantomRay":
      return [a0_0x56d530, 100, "Phantom Ray", "ocean/stingray/100/stingray"];
    case "halloween_suitedToucan":
      return [a0_0x22e8ad, 100, "The Dapper", "land/toucan/100/toucan"];
    case "halloween_vulgeist":
      return [a0_0x69c437, 100, "The Vulgeist", "desert/vulture/100/vulture"];
    case "halloween_burlone":
      return [a0_0x1ce2e4, 100, "The Burlone", "desert/warthog/100/warthog"];
    case "halloween_unicornze":
      return [a0_0x4f39e9, 100, "Unicornze", "land/zebra/100/zebra"];
    case "gold_blackDragon":
      return [a0_0x257f12, 1, "Golden\nBlack Dragon", "volcano/blackdragon/1/blackdragon"];
    case "gold_kingDragon":
      return [a0_0x9fe8e0, 1, "Golden\nKing Dragon", "volcano/kingdragon/1/kingdragon"];
    case "gold_Dragon":
      return [a0_0x256160, 1, "Golden\nDragon", "land/dragon/0/1/dragon"];
    case "gold_kraken":
      return [a0_0x4e6cde, 1, "Golden\nKraken", "ocean/kraken/1/kraken"];
    case "gold_yeti":
      return [a0_0x38090e, 1, "Golden\nYeti", "arctic/yeti/1/yeti"];
    case "gold_trex":
      return [a0_0xbf4f2c, 1, "Golden\nT.Rex", "land/trex/1/trex"];
    case "gold_kingCrab":
      return [a0_0x5f3a6f, 1, "Golden\nCrab", "ocean/kingcrab/1/kingcrab"];
    case "gold_phoenix":
      return [a0_0x472c8a, 1, "Golden\nPhoenix", "volcano/phoenix/1/phoenix"];
    case "gold_pterodactyl":
      return [a0_0x47c97f, 1, "Golden\nPterodactyl", "desert/pterodactyl/1/pterodactyl_ability"];
    case "gold_iceMonster":
      return [a0_0x415f2f, 1, "Golden\nIce Monster", "arctic/icemonster/1/icemonster"];
    case "gold_dinoMonster":
      return [a0_0x15fd74, 1, "Golden\nDino Monster", "land/dinomonster/1/dinomonster"];
    case "gold_seaMonster":
      return [a0_0x30bc31, 1, "Golden\nSea Monster", "ocean/seamonster/1/seamonster"];
    case "gold_landMonster":
      return [a0_0x1b4846, 1, "Golden\nLand Monster", "volcano/landmonster/0/1/landmonster"];
    case "gold_giantScorion":
      return [a0_0x527dbe, 1, "Golden\nGiant Scorpion", "desert/scorpion/1/giantscorpion"];
    case "gold_bluewhale":
      return [a0_0x1132a8, 1, "Golden\nBlue Whale", "ocean/bluewhale/0/1/bluewhale"];
    case "gold_elephant":
      return [a0_0x4efb3c, 1, "Golden\nElephant", "land/elephant/1/elephant"];
    case "gold_cassowary":
      return [a0_0x562756, 1, "Golden\nCassowary", "land/cassowary/1/cassowary"];
    case "gold_giantspider":
      return [a0_0x252dcd, 1, "Golden\nGiant Spider", "land/giantspider/1/giantspider"];
    case "gold_blackwidow":
      return [a0_0x2ed274, 1, "Golden\nBlackwidow", "desert/blackwidow/0/1/blackwidow"];
    case "gold_mammoth":
      return [a0_0x2a957c, 1, "Golden\nMammoth", "arctic/mammoth/1/mammoth"];
    case "gold_hippo":
      return [a0_0x93d1ea, 1, "Golden\nHippo", "land/hippo/1/hippo"];
    case "gold_ostrich":
      return [a0_0x33fa19, 1, "Golden\nOstrich", "land/ostrich/1/ostrich"];
    case "gold_boa":
      return [a0_0xbfada, 1, "Golden\nBoa", "land/boaconstrictor/1/boaconstrictor"];
    case "gold_komodo":
      return [a0_0x25f6dd, 1, "Golden\nKomodo", "desert/komododragon/1/komodo"];
    case "gold_killerwhale":
      return [a0_0x434da0, 1, "Golden\nKiller Whale", "ocean/killerwhale/1/killerwhale"];
    case "gold_sabertooth":
      return [a0_0x5510d8, 1, "Golden\nSabertooth", "arctic/sabertooth/1/sabertooth"];
    case "skin_blueDragon":
      return [a0_0x257f12, 2, "The\nAzure Bringer", "volcano/blackdragon/2/blackdragon"];
    case "skin_kingRipper":
      return [a0_0x9fe8e0, 2, "King\nRipper", "volcano/kingdragon/2/kingdragon"];
    case "skin_kingStan":
      return [a0_0x9fe8e0, 3, "King\nStan", "volcano/kingdragon/3/kingdragon"];
    case "skin_kingShah":
      return [a0_0x9fe8e0, 4, "King\nShah", "volcano/kingdragon/4/kingdragon"];
    case "skin_dragon_gray":
      return [a0_0x256160, 2, "Knight\nDragon", "land/dragon/0/2/dragon"];
    case "skin_kraken_cyan":
      return [a0_0x4e6cde, 2, "Chromatic\nKraken", "ocean/kraken/2/kraken"];
    case "skin_yeti_emerald":
      return [a0_0x38090e, 2, "Emerald\nYeti", "arctic/yeti/2/yeti"];
    case "skin_snowman":
      return [a0_0xb93d7c, 1, "The\nSnowman", "arctic/snowman/1/snowman"];
    case "skin_snowgirl":
      return [a0_0xb93d7c, 2, "The\nSnowgirl", "arctic/snowman/2/snowgirl"];
    case "skin_trex_gray":
      return [a0_0xbf4f2c, 2, "Ember\nT.Rex", "land/trex/2/trex"];
    case "skin_kingCrab":
      return [a0_0x5f3a6f, 2, "Amethyst\nCrab", "ocean/kingcrab/2/kingcrab"];
    case "skin_phoenix_blue":
      return [a0_0x472c8a, 2, "Alpha\nPhoenix", "volcano/phoenix/2/phoenix"];
    case "skin_pterodactyl_green":
      return [a0_0x47c97f, 2, "Emerald\nPterodactyl", "desert/pterodactyl/2/pterodactyl_ability"];
    case "skin_iceMonster":
      return [a0_0x415f2f, 2, "Amethyst\nMonster", "arctic/icemonster/2/icemonster"];
    case "skin_dinoMonster":
      return [a0_0x15fd74, 2, "Citrine\nMonster", "land/dinomonster/2/dinomonster"];
    case "skin_seaMonster":
      return [a0_0x30bc31, 2, "Sapphire\nMonster", "ocean/seamonster/2/seamonster"];
    case "skin_landMonster":
      return [a0_0x1b4846, 2, "Titanite\nMonster", "volcano/landmonster/0/2/landmonster"];
    case "skin_orangeScorpion":
      return [a0_0x527dbe, 2, "Carnelian\nScorpion", "desert/scorpion/2/giantscorpion"];
    case "skin_bluewhale":
      return [a0_0x1132a8, 2, "Albino\nBlue Whale", "ocean/bluewhale/0/2/bluewhale"];
    case "skin_elephant":
      return [a0_0x4efb3c, 2, "White\nElephant", "land/elephant/2/elephant"];
    case "skin_cassowary":
      return [a0_0x562756, 2, "Cotton\nCassowary", "land/cassowary/2/cassowary"];
    case "skin_giantspider":
      return [a0_0x252dcd, 2, "Goliath\nSpider", "land/giantspider/2/giantspider"];
    case "skin_blackwidow":
      return [a0_0x2ed274, 2, "Queen\nBlackwidow", "desert/blackwidow/0/2/blackwidow"];
    case "skin_mammoth":
      return [a0_0x2a957c, 2, "Black\nMammoth", "arctic/mammoth/2/mammoth"];
    case "skin_hippo":
      return [a0_0x93d1ea, 2, "Pygmy\nHippo", "land/hippo/2/hippo"];
    case "skin_ostrich":
      return [a0_0x33fa19, 2, "Ruffled\nOstrich", "land/ostrich/2/ostrich"];
    case "skin_boa":
      return [a0_0xbfada, 2, "Tree\nBoa", "land/boaconstrictor/2/boaconstrictor"];
    case "skin_komodo":
      return [a0_0x25f6dd, 2, "Night\nKomodo", "desert/komododragon/2/komodo"];
    case "skin_killerwhale":
      return [a0_0x434da0, 2, "Albino\nOrca", "ocean/killerwhale/2/killerwhale"];
    case "skin_sabertooth":
      return [a0_0x5510d8, 2, "Margala\nSabertooth", "arctic/sabertooth/2/sabertooth"];
    case "skin_tigerShark":
      return [a0_0x30aa6a, 2, "Tiger\nShark", "ocean/shark/1/shark"];
    case "skin_hamerHeadShark":
      return [a0_0x30aa6a, 3, "Hammerhead\nShark", "ocean/shark/2/shark"];
    case "skin_panda":
      return [a0_0x5a613b, 2, "Panda", "land/panda/panda"];
    case "skin_zonkey":
      return [a0_0x41fd5c, 3, "Zonkey", "land/donkey/2/zonkey"];
    case "skin_okapi":
      return [a0_0x4f39e9, 2, "Okapi", "land/okapi/okapi"];
    case "skin_giantCroc":
      return [a0_0x20917b, 1, "Giant\nCrocodile", "land/croc/0/1/croc"];
    case "skin_purpleMouse":
      return [a0_0x4083f6, 2, "Purple\nMouse", "land/mouse/2/mouse"];
    case "skin_prismaToucan":
      return [a0_0x22e8ad, 6, "Prisma\nToucan", "land/toucan/6/toucan"];
    case "gold_mouse":
      return [a0_0x4083f6, 1, "Golden\nMouse", "land/mouse/1/mouse"];
    case "skin_queenScarlet":
      return [a0_0x9fe8e0, 5, "Queen\nScarlet", "volcano/kingdragon/5/kingdragon"];
    case "skin_queenCeleste":
      return [a0_0x9fe8e0, 6, "Queen\nCeleste", "volcano/kingdragon/6/kingdragon"];
    case "skin_bigFoot":
      return [a0_0x579a5b, 1, "The\nBigfoot", "land/bigfoot/1/thebigfoot"];
    case "skin_woollyRhino":
      return [a0_0x32eb58, 3, "Woolly\nRhino", "land/rhino/3/rhino"];
    case "darkPlagueRat":
      return [a0_0x4083f6, 204, "Dark Plague\nRat", "land/mouse/204/0/mouse"];
    case "lightPlagueRat":
      return [a0_0x4083f6, 204, "Light Plague\nRat", "land/mouse/204/1/mouse"];
    case "carrotRabbit":
      return [a0_0x151054, 204, "Carrot\nRabbit", "land/rabbit/204/rabbit"];
    case "darkMatterCrab":
      return [a0_0xce170f, 204, "Dark Matter\nCrab", "ocean/crab/204/crab"];
    case "necromancerMeerkat":
      return [a0_0x33cfa9, 204, "Necromancer\nMeerkat", "desert/meerkat/204/meerkat"];
    case "butcherPig":
      return [a0_0x3d5a13, 204, "Butcher\nPig", "land/pig/204/0/pig"];
    case "hotdogPig":
      return [a0_0x3d5a13, 204, "Hot Dog\nPig", "land/pig/204/1/pig"];
    case "voidScuttlingSquid":
      return [a0_0x464b86, 204, "Void Scuttling\nSquid", "ocean/squid/204/squid"];
    case "spideer":
      return [a0_0x563df4, 204, "Spideer", "arctic/reindeer/204/reindeer"];
    case "blackAsuraFox":
      return [a0_0x2d73e5, 204, "Black Asura\nFox", "land/fox/204/fox"];
    case "candyCornWarthog":
      return [a0_0x1ce2e4, 204, "Candy Corn\nWarthog", "desert/warthog/204/warthog"];
    case "phantomGorilla":
      return [a0_0x18ddf3, 204, "Phantom\nGorilla", "land/gorilla/0/204/gorilla.ui"];
    case "martianLeopard":
      return [a0_0x1b4543, 204, "Martian\nLeopard", "arctic/snowleopard/204/snowleopard"];
    case "genieCheetah":
      return [a0_0x54d85e, 204, "Genie\nCheetah", "land/bigcat/204/cheetah"];
    case "chimeraTiger":
      return [a0_0x31e688, 204, "Chimera\nTiger", "land/tiger/204/tiger"];
    case "acidHusk":
      return [a0_0x69c437, 204, "Acid\nHusk", "desert/vulture/204/vulture"];
    case "acutiRhino":
      return [a0_0x32eb58, 204, "Acuti\nRhino", "land/rhino/204/rhino"];
    case "goldenDevilGoat":
      return [a0_0x59b734, 204, "Golden Devil\nGoat", "arctic/markhor/204/2/markhor"];
    case "sunHippo":
      return [a0_0x93d1ea, 204, "Sun\nHippo", "land/hippo/204/hippo"];
    case "smileSpider":
      return [a0_0x252dcd, 204, "Smile\nSpider", "land/giantspider/204/giantspider"];
    case "bloodwidowSpider":
      return [a0_0x2ed274, 204, "Bloodwidow\nSpider", "desert/blackwidow/0/204/blackwidow"];
    case "basiliskCassowary":
      return [a0_0x562756, 204, "Basilisk\nCassowary", "land/cassowary/204/cassowary"];
    case "magmaDragon":
      return [a0_0x256160, 204, "Magma\nDragon", "land/dragon/0/204/dragon"];
    case "plasmacoreKingCrab":
      return [a0_0x5f3a6f, 204, "Plasma-core King\nCrab", "ocean/kingcrab/204/kingcrab"];
    case "frostWolf":
      return [a0_0x38090e, 204, "Frost\nWolf", "arctic/yeti/204/yeti"];
    case "tartarusRex":
      return [a0_0xbf4f2c, 204, "Tartarus\nRex", "land/trex/204/trex"];
    case "cthulhuKraken":
      return [a0_0x4e6cde, 204, "Cthulhu\nKraken", "ocean/kraken/204/kraken"];
    case "necromus":
      return [a0_0x1b4846, 204, "Necromus", "volcano/landmonster/0/204landmonster"];
    case "planetEaterMonster":
      return [a0_0x1b4846, 204, "Planet Eater\nMonster", "volcano/landmonster/0/205/landmonster"];
    case "bloodCrystalMonster":
      return [a0_0x415f2f, 204, "Blood Crystal\nMonster", "arctic/icemonster/204/icemonster"];
    case "superMouse":
      return [a0_0x4083f6, 202, "Super Mouse", "land/mouse/202/mouse"];
    case "sushiShrimp":
      return [a0_0x722c30, 202, "Sushi Shrimp", "ocean/shrimp/202/shrimp"];
    case "plasmaRat":
      return [a0_0x2995a9, 202, "Plasma Rat", "desert/kangaroorat/202/kangaroorat"];
    case "chipmonk":
      return [a0_0x31fe5e, 202, "Chipmonk", "desert/chipmunk/202/chipmunk"];
    case "jackapole":
      return [a0_0x151054, 202, "Jackapole", "land/rabbit/202/0/rabbit"];
    case "thugPigeon":
      return [a0_0xc48b6, 202, "Thug Pigeon", "land/pigeon/202/pigeon"];
    case "royalGuppy":
      return [a0_0x5e41c4, 202, "Royal Guppy", "ocean/trout/0/202/trout"];
    case "hollowRabbit":
      return [a0_0x151054, 202, "Hollow Rabbit", "land/rabbit/202/1/rabbit"];
    case "ratMunk":
      return [a0_0x33a740, 202, "Ratmunk", "desert/chipmunk/202/chipmunk"];
    case "toxicMole":
      return [a0_0x2347de, 202, "Toxic Mole", "land/mole/202/0/mole"];
    case "lightningLord":
      return [a0_0x402d5a, 202, "Lightning Lord", "land/chicken/202/chicken"];
    case "ufoPigeon":
      return [a0_0x254dfc, 202, "UFO Pigeon", "arctic/penguin/202/penguin"];
    case "cytokineticMole":
      return [a0_0x2347de, 202, "Cytokinetic Mole", "land/mole/202/1/mole"];
    case "piggyBank":
      return [a0_0x3d5a13, 202, "Piggy Bank", "land/pig/202/pig"];
    case "jackhammer":
      return [a0_0xe8222c, 202, "Jackhammer", "land/woodpecker/202/woodpecker"];
    case "leafySeadragon":
      return [a0_0x1f8603, 202, "Leafy Seadragon", "ocean/seahorse/202/seahorse"];
    case "soapySeal":
      return [a0_0x34beb5, 202, "Soapy Seal", "arctic/seal/202/seal"];
    case "windupKakapo":
      return [a0_0x559bf8, 202, "Wind-up Kakapo", "forest/kakapo/202/kakapo"];
    case "mevazor":
      return [a0_0x31131a, 202, "Mevazor", "land/deer/202/0/deer"];
    case "flyMango":
      return [a0_0x17136b, 202, "Fly Mango", "ocean/flamingo/202/flamingo"];
    case "psychedelicSquid":
      return [a0_0x464b86, 202, "Psychedelic Squid", "ocean/squid/202/squid"];
    case "piebaldCosmos":
      return [a0_0x563df4, 202, "Piebald Cosmos", "arctic/reindeer/202/reindeer"];
    case "retroNeonGazelle":
      return [a0_0x4b0faa, 202, "Retro Neon Gazelle", "desert/gazelle/202/gazelle"];
    case "divineDeer":
      return [a0_0x31131a, 202, "Divine Deer", "land/deer/202/1/deer"];
    case "grassHedgehog":
      return [a0_0x313367, 202, "Grass Hedgehog", "land/hedgehog/202/hedgehog"];
    case "spectrumPeacock":
      return [a0_0x4a36ac, 202, "Spectrum Peacock", "land/peacock/202/peacock"];
    case "discoJellyfish":
      return [a0_0x574c01, 202, "Disco Jellyfish", "ocean/jellyfish/202/0/jellyfish"];
    case "iceFox":
      return [a0_0x1a160c, 202, "Ice Fox", "arctic/arcticfox/202/arcticfox"];
    case "fireFox":
      return [a0_0xffe9fd, 202, "Fire Fox", "desert/fennecfox/202/1/fennecfox"];
    case "muscipulaRaven":
      return [a0_0x5ab1f8, 202, "Muscipula Raven", "forest/raven/202/raven"];
    case "sneakyFox":
      return [a0_0x2d73e5, 202, "Sneaky Fox", "land/fox/202/fox"];
    case "twistedHorror":
      return [a0_0x574c01, 202, "Twisted Horror", "ocean/jellyfish/202/1/jellyfish"];
    case "purpleFireFox":
      return [a0_0xffe9fd, 202, "Purple Fire Fox", "desert/fennecfox/202/1/fennecfox"];
    case "synthZebra":
      return [a0_0x4f39e9, 202, "Synth Zebra", "land/zebra/202/zebra"];
    case "moltenGlassTurtle":
      return [a0_0x58bf2a, 202, "Molten Glass Turtle", "ocean/turtle/202/turtle"];
    case "monitorMuskox":
      return [a0_0x1f838c, 202, "Monitor Muskox", "arctic/muskox/202/muskox"];
    case "headlessMule":
      return [a0_0x41fd5c, 202, "Headless Mule", "land/donkey/202/donkey"];
    case "quilinGiraffe":
      return [a0_0x2adefe, 202, "Quilin Giraffe", "land/giraffe/202/0/giraffe"];
    case "etherStingray":
      return [a0_0x56d530, 202, "Ether Stingray", "ocean/stingray/202/0/stingray"];
    case "potatoWalrus":
      return [a0_0x6e4e18, 202, "Potato Walrus", "arctic/walrus/202/walrus"];
    case "fungalCamel":
      return [a0_0x303d9b, 202, "Fungal Camel", "desert/camel/202/camel"];
    case "draquorum":
      return [a0_0x2adefe, 202, "Draquorum", "land/giraffe/202/1/giraffe"];
    case "pancakeStingray":
      return [a0_0x56d530, 202, "Pancake Stingray", "ocean/stingray/202/1/stingray"];
    case "kongrilla":
      return [a0_0x18ddf3, 202, "Kongrilla", "land/gorilla/0/202/gorilla"];
    case "corpseFlowerToucan":
      return [a0_0x22e8ad, 202, "Corpse Flower Toucan", "land/toucan/202/toucan"];
    case "ballonPufferfish":
      return [a0_0x265cfd, 202, "Balloon Pufferfish", "ocean/pufferfish/202/pufferfish"];
    case "astralLeopard":
      return [a0_0x1b4543, 202, "Astral Leopard", "arctic/snowleopard/202/snowleopard"];
    case "cmykNeonCheetah":
      return [a0_0x54d85e, 202, "C.M.Y.K NeoN Cheetak", "land/bigcat/202/cheetah"];
    case "beekeeperBear":
      return [a0_0x5a613b, 202, "Beekeeper Bear", "land/bear/0/202/bear"];
    case "dalmatianPelican":
      return [a0_0x4e94e8, 202, "Dalmatian Pelican", "ocean/pelican/202/pelican"];
    case "rocketSwordfish":
      return [a0_0x9f5ea7, 202, "Rocket Swordfish", "ocean/swordfish/0/202/swordfish"];
    case "okamiWolf":
      return [a0_0x3bbebf, 202, "Okami Wolf", "arctic/wolf/202/wolf"];
    case "anubisHyena":
      return [a0_0x4450f0, 202, "Anubis Hyena", "desert/hyena/202/hyena"];
    case "gobeeBear":
      return [a0_0x1487f6, 202, "Gobee Bear", "desert/gobibear/202/gobibear"];
    case "chimeraLion":
      return [a0_0x1a694e, 202, "Chimera Lion", "land/lion/202/lion"];
    case "meteorFalcon":
      return [a0_0x1c0686, 202, "Meteor Falcon", "land/falcon/202/falcon"];
    case "naKika":
      return [a0_0x2aaf90, 202, "Na Kika", "ocean/octopus/202/octopus"];
    case "waterBear":
      return [a0_0x162473, 202, "Water Bear", "arctic/bear/202/bear"];
    case "croczilla":
      return [a0_0x20917b, 202, "Croczilla", "land/croc/0/202/croc"];
    case "ammit":
      return [a0_0x20917b, 202, "Ammit", "land/croc/0/203/croc"];
    case "cottonCandyRhino":
      return [a0_0x32eb58, 202, "Cotton Candy Rhino", "land/rhino/202/rhino"];
    case "floralWolverine":
      return [a0_0x40cc4c, 202, "Floral Wolverine", "arctic/wolverine/202/wolverine"];
    case "minotaur":
      return [a0_0x32203e, 202, "Minotaur", "desert/bison/202/bison"];
    case "planetHippo":
      return [a0_0x93d1ea, 202, "Planet Hippo", "land/hippo/202/hippo"];
    case "seaAngelOrca":
      return [a0_0x434da0, 202, "Sea Angel Orca", "ocean/killerwhale/202/killerwhale"];
    case "icefangSabertooth":
      return [a0_0x5510d8, 202, "Ice-Fang Sabertooth", "arctic/sabertooth/202/sabertooth"];
    case "galaxyKomodoDragon":
      return [a0_0x25f6dd, 202, "Galaxy Komodo Dragon", "desert/komododragon/202/komododragon"];
    case "sapphireCaveSpider":
      return [a0_0x252dcd, 202, "Sapphire Cave Spider", "land/giantspider/202/giantspider"];
    case "pastelCassowary":
      return [a0_0x562756, 202, "Pastel Cassowary", "land/cassowary/202/cassowary"];
    case "whaleboat":
      return [a0_0x1132a8, 202, "Whale Boat", "ocean/bluewhale/0/202/bluewhale"];
    case "acidMammoth":
      return [a0_0x2a957c, 202, "Acid Mammoth", "arctic/mammoth/202/0/mammoth"];
    case "iceWizardElephant":
      return [a0_0x4efb3c, 202, "Ice Wizard Elephant", "land/elephant/0/202/elephant"];
    case "ancientIslandMonster":
      return [a0_0x1132a8, 202, "Ancient Island Monster", "ocean/bluewhale/0/203/bluewhale"];
    case "crystalGolem":
      return [a0_0x2a957c, 202, "Crystal Golem", "arctic/mammoth/202/1/mammoth"];
    case "aberrantDragon":
      return [a0_0x256160, 202, "Aberrant Dragon", "land/dragon/0/202/dragon"];
    case "agDragon":
      return [a0_0x256160, 206, "AG Dragon", "land/dragon/0/206/dragon"];
    case "hyporevenantRex":
      return [a0_0xbf4f2c, 202, "Hyporevenant Rex", "land/trex/202/0/trex"];
    case "giantSquid":
      return [a0_0x4e6cde, 202, "Giant Squid", "ocean/kraken/202/0/kraken"];
    case "lovelyYeti":
      return [a0_0x38090e, 202, "Lovely Yeti", "arctic/yeti/202/0/yeti"];
    case "abyssalKingCrab":
      return [a0_0x5f3a6f, 202, "Abyssal King Crab", "ocean/kingcrab/202/kingcrab"];
    case "hydrothothKraken":
      return [a0_0x4e6cde, 202, "Hydrothoth Kraken", "ocean/kraken/202/1/kraken"];
    case "frostEyeDemon":
      return [a0_0x38090e, 202, "Frosty Eye Demon", "arctic/yeti/202/1/yeti"];
    case "ghoulDragon":
      return [a0_0x256160, 202, "Ghoul Dragon", "land/dragon/0/203/dragon"];
    case "tankMonster":
      return [a0_0x15fd74, 202, "Tank Monster", "land/dinomonster/202/dinomonster"];
    case "fighterJet":
      return [a0_0x1b4846, 202, "Fighter Jet", "volcano/landmonster/0/202/landmonster"];
    case "submarineMonster":
      return [a0_0x30bc31, 202, "Submarine Monster", "ocean/seamonster/202/seamonster"];
    case "kingGraveyard1":
      return [a0_0x9fe8e0, 202, "King Graveyard", "volcano/kingdragon/202/kingdragon"];
    case "fairyRabbit":
      return [a0_0x151054, 220, "Fairy Rabbit", "land/rabbit/220/rabbit"];
    case "darkMatterWarthog":
      return [a0_0x1ce2e4, 202, "Dark Matter Warthog", "desert/warthog/220/warthog"];
    case "fumigatorPig":
      return [a0_0x3d5a13, 220, "Fumigator Pig", "land/pig/220/pig"];
    case "moltenToucan":
      return [a0_0x22e8ad, 220, "Molten Toucan", "land/toucan/220/toucan.ui"];
    case "summonerWolverine":
      return [a0_0x40cc4c, 220, "Summoner Wolverine", "arctic/wolverine/220/wolverine"];
    case "golemMammoth":
      return [a0_0x2a957c, 220, "Golem Mammoth", "arctic/mammoth/220/mammoth"];
    case "glacialDemon":
      return [a0_0x38090e, 220, "Glacial Demon", "arctic/yeti/220/yeti"];
    case "cordyceraDino":
      return [a0_0x15fd74, 220, "Cordycera Dino", "land/dinomonster/220/dinomonster"];
    case "blazingIceMonster":
      return [a0_0x415f2f, 220, "BlazingIce Monster", "arctic/icemonster/220/icemonster"];
    case "bioMutantTRex":
      return [a0_0xbf4f2c, 220, "Bio Mutant T-rex", "land/trex/220/trex"];
    case "sunsetOstrich":
      return [a0_0x33fa19, 220, "Sunset Ostrich", "land/ostrich/220/ostrich"];
    case "lightwaveElephant":
      return [a0_0x4efb3c, 220, "Lightwave Elephant", "land/elephant/0/220/elephant"];
    case "inkRhino":
      return [a0_0x32eb58, 220, "Ink Rhino", "land/rhino/220/rhino"];
    case "dimensionalMonster":
      return [a0_0x30bc31, 220, "Dimensional Monster", "ocean/seamonster/220/seamonster"];
    case "nebuladonScorpion":
      return [a0_0x527dbe, 220, "Nebuladon Scorpion", "desert/scorpion/220/giantscorpion"];
    case "ghastlyJadeLion":
      return [a0_0x1a694e, 220, "Ghastly Jade Lion", "land/lion/220/lion"];
    case "belphegor":
      return [a0_0x1b4846, 220, "Belphegor", "volcano/landmonster/0/220/landmonster"];
    case "muscipulaRaven":
      return [a0_0x5ab1f8, 220, "Muscipula Raven", "forest/raven/220/raven"];
    case "behemothHiveDragon":
      return [a0_0x256160, 220, "Behemoth Hive Dragon", "land/dragon/0/220/dragon"];
    case "okamiWolf":
      return [a0_0x3bbebf, 220, "Okami Wolf", "arctic/wolf/220/wolf"];
    case "starCrusherCrab":
      return [a0_0x5f3a6f, 220, "Star Crusher Crab", "ocean/kingcrab/220/kingcrab"];
    case "drBrainiopod":
      return [a0_0x4e6cde, 220, "Dr. Brainiopod", "ocean/kraken/220/kraken"];
    case "xmas22_iceHuskTrout":
      return [a0_0x5e41c4, 222, "Ice Husk Trout", "ocean/trout/0/221/trout"];
    case "xmas22_jollyRabbit":
      return [a0_0x151054, 222, "Jolly Rabbit", "land/rabbit/222/rabbit"];
    case "xmas22_peppermintLandMonster":
      return [a0_0x1b4846, 222, "Peppermint Land Monster", "volcano/landmonster/0/222/landmonster"];
    case "xmas22_gingerbreadKraken":
      return [a0_0x4e6cde, 222, "Gingerbread Kraken", "ocean/kraken/222/kraken"];
    case "val23_wolverine":
      return [a0_0x40cc4c, 0, "Valentine Wolverine", "arctic/wolverine/0/223/wolverine"];
    case "val23_orca":
      return [a0_0x434da0, 0, "Valentine Orca", "ocean/killerwhale/0/223/killerwhale"];
    case "val23_mamoth":
      return [a0_0x2a957c, 0, "Valentine Mammoth", "arctic/mammoth/0/223/mammoth"];
    case "val23_whale":
      return [a0_0x1132a8, 0, "Valentine Whale", "ocean/bluewhale/0/223/bluewhale"];
    case "val23_walrus":
      return [a0_0x6e4e18, 0, "Valentine Walrus", "arctic/walrus/0/223/walrus"];
    case "val23_stingray":
      return [a0_0x56d530, 0, "Valentine Stingray", "ocean/stingray/0/223/stingray"];
    case "val23_snowleopard":
      return [a0_0x1b4543, 0, "Valentine Snow Leopard", "arctic/snowleopard/0/223/snowleopard"];
    case "val23_gorilla":
      return [a0_0x18ddf3, 0, "Valentine Gorilla", "land/gorilla/0/223/gorilla"];
    case "animal_BirdMonster":
      return [a0_0x322c99, 0, "Bird Monster", "land/birdmonster/0/birdmonster"];
    case "apesGorilla":
      return [a0_0x18ddf3, 224, "Apes.io Gorilla", "land/gorilla/0/224/gorilla"];
    case "hw2023_botX303":
      return [a0_0x2ed274, 2023, "Bot X-303", "desert/blackwidow/0/2023/blackwidow"];
    case "hw2023_sodaFish":
      return [a0_0x9f5ea7, 2023, "Sodafish", "ocean/swordfish/0/2023/swordfish"];
    case "hw2023_solarWyvern":
      return [a0_0x1b4846, 2023, "Solar Wyvern", "volcano/landmonster/0/2023/landmonster"];
    case "hw2023_drLochness":
      return [a0_0x5e41c4, 2023, "Dr. Lochness", "ocean/trout/0/2023/trout"];
    case "hw2023_moltenFrostWhale":
      return [a0_0x1132a8, 2023, "Molten Frost Whale", "ocean/bluewhale/0/2023/bluewhale"];
    case "hw2023_sharkodile":
      return [a0_0x20917b, 2023, "Sharkodile", "land/croc/0/2023/croc"];
    case "hw2023_mafiaGorilla":
      return [a0_0x18ddf3, 2023, "Mafia Gorilla", "land/gorilla/0/2023/gorilla"];
    case "hw2023_carnivalElephant":
      return [a0_0x4efb3c, 2023, "Carnival Elephant", "land/elephant/0/2023/elephant"];
    case "hw2023_beachBattleKraken":
      return [a0_0x4e6cde, 2023, "Beach Battle Kraken", "ocean/kraken/0/2023/kraken"];
    case "hw2023_stormDragon":
      return [a0_0x256160, 2023, "Storm Dragon", "land/dragon/0/2023/dragon"];
    case "hw2023_spookyBear":
      return [a0_0x5a613b, 202, "Spooky Bear", "land/bear/0/2023/bear"];
  }
  return [a0_0x4083f6, 99999, "Error Skin", ""];
};
var a0_0x2011f1 = a0_0x3b5181;
var a0_0x58d04c = a0_0x181096;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
function a0_0x3b5181() {
  a0_0x3b5181.superClass.call(this, a0_0x339da0);
}
a0_0x3b5181.prototype.loadShopData = function (_0x132c36) {
  a0_0x3b5181.superClass.prototype.loadShopData.call(this, _0x132c36);
  this.itemId = _0x132c36.itemId;
  this.title = _0x132c36.description;
  this.saleType = _0x132c36.saleType;
  this.salePrice = _0x132c36.salePrice;
};
a0_0x3b5181.prototype.getShopImageSrc = function () {
  return "shop/deals/" + this.itemId.toLowerCase() + ".png";
};
a0_0x3b5181.prototype.getImage = function () {
  var _0x210ef6 = new Image();
  _0x210ef6.className = "shopdeal";
  _0x210ef6.src = "shop/deals/" + this.itemId.toLowerCase() + ".png";
  _0x210ef6.loading = "lazy";
  return _0x210ef6;
};
a0_0x3b5181.prototype.getTitle = function () {
  var _0x486425 = "" + this.title;
  return _0x486425.replace("\n", "<br>").toUpperCase();
};
a0_0x3b5181.prototype.generateHtml = function (_0x460240) {
  var _0x2cc3ca = "item deal" + (this.price == -1 ? " itemOwned buyItem" : " buyItem") + " " + this.itemId;
  if (_0x460240 == a0_0x591a9f) {
    _0x2cc3ca = _0x2cc3ca + " confirm_deal";
  }
  var _0x2ea5e4 = a0_0x1cbc41("", _0x2cc3ca);
  var _0x321326 = a0_0x1cbc41("", "image biome_" + this.biome);
  var _0x561978 = a0_0x1cbc41("", "price");
  var _0x3c7448 = a0_0x1cbc41("", "orig-value");
  _0x2ea5e4.setAttribute("title", this.getTitle().replace("<BR>", " "));
  _0x561978.innerHTML = this.getTitle();
  var _0x4e0445 = this.getImage();
  _0x321326.appendChild(_0x4e0445);
  if (this.price > 0) {
    var _0x146f14 = "";
    if (this.saleType == 1) {
      _0x146f14 = "NEW BUNDLE";
    } else if (this.saleType == 2) {
      _0x146f14 = "SALE BUNDLE";
    }
    if (_0x146f14 != "") {
      var _0x2dba1a = a0_0x1cbc41("newItem_" + this.animalType, "newItem");
      _0x2dba1a.innerHTML = _0x146f14;
      _0x2ea5e4.appendChild(_0x2dba1a);
    }
  }
  _0x2ea5e4.appendChild(_0x321326);
  _0x2ea5e4.appendChild(_0x561978);
  if (this.saleType == 2) {
    var _0x44e599 = new Image();
    _0x44e599.className = "buycoin-img";
    _0x44e599.src = "shop/mopecoin.png";
    var _0x406f7c = a0_0xfa272f("span", "", "buycoin-price");
    _0x406f7c.innerHTML = this.price;
    _0x3c7448.appendChild(_0x44e599);
    _0x3c7448.appendChild(_0x406f7c);
  } else {
    _0x3c7448.innerText = "NO SALE";
  }
  if (this.price > 0) {
    _0x2ea5e4.appendChild(_0x3c7448);
    _0x2ea5e4.appendChild(this.btn.generateHtml(_0x460240));
  } else {}
  return _0x2ea5e4;
};
a0_0x3b5181.prototype.fillItemDetails = function (_0x4c0f13) {
  var _0x30acd6 = a0_0x1cbc41("bundleSkins", "bundleSkins_" + this.itemId);
  _0x4c0f13.appendChild(_0x30acd6);
  if (this.data.bundled) {
    for (i = 0; i < a0_0x1669d8.shop.allItems.length; i++) {
      var _0x237d16 = a0_0x1669d8.shop.allItems[i];
      if (!this.data.bundled.includes(_0x237d16.data.id)) {
        continue;
      }
      var _0x5a3f9c = a0_0x1669d8.getPostFixForItem(_0x237d16.data.itemId);
      var _0xba3590 = _0x237d16.getImagePromo(_0x5a3f9c);
      _0xba3590.className = "bundleSkinImg" + (_0x237d16.price == -1 ? " bought" : "");
      _0xba3590.width = "40px";
      _0x30acd6.appendChild(_0xba3590);
    }
  }
};
window.ShopDeal = a0_0x3b5181;
var a0_0x339da0 = 3;
a0_0x4a2f17.setCustomClassForShopItem(a0_0x3b5181, a0_0x339da0);
var a0_0x2011f1 = a0_0x53c37b;
var a0_0x58d04c = a0_0x181096;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
function a0_0x53c37b() {
  a0_0x53c37b.superClass.call(this, a0_0x339da0);
}
a0_0x53c37b.prototype.loadShopData = function (_0x50fd73) {
  a0_0x53c37b.superClass.prototype.loadShopData.call(this, _0x50fd73);
  this.itemId = _0x50fd73.itemId;
  this.title = _0x50fd73.description;
  this.credits = _0x50fd73.credits;
  this.saleType = _0x50fd73.saleType;
  this.salePrice = _0x50fd73.salePrice;
};
a0_0x53c37b.prototype.getShopImageSrc = function () {
  return "shop/feature/" + this.itemId.toLowerCase() + ".png";
};
a0_0x53c37b.prototype.getImage = function () {
  var _0x52135e = new Image();
  _0x52135e.className = "shopFeature";
  _0x52135e.src = "shop/feature/" + this.itemId.toLowerCase() + ".png";
  _0x52135e.loading = "lazy";
  return _0x52135e;
};
a0_0x53c37b.prototype.getTitle = function () {
  var _0x599528 = "" + this.title;
  return _0x599528.replace("\n", "<br>").toUpperCase();
};
a0_0x53c37b.prototype.generateHtml = function (_0x5ce5a5) {
  var _0x26279d = "item feature " + (this.price == -1 ? " itemOwned" : " buyItem") + " " + this.itemId;
  if (_0x5ce5a5 == a0_0x591a9f) {
    _0x26279d = _0x26279d + " confirm_item";
  }
  var _0x2b4453 = a0_0x1cbc41("", _0x26279d);
  var _0x1087c3 = a0_0x1cbc41("", "image biome_" + this.biome);
  var _0x3c38ab = a0_0x1cbc41("", "price");
  _0x3c38ab.innerHTML = this.title;
  var _0x122c6c = this.getImage();
  _0x1087c3.appendChild(_0x122c6c);
  if (this.price > 0) {
    var _0x824dae = "";
    if (this.saleType == 1) {
      _0x824dae = "NEW";
    } else if (this.saleType == 2) {
      _0x824dae = "SALE";
    }
    if (this.salePrice != this.price && this.saleType > 0) {
      _0x824dae += " -" + Math.floor((1 - this.salePrice / this.price) * 100) + "%";
    }
    if (_0x824dae != "") {
      var _0x5c48bd = a0_0x1cbc41("newItem_" + this.animalType, "newItem");
      _0x5c48bd.innerHTML = _0x824dae;
      _0x2b4453.appendChild(_0x5c48bd);
    }
  }
  _0x2b4453.appendChild(_0x1087c3);
  _0x2b4453.appendChild(_0x3c38ab);
  if (this.price >= 0) {
    _0x2b4453.appendChild(this.btn.generateHtml(_0x5ce5a5));
  } else if (_0x5ce5a5 != a0_0x1fdb65) {
    var _0x47d7c5 = this;
  }
  return _0x2b4453;
};
a0_0x53c37b.prototype.fillItemDetails = function (_0x2df5e1) {
  var _0x4e78c7 = a0_0x1cbc41("bundleSkins", "bundleSkins_" + this.itemId);
  _0x2df5e1.appendChild(_0x4e78c7);
  if (this.data.aniTypes == undefined) {
    for (i = 0; i < a0_0x1669d8.shop.allItems.length; i++) {
      var _0x1ef6a0 = a0_0x1669d8.shop.allItems[i];
      if (_0x1ef6a0 && _0x1ef6a0.data.promotions && _0x1ef6a0.data.promotions.toLowerCase().indexOf(this.itemId.toLowerCase()) > -1) {
        var _0x2215c9 = a0_0x1669d8.getPostFixForItem(_0x1ef6a0.data.itemId);
        var _0x15d1e5 = _0x1ef6a0.getImagePromo(_0x2215c9);
        _0x15d1e5.className = "bundleSkinImg" + (_0x1ef6a0.price == -1 ? " bought" : "");
        _0x15d1e5.width = "40px";
        _0x4e78c7.appendChild(_0x15d1e5);
      }
    }
  } else {
    for (i = 0; i < this.data.aniTypes.length; i++) {
      if (this.data.aniTypes[i] == 1000) {
        continue;
      }
      var _0x4f7292 = a0_0x1669d8.getSkinPath(this.data.aniTypes[i], this.data.theme);
      console.log(_0x4f7292);
      var _0x15d1e5 = new Image();
      _0x15d1e5.src = _0x4f7292;
      _0x15d1e5.loading = "lazy";
      _0x15d1e5.className = "bundleSkinImg aniTypes";
      _0x15d1e5.width = "40px";
      _0x4e78c7.appendChild(_0x15d1e5);
    }
  }
};
window.ShopFeature = a0_0x53c37b;
var a0_0x1b433c = 4;
a0_0x4a2f17.setCustomClassForShopItem(a0_0x53c37b, a0_0x1b433c);
var a0_0x2011f1 = a0_0x365f1b;
var a0_0x58d04c = a0_0x181096;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
var a0_0x1bba14 = 1001;
function a0_0x365f1b(_0x1b287e, _0xc6db6) {
  a0_0x365f1b.superClass.call(this, a0_0x1bba14);
}
a0_0x365f1b.prototype.data = null;
a0_0x365f1b.prototype.loadShopData = function (_0x36a8f5) {
  a0_0x365f1b.superClass.prototype.loadShopData.call(this, _0x36a8f5);
  this.data = _0x36a8f5;
  this.getPropType();
};
a0_0x365f1b.prototype.itemType = null;
a0_0x365f1b.prototype.propType = null;
a0_0x365f1b.prototype.propColor = null;
a0_0x365f1b.prototype.getPropType = function () {
  if (this.data == null) {
    return;
  }
  var _0x4fc141 = this.data.id.split("_");
  if (_0x4fc141.length == 3) {
    this.itemType = _0x4fc141[0];
    this.propType = _0x4fc141[1];
    this.propColor = _0x4fc141[2];
  }
};
window.PropItem = a0_0x365f1b;
a0_0x4a2f17.setCustomClassForShopItem(a0_0x365f1b, a0_0x1bba14);
function a0_0x5754ea(_0xc61b01) {
  this.tabs = {
    titles: new Array()
  };
  this.data = _0xc61b01;
  this.load = function () {
    for (i = 0; i < this.data.length; i++) {
      var _0x2e775e = this.data[i].itemType;
      if (this.tabs[_0x2e775e] === undefined) {
        this.tabs.titles.push(_0x2e775e);
        this.tabs[_0x2e775e] = new Array();
      }
      this.tabs[_0x2e775e].push(this.data[i]);
    }
  };
}
var a0_0x2011f1 = a0_0x2db4b5;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x2011f1.prototype.arenaState = 0;
a0_0x2011f1.prototype.fightNumber = 0;
a0_0x2011f1.prototype.climaxType = 1;
a0_0x2011f1.prototype.timer = 0;
a0_0x2011f1.prototype.timerTxt = null;
a0_0x2011f1.prototype.p1Name = null;
a0_0x2011f1.prototype.p2Name = null;
a0_0x2011f1.prototype.p1Bites = 0;
a0_0x2011f1.prototype.p2Bites = 0;
a0_0x2011f1.prototype.arenaRad = 10;
a0_0x2011f1.prototype.nArenaRad = 10;
a0_0x2011f1.prototype.oArenaRad = 10;
a0_0x2011f1.prototype.isCountdownTimer = true;
a0_0x2011f1.prototype.p1PushRemain = 0;
a0_0x2011f1.prototype.p1DashRemain = 0;
a0_0x2011f1.prototype.p2PushRemain = 0;
a0_0x2011f1.prototype.p2DashRemain = 0;
a0_0x2db4b5.prototype.setTimer = function (_0x3b3e2e) {
  var _0x3acb2a = "";
  var _0x33ff4c = 25;
  if (this.isCountdownTimer) {
    _0x3acb2a = "" + _0x3b3e2e;
  } else {
    _0x33ff4c = 15;
    if (this.isCpuVsPlayer) {
      _0x3acb2a = "1v1 REDEMPTION";
    } else if (this.arenaModeType == 2) {
      _0x3acb2a = "MATCH #" + this.fightNumber;
    } else {
      _0x3acb2a = "FIGHT\n#" + this.fightNumber;
    }
    _0x3acb2a = a0_0xa68ef0.name + "\n" + _0x3acb2a;
  }
  if (this.isCountdownTimer) {
    _0x33ff4c = Number(_0x3b3e2e) ? 30 : _0x33ff4c;
  }
  if (this.timerTxt == null) {
    this.timerTxt = new a0_0x3d10bd(_0x33ff4c, "#FFFFFF");
    this.timerTxt.strokeW = 2;
    this.timerTxt.multiLine = true;
    this.timerTxt.renderScale = 5;
    this.timerTxt.setText(_0x3acb2a);
  } else {
    this.timerTxt.setFontSize(_0x33ff4c);
    this.timerTxt.setText(_0x3acb2a);
  }
  var _0x343feb = "MOPE";
  if (this.arenaModeType == 1) {
    _0x343feb = "NOOB";
  } else if (this.arenaModeType == 2) {
    _0x343feb = "PRO";
  }
  var _0x50d6f4 = this.climaxType == 1 ? "LAST " + _0x343feb + " STANDING" : this.maxBitesToWin + " BITES WINS";
  if (this.climaxTxt == null) {
    this.climaxTxt = new a0_0x3d10bd(_0x33ff4c, "#FFFFFF");
    this.climaxTxt.strokeW = 2;
    this.climaxTxt.multiLine = true;
    this.climaxTxt.renderScale = 5;
    this.climaxTxt.setText(_0x50d6f4);
  } else {
    this.climaxTxt.setFontSize(15);
    this.climaxTxt.setText(_0x50d6f4);
  }
};
a0_0x2db4b5.prototype.playerFontSize = 10;
a0_0x2db4b5.prototype.setP1 = function (_0x7fa486) {
  var _0xcf37f0 = "" + _0x7fa486;
  if (this.p1Name == null) {
    this.p1Name = new a0_0x3d10bd(this.playerFontSize, "cyan");
    this.p1Name.strokeW = 2;
    this.p1Name.multiLine = true;
    this.p1Name.renderScale = 2;
    this.p1Name.setText(_0xcf37f0);
  } else {
    this.p1Name.setFontSize(this.playerFontSize);
    this.p1Name.setText(_0xcf37f0);
  }
};
a0_0x2db4b5.prototype.setP2 = function (_0x38cfba) {
  var _0x4f7363 = "" + _0x38cfba;
  if (this.p2Name == null) {
    this.p2Name = new a0_0x3d10bd(this.playerFontSize, "yellow");
    this.p2Name.strokeW = 2;
    this.p2Name.multiLine = true;
    this.p2Name.renderScale = 2;
    this.p2Name.setText(_0x4f7363);
  } else {
    this.p2Name.setFontSize(this.playerFontSize);
    this.p2Name.setText(_0x4f7363);
  }
};
a0_0x2db4b5.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x2db4b5.prototype.dotX = 0.33;
a0_0x2db4b5.prototype.dotY = 0.77;
var a0_0x15085b = 35;
var a0_0x4eaabd = 0.72;
var a0_0x1baad8 = 0.2;
var a0_0x89a34f = 0.65;
var a0_0xf83f3 = 10;
a0_0x2db4b5.prototype.glowEffect = 0;
a0_0x2db4b5.prototype.ver = 2;
a0_0x2db4b5.prototype.customDraw = function (_0x3da3d8) {
  if (a0_0x1528ea && a0_0x469e3a && a0_0x548917 == this.id) {
    this.drawCanvas();
  }
  if (this.arenaState == 2 || this.arenaState == 3) {
    this.displayEndScreen();
  }
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(Math.PI * -0.5);
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 0.065;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2, false);
  a0_0x4ef4f3.arc(0, 0, this.arenaRad, 0, Math.PI * 2, true);
  a0_0x4ef4f3.fillStyle = "red";
  a0_0x4ef4f3.closePath();
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.restore();
  if (a0_0x548917 == this.id) {
    if (a0_0x548917 == this.id && this.arenaState == 1) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.lineWidth = 4;
      a0_0x4ef4f3.globalAlpha = 0.5;
      var _0x1e53a8 = this.timeoutAngle * -2;
      if (this.closingAngleSet) {
        var _0x35eee8 = this.arenaClosingAngle * -2;
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, this.rad - 2, _0x35eee8 * Math.PI, _0x1e53a8 * Math.PI);
        a0_0x4ef4f3.strokeStyle = "red";
        a0_0x4ef4f3.stroke();
        a0_0x4ef4f3.restore();
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, this.rad - 2, 0, _0x35eee8 * Math.PI);
        a0_0x4ef4f3.strokeStyle = "#32ff00";
        a0_0x4ef4f3.stroke();
        a0_0x4ef4f3.restore();
      } else {
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(0, 0, this.rad - 2, 0, _0x1e53a8 * Math.PI);
        a0_0x4ef4f3.strokeStyle = "#32ff00";
        a0_0x4ef4f3.stroke();
      }
      a0_0x4ef4f3.restore();
    }
    if (this.showTimerAngle) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 0.5;
      var _0x4a519c = this.timerAngle * -2;
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.lineWidth = 2;
      a0_0x4ef4f3.arc(0, 0, this.arenaRad + 2, 0, _0x4a519c * Math.PI);
      a0_0x4ef4f3.strokeStyle = "red";
      a0_0x4ef4f3.stroke();
      a0_0x4ef4f3.restore();
    }
  }
  a0_0x4ef4f3.restore();
  if (this.timerTxt != null) {
    if (this.arenaState == 0) {
      this.timerTxt.x = 0;
      this.timerTxt.y = 0;
      this.timerTxt.draw();
    } else if (this.arenaState == 1) {
      this.timerTxt.x = 0;
      this.timerTxt.y = -this.rad * 0.9;
      this.timerTxt.draw();
      if (this.climaxTxt != null) {
        this.climaxTxt.x = 0;
        this.climaxTxt.y = this.rad * 0.85;
        this.climaxTxt.draw();
      }
    } else if (this.arenaState == 2 || this.arenaState == 3) {
      this.timerTxt.x = 0;
      this.timerTxt.y = 0;
      this.timerTxt.draw();
      if (this.climaxTxt != null) {
        this.climaxTxt.x = 0;
        this.climaxTxt.y = this.rad * 0.85;
        this.climaxTxt.draw();
      }
    }
  }
  var _0x3e4866 = 15;
  var _0x1f7c4c = this.rad / 2 + this.rad * 0.05;
  if (this.p1Name != null) {
    this.p1Name.x = -this.rad / 2;
    this.p1Name.y = -this.rad * 0.65;
    this.p1Name.draw();
    if (!this.isCpuVsPlayer) {
      var _0x4fb47c = 0;
      var _0x3ef4d3 = -this.rad * a0_0x4eaabd;
      _0x4fb47c -= a0_0x15085b;
      _0x3ef4d3 -= _0x3e4866 * 2;
      var _0x1677e8 = this.getSkinImageObj("img/fire/0/0.png");
      for (i = 0; i < this.getLives(); i++) {
        _0x4fb47c -= _0x3e4866 * 2.2;
        if (_0x1677e8) {
          a0_0x4ef4f3.save();
          if (this.roundsWon_p1 > 0 && i + 1 <= this.roundsWon_p1) {
            a0_0x4ef4f3.globalAlpha = 0.8;
          } else {
            a0_0x4ef4f3.globalAlpha = 0.2;
          }
          a0_0x4ef4f3.drawImage(_0x1677e8, _0x4fb47c - _0x3e4866, _0x3ef4d3 - _0x3e4866, _0x3e4866 * 2, _0x3e4866 * 2);
          a0_0x4ef4f3.restore();
        }
      }
    }
  }
  if (this.p2Name != null) {
    this.p2Name.x = this.rad / 2;
    this.p2Name.y = -this.rad * 0.65;
    this.p2Name.draw();
    if (!this.isCpuVsPlayer) {
      var _0x4fb47c = 0;
      var _0x3ef4d3 = -this.rad * a0_0x4eaabd;
      _0x4fb47c = a0_0x15085b;
      _0x3ef4d3 -= _0x3e4866 * 2;
      var _0x1677e8 = this.getSkinImageObj("img/fire/0/0.png");
      for (i = 0; i < this.getLives(); i++) {
        _0x4fb47c += _0x3e4866 * 2.2;
        if (_0x1677e8) {
          a0_0x4ef4f3.save();
          if (this.roundsWon_p2 > 0 && i + 1 <= this.roundsWon_p2) {
            a0_0x4ef4f3.globalAlpha = 0.8;
          } else {
            a0_0x4ef4f3.globalAlpha = 0.2;
          }
          a0_0x4ef4f3.drawImage(_0x1677e8, _0x4fb47c - _0x3e4866, _0x3ef4d3 - _0x3e4866, _0x3e4866 * 2, _0x3e4866 * 2);
          a0_0x4ef4f3.restore();
        }
      }
    }
  }
  if (a0_0x1c918d != 0 && this.id == a0_0x548917 && this.arenaState == 0) {}
};
var a0_0x44b90a = 1;
var a0_0x46c5fe = 3;
var a0_0x43e002 = 5;
var a0_0x4a130d = 9;
a0_0x2db4b5.prototype.getLives = function () {
  switch (this.fightType) {
    case a0_0x44b90a:
      return 1;
    case a0_0x46c5fe:
      return 2;
    case a0_0x43e002:
      return 3;
    case a0_0x4a130d:
      return 5;
  }
  return 1;
};
a0_0x2db4b5.prototype.hasAdLoaded = false;
a0_0x2db4b5.prototype.isCpuVsPlayer = false;
a0_0x2db4b5.prototype.arenaModeType = 0;
a0_0x2db4b5.prototype.canPush = false;
a0_0x2db4b5.prototype.canDash = false;
a0_0x2db4b5.prototype.isDarkTheme = false;
a0_0x2db4b5.prototype.custom_canvas = null;
a0_0x2db4b5.prototype.drawCanvas = function () {
  if (this.custom_canvas == null) {
    this.custom_canvas = document.createElement("canvas");
    var _0x6f6a78 = this.rad * 10;
    var _0x51b1b7 = this.rad * 10;
    this.custom_canvas.width = _0x6f6a78;
    this.custom_canvas.height = _0x51b1b7;
    var _0x4c457d = this.custom_canvas.getContext("2d");
    _0x4c457d.save();
    _0x4c457d.globalAlpha = 1;
    _0x4c457d.fillStyle = "black";
    _0x4c457d.fillRect(0, 0, this.custom_canvas.width, this.custom_canvas.height);
    _0x4c457d.globalCompositeOperation = "xor";
    _0x4c457d.beginPath();
    _0x4c457d.arc(_0x6f6a78 / 2, _0x6f6a78 / 2, this.rad, 0, Math.PI * 2);
    _0x4c457d.fillStyle = "blue";
    _0x4c457d.fill();
    _0x4c457d.restore();
  }
  if (this.custom_canvas != null) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 0.5;
    a0_0x4ef4f3.drawImage(this.custom_canvas, -this.custom_canvas.width / 2, -this.custom_canvas.height / 2, this.custom_canvas.width, this.custom_canvas.height);
    a0_0x4ef4f3.restore();
  }
};
a0_0x2db4b5.prototype.timerAngle = 0;
a0_0x2db4b5.prototype.nTimerAngle = 0;
a0_0x2db4b5.prototype.showTimerAngle = true;
a0_0x2db4b5.prototype.nTimeoutAngle = 0;
a0_0x2db4b5.prototype.timeoutAngle = 0;
a0_0x2db4b5.prototype.arenaTimeoutLeft = 0;
a0_0x2db4b5.prototype.isArenaClosing = false;
a0_0x2db4b5.prototype.closingAngleSet = false;
a0_0x2db4b5.prototype.arenaClosingAngle = 0;
a0_0x2db4b5.prototype.onLerpUpdate = function (_0x3ffe7d) {
  a0_0x2db4b5.superClass.prototype.onLerpUpdate.call(this, _0x3ffe7d);
  this.arenaRad += (this.nArenaRad - this.arenaRad) * 0.1;
  this.timerAngle += (this.nTimerAngle - this.timerAngle) * 0.1;
  this.timeoutAngle += (this.nTimeoutAngle - this.timeoutAngle) * 0.1;
};
a0_0x2db4b5.prototype.timeLeft = 0;
a0_0x2db4b5.prototype.fightType = 0;
a0_0x2db4b5.prototype.rounds = 0;
a0_0x2db4b5.prototype.roundsWon_p1 = 0;
a0_0x2db4b5.prototype.roundsWon_p2 = 0;
a0_0x2db4b5.prototype.resetArena = false;
a0_0x2db4b5.prototype.player1DarkTheme = false;
a0_0x2db4b5.prototype.player2DarkTheme = false;
a0_0x2db4b5.prototype.readCustomData_onNewlyVisible = function (_0x129c56) {
  a0_0x2db4b5.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x129c56);
  this.fightType = _0x129c56.readUInt8();
  this.arenaState = _0x129c56.readUInt8();
  this.rounds = _0x129c56.readUInt8();
  this.p1 = _0x129c56.readString();
  this.p2 = _0x129c56.readString();
  this.arenaModeType = _0x129c56.readUInt8();
  this.isCpuVsPlayer = this.arenaModeType == 1 || this.arenaModeType == 2;
  this.p1Wins = _0x129c56.readUInt8();
  this.p2Wins = _0x129c56.readUInt8();
  this.fightNumber = _0x129c56.readUInt16();
  var _0xe22eee = _0x129c56.readUInt16() / 100;
  this.oArenaRad = this.arenaRad;
  this.nArenaRad = _0xe22eee;
  this.setNames();
  this.climaxType = _0x129c56.readUInt8();
  if (this.climaxType == 2) {
    this.maxBitesToWin = _0x129c56.readUInt8();
  }
  this.canPush = _0x129c56.readUInt8() == 1;
  this.canDash = _0x129c56.readUInt8() == 1;
};
a0_0x2db4b5.prototype.readUpdatedProperty = function (_0x3c2b6b, _0x52febb) {
  if (_0x3c2b6b == a0_0x55939c) {
    this.arenaState = _0x52febb.readUInt8();
  } else if (_0x3c2b6b == a0_0xb41eb3) {
    this.rounds = _0x52febb.readUInt8();
  } else if (_0x3c2b6b == a0_0x4a5266) {
    var _0x428edf = _0x52febb.readUInt16() / 100;
    this.oArenaRad = this.arenaRad;
    this.nArenaRad = _0x428edf;
  } else if (_0x3c2b6b == a0_0x5cf592) {
    this.closingAngleSet = this.isArenaClosing = false;
    this.timer = _0x52febb.readUInt16() / 100;
    this.isCountdownTimer = true;
    if (this.timer < 23) {
      this.updateTimer();
    }
  } else if (_0x3c2b6b == a0_0x172853) {
    this.timer = _0x52febb.readUInt16() / 100;
    this.isCountdownTimer = false;
    this.updateTimer();
    this.displayAds = false;
    this.adShown = false;
  } else if (_0x3c2b6b == a0_0x40d85e) {
    this.timeLeft = _0x52febb.readUInt16();
    this.nTimerAngle = this.timeLeft / 1000;
  } else if (_0x3c2b6b == a0_0x3d96e0) {
    this.showTimerAngle = _0x52febb.readUInt8() == 1;
  } else if (_0x3c2b6b == a0_0xc9f5b0) {
    this.isArenaClosing = _0x52febb.readUInt8() == 1;
    if (this.isArenaClosing && !this.closingAngleSet) {
      this.closingAngleSet = true;
      this.arenaClosingAngle = this.timeoutAngle;
    }
  } else if (_0x3c2b6b == a0_0xbbca08) {
    this.arenaTimeoutLeft = _0x52febb.readUInt16();
    this.nTimeoutAngle = this.arenaTimeoutLeft / 1000;
  } else if (_0x3c2b6b == a0_0x308313) {
    this.winner = _0x52febb.readUInt8();
    var _0x15d28c = "" + this.p1;
    if (_0x15d28c.length == 0) {
      _0x15d28c = "mope.io";
    }
    var _0x47f74f = "" + this.p2;
    if (_0x47f74f.length == 0) {
      _0x47f74f = "mope.io";
    }
    if (this.winner == 1) {
      this.winnerName = _0x15d28c;
    } else {
      this.winnerName = _0x47f74f;
    }
  } else if (_0x3c2b6b == a0_0x4bec60) {
    this.winnerMsg = _0x52febb.readString();
  } else if (_0x3c2b6b == a0_0x4398ce) {
    this.p1Bites = _0x52febb.readUInt8();
    this.setNames();
  } else if (_0x3c2b6b == a0_0xee74c1) {
    this.p2Bites = _0x52febb.readUInt8();
    this.setNames();
  } else if (_0x3c2b6b == a0_0x12b74d) {
    this.winBonus = _0x52febb.readUInt32();
  } else if (_0x3c2b6b == a0_0x34181a) {
    this.roundsWon_p1 = _0x52febb.readUInt8();
  } else if (_0x3c2b6b == a0_0x502537) {
    this.roundsWon_p2 = _0x52febb.readUInt8();
  } else if (_0x3c2b6b == a0_0x3c2a27) {
    this.p1Wins = _0x52febb.readUInt8();
  } else if (_0x3c2b6b == a0_0x356073) {
    this.p2Wins = _0x52febb.readUInt8();
  } else if (_0x3c2b6b == a0_0x45c9c9) {
    this.p1 = _0x52febb.readString();
    this.setNames();
  } else if (_0x3c2b6b == a0_0x5e1684) {
    this.p2 = _0x52febb.readString();
    this.setNames();
  } else if (_0x3c2b6b == a0_0x474313) {
    var _0xda9683 = _0x52febb.readUInt8() == 1;
    if (this.resetArena != _0xda9683) {
      this.endScreenState = 0;
      this.resetArena = _0xda9683;
    }
  } else if (_0x3c2b6b == a0_0x1d1d38) {
    this.fightNumber = _0x52febb.readUInt16();
  } else if (_0x3c2b6b == a0_0xc1c42a) {
    this.player1DarkTheme = _0x52febb.readUInt8() == 1;
  } else if (_0x3c2b6b == a0_0x3a13d0) {
    this.player2DarkTheme = _0x52febb.readUInt8() == 1;
  }
};
a0_0x2db4b5.prototype.endScreenState = -1;
a0_0x2db4b5.prototype.endScreenChangeT = 0;
a0_0x2db4b5.prototype.resetEndScreenState = true;
a0_0x2db4b5.prototype.displayEndScreen = function () {
  if (a0_0x4f736f >= this.endScreenChangeT) {
    this.endScreenState++;
    this.endScreenChangeT = a0_0x4f736f + 3000;
  }
  if (this.timerTxt != null) {
    if (this.endScreenState == 0) {
      this.timerTxt.setFontSize(40);
      this.timerTxt.setText("\nKO!");
    } else if (this.endScreenState == 1) {
      this.timerTxt.setFontSize(20);
      this.timerTxt.setText(this.winnerName + "\nWON!");
    } else if (this.endScreenState >= 3) {
      this.timerTxt.setFontSize(20);
      if (this.winBonus !== undefined && this.winnerMsg != null && this.winBonus > 0) {
        this.timerTxt.setText(this.winnerMsg + "\nWIN BONUS: " + a0_0x4cf280(this.winBonus));
      }
    }
  }
};
a0_0x2db4b5.prototype.challenger = null;
a0_0x2db4b5.prototype.opponent = null;
a0_0x2db4b5.prototype.setNames = function () {
  var _0x4542b0 = "" + this.p1;
  if (_0x4542b0.length == 0) {
    _0x4542b0 = "mope.io";
  }
  var _0x381bc3 = "" + this.p2;
  if (_0x381bc3.length == 0) {
    _0x381bc3 = "mope.io";
  }
  var _0x507465 = this.isCpuVsPlayer ? "level" : "wins";
  var _0x1085b9 = "\n(" + _0x507465 + ": " + this.p1Wins + ")";
  var _0x3015e2 = "\n(" + _0x507465 + ": " + this.p2Wins + ")";
  var _0xf2f05e = "\nbites: " + this.p1Bites;
  var _0x47163e = "\nbites: " + this.p2Bites;
  if (this.arenaState < 3) {
    this.challenger = _0x4542b0 + _0x1085b9;
    this.opponent = _0x381bc3 + _0x3015e2;
    this.setP1(_0x4542b0 + _0x1085b9 + _0xf2f05e);
    this.setP2(_0x381bc3 + _0x3015e2 + _0x47163e);
  } else if (this.arenaState == 3) {
    if (this.winner == 1) {
      this.winnerName = _0x4542b0;
      this.setP1(_0x4542b0 + _0x1085b9 + _0xf2f05e);
      this.p2Name = null;
    } else if (this.winner == 2) {
      this.winnerName = _0x381bc3;
      this.setP2(_0x381bc3 + _0x3015e2 + _0x47163e);
      this.p1Name = null;
    }
  }
};
a0_0x2db4b5.prototype.updateTimer = function () {
  this.timer = Math.round(this.timer);
  var _0x18c1ba = this.timer;
  if (this.isCountdownTimer) {
    switch (this.timer) {
      case 23:
        _0x18c1ba = "";
        break;
      case 22:
      case 21:
        if (this.arenaModeType == 3) {
          _0x18c1ba = "1V1 TOURNAMENT";
        } else {
          _0x18c1ba = "WELCOME TO 1V1 ARENA";
        }
        break;
      case 20:
      case 19:
        if (this.arenaModeType == 3) {
          _0x18c1ba = "MATCH #" + this.fightNumber;
        } else {
          var _0x46f4bb = "MAN";
          if (this.arenaModeType == 1) {
            _0x46f4bb = "NOOB";
          } else if (this.arenaModeType == 2) {
            _0x46f4bb = "PRO";
          }
          _0x18c1ba = "FIGHT #" + this.fightNumber + "\n" + (this.climaxType == 1 ? "LAST " + _0x46f4bb + " STANDING" : this.maxBitesToWin + " BITES TO WIN");
          _0x18c1ba = a0_0xa68ef0.name + "\n" + _0x18c1ba;
        }
        break;
      case 18:
      case 17:
        if (!this.isCpuVsPlayer) {
          _0x18c1ba = "CHALLENGER";
          break;
        }
      case 16:
      case 15:
        if (this.isCpuVsPlayer) {
          _0x18c1ba = "REDEMPTION\nLEVEL " + this.p1Wins;
        } else {
          _0x18c1ba = this.challenger;
        }
        break;
      case 14:
      case 13:
        _0x18c1ba = "OPPONENT";
        break;
      case 12:
      case 11:
        _0x18c1ba = this.opponent;
        break;
      case 2:
        _0x18c1ba = "ROUND " + this.rounds;
        break;
      case 1:
        _0x18c1ba = "GET SET";
        break;
      case 0:
        _0x18c1ba = "FIGHT";
        break;
    }
    if (this.timer < 20 && !this.displayAds && !this.adShown) {
      this.displayAds = true;
    }
  }
  this.setTimer(_0x18c1ba);
};
a0_0x2db4b5.prototype.adShown = false;
a0_0x2db4b5.prototype.displayAds = false;
a0_0x2db4b5.prototype.displayedAdsOnEnd = false;
a0_0x2db4b5.prototype.showAds = function (_0xdd5f93) {
  if (!a0_0x5c9ce1) {
    if (!this.adShown) {
      if (this.displayAds) {
        if (a0_0x31c25e > 13) {
          this.adShown = true;
          a0_0x449c86($bus.CONSTANTS.AD_SCREEN_LAYOUTS.ARENA);
          setTimeout(() => {
            a0_0x449c86($bus.CONSTANTS.AD_SCREEN_LAYOUTS.NONE);
          }, _0xdd5f93);
        }
      }
    }
  }
};
a0_0x2db4b5.prototype.removeAds = function () {
  if (a0_0x548917 == this.id) {
    a0_0x449c86($bus.CONSTANTS.AD_SCREEN_LAYOUTS.NONE);
  }
};
a0_0x2db4b5.prototype.onRemovedFromGame = function () {
  console.log("Arena removed from game!");
};
function a0_0x2db4b5() {
  a0_0x2db4b5.superClass.call(this);
  this.hasAdLoaded = false;
}
window.AbilityObj1v1Arena = a0_0x2db4b5;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2db4b5, a0_0x20e6c5, a0_0x30802b);
var a0_0x195aad = a0_0x195aad;
var a0_0x58d04c = a0_0x45645e;
a0_0x195aad.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x195aad.prototype.constructor = a0_0x195aad;
a0_0x195aad.superClass = a0_0x58d04c;
a0_0x195aad.prototype.getSkinName = function () {
  if (this.animalSpecies == 220 && this.animalSubSpecies == 0) {
    return "ocean/seamonster/" + this.animalSpecies + "/seamonster1";
  } else {
    return "ocean/seamonster/" + this.animalSpecies + "/seamonster";
  }
};
a0_0x195aad.prototype.calcAnimalZIndex = function () {
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_isInArena) {
    this.z += 1000;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else {
    this.z = 1000 + this.rad;
  }
};
a0_0x195aad.prototype.animalInfo = function () {
  var _0x2634d6 = {};
  var _0x46f690 = "";
  switch (this.animalSpecies) {
    case 0:
      _0x2634d6.aniName = "Sea Monster";
      break;
    case 1:
      _0x2634d6.aniName = "Golden Sea Monster";
      break;
    case 2:
      _0x2634d6.aniName = "Sapphire Monster";
      break;
    case 111:
      _0x2634d6.aniName = "Classic Sea Monster";
      break;
    case 200:
      _0x2634d6.aniName = "Luckycharm Monster";
      break;
    case 201:
      _0x2634d6.aniName = "Ancient Tortoise";
      break;
    case 202:
      _0x2634d6.aniName = "Submarine Monster";
      break;
    case 220:
      _0x2634d6.aniName = "Dimensional Monster";
      break;
  }
  _0x2634d6.aniCol = "blue";
  _0x2634d6.upgradeText = "UPGRADED to " + _0x2634d6.aniName + "!\nCreate whirlpool to trap prey!" + _0x46f690;
  _0x2634d6.skinName = "ocean/seamonster/" + this.animalSpecies + "/seamonster";
  return _0x2634d6;
};
a0_0x195aad.prototype.getAbilityInfo = function (_0x5cd1fe) {
  var _0x58197d = {
    abilName: "Giant Whirlpool",
    abilImg: "skins/ocean/seamonster/" + this.animalSpecies + "/seamonster.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x58197d;
};
a0_0x195aad.prototype.drawSkinCustomization = function () {
  this.setSkinScale();
  if (this.animalSpecies == 220 && this.animalSubSpecies == 0) {
    var _0x44dbae = "skins/ocean/seamonster/220/";
    var _0x2b3998 = this.skinScale * 1.07;
    var _0x1fcd2c = this.skinRad;
    var _0x561340 = 1 + Math.trunc(a0_0x4f736f / 120) % 8;
    var _0x4ab435 = 0;
    var _0x46dc2d = this.getSkinImageObj(_0x44dbae + "/anim/" + _0x561340 + ".png");
    if (_0x46dc2d) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.drawImage(_0x46dc2d, -_0x1fcd2c * _0x2b3998, (-_0x1fcd2c + _0x1fcd2c * 0.05) * _0x2b3998 - _0x4ab435, _0x1fcd2c * 2 * _0x2b3998, _0x1fcd2c * 2 * _0x2b3998);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x195aad.prototype.basicDrawSkinImg = function () {
  if (this.animalSpecies == 220 && this.animalSubSpecies == 0) {
    this.setSkinScale();
    var _0x32b54a = this.skinScale;
    var _0x14dfd3 = this.skinRad;
    if (this.loadedSkinImg) {
      overSizeOffset = this.skinRad / 2;
      a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x14dfd3 * a0_0x48286d, -_0x14dfd3 * a0_0x48286d, _0x14dfd3 * 2 * a0_0x48286d, _0x14dfd3 * 2 * a0_0x48286d);
    }
  } else {
    a0_0x195aad.superClass.prototype.basicDrawSkinImg.call(this);
  }
};
function a0_0x195aad() {
  a0_0x195aad.superClass.call(this, a0_0x1370b8);
}
window.SeaMonster = a0_0x195aad;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x195aad, a0_0x1370b8, a0_0x30bc31);
var a0_0x15a443 = a0_0x15a443;
var a0_0x58d04c = a0_0x45645e;
a0_0x15a443.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x15a443.prototype.constructor = a0_0x15a443;
a0_0x15a443.superClass = a0_0x58d04c;
a0_0x15a443.prototype.calcAnimalZIndex = function () {
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_isInArena) {
    this.z += 1000;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else {
    this.z = 1200 + this.rad;
  }
};
a0_0x15a443.prototype.animalInfo = function () {
  var _0x13b865 = {};
  var _0x40b05e = "";
  switch (this.animalSubSpecies) {
    case 0:
      _0x13b865.aniName = "Land Monster";
      break;
    case 1:
      _0x13b865.aniName = "Golden Land Monster";
      break;
    case 2:
      _0x13b865.aniName = "Titanite Monster";
      break;
    case 111:
      _0x13b865.aniName = "Classic Land Monster";
      break;
    case 202:
      _0x13b865.aniName = "Fighter Jet";
      break;
    case 204:
      _0x13b865.aniName = "Necromus";
      break;
    case 205:
      _0x13b865.aniName = "Planet Eater Monster";
      break;
    case 220:
      _0x13b865.aniName = "Belphegor";
      break;
    case 222:
      _0x13b865.aniName = "Peppermint Monster";
      break;
    case 2023:
      _0x13b865.aniName = "Solar Wyvern";
      break;
  }
  _0x13b865.aniCol = "orange";
  _0x13b865.upgradeText = "UPGRADED to " + _0x13b865.aniName + "!\nCreate Sink holes to trap prey!" + _0x40b05e;
  _0x13b865.skinName = this.getSkinName();
  return _0x13b865;
};
a0_0x15a443.prototype.getSkinName = function () {
  if (this.animalSubSpecies == 204) {
    return "volcano/landmonster/" + this.animalSpecies + "/" + this.animalSubSpecies + "/landmonster1";
  } else {
    return "volcano/landmonster/" + this.animalSpecies + "/" + this.animalSubSpecies + "/landmonster";
  }
};
a0_0x15a443.prototype.getAbilityInfo = function (_0x187fa5) {
  var _0x47525a = {
    abilName: "Giant\nSinkhole!",
    abilImg: "skins/volcano/landmonster/" + this.animalSpecies + "/" + this.animalSubSpecies + "/landmonster.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x47525a;
};
a0_0x15a443.prototype.drawSkinCustomization = function () {
  this.setSkinScale();
  if (this.animalSubSpecies == 204) {
    var _0x2688fa = "skins/volcano/landmonster/0/204/";
    var _0x779e8d = this.skinScale * 1.07;
    var _0x819e57 = this.skinRad;
    var _0x444258 = 1 + Math.trunc(a0_0x4f736f / 120) % 7;
    var _0x1c9b68 = this.getSkinImageObj(_0x2688fa + "/landmonster_head.png");
    var _0x19eedb = 0;
    if (_0x1c9b68) {
      a0_0x4ef4f3.save();
      var _0x819e57 = this.rad;
      a0_0x4ef4f3.drawImage(_0x1c9b68, -_0x819e57 * _0x779e8d, (-_0x819e57 + _0x819e57 * 0.05) * _0x779e8d - _0x19eedb, _0x819e57 * 2 * _0x779e8d, _0x819e57 * 2 * _0x779e8d);
      a0_0x4ef4f3.restore();
      var _0x1da3c = this.getSkinImageObj(_0x2688fa + "/fire" + _0x444258 + ".png");
      if (_0x1da3c) {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.drawImage(_0x1da3c, -_0x819e57 * _0x779e8d, (-_0x819e57 + _0x819e57 * 0.05) * _0x779e8d - _0x19eedb, _0x819e57 * 2 * _0x779e8d, _0x819e57 * 2 * _0x779e8d);
        a0_0x4ef4f3.restore();
      }
      var _0x1da3c = this.getSkinImageObj(_0x2688fa + "/landmonster_head1.png");
      if (_0x1da3c) {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.drawImage(_0x1da3c, -_0x819e57 * _0x779e8d, (-_0x819e57 + _0x819e57 * 0.05) * _0x779e8d - _0x19eedb, _0x819e57 * 2 * _0x779e8d, _0x819e57 * 2 * _0x779e8d);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
var a0_0x48286d = 1.8;
a0_0x15a443.prototype.basicDrawSkinImg = function () {
  if (this.animalSubSpecies == 204) {
    this.setSkinScale();
    var _0x1c6c01 = this.skinScale;
    var _0x5a7a1e = this.skinRad;
    if (this.loadedSkinImg) {
      overSizeOffset = this.skinRad / 2;
      a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x5a7a1e * a0_0x48286d, -_0x5a7a1e * a0_0x48286d, _0x5a7a1e * 2 * a0_0x48286d, _0x5a7a1e * 2 * a0_0x48286d);
    }
  } else {
    a0_0x15a443.superClass.prototype.basicDrawSkinImg.call(this);
  }
};
function a0_0x15a443() {
  a0_0x15a443.superClass.call(this, a0_0x1370b8);
}
window.LandMonster = a0_0x15a443;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x15a443, a0_0x1370b8, a0_0x1b4846);
var a0_0x3c4836 = a0_0x3c4836;
var a0_0x58d04c = a0_0x45645e;
a0_0x3c4836.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3c4836.prototype.constructor = a0_0x3c4836;
a0_0x3c4836.superClass = a0_0x58d04c;
a0_0x3c4836.prototype.calcAnimalZIndex = function () {
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_isInArena) {
    this.z += 1000;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else {
    this.z = 1000 + this.rad;
  }
};
a0_0x3c4836.prototype.animalInfo = function () {
  var _0x8048c5 = {};
  var _0x28a22e = "";
  switch (this.animalSpecies) {
    case 0:
      _0x8048c5.aniName = "Ice Monster";
      break;
    case 1:
      _0x8048c5.aniName = "Golden Ice Monster";
      break;
    case 2:
      _0x8048c5.aniName = "Amethyst Monster";
      break;
    case 111:
      _0x8048c5.aniName = "Classic Ice Monster";
      break;
    case 201:
      _0x8048c5.aniName = "Cryo Coach Monster";
      break;
    case 204:
      _0x8048c5.aniName = "Blood Crystal Monster";
      break;
    case 220:
      _0x8048c5.aniName = "Blazing Ice Monster";
      break;
  }
  _0x8048c5.aniCol = "#ffffff";
  _0x8048c5.upgradeText = "UPGRADED to " + _0x8048c5.aniName + "!\nShoot Ice crystals to freeze prey!" + _0x28a22e;
  _0x8048c5.skinName = "arctic/icemonster/" + this.animalSpecies + "/icemonster";
  return _0x8048c5;
};
a0_0x3c4836.prototype.getSkinName = function () {
  var _0x396a83 = this.id == 0 ? "ability" : "icemonster";
  return "arctic/icemonster/" + this.animalSpecies + "/" + _0x396a83;
};
a0_0x3c4836.prototype.getAbilityInfo = function (_0x281117) {
  var _0xef81b7 = {
    abilName: "Freeze Prey!",
    abilImg: "skins/arctic/icemonster/" + this.animalSpecies + "/ability.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0xef81b7;
};
a0_0x3c4836.prototype.readCustomData_onNewlyVisible = function (_0x390915) {
  a0_0x3c4836.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x390915);
  this.readCrystalsInfo(_0x390915);
};
a0_0x3c4836.prototype.readCrystal = function (_0x18c137, _0x17d5b1) {
  var _0x3b9208 = _0x18c137.readInt16() / 100;
  this.crystals[_0x17d5b1].nRad = _0x3b9208;
  if (_0x3b9208 < 1) {
    this.crystals[_0x17d5b1].rad = 0;
  }
  this.crystals[_0x17d5b1].isReady = _0x18c137.readUInt8() == 1;
};
a0_0x3c4836.prototype.customUpdatedProperty = function (_0x568e39, _0x15098c) {
  if (_0x568e39 == a0_0x39950f) {
    this.readCrystal(_0x15098c, 0);
  } else if (_0x568e39 == a0_0x34cceb) {
    this.readCrystal(_0x15098c, 1);
  } else if (_0x568e39 == a0_0x2677b6) {
    this.readCrystal(_0x15098c, 2);
  } else if (_0x568e39 == a0_0x5f5215) {
    this.readCrystal(_0x15098c, 3);
  } else if (_0x568e39 == a0_0x530c63) {
    this.readCrystal(_0x15098c, 4);
  } else if (_0x568e39 == a0_0x27c36a) {
    this.readCrystal(_0x15098c, 5);
  } else if (_0x568e39 == a0_0x594129) {
    this.readCrystal(_0x15098c, 6);
  }
};
a0_0x3c4836.prototype.crystals = [];
a0_0x3c4836.prototype.readCrystalsInfo = function (_0x31fa20) {
  var _0x40871c = _0x31fa20.readUInt8();
  this.crystals = [];
  for (i = 0; i < _0x40871c; i++) {
    var _0x18beeb = _0x31fa20.readInt16() / 100;
    var _0x1b46a4 = _0x31fa20.readInt16() / 100;
    var _0x4ceb87 = _0x31fa20.readInt16() / 100;
    var _0x166259 = _0x31fa20.readUInt8() * 4;
    var _0x24a726 = _0x31fa20.readUInt8() == 1;
    this.crystals.push({
      isReady: _0x24a726,
      x: _0x18beeb,
      y: _0x1b46a4,
      nRad: _0x4ceb87,
      oRad: _0x4ceb87,
      rad: _0x4ceb87,
      angle: _0x166259
    });
  }
};
var a0_0x570ea8 = 1.5;
a0_0x3c4836.prototype.drawSkinCustomization = function () {
  if (this.animalSpecies == 201) {
    a0_0x4ef4f3.save();
    var _0x201ce3 = 0;
    for (i = 0; i < this.crystals.length; i++) {
      var _0x1a153f = this.crystals[i];
      if (_0x1a153f.isReady) {
        _0x201ce3++;
      }
    }
    _0x201ce3 = Math.min(5, _0x201ce3);
    var _0x59a1eb = "skins/arctic/icemonster/201/icemonster" + _0x201ce3 + ".png";
    var _0x49c1ed = this.getSkinImageObj(_0x59a1eb);
    if (_0x49c1ed) {
      var _0xdfa82a = this.rad * a0_0x570ea8;
      a0_0x4ef4f3.drawImage(_0x49c1ed, -_0xdfa82a, -_0xdfa82a, _0xdfa82a * 2, _0xdfa82a * 2);
    }
    a0_0x4ef4f3.restore();
  } else {
    var _0xdfa82a = this.rad - this.outlineW;
    for (i = 0; i < this.crystals.length; i++) {
      var _0x1a153f = this.crystals[i];
      if (_0x1a153f.nRad == 0) {
        continue;
      }
      _0x1a153f.rad += (_0x1a153f.nRad - _0x1a153f.rad) * 0.01;
      var _0x4aedc4 = _0x1a153f.x * _0xdfa82a;
      var _0x378c09 = _0x1a153f.y * _0xdfa82a;
      var _0xee0e75 = _0x1a153f.angle;
      var _0x54bce2 = _0x1a153f.rad;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.translate(_0x4aedc4, _0x378c09);
      a0_0x4ef4f3.globalAlpha = 1;
      a0_0x4ef4f3.rotate(a0_0x844a6b(_0xee0e75));
      var _0x49c1ed = this.getSkinImageObj("skins/arctic/icemonster/" + this.animalSpecies + "/crystal.png");
      if (_0x49c1ed) {
        a0_0x4ef4f3.drawImage(_0x49c1ed, -_0x54bce2, -_0x54bce2 * 2, _0x54bce2 * 2, _0x54bce2 * 2);
      }
      a0_0x4ef4f3.restore();
    }
  }
};
function a0_0x3c4836() {
  a0_0x3c4836.superClass.call(this, a0_0x1370b8);
}
window.IceMonster = a0_0x3c4836;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3c4836, a0_0x1370b8, a0_0x415f2f);
var a0_0x5f1d06 = a0_0x5f1d06;
var a0_0x58d04c = a0_0x45645e;
a0_0x5f1d06.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5f1d06.prototype.constructor = a0_0x5f1d06;
a0_0x5f1d06.superClass = a0_0x58d04c;
a0_0x5f1d06.prototype.calcAnimalZIndex = function () {
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_isInArena) {
    this.z += 1000;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else {
    this.z = 1000 + this.rad;
  }
};
a0_0x5f1d06.prototype.drawWhenUnderwater = function () {
  this.drawUnderwaterCustomization(1, 1.1);
};
a0_0x5f1d06.prototype.animalInfo = function () {
  var _0x178b8f = {};
  var _0x1ae0e0 = "";
  switch (this.animalSpecies) {
    case 0:
      _0x178b8f.aniName = "Dino Monster";
      break;
    case 1:
      _0x178b8f.aniName = "Golden Dino Monster";
      break;
    case 2:
      _0x178b8f.aniName = "Citrine Monster";
      break;
    case 111:
      _0x178b8f.aniName = "Classic Dino Monster";
      break;
    case 200:
      _0x178b8f.aniName = "Ruby Devil";
      break;
    case 202:
      _0x178b8f.aniName = "Tank Monster";
      break;
    case 220:
      _0x178b8f.aniName = "Cordycera Dino Monster";
      break;
  }
  _0x178b8f.aniCol = "orange";
  _0x178b8f.upgradeText = "UPGRADED to " + _0x178b8f.aniName + "!\nKnock prey in Air to inflict deadly damage!" + _0x1ae0e0;
  _0x178b8f.skinName = "land/dinomonster/" + this.animalSpecies + "/dinomonster";
  return _0x178b8f;
};
a0_0x5f1d06.prototype.getSkinName = function () {
  return "land/dinomonster/" + this.animalSpecies + "/dinomonster1";
};
a0_0x5f1d06.prototype.getAbilityInfo = function (_0x5e920c) {
  var _0xae12fd = {
    abilName: "Knock in Air",
    abilImg: "skins/land/dinomonster/" + this.animalSpecies + "/dinomonster.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0xae12fd;
};
a0_0x5f1d06.prototype.drawSkinCustomization = function () {
  var _0xe0fca0 = "skins/land/dinomonster/" + this.animalSpecies + "/dinomonster";
  if (this.flag_usingAbility) {
    _0xe0fca0 += "3";
  } else {
    _0xe0fca0 += "2";
  }
  var _0x3cbde3 = this.getSkinImageObj(_0xe0fca0 + ".png");
  if (_0x3cbde3) {
    a0_0x4ef4f3.save();
    var _0x4a8e73 = (this.rad - this.outlineW) * 1.1;
    a0_0x4ef4f3.drawImage(_0x3cbde3, -_0x4a8e73 * this.skinScale * 0.91, -_0x4a8e73 * this.skinScale * 1.1, _0x4a8e73 * 2 * this.skinScale * 0.91, _0x4a8e73 * 2 * this.skinScale * 1.1);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x5f1d06() {
  a0_0x5f1d06.superClass.call(this, a0_0x1370b8);
}
window.DinoMonster = a0_0x5f1d06;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5f1d06, a0_0x1370b8, a0_0x15fd74);
var a0_0x58d04c = a0_0x12658e;
a0_0x2a8c8e.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2a8c8e.prototype.constructor = a0_0x2a8c8e;
a0_0x2a8c8e.superClass = a0_0x58d04c;
a0_0x2a8c8e.prototype.updateZ = function () {
  this.z = 1005;
};
a0_0x2a8c8e.prototype.customDraw = function (_0x1bf4a5) {
  var _0x5ebb2b = this.getSkinImageObj("skins/arctic/icemonster/" + this.speciesType + "/crystalfire.png");
  if (_0x5ebb2b) {
    a0_0x4ef4f3.save();
    var _0x5af721 = this.rad * 1.5;
    a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(180));
    a0_0x4ef4f3.drawImage(_0x5ebb2b, -_0x5af721, -_0x5af721, _0x5af721 * 2, _0x5af721 * 2.5);
    a0_0x4ef4f3.restore();
  }
};
a0_0x2a8c8e.prototype.getSkinImageObj = function (_0x1a7341) {
  var _0x5aa0d3 = this.speciesType === 1 || this.speciesType === 2 || this.speciesType === 201 || this.speciesType === 204 ? 1 : this.mopeSeasonID;
  var _0x20edaa = "./assets/s/" + _0x5aa0d3 + "/" + _0x1a7341;
  if (this.skinThemeID > 0) {
    _0x20edaa = "./assets/t/" + this.skinThemeID + "/" + _0x1a7341;
  }
  return a0_0x2cc313(_0x20edaa, function (_0x36c1be) {
    console.log(_0x36c1be.src);
  });
};
a0_0x2a8c8e.prototype.readCustomData_onNewlyVisible = function (_0x23488f) {
  a0_0x2a8c8e.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x23488f);
  this.speciesType = _0x23488f.readUInt8();
};
function a0_0x2a8c8e() {
  a0_0x2a8c8e.superClass.call(this, a0_0x32cc03);
}
window.IceCrystal = a0_0x2a8c8e;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2a8c8e, a0_0x32cc03);
var a0_0x58d04c = a0_0x12658e;
a0_0x14a400.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x14a400.prototype.constructor = a0_0x14a400;
a0_0x14a400.superClass = a0_0x58d04c;
a0_0x14a400.prototype.updateZ = function () {
  this.z = -101;
};
a0_0x14a400.prototype.customDraw = function (_0x55c689) {
  a0_0x4ef4f3.save();
  if (this.specType == 0) {
    this.drawOutlinedCircle("", "#9F8641");
    a0_0x4ef4f3.globalAlpha = 0.6;
    a0_0x5c99c1(0 + this.rPer, 1, Math.max(0, this.rad * 0.9), "#5C4E28");
    a0_0x4ef4f3.globalAlpha = 0.7;
    a0_0x5c99c1(0 - this.rPer, 1, Math.max(0, this.rad * 0.8), "#40371D");
    a0_0x4ef4f3.globalAlpha = 0.9;
    a0_0x5c99c1(0 - this.rPer, 1, Math.max(0, this.rad * 0.8), "#40371D");
    a0_0x4ef4f3.globalAlpha = 0.5;
    a0_0x5c99c1(0 - this.rPer * 3, 1, Math.max(0, this.rad * 0.5), "black");
    a0_0x4ef4f3.globalAlpha = 1;
    a0_0x5c99c1(0 - this.rPer * 3, 1, Math.max(0, this.rad * 0.3), a0_0x5479b9);
  } else {
    this.drawOutlinedCircle("", "#9F8641");
    a0_0x5c99c1(0 - this.rPer, 0 - this.rPer, Math.max(0, this.rad - 7), "#7E6A35");
    a0_0x5c99c1(0 + this.rPer, 1, Math.max(0, this.rad - 14), "#5C4E28");
    a0_0x5c99c1(0 - this.rPer * 2 - 3, 1, Math.max(0, this.rad - 18.5), "#40371D");
  }
  a0_0x4ef4f3.restore();
};
function a0_0x14a400() {
  a0_0x14a400.superClass.call(this, a0_0x4b80cb);
  this.webTransparency = 0;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
window.SinkHole = a0_0x14a400;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x14a400, a0_0x77e380);
var a0_0x58d04c = a0_0x12658e;
a0_0x59b067.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x59b067.prototype.constructor = a0_0x59b067;
a0_0x59b067.superClass = a0_0x58d04c;
a0_0x59b067.prototype.mommyID = 0;
a0_0x59b067.prototype.updateZ = function () {
  this.z = -153;
};
a0_0x59b067.prototype.isEdibleOutlined = function () {
  if (this.mommyID == a0_0x1c918d) {
    return false;
  }
  var _0x517726 = a0_0x5ebad0.superClass.prototype.isEdibleOutlined.call(this);
  return _0x517726;
};
a0_0x59b067.prototype.customDraw = function (_0x58f93c) {
  a0_0x4ef4f3.save();
  var _0x20979a = this.getSkinImageObj("skins/land/ostrich/" + this.speciesType + "/ostrichEgg" + (this.isEdibleOutlined() ? "edible" : "") + ".png");
  if (_0x20979a) {
    var _0x595776 = this.rad;
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x20979a, -_0x595776, -_0x595776, _0x595776 * 2, _0x595776 * 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x59b067.prototype.getSkinImageObj = function (_0x32143c) {
  var _0x955edf = this.speciesType === 1 || this.speciesType === 2 || this.speciesType === 204 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x32143c, _0x955edf);
};
a0_0x59b067.prototype.readCustomData_onNewlyVisible = function (_0x3612f2) {
  a0_0x59b067.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x3612f2);
  this.mommyID = _0x3612f2.readUInt32();
  this.speciesType = _0x3612f2.readUInt8();
};
function a0_0x59b067() {
  a0_0x59b067.superClass.call(this, a0_0x53d1e5);
  this.doesDrawEffectScale = true;
}
window.OstrichEgg = a0_0x59b067;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x59b067, a0_0x53d1e5);
var a0_0x284c4d = a0_0x284c4d;
var a0_0x58d04c = a0_0x45645e;
a0_0x284c4d.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x284c4d.prototype.constructor = a0_0x284c4d;
a0_0x284c4d.superClass = a0_0x58d04c;
a0_0x284c4d.prototype.drawNickName = function (_0x7cdf8f) {
  if (this.flag_usingAbility && this.flag_flying || !this.flag_usingAbility || a0_0x4ff181.mode == a0_0x2a4d6d) {
    a0_0x284c4d.superClass.prototype.drawNickName.call(this, _0x7cdf8f);
  }
};
a0_0x284c4d.prototype.animalInfo = function () {
  var _0x92975c = {};
  switch (this.animalSpecies) {
    case 0:
    case 2:
      _0x92975c.aniName = "Macaw";
      break;
    case 1:
      _0x92975c.aniName = "Blue Macaw";
      break;
    case 111:
      _0x92975c.aniName = "Classic Macaw";
      break;
    case 112:
      _0x92975c.aniName = "Gold-trim Macaw";
      break;
  }
  _0x92975c.aniCol = "#FF9000";
  _0x92975c.skinName = this.getSpeciesPath("macaw") + "/macaw";
  _0x92975c.upgradeText = "UPGRADED to " + (this.animalSpecies == 2 ? "Rare " : "") + _0x92975c.aniName + "!\nHold W to fly around.\n(Hint: Use ability on hills to mimic animals) ";
  return _0x92975c;
};
a0_0x284c4d.prototype.getSkinName = function () {
  var _0x3ca702 = this.getSpeciesPath("macaw") + "/macaw";
  _0x3ca702 += this.specType == 0 ? "" : this.specType;
  return _0x3ca702;
};
a0_0x284c4d.prototype.getSpeciesPath = function (_0x23a890) {
  return "land/" + _0x23a890 + "/" + this.animalSpecies;
};
a0_0x284c4d.prototype.getWing = function (_0x5b01fb, _0x42c388, _0x694860) {
  var _0x3fd04f = "skins/" + (_0x694860 ? this.getSpeciesPath(_0x5b01fb) + "/" : _0x5b01fb + "/");
  _0x3fd04f += _0x5b01fb + "_wing" + _0x42c388 + ".png";
  return _0x3fd04f;
};
a0_0x284c4d.prototype.getHead = function (_0x3e8cf0, _0x2da642) {
  var _0x224206 = "skins/" + (_0x2da642 ? this.getSpeciesPath(_0x3e8cf0) + "/" : _0x3e8cf0 + "/");
  _0x224206 += _0x3e8cf0 + "_head.png";
  return _0x224206;
};
a0_0x284c4d.prototype.getAniRadius = function (_0x4b8260) {
  if (this.flag_flying) {
    return _0x4b8260 * 0.9;
  } else {
    return _0x4b8260;
  }
};
a0_0x284c4d.prototype.basicDrawSkinImg = function () {
  if (this.flag_usingAbility) {
    if (!this.flag_flying && this.octoDrawObj != null) {
      return;
    }
  }
  var _0x140d98 = 0.05;
  var _0x3ce11e = -0.08;
  var _0x3bcd32 = 1.1;
  this.setSkinScale();
  var _0x5921f0 = this.getAniRadius(this.skinRad - this.outlineW);
  var _0x50e001 = 500 / 340;
  if (this.loadedSkinImg) {
    a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x5921f0 * _0x50e001, -_0x5921f0 * _0x50e001, _0x5921f0 * 2 * _0x50e001, _0x5921f0 * 2 * _0x50e001);
  }
};
var a0_0x1a17fd = 1.7;
var a0_0x49f711 = 2.2;
a0_0x284c4d.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x242fbc = this.getAniRadius(this.skinRad - this.outlineW);
  var _0xf17f5c = _0x242fbc * 0.8;
  if (this.flag_flying) {
    var _0xc0a8b0 = 500 / 340;
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x4ef4f3.save();
      let _0x3a1d76 = a0_0x232cc7("bird", this.spawnTime);
      if (_0x3a1d76 !== undefined && _0x3a1d76 != null) {
        this.theFrame = _0x3a1d76;
      }
      let _0x44c644 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      var _0x1018bb = this.getSkinImageObj(this.getWing("macaw", 1, true));
      if (_0x1018bb) {
        a0_0x4ef4f3.save();
        var _0x5da4a0 = -(-0.2 + _0x44c644) * a0_0x2b691e;
        a0_0x4ef4f3.rotate(a0_0x28bda2 + _0x5da4a0);
        var _0x1f395f = 0;
        var _0x42ebeb = _0xf17f5c;
        var _0x13f16f = _0xf17f5c * 2 * 0.62;
        var _0x1ae5f2 = _0xf17f5c * a0_0x49f711;
        var _0x58eec5 = 0.2;
        var _0x3afbff = a0_0x1a17fd;
        a0_0x4ef4f3.drawImage(_0x1018bb, _0x1f395f + _0x13f16f * -_0x58eec5, _0x42ebeb + _0x1ae5f2 * -_0x3afbff, _0x13f16f, _0x1ae5f2);
        a0_0x4ef4f3.restore();
      }
      var _0x1018bb = this.getSkinImageObj(this.getWing("macaw", 2, true));
      if (_0x1018bb) {
        a0_0x4ef4f3.save();
        var _0x5da4a0 = -(-0.2 + _0x44c644) * -a0_0x2b691e;
        a0_0x4ef4f3.rotate(-a0_0x28bda2 + _0x5da4a0);
        var _0x1f395f = 0;
        var _0x42ebeb = _0xf17f5c;
        var _0x13f16f = _0xf17f5c * 2 * 0.62;
        var _0x1ae5f2 = _0xf17f5c * a0_0x49f711;
        var _0x58eec5 = 0.8;
        var _0x3afbff = a0_0x1a17fd;
        a0_0x4ef4f3.drawImage(_0x1018bb, _0x1f395f + _0x13f16f * -_0x58eec5, _0x42ebeb + _0x1ae5f2 * -_0x3afbff, _0x13f16f, _0x1ae5f2);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x54af59 = this.getSkinImageObj(this.getHead("macaw", true));
      if (_0x54af59) {
        a0_0x4ef4f3.save();
        var _0x242fbc = this.rad;
        a0_0x4ef4f3.drawImage(_0x54af59, -_0x242fbc * _0xc0a8b0, (-_0x242fbc + _0x242fbc * 0.2) * _0xc0a8b0, _0x242fbc * 2 * _0xc0a8b0, _0x242fbc * 2 * _0xc0a8b0);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
a0_0x284c4d.prototype.readCustomData_onNewlyVisible = function (_0x1b10c9) {
  a0_0x284c4d.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x1b10c9);
  this.customUpdatedProperty(a0_0x40b66c, _0x1b10c9);
};
a0_0x284c4d.prototype.customUpdatedProperty = function (_0x5effc9, _0x44e069) {
  if (_0x5effc9 == a0_0x40b66c) {
    var _0x56365f = _0x44e069.readUInt8() == 1;
    if (_0x56365f) {
      var _0x5d4b7a = _0x44e069.readUInt16();
      var _0x25562f = _0x44e069.readUInt16();
      this.createDisguiseAniObj(_0x5d4b7a, _0x25562f);
    } else {
      this.octoDrawObj = null;
    }
  }
};
a0_0x284c4d.prototype.createDisguiseAniObj = function (_0x35d47a, _0xe448d9) {
  if (this.octoDrawObj == null) {
    var _0x1df018 = a0_0xa5d548.createGameObjOfOType(a0_0x1370b8, _0x35d47a);
    _0x1df018.animalType = _0x35d47a;
    _0x1df018.animalSpecies = _0xe448d9;
    _0x1df018.rad = _0x1df018.oRad = _0x1df018.nRad = this.rad;
    _0x1df018.curBiome = this.curBiome;
    _0x1df018.hp = 5 + Math.random() * 50;
    this.octoDrawObj = _0x1df018;
  }
};
a0_0x284c4d.prototype.drawHealthBar = function () {
  if (this.flag_usingAbility && !this.flag_flying && this.octoDrawObj != null) {
    this.octoDrawObj.curBiome = this.curBiome;
    this.hpPer_n = 1;
    this.hpPer = this.octoDrawObj.hp;
    this.hpBarA = 1;
  }
  a0_0x4ef4f3.save();
  var _0x463a96 = a0_0x4f736f < this.hpBarTimeoutT ? 1 : 0;
  this.hpBarA += (_0x463a96 - this.hpBarA) * 0.04;
  if (this.hpBarA > 0.001) {
    this.hpPer += (this.hpPer_n - this.hpPer) * 0.1;
    var _0x4dbf32 = Math.max(1, this.rad / 25);
    var _0x13605c = _0x4dbf32 * 20;
    var _0x560e3f = _0x4dbf32 * 5;
    var _0x552733 = 0;
    var _0x1bbfb1 = -this.rad - _0x4dbf32 * 10;
    a0_0x4ef4f3.globalAlpha *= this.hpBarA;
    a0_0x4ef4f3.fillStyle = "rgba(0,0,0,0.35)";
    a0_0x4ef4f3.fillRect(_0x552733 - _0x13605c / 2, _0x1bbfb1 - _0x560e3f / 2, _0x13605c, _0x560e3f);
    a0_0x4ef4f3.fillStyle = "#16D729";
    var _0xb3ed4e = _0x13605c * (this.hpPer / 100);
    if (this.flag_usingAbility && this.octoIsAnimal) {
      _0xb3ed4e = _0x13605c * (25 / 100);
    }
    a0_0x4ef4f3.fillRect(_0x552733 - _0x13605c / 2, _0x1bbfb1 - _0x560e3f / 2, _0xb3ed4e, _0x560e3f);
  }
  a0_0x4ef4f3.restore();
};
a0_0x284c4d.prototype.drawOnTopOfSkinImg = function () {
  a0_0x284c4d.superClass.prototype.drawOnTopOfSkinImg.call(this);
  if (this.flag_usingAbility && !this.flag_flying) {
    if (this.octoDrawObj != null) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 1;
      this.octoDrawObj.mopeSeasonID = 1;
      this.octoDrawObj.rad = this.rad;
      this.octoDrawObj.draw();
      a0_0x4ef4f3.restore();
    }
  }
};
function a0_0x284c4d() {
  a0_0x284c4d.superClass.call(this, a0_0x1370b8);
}
window.Macaw = a0_0x284c4d;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x284c4d, a0_0x1370b8, a0_0x2d643d);
var a0_0x141a10 = a0_0x141a10;
var a0_0x58d04c = a0_0x45645e;
a0_0x141a10.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x141a10.prototype.constructor = a0_0x141a10;
a0_0x141a10.superClass = a0_0x58d04c;
a0_0x141a10.prototype.getSkinName = function () {
  var _0x3cee80 = this.getSpeciesPath("flamingo") + "/flamingo";
  _0x3cee80 += this.specType == 0 ? "" : this.specType;
  return _0x3cee80;
};
a0_0x141a10.prototype.animalInfo = function () {
  var _0x225755 = {
    aniName: "Flamingo"
  };
  switch (this.animalSpecies) {
    case 111:
      _0x225755.aniName = "Classic Flamingo";
      break;
    case 112:
      _0x225755.aniName = "Gold-trim Flamingo";
      break;
    case 202:
      _0x225755.aniName = "Fly Mango";
      break;
  }
  _0x225755.aniCol = "#FF9000";
  _0x225755.skinName = this.getSpeciesPath("flamingo") + "/flamingo";
  _0x225755.upgradeText = "UPGRADED to " + _0x225755.aniName + "!\nHold W in water to search for food underwater.\n(Tip: Any nearby underwater animals will get surfaced by the flamingo!)";
  return _0x225755;
};
a0_0x141a10.prototype.getSpeciesPath = function (_0x18f122) {
  return "ocean/" + _0x18f122 + "/" + this.animalSpecies;
};
a0_0x141a10.prototype.getWing = function (_0x2b7245, _0x5f3108, _0x43c54e) {
  var _0x68e877 = "skins/" + this.getSpeciesPath(_0x2b7245) + (_0x43c54e ? "/pink" : "") + "/";
  _0x68e877 += _0x2b7245 + "_wing" + _0x5f3108 + ".png";
  return _0x68e877;
};
a0_0x141a10.prototype.getHead = function (_0x4b7345, _0x1fa7a8) {
  var _0x299048 = "skins/" + this.getSpeciesPath(_0x4b7345) + (_0x1fa7a8 ? "/pink" : "") + "/";
  _0x299048 += _0x4b7345 + "_head.png";
  return _0x299048;
};
a0_0x141a10.prototype.basicDrawSkinImg = function () {
  a0_0x141a10.superClass.prototype.basicDrawSkinImg.call(this);
  if (!this.flag_underWater && this.id > 0) {
    var _0x53e293 = this.skinScale;
    var _0x50c04a = this.skinRad;
    var _0x564728 = "skins/" + this.getSpeciesPath("flamingo") + "/pink/flamingo";
    _0x564728 += this.specType == 0 ? "" : this.specType;
    var _0x4bb775 = this.getSkinImageObj(_0x564728 + ".png");
    if (_0x4bb775) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = this.colorPerc;
      a0_0x4ef4f3.drawImage(_0x4bb775, -_0x50c04a * _0x53e293, -_0x50c04a * _0x53e293, _0x50c04a * 2 * _0x53e293, _0x50c04a * 2 * _0x53e293);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x141a10.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x5201e8 = 500 / 340;
  a0_0x4ef4f3.save();
  var _0x39a689 = this.flag_flying ? 45 : 47;
  var _0x73e454 = this.flag_flying ? 90 : 45;
  var _0x283eb8 = this.flag_flying ? 0.2 : 0.01;
  var _0x5e2f69 = this.flag_flying ? 2.5 : 2;
  var _0x1e42a7 = this.flag_flying ? 2 : 2.5;
  var _0x40ea9a = this.flag_flying ? 0.5 : 1.2;
  var _0x59dcd6 = (a0_0x4f736f - this.spawnTime) / 1000;
  if (this.flag_flying) {
    var _0x3b4e62 = a0_0x232cc7("bird", this.spawnTime);
    if (_0x3b4e62 !== undefined && _0x3b4e62 != null) {
      this.theFrame = _0x3b4e62;
    }
  } else {
    this.theFrame = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x59dcd6, _0x40ea9a, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
  }
  var _0xc5d26f = this.theFrame;
  var _0x210d02 = this.getSkinImageObj(this.getWing("flamingo", 1, false));
  if (_0x210d02) {
    a0_0x4ef4f3.save();
    var _0x19e756 = -(-_0x283eb8 + _0xc5d26f) * a0_0x844a6b(_0x73e454);
    var _0x2c4476 = this.rad * 0.8;
    a0_0x4ef4f3.rotate(a0_0x844a6b(_0x39a689) + _0x19e756);
    var _0x2e93f2 = 0;
    var _0x557b73 = this.rad;
    var _0x20a28b = _0x2c4476 * _0x1e42a7 * 0.62;
    var _0x444108 = _0x2c4476 * _0x5e2f69;
    var _0xe88d78 = 0.2;
    var _0x3db03b = 1.7;
    a0_0x4ef4f3.drawImage(_0x210d02, _0x2e93f2 + _0x20a28b * -_0xe88d78, _0x557b73 + _0x444108 * -_0x3db03b, _0x20a28b, _0x444108);
    a0_0x4ef4f3.restore();
  }
  var _0x210d02 = this.getSkinImageObj(this.getWing("flamingo", 2, false));
  if (_0x210d02) {
    a0_0x4ef4f3.save();
    var _0x19e756 = -(-_0x283eb8 + _0xc5d26f) * a0_0x844a6b(-_0x73e454);
    var _0x2c4476 = this.rad * 0.8;
    a0_0x4ef4f3.rotate(a0_0x844a6b(-_0x39a689) + _0x19e756);
    var _0x2e93f2 = 0;
    var _0x557b73 = this.rad;
    var _0x20a28b = _0x2c4476 * _0x1e42a7 * 0.62;
    var _0x444108 = _0x2c4476 * _0x5e2f69;
    var _0xe88d78 = 0.8;
    var _0x3db03b = 1.7;
    a0_0x4ef4f3.drawImage(_0x210d02, _0x2e93f2 + _0x20a28b * -_0xe88d78, _0x557b73 + _0x444108 * -_0x3db03b, _0x20a28b, _0x444108);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
  if (this.specType == 1) {
    var _0x430ed5 = this.getSkinImageObj(this.getHead("flamingo", false));
    if (_0x430ed5) {
      a0_0x4ef4f3.save();
      var _0x2c4476 = this.rad;
      a0_0x4ef4f3.drawImage(_0x430ed5, -_0x2c4476 * _0x5201e8, (-_0x2c4476 + _0x2c4476 * 0.1) * _0x5201e8, _0x2c4476 * 2 * _0x5201e8, _0x2c4476 * 2 * _0x5201e8);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x141a10.prototype.drawUnderSkinImgOutline = function () {
  a0_0x141a10.superClass.prototype.drawUnderSkinImgOutline.call(this);
  if (this.flag_usingAbility && !this.flag_flying) {
    var _0x46d56e = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x88b193 = 1.5;
    var _0x37c93f = 0.5;
    var _0xba4544 = _0x37c93f * Math.sin(Math.PI * 2 / _0x88b193 * _0x46d56e);
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha *= 0.8;
    a0_0x5c99c1(0, this.rad * (0.9 + _0xba4544 * 0.12), this.rad * 0.3, "#2c84ff");
    a0_0x5c99c1(0, -this.rad * 0.3, this.rad * (1.05 + _0xba4544 * 0.09), "#4668ff");
    a0_0x4ef4f3.restore();
    a0_0x4ef4f3.save();
    var _0x4a9ca7 = "#4E71C3";
    a0_0x4ef4f3.globalAlpha = 1;
    a0_0x4ef4f3.fillStyle = _0x4a9ca7;
    var _0x5a99c8 = this.rad * 0.1;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad * -0.3, this.rad * 1.2, Math.max(0, _0x5a99c8 + _0xba4544), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad * 0.2, this.rad * 1.5, Math.max(0, _0x5a99c8 - _0xba4544), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad * 0.3, this.rad * 1.2, Math.max(0, _0x5a99c8 + _0xba4544), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad * -0.2, this.rad * 1.5, Math.max(0, _0x5a99c8 - _0xba4544), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.restore();
  }
};
a0_0x141a10.prototype.readCustomData_onNewlyVisible = function (_0x1027e4) {
  a0_0x141a10.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x1027e4);
  var _0x39905a = _0x1027e4.readUInt8();
  this.colorPerc = _0x39905a / 100;
};
a0_0x141a10.prototype.customUpdatedProperty = function (_0x34e897, _0x210b36) {
  if (_0x34e897 == a0_0x41aa15) {
    var _0xf92277 = _0x210b36.readUInt8();
    this.colorPerc = _0xf92277 / 100;
  }
};
function a0_0x141a10() {
  a0_0x141a10.superClass.call(this, a0_0x1370b8);
}
window.Flamingo = a0_0x141a10;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x141a10, a0_0x1370b8, a0_0x17136b);
var a0_0x58d04c = a0_0x45645e;
a0_0x47d313.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x47d313.prototype.constructor = a0_0x47d313;
a0_0x47d313.superClass = a0_0x58d04c;
a0_0x47d313.prototype.getSkinName = function () {
  let _0x4959c6 = this.getSpeciesPath() + "/cassowary";
  _0x4959c6 += this.specType == 0 ? "" : this.specType;
  return _0x4959c6;
};
a0_0x47d313.prototype.getSpeciesPath = function () {
  return "land/cassowary/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x47d313.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x47d313.prototype.getAbilityInfo = function (_0x242ba8) {
  var _0x460eec = {
    abilName: "Front Kick\n(Hold to Charge)"
  };
  _0x460eec.abilImg = "skins/land/cassowary/" + this.animalSpecies + this.getSubSpecies() + "/cassowary2.png";
  _0x460eec.skinThemeID = this.skinThemeID;
  _0x460eec.mopeSeasonID = this.mopeSeasonID;
  return _0x460eec;
};
a0_0x47d313.prototype.animalInfo = function () {
  var _0x2f2dc7 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x2f2dc7.aniName = "Cassowary!";
      break;
    case 1:
      _0x2f2dc7.aniName = "Golden Cassowary!";
      break;
    case 2:
      _0x2f2dc7.aniName = "Cotton Cassowary!";
      break;
    case 111:
      _0x2f2dc7.aniName = "Classic Cassowary";
      break;
    case 202:
      _0x2f2dc7.aniName = "Pastel Cassowary";
      break;
    case 204:
      _0x2f2dc7.aniName = "Basilisk Cassowary!";
      break;
  }
  _0x2f2dc7.aniCol = "#FF9000";
  _0x2f2dc7.skinName = this.getSkinName();
  _0x2f2dc7.upgradeText = "UPGRADED to " + _0x2f2dc7.aniName + "!\nHold W to charge up a kick, the longer you hold, the more powerful it is!";
  return _0x2f2dc7;
};
function a0_0x47d313() {
  a0_0x47d313.superClass.call(this, a0_0x1370b8);
}
window.Cassowary = a0_0x47d313;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x47d313, a0_0x1370b8, a0_0x562756);
var a0_0x58d04c = a0_0x45645e;
a0_0x3d0246.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3d0246.prototype.constructor = a0_0x3d0246;
a0_0x3d0246.superClass = a0_0x58d04c;
a0_0x3d0246.prototype.getSkinName = function () {
  var _0x1420e2 = "land/chicken/" + this.animalSpecies + "/chicken";
  _0x1420e2 += this.specType == 0 ? "" : this.specType;
  return _0x1420e2;
};
a0_0x3d0246.prototype.animalInfo = function () {
  var _0x1326f6 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x1326f6.aniName = "Chicken";
      break;
    case 111:
      _0x1326f6.aniName = "Classic Chicken";
      break;
    case 112:
      _0x1326f6.aniName = "Gold-trim Chicken";
      break;
    case 201:
      _0x1326f6.aniName = "Countryside Chick";
      break;
    case 202:
      _0x1326f6.aniName = "Lightning Lord";
      break;
  }
  _0x1326f6.aniCol = "#FF9000";
  _0x1326f6.skinName = "land/chicken/" + this.animalSpecies + "/chicken";
  _0x1326f6.upgradeText = "UPGRADED to " + _0x1326f6.aniName + "!";
  return _0x1326f6;
};
a0_0x3d0246.prototype.getWing = function (_0x3dcff8, _0x2fab73, _0x36407c) {
  var _0x4720e2 = "skins/land/" + (_0x36407c ? this.getSpeciesPath(_0x3dcff8) + "/" : _0x3dcff8 + "/");
  _0x4720e2 += _0x3dcff8 + "_wing" + _0x2fab73 + ".png";
  return _0x4720e2;
};
a0_0x3d0246.prototype.getHead = function (_0x1ebfcb, _0x932a28) {
  var _0x45e857 = "skins/land/" + (_0x932a28 ? this.getSpeciesPath(_0x1ebfcb) + "/" : _0x1ebfcb + "/");
  _0x45e857 += _0x1ebfcb + "_head.png";
  return _0x45e857;
};
a0_0x3d0246.prototype.getAbilityInfo = function (_0x2a01c8) {
  var _0x44d872 = {
    abilName: "Run!",
    abilImg: "skins/land/chicken/" + this.animalSpecies + "/ability.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x44d872;
};
a0_0x3d0246.prototype.drawSkinCustomization = function () {
  var _0x157302 = 500 / 340;
  if (this.flag_usingAbility) {
    a0_0x4ef4f3.save();
    var _0x341698 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x44bcb8 = a0_0xe2d896(_0x341698, 0.3, 1, 2);
    var _0x237af9 = this.getSkinImageObj(this.getWing("chicken", 1, true));
    if (_0x237af9) {
      a0_0x4ef4f3.save();
      var _0x3927b6 = -(-0.2 + _0x44bcb8) * a0_0x844a6b(15);
      var _0x2acb54 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(15) + _0x3927b6);
      var _0x2d2018 = 0;
      var _0x11f561 = this.rad;
      var _0x25b1e0 = _0x2acb54 * 2 * 0.7;
      var _0xa93a41 = _0x2acb54 * 2.2;
      var _0x54fc8c = 0;
      var _0x4bec33 = 1.5;
      a0_0x4ef4f3.drawImage(_0x237af9, _0x2d2018 + _0x25b1e0 * -_0x54fc8c, _0x11f561 + _0xa93a41 * -_0x4bec33, _0x25b1e0, _0xa93a41);
      a0_0x4ef4f3.restore();
    }
    var _0x237af9 = this.getSkinImageObj(this.getWing("chicken", 2, true));
    if (_0x237af9) {
      a0_0x4ef4f3.save();
      var _0x3927b6 = -(-0.2 + _0x44bcb8) * a0_0x844a6b(-15);
      var _0x2acb54 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-15) + _0x3927b6);
      var _0x2d2018 = 0;
      var _0x11f561 = this.rad;
      var _0x25b1e0 = _0x2acb54 * 2 * 0.7;
      var _0xa93a41 = _0x2acb54 * 2.2;
      var _0x54fc8c = 1;
      var _0x4bec33 = 1.5;
      a0_0x4ef4f3.drawImage(_0x237af9, _0x2d2018 + _0x25b1e0 * -_0x54fc8c, _0x11f561 + _0xa93a41 * -_0x4bec33, _0x25b1e0, _0xa93a41);
      a0_0x4ef4f3.restore();
    }
    var _0x466a17 = this.getSkinImageObj(this.getHead("chicken", true));
    if (_0x466a17) {
      a0_0x4ef4f3.save();
      var _0x2acb54 = this.rad * 1;
      var _0x303522 = -this.rad * 0.1;
      a0_0x4ef4f3.drawImage(_0x466a17, -_0x2acb54 * _0x157302, -_0x2acb54 + _0x303522 * _0x157302, _0x2acb54 * 2 * _0x157302, _0x2acb54 * 2 * _0x157302);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  }
};
function a0_0x3d0246() {
  a0_0x3d0246.superClass.call(this, a0_0x1370b8);
}
window.Chicken = a0_0x3d0246;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3d0246, a0_0x1370b8, a0_0x402d5a);
var a0_0x3a1c6a = a0_0x3a1c6a;
var a0_0x58d04c = a0_0x45645e;
a0_0x3a1c6a.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3a1c6a.prototype.constructor = a0_0x3a1c6a;
a0_0x3a1c6a.superClass = a0_0x58d04c;
a0_0x3a1c6a.prototype.animalInfo = function () {
  var _0x5ba6cf = {
    aniName: "Woodpecker"
  };
  switch (this.animalSpecies) {
    case 111:
      _0x5ba6cf.aniName = "Classic Woodpecker";
      break;
    case 112:
      _0x5ba6cf.aniName = "Gold-trim Woodpecker";
      break;
    case 202:
      _0x5ba6cf.aniName = "Jackhammer";
      break;
  }
  _0x5ba6cf.aniCol = "#FF9000";
  _0x5ba6cf.skinName = this.getSpeciesPath("woodpecker") + "/woodpecker";
  _0x5ba6cf.upgradeText = "UPGRADED to " + _0x5ba6cf.aniName + "!\nHold W to Peck other animals,\n or (Hint: Use ability on hills to fly)";
  return _0x5ba6cf;
};
a0_0x3a1c6a.prototype.getSpeciesPath = function (_0x520fe5) {
  return "land/" + _0x520fe5 + "/" + this.animalSpecies;
};
a0_0x3a1c6a.prototype.getSkinName = function () {
  var _0x2e4a6f = this.getSpeciesPath("woodpecker") + "/woodpecker";
  _0x2e4a6f += this.specType == 0 ? "" : this.specType;
  return _0x2e4a6f;
};
a0_0x3a1c6a.prototype.getHead = function (_0x3f0bc4, _0x3b6960) {
  var _0x159896 = "skins/" + (_0x3b6960 ? this.getSpeciesPath(_0x3f0bc4) + "/" : _0x3f0bc4 + "/");
  _0x159896 += _0x3f0bc4 + "_head" + (!this.flag_flying && this.flag_usingAbility ? "1" : "") + ".png";
  return _0x159896;
};
a0_0x3a1c6a.prototype.getAniRadius = function (_0x44de2d) {
  if (this.flag_usingAbility && this.flag_flying) {
    return _0x44de2d * 0.8;
  }
  return _0x44de2d;
};
a0_0x3a1c6a.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x5eaa68 = "skins";
  {
    var _0x251037 = 500 / 340;
    a0_0x4ef4f3.save();
    var _0xac33fb = this.flag_flying ? 45 : 47;
    var _0x13e49d = this.flag_flying ? 90 : 45;
    var _0x461b92 = this.flag_flying ? 0.2 : 0.01;
    var _0x37519e = this.flag_flying ? 2.5 : 2;
    var _0x5b89dc = this.flag_flying ? 2.2 : 2.5;
    var _0x542606 = this.flag_flying ? 0.5 : 0.3;
    var _0x2e03bf = 0.3;
    var _0x35bc6b = (a0_0x4f736f - this.spawnTime) / 1000;
    if (this.flag_flying) {
      var _0x4266b6 = a0_0x232cc7("bird", this.spawnTime);
      if (_0x4266b6 !== undefined && _0x4266b6 != null) {
        this.theFrame = _0x4266b6;
      }
    } else {
      this.theFrame = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x35bc6b, _0x542606, _0x2e03bf, 2) : this.birdNoAnimationFlyWingAngle;
    }
    var _0x141ba1 = this.theFrame;
    var _0x1fda3c = this.getSkinImageObj(this.getWing("woodpecker", 1, true));
    if (_0x1fda3c) {
      a0_0x4ef4f3.save();
      var _0x3bd55d = -(-_0x461b92 + _0x141ba1) * a0_0x844a6b(_0x13e49d);
      var _0x340c94 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(_0xac33fb) + _0x3bd55d);
      var _0x5ecff1 = 0;
      var _0x5f4aea = this.rad;
      var _0x451aa5 = _0x340c94 * _0x5b89dc * 0.62;
      var _0x2d8a31 = _0x340c94 * _0x37519e;
      var _0x322b6d = 0.2;
      var _0x3785bd = 1.7;
      a0_0x4ef4f3.drawImage(_0x1fda3c, _0x5ecff1 + _0x451aa5 * -_0x322b6d, _0x5f4aea + _0x2d8a31 * -_0x3785bd, _0x451aa5, _0x2d8a31);
      a0_0x4ef4f3.restore();
    }
    var _0x1fda3c = this.getSkinImageObj(this.getWing("woodpecker", 2, true));
    if (_0x1fda3c) {
      a0_0x4ef4f3.save();
      var _0x3bd55d = -(-_0x461b92 + _0x141ba1) * a0_0x844a6b(-_0x13e49d);
      var _0x340c94 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-_0xac33fb) + _0x3bd55d);
      var _0x5ecff1 = 0;
      var _0x5f4aea = this.rad;
      var _0x451aa5 = _0x340c94 * _0x5b89dc * 0.62;
      var _0x2d8a31 = _0x340c94 * _0x37519e;
      var _0x322b6d = 0.8;
      var _0x3785bd = 1.7;
      a0_0x4ef4f3.drawImage(_0x1fda3c, _0x5ecff1 + _0x451aa5 * -_0x322b6d, _0x5f4aea + _0x2d8a31 * -_0x3785bd, _0x451aa5, _0x2d8a31);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
    if (this.specType != 0 && this.specType != undefined) {
      var _0x5f17d2 = this.getSkinImageObj(this.getHead("woodpecker", true));
      if (_0x5f17d2) {
        _0x141ba1 = 0;
        if (!this.flag_flying) {
          _0x2e03bf = 3;
          _0x542606 = 0.18;
          _0x141ba1 = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x35bc6b, _0x542606, _0x2e03bf, 2) : this.birdNoAnimationFlyWingAngle;
        }
        a0_0x4ef4f3.save();
        var _0x340c94 = this.rad;
        var _0x1f295e = !this.flag_flying ? (-_0x340c94 + _0x340c94 * 0.1) * _0x251037 + _0x141ba1 : -_0x340c94;
        a0_0x4ef4f3.drawImage(_0x5f17d2, -_0x340c94 * _0x251037, _0x1f295e, _0x340c94 * 2 * _0x251037, _0x340c94 * 2 * _0x251037);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
function a0_0x3a1c6a() {
  a0_0x3a1c6a.superClass.call(this, a0_0x1370b8);
}
window.Woodpecker = a0_0x3a1c6a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3a1c6a, a0_0x1370b8, a0_0xe8222c);
var a0_0x2a1033 = a0_0x2a1033;
var a0_0x58d04c = a0_0x45645e;
a0_0x2a1033.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2a1033.prototype.constructor = a0_0x2a1033;
a0_0x2a1033.superClass = a0_0x58d04c;
a0_0x2a1033.prototype.updateZ = function () {
  if (this.flag_usingAbility) {
    if (this.flag_flying) {
      this.z = 100000 + this.rad;
      return;
    }
  }
  this.z = 1000 + this.rad;
};
a0_0x2a1033.prototype.animalInfo = function () {
  var _0x1d7183 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x1d7183.aniName = "Peacock";
      break;
    case 111:
      _0x1d7183.aniName = "Classic Peacock";
      break;
    case 112:
      _0x1d7183.aniName = "Gold-trim Peacock";
      break;
    case 200:
      _0x1d7183.aniName = "Plague Raptor";
      break;
    case 202:
      _0x1d7183.aniName = "Spectrum Peacock";
      break;
  }
  _0x1d7183.aniCol = "#FF9000";
  _0x1d7183.skinName = this.getSpeciesPath("peacock") + "/peacock";
  _0x1d7183.upgradeText = "UPGRADED to " + _0x1d7183.aniName + "!\nHold W to hypnotize prey: prey gets pulled in, predtors pushed!. \nHint:Start the ability on a hill to fly!. ";
  return _0x1d7183;
};
a0_0x2a1033.prototype.getSkinName = function () {
  if (this.mopeSeasonID == 1) {
    if (this.flag_usingAbility) {
      if (this.flag_flying) {
        return this.getSpeciesPath("peacock") + "/peacock_flying_tail";
      } else {
        return this.getSpeciesPath("peacock") + "/tail3";
      }
    }
    return this.getSpeciesPath("peacock") + "/tail1";
  } else {
    var _0x23170b = this.getSpeciesPath("peacock") + "/peacock";
    _0x23170b += this.specType == 0 ? "" : this.specType;
    return _0x23170b;
  }
};
a0_0x2a1033.prototype.getSpeciesPath = function (_0xa78ef) {
  return "land/" + _0xa78ef + "/" + this.animalSpecies;
};
a0_0x2a1033.prototype.getWing = function (_0x5a48e7, _0x488d5c, _0x42a23f) {
  var _0x224675 = "skins/" + (_0x42a23f ? this.getSpeciesPath(_0x5a48e7) + "/" : _0x5a48e7 + "/");
  _0x224675 += _0x5a48e7 + "_wing" + _0x488d5c + ".png";
  return _0x224675;
};
a0_0x2a1033.prototype.getHead = function (_0x5e4391, _0x3ec500) {
  var _0x271f17 = "skins/" + (_0x3ec500 ? this.getSpeciesPath(_0x5e4391) + "/" : _0x5e4391 + "/");
  _0x271f17 += _0x5e4391 + "_head.png";
  return _0x271f17;
};
a0_0x2a1033.prototype.getAniRadius = function (_0x594a39) {
  if (this.flag_usingAbility && this.flag_flying) {
    return _0x594a39 * 0.9;
  }
  return _0x594a39;
};
a0_0x2a1033.prototype.getSkinImageObj = function (_0x40d9e4) {
  var _0x5884ed = this.animalSpecies === 200 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x40d9e4, _0x5884ed);
};
a0_0x2a1033.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  if (this.mopeSeasonID == 1) {
    var _0x273f3c = this.skinRad;
    if (this.loadedSkinImg) {
      if (!this.flag_usingAbility) {
        a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x273f3c * this.skinScale, -_0x273f3c * 1.25 * this.skinScale, _0x273f3c * 2 * this.skinScale, _0x273f3c * 2 * this.skinScale);
        var _0x3fc50b = this.getSkinImageObj("skins/" + this.getSpeciesPath("peacock") + "/peacock_top.png");
        if (_0x3fc50b) {
          a0_0x4ef4f3.drawImage(_0x3fc50b, -_0x273f3c * this.skinScale, -_0x273f3c * this.skinScale, _0x273f3c * 2 * this.skinScale, _0x273f3c * 2 * this.skinScale);
        }
      } else {
        a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x273f3c * this.skinScale, -_0x273f3c * 1.75 * this.skinScale, _0x273f3c * 2 * this.skinScale, _0x273f3c * 2.5 * this.skinScale);
      }
    }
  } else {
    var _0x4dd0b5 = 0.05;
    var _0x14e213 = -0.8;
    var _0x273f3c = this.getAniRadius(this.skinRad - this.outlineW);
    var _0x188e37 = 500 / 340;
    if (!this.flag_flying && this.flag_usingAbility) {
      var _0x3b3e93 = -0.55;
      var _0x1d7c66 = "peacock_ability";
      var _0x54a574 = this.getSkinImageObj("skins/land/peacock/" + this.animalSpecies + "/" + _0x1d7c66 + ".png");
      var _0x2d7272 = this.skinScale + (this.flag_usingAbility && !this.flag_flying ? 1 : 0);
      if (_0x54a574) {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.drawImage(_0x54a574, -_0x273f3c * _0x2d7272, (-_0x273f3c + _0x273f3c * _0x3b3e93) * _0x2d7272, _0x273f3c * 2 * _0x2d7272, _0x273f3c * 2 * _0x2d7272);
        a0_0x4ef4f3.restore();
      }
    }
    if (this.loadedSkinImg) {
      var _0x26a011 = this.flag_usingAbility && !this.flag_flying ? this.skinScale * 1.1 : _0x188e37;
      a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x273f3c * _0x26a011, (-_0x273f3c + _0x273f3c * _0x4dd0b5) * _0x26a011, _0x273f3c * 2 * _0x26a011, _0x273f3c * 2 * _0x26a011);
      if (this.flag_flying || !this.flag_usingAbility) {
        var _0x1d7c66 = "tail";
        var _0x54a574 = this.getSkinImageObj("skins/land/peacock/" + this.animalSpecies + "/" + _0x1d7c66 + ".png");
        var _0x2d7272 = this.skinScale;
        if (_0x54a574) {
          a0_0x4ef4f3.save();
          var _0x273f3c = this.rad - this.outlineW;
          a0_0x4ef4f3.drawImage(_0x54a574, -_0x273f3c * _0x2d7272, (-_0x273f3c + _0x273f3c * _0x14e213) * _0x2d7272, _0x273f3c * 2 * _0x2d7272, _0x273f3c * 2 * _0x2d7272);
          a0_0x4ef4f3.restore();
        }
      }
      if (!this.flag_usingAbility) {
        var _0x3fc50b = this.getSkinImageObj("skins/" + this.getSpeciesPath("peacock") + "/peacock_top.png");
        if (_0x3fc50b) {
          a0_0x4ef4f3.drawImage(_0x3fc50b, -_0x273f3c * _0x188e37, (-_0x273f3c + _0x273f3c * _0x4dd0b5) * _0x188e37, _0x273f3c * 2 * _0x188e37, _0x273f3c * 2 * _0x188e37);
        }
      }
    }
  }
};
a0_0x2a1033.prototype.drawSkinCustomization = function () {
  if (this.mopeSeasonID == 1) {
    if (!this.flag_usingAbility) {
      return;
    }
    if (!this.flag_flying) {
      a0_0x4ef4f3.save();
      var _0x2c6a46 = this.rad;
      var _0x265cf1 = this.getSkinImageObj("skins/" + this.getSpeciesPath("peacock") + "/peacock_ability.png");
      if (_0x265cf1) {
        a0_0x4ef4f3.drawImage(_0x265cf1, -_0x2c6a46 * this.skinScale * 2, -_0x2c6a46 * this.skinScale * 3 + _0x2c6a46 * 0.4, _0x2c6a46 * 2 * this.skinScale * 2, _0x2c6a46 * 3 * this.skinScale);
      }
      a0_0x4ef4f3.restore();
    }
    var _0x183c7e = 500 / 340;
    a0_0x4ef4f3.save();
    var _0x55129b = this.flag_flying ? 45 : 20;
    var _0x27dbf2 = this.flag_flying ? 90 : 45;
    var _0x2b8666 = this.flag_flying ? 0.2 : 0.01;
    var _0xb81f = this.flag_flying ? 2.5 : 2;
    var _0x4cc2d1 = this.flag_flying ? 2.5 : 2;
    var _0x50c547 = this.flag_flying ? 0 : -0.4;
    var _0x6e0f0e = this.flag_flying ? 0 : -0.2;
    var _0x485e29 = this.flag_flying ? 0.5 : 1.2;
    var _0xdf3d12 = this.flag_flying ? 0.3 : 0.1;
    var _0x3e78cc = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x2a9d20 = a0_0x1d703e != 2 && !a0_0x1528ea ? a0_0xe2d896(_0x3e78cc, _0x485e29, _0xdf3d12, 2) : this.birdNoAnimationFlyWingAngle;
    var _0x1894ba = this.getSkinImageObj(this.getWing("peacock", 1, true));
    if (_0x1894ba) {
      a0_0x4ef4f3.save();
      var _0x8fbef9 = -(-_0x2b8666 + _0x2a9d20) * a0_0x844a6b(_0x27dbf2);
      var _0x2c6a46 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(_0x55129b) + _0x8fbef9);
      var _0xc76b90 = 0;
      var _0x5d1cdb = this.rad;
      var _0x36ed93 = _0x2c6a46 * _0x4cc2d1 * 0.62;
      var _0x475d68 = _0x2c6a46 * _0xb81f;
      var _0x415197 = 0.2 + _0x50c547;
      var _0x453945 = 1.7 + _0x6e0f0e;
      a0_0x4ef4f3.drawImage(_0x1894ba, _0xc76b90 + _0x36ed93 * -_0x415197, _0x5d1cdb + _0x475d68 * -_0x453945, _0x36ed93, _0x475d68);
      a0_0x4ef4f3.restore();
    }
    var _0x1894ba = this.getSkinImageObj(this.getWing("peacock", 2, true));
    if (_0x1894ba) {
      a0_0x4ef4f3.save();
      var _0x8fbef9 = -(-_0x2b8666 + _0x2a9d20) * a0_0x844a6b(-_0x27dbf2);
      var _0x2c6a46 = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-_0x55129b) + _0x8fbef9);
      var _0xc76b90 = 0;
      var _0x5d1cdb = this.rad;
      var _0x36ed93 = _0x2c6a46 * _0x4cc2d1 * 0.62;
      var _0x475d68 = _0x2c6a46 * _0xb81f;
      var _0x415197 = 0.8 - _0x50c547;
      var _0x453945 = 1.7 + _0x6e0f0e;
      a0_0x4ef4f3.drawImage(_0x1894ba, _0xc76b90 + _0x36ed93 * -_0x415197, _0x5d1cdb + _0x475d68 * -_0x453945, _0x36ed93, _0x475d68);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
    if (this.specType == 1) {
      var _0x297386 = this.getSkinImageObj(this.getHead("peacock", true));
      if (_0x297386) {
        a0_0x4ef4f3.save();
        var _0x2c6a46 = this.rad;
        a0_0x4ef4f3.drawImage(_0x297386, -_0x2c6a46 * _0x183c7e, (-_0x2c6a46 + _0x2c6a46 * 0.1) * _0x183c7e, _0x2c6a46 * 2 * _0x183c7e, _0x2c6a46 * 2 * _0x183c7e);
        a0_0x4ef4f3.restore();
      }
    }
  } else {
    if (!this.flag_usingAbility) {
      return;
    }
    var _0x183c7e = 500 / 340;
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x4ef4f3.save();
      var _0xa937 = a0_0x232cc7("bird", this.spawnTime);
      if (_0xa937 !== undefined && _0xa937 != null) {
        this.theFrame = _0xa937;
      }
      var _0x2a9d20 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      var _0x1894ba = this.getSkinImageObj(this.getWing("peacock", 1, true));
      if (_0x1894ba) {
        a0_0x4ef4f3.save();
        var _0x8fbef9 = -(-0.2 + _0x2a9d20) * a0_0x2b691e;
        var _0x2c6a46 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(45) + _0x8fbef9);
        var _0xc76b90 = 0;
        var _0x5d1cdb = this.rad;
        var _0x36ed93 = _0x2c6a46 * 2 * 0.62;
        var _0x475d68 = _0x2c6a46 * 2.5;
        var _0x415197 = 0.2;
        var _0x453945 = 1.7;
        a0_0x4ef4f3.drawImage(_0x1894ba, _0xc76b90 + _0x36ed93 * -_0x415197, _0x5d1cdb + _0x475d68 * -_0x453945, _0x36ed93, _0x475d68);
        a0_0x4ef4f3.restore();
      }
      var _0x1894ba = this.getSkinImageObj(this.getWing("peacock", 2, true));
      if (_0x1894ba) {
        a0_0x4ef4f3.save();
        var _0x8fbef9 = -(-0.2 + _0x2a9d20) * a0_0x844a6b(-90);
        var _0x2c6a46 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(-45) + _0x8fbef9);
        var _0xc76b90 = 0;
        var _0x5d1cdb = this.rad;
        var _0x36ed93 = _0x2c6a46 * 2 * 0.62;
        var _0x475d68 = _0x2c6a46 * 2.5;
        var _0x415197 = 0.8;
        var _0x453945 = 1.7;
        a0_0x4ef4f3.drawImage(_0x1894ba, _0xc76b90 + _0x36ed93 * -_0x415197, _0x5d1cdb + _0x475d68 * -_0x453945, _0x36ed93, _0x475d68);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.restore();
    } else if (this.flag_usingAbility && !this.flag_flying) {
      a0_0x4ef4f3.save();
      var _0x55129b = this.flag_flying ? 45 : 20;
      var _0x27dbf2 = this.flag_flying ? 90 : 45;
      var _0x2b8666 = this.flag_flying ? 0.2 : 0.01;
      var _0xb81f = this.flag_flying ? 2.5 : 2;
      var _0x4cc2d1 = this.flag_flying ? 2.5 : 2;
      var _0x50c547 = this.flag_flying ? 0 : -0.4;
      var _0x6e0f0e = this.flag_flying ? 0 : -0.2;
      var _0x485e29 = this.flag_flying ? 0.5 : 1.2;
      var _0xdf3d12 = this.flag_flying ? 0.3 : 0.1;
      var _0x3e78cc = (a0_0x4f736f - this.spawnTime) / 1000;
      var _0x2a9d20 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x3e78cc, _0x485e29, _0xdf3d12, 2) : this.birdNoAnimationFlyWingAngle;
      var _0x1894ba = this.getSkinImageObj(this.getWing("peacock", 1, true));
      if (_0x1894ba) {
        a0_0x4ef4f3.save();
        var _0x8fbef9 = -(-_0x2b8666 + _0x2a9d20) * a0_0x844a6b(_0x27dbf2);
        var _0x2c6a46 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(_0x55129b) + _0x8fbef9);
        var _0xc76b90 = 0;
        var _0x5d1cdb = this.rad;
        var _0x36ed93 = _0x2c6a46 * _0x4cc2d1 * 0.62;
        var _0x475d68 = _0x2c6a46 * _0xb81f;
        var _0x415197 = 0.2 + _0x50c547;
        var _0x453945 = 1.7 + _0x6e0f0e;
        a0_0x4ef4f3.drawImage(_0x1894ba, _0xc76b90 + _0x36ed93 * -_0x415197, _0x5d1cdb + _0x475d68 * -_0x453945, _0x36ed93, _0x475d68);
        a0_0x4ef4f3.restore();
      }
      var _0x1894ba = this.getSkinImageObj(this.getWing("peacock", 2, true));
      if (_0x1894ba) {
        a0_0x4ef4f3.save();
        var _0x8fbef9 = -(-_0x2b8666 + _0x2a9d20) * a0_0x844a6b(-_0x27dbf2);
        var _0x2c6a46 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(-_0x55129b) + _0x8fbef9);
        var _0xc76b90 = 0;
        var _0x5d1cdb = this.rad;
        var _0x36ed93 = _0x2c6a46 * _0x4cc2d1 * 0.62;
        var _0x475d68 = _0x2c6a46 * _0xb81f;
        var _0x415197 = 0.8 - _0x50c547;
        var _0x453945 = 1.7 + _0x6e0f0e;
        a0_0x4ef4f3.drawImage(_0x1894ba, _0xc76b90 + _0x36ed93 * -_0x415197, _0x5d1cdb + _0x475d68 * -_0x453945, _0x36ed93, _0x475d68);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x3f3a29 = 0.4;
      var _0x297386 = this.getSkinImageObj(this.getHead("peacock", true));
      if (_0x297386) {
        a0_0x4ef4f3.save();
        var _0x2c6a46 = this.rad;
        a0_0x4ef4f3.drawImage(_0x297386, -_0x2c6a46 * _0x183c7e, (-_0x2c6a46 + _0x2c6a46 * _0x3f3a29) * _0x183c7e, _0x2c6a46 * 2 * _0x183c7e, _0x2c6a46 * 2 * _0x183c7e);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
function a0_0x2a1033() {
  a0_0x2a1033.superClass.call(this, a0_0x1370b8);
}
window.Peacock = a0_0x2a1033;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2a1033, a0_0x1370b8, a0_0x4a36ac);
var a0_0x58d04c = a0_0x45645e;
a0_0x34b83a.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x34b83a.prototype.constructor = a0_0x34b83a;
a0_0x34b83a.superClass = a0_0x58d04c;
a0_0x34b83a.prototype.updateZ = function () {
  this.z = this.rad;
  if (this.flag_canClimbHill || this.flag_flying) {
    this.z += 100000;
  }
};
a0_0x34b83a.prototype.animalInfo = function () {
  var _0x15578e = {};
  switch (this.animalSpecies) {
    case 0:
      _0x15578e.aniName = "Gazelle";
      break;
    case 100:
      _0x15578e.aniName = "Falmmy Hart";
      break;
    case 111:
      _0x15578e.aniName = "Classic Gazelle";
      break;
    case 112:
      _0x15578e.aniName = "Gold-trim Gazelle";
      break;
    case 202:
      _0x15578e.aniName = "Retro Neon Gazelle";
      break;
  }
  _0x15578e.skinName = this.getSkinName();
  _0x15578e.aniCol = "#FF9000";
  _0x15578e.upgradeText = "UPGRADED to " + _0x15578e.aniName + "!\nHold 'W' to Jump High through everything.";
  return _0x15578e;
};
a0_0x34b83a.prototype.moveF = 0.08;
a0_0x34b83a.prototype.jumpAnim = null;
a0_0x34b83a.prototype.frame = 0;
a0_0x34b83a.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility && a0_0x1d703e != a0_0x30b084) {
    var _0x105737 = 1;
    if (this.jumpAnim == null) {
      this.jumpAnim = new a0_0x100d8b(this, 0.5, a0_0x100d8b.halfWave);
      this.jumpAnim.keepLastFrame = true;
      this.jumpAnim.loop = true;
      this.jumpAnim.onFrameEntered = function (_0x32514c) {
        this.forObj.frame = _0x32514c;
      };
      this.jumpAnim.onStop = function () {};
    }
    if (this.jumpAnim != null) {
      this.jumpAnim.run();
    }
    var _0x41924f = this.rad - this.outlineW;
    var _0x1402e2 = 500 / 340;
    this.setSkinScale();
    var _0x1a6a0 = "skins/" + this.getSkinPath() + "/legs0.png";
    var _0x4c3b2b = "skins/" + this.getSkinPath() + "/legs1.png";
    var _0x1a4e4a = this.getSkinImageObj(_0x1a6a0);
    var _0x5a3fb9 = this.getSkinImageObj(_0x4c3b2b);
    if (_0x1a4e4a && _0x5a3fb9) {
      var _0x1402e2 = this.skinScale + this.skinScale * 0.15 * this.frame;
      var _0x41924f = this.skinRad;
      if (this.specType == 0) {
        a0_0x4ef4f3.drawImage(_0x1a4e4a, -_0x41924f * _0x1402e2, -_0x41924f * _0x1402e2, _0x41924f * 2 * _0x1402e2, _0x41924f * 2 * _0x1402e2);
        a0_0x4ef4f3.drawImage(_0x5a3fb9, -_0x41924f * _0x1402e2, (-_0x41924f - _0x41924f * this.moveF * this.frame) * _0x1402e2, _0x41924f * 2 * _0x1402e2, _0x41924f * 2 * _0x1402e2);
      } else {
        a0_0x4ef4f3.drawImage(_0x5a3fb9, -_0x41924f * _0x1402e2, -_0x41924f * _0x1402e2, _0x41924f * 2 * _0x1402e2, _0x41924f * 2 * _0x1402e2);
        a0_0x4ef4f3.drawImage(_0x1a4e4a, -_0x41924f * _0x1402e2, (-_0x41924f + _0x41924f * this.moveF * this.frame) * _0x1402e2, _0x41924f * 2 * _0x1402e2, _0x41924f * 2 * _0x1402e2);
      }
    }
  } else {
    this.jumpAnim = null;
  }
};
a0_0x34b83a.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x34b83a.prototype.getSkinPath = function (_0x469d4e) {
  return "desert/gazelle/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x34b83a.prototype.getSkinName = function () {
  var _0x5e5177 = this.getSkinPath() + "/gazelle";
  _0x5e5177 += this.specType == 0 || a0_0x1d703e !== a0_0x30b084 ? "" : this.specType;
  return _0x5e5177;
};
a0_0x34b83a.prototype.getAbilityInfo = function (_0xf3ce21) {
  var _0x52ce44 = {};
  _0x52ce44.abilImg = "skins/" + this.getSkinPath() + "/gazelle1.png";
  _0x52ce44.abilName = "HOLD to Jump High\n";
  _0x52ce44.skinThemeID = this.skinThemeID;
  _0x52ce44.mopeSeasonID = this.mopeSeasonID;
  return _0x52ce44;
};
function a0_0x34b83a() {
  a0_0x34b83a.superClass.call(this, a0_0x1370b8);
}
window.Gazelle = a0_0x34b83a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x34b83a, a0_0x1370b8, a0_0x4b0faa);
var a0_0x58d04c = a0_0x45645e;
a0_0x110002.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x110002.prototype.constructor = a0_0x110002;
a0_0x110002.superClass = a0_0x58d04c;
a0_0x110002.prototype.animalInfo = function () {
  var _0x4f4065 = {
    aniCol: "#FF9000"
  };
  switch (this.animalSpecies) {
    case 0:
      _0x4f4065.aniName = "Armadillo";
      break;
    case 111:
      _0x4f4065.aniName = "Classic Armadillo";
      break;
    case 112:
      _0x4f4065.aniName = "Gold-trim Armadillo";
      break;
  }
  _0x4f4065.skinName = this.getSkinName();
  _0x4f4065.upgradeText = "UPGRADED to " + _0x4f4065.aniName + "!\nHold 'W' to roll through everything. \nCarefully, try eating mangoes around venus flytraps!";
  return _0x4f4065;
};
a0_0x110002.prototype.drawUnderSkinTail = function (_0xfe66e5) {
  if (!this.flag_usingAbility) {
    a0_0x110002.superClass.prototype.drawUnderSkinTail.call(this, _0xfe66e5);
  }
};
a0_0x110002.prototype.drawAnimalUnderSkinCircle = function (_0x7419cd) {
  if (!this.flag_usingAbility) {
    a0_0x110002.superClass.prototype.drawAnimalUnderSkinCircle.call(this, _0x7419cd);
  }
};
a0_0x110002.prototype.basicDrawSkinImg = function () {
  if (!this.flag_usingAbility) {
    a0_0x110002.superClass.prototype.basicDrawSkinImg.call(this);
    return;
  } else {
    this.setSkinScale();
    this.frameNumber = Math.trunc(a0_0x4f736f / 120) % 6;
    var _0x115427 = "skins/" + this.getSkin() + this.frameNumber + ".png";
    var _0x18f6a0 = this.getSkinImageObj(_0x115427);
    if (_0x18f6a0) {
      var _0x3bf4e6 = this.skinScale;
      var _0x2eac3a = this.skinRad;
      a0_0x4ef4f3.drawImage(_0x18f6a0, -_0x2eac3a * _0x3bf4e6, -_0x2eac3a * _0x3bf4e6, _0x2eac3a * 2 * _0x3bf4e6, _0x2eac3a * 2 * _0x3bf4e6);
    }
  }
};
a0_0x110002.prototype.getSkin = function () {
  return "desert/armadillo/" + this.animalSpecies + this.getSubSpecies() + "/armadillo";
};
a0_0x110002.prototype.getSkinName = function () {
  return "desert/armadillo/" + this.animalSpecies + this.getSubSpecies() + "/armadillo" + (this.specType == 0 ? "" : this.specType);
};
a0_0x110002.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x110002() {
  a0_0x110002.superClass.call(this, a0_0x1370b8);
}
window.Armadillo = a0_0x110002;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x110002, a0_0x1370b8, a0_0x4a9541);
var a0_0x58d04c = a0_0x45645e;
a0_0x114d48.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x114d48.prototype.constructor = a0_0x114d48;
a0_0x114d48.superClass = a0_0x58d04c;
a0_0x114d48.prototype.animalInfo = function () {
  var _0x1f37a7 = {
    aniCol: "#FF9000"
  };
  switch (this.animalSpecies) {
    case 100:
      _0x1f37a7.aniName = "Cacti Rat";
      break;
    case 0:
      _0x1f37a7.aniName = "Desert Rat";
      break;
    case 111:
      _0x1f37a7.aniName = "Classic Desert Rat";
      break;
    case 112:
      _0x1f37a7.aniName = "Gold-trim Desert Rat";
      break;
    case 202:
      _0x1f37a7.aniName = "Plasma Rat";
      break;
  }
  _0x1f37a7.skinName = this.getSkinName();
  _0x1f37a7.upgradeText = "";
  return _0x1f37a7;
};
a0_0x114d48.prototype.getSkinName = function () {
  return this.getSkinPath() + "/kangaroorat" + (this.specType == 0 ? "" : this.specType);
};
a0_0x114d48.prototype.getSkinPath = function () {
  return "desert/kangaroorat/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x114d48.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x114d48.prototype.flapStart = 0;
a0_0x114d48.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility) {
    var _0xf24f5f = "skins/" + this.getSkinPath() + "/tail.png";
    var _0x4198b0 = this.getSkinImageObj(_0xf24f5f);
    if (_0x4198b0) {
      var _0x4020e9 = this.skinScale * 1.5;
      var _0x4327b4 = this.skinRad;
      a0_0x4ef4f3.drawImage(_0x4198b0, -_0x4327b4 * _0x4020e9, (-_0x4327b4 + _0x4327b4 * -0.08) * _0x4020e9, _0x4327b4 * 2 * _0x4020e9, _0x4327b4 * 2 * _0x4020e9);
    }
  }
};
function a0_0x114d48() {
  a0_0x114d48.superClass.call(this, a0_0x1370b8);
}
window.KangarooRat = a0_0x114d48;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x114d48, a0_0x1370b8, a0_0x2995a9);
var a0_0x58d04c = a0_0x45645e;
a0_0x1fa6aa.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1fa6aa.prototype.constructor = a0_0x1fa6aa;
a0_0x1fa6aa.superClass = a0_0x58d04c;
a0_0x1fa6aa.prototype.animalInfo = function () {
  var _0x5e5b43 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x5e5b43.aniName = "Desert Chipmunk";
      break;
    case 112:
      _0x5e5b43.aniName = "Gold-trim Desert Chipmunk";
      break;
    case 200:
      _0x5e5b43.aniName = "Velvet Chipmunk";
      break;
    case 202:
      _0x5e5b43.aniName = "Chipmonk";
      break;
  }
  _0x5e5b43.skinName = this.getSkinName();
  _0x5e5b43.aniCol = "#FF9000";
  _0x5e5b43.upgradeText = "UPGRADED to " + _0x5e5b43.aniName + "!\n Press W to Spit food to boost yourself!";
  return _0x5e5b43;
};
a0_0x1fa6aa.prototype.getSkinName = function () {
  return this.getSkinPath() + "/chipmunk" + (this.specType == 0 ? "" : this.specType);
};
a0_0x1fa6aa.prototype.getSkinPath = function () {
  return "desert/chipmunk/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x1fa6aa.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x1fa6aa() {
  a0_0x1fa6aa.superClass.call(this, a0_0x1370b8);
}
window.DesertChipmunk = a0_0x1fa6aa;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1fa6aa, a0_0x1370b8, a0_0x33a740);
var a0_0x58d04c = a0_0x45645e;
a0_0x44bb36.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x44bb36.prototype.constructor = a0_0x44bb36;
a0_0x44bb36.superClass = a0_0x58d04c;
a0_0x44bb36.prototype.updateZ = function () {
  if (this.flag_eff_grabbedByFlytrap) {
    this.z = 1100 + this.rad;
  } else if (this.flag_usingAbility) {
    this.z = -157;
  } else if (this.flag_flying || this.flag_eff_tossedInAir) {
    this.z = 2100 + this.rad;
  } else {
    this.z = this.rad;
  }
};
a0_0x44bb36.prototype.animalInfo = function () {
  var _0x4636af = {
    aniCol: "#FF9000"
  };
  switch (this.animalSpecies) {
    case 0:
      _0x4636af.aniName = "Meerkat";
      break;
    case 100:
      _0x4636af.aniName = "Puumpkat";
      break;
    case 111:
      _0x4636af.aniName = "Classic Meerkat";
      break;
    case 112:
      _0x4636af.aniName = "Gold-trim Meerkat";
      break;
    case 201:
      _0x4636af.aniName = "Scubakat";
      break;
    case 204:
      _0x4636af.aniName = "Necromancer Meerkat";
      break;
  }
  _0x4636af.skinName = this.getSkinName();
  _0x4636af.upgradeText = "UPGRADED to " + _0x4636af.aniName + "!\n HOLD to Dig Underground. \nYou can now eat pink cactus fruits!";
  return _0x4636af;
};
a0_0x44bb36.prototype.getSkinName = function () {
  return this.getSkinPath() + "/meerkat" + (this.specType == 0 ? "" : this.specType);
};
a0_0x44bb36.prototype.getSkinPath = function () {
  return "desert/meerkat/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x44bb36.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x44bb36.prototype.drawAnimalUnderSkinCircle = function (_0x394bad) {
  if (!this.flag_usingAbility) {
    a0_0x44bb36.superClass.prototype.drawAnimalUnderSkinCircle.call(this, _0x394bad);
  }
};
a0_0x44bb36.prototype.drawUnderSkinTail = function (_0xa57c16) {
  if (!this.flag_usingAbility) {
    a0_0x44bb36.superClass.prototype.drawUnderSkinTail.call(this, _0xa57c16);
  }
};
a0_0x44bb36.prototype.basicDrawSkinImg = function () {
  if (!this.flag_usingAbility) {
    a0_0x44bb36.superClass.prototype.basicDrawSkinImg.call(this);
    return;
  } else {
    this.setSkinScale();
    a0_0x4ef4f3.save();
    var _0x1ed7cf = _0x1ed7cf = "skins/" + this.getSkinPath() + "/meerkat1.png";
    var _0x3bedb1 = this.getSkinImageObj(_0x1ed7cf);
    if (_0x3bedb1) {
      var _0xbfd8d0 = this.skinScale;
      var _0x33ae22 = this.skinRad;
      a0_0x4ef4f3.drawImage(_0x3bedb1, -_0x33ae22 * _0xbfd8d0, -_0x33ae22 * _0xbfd8d0, _0x33ae22 * 2 * _0xbfd8d0, _0x33ae22 * 2 * _0xbfd8d0);
    }
    a0_0x4ef4f3.restore();
  }
};
function a0_0x44bb36() {
  a0_0x44bb36.superClass.call(this, a0_0x1370b8);
}
window.Meerkat = a0_0x44bb36;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x44bb36, a0_0x1370b8, a0_0x33cfa9);
var a0_0x58d04c = a0_0x45645e;
a0_0x358bd7.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x358bd7.prototype.constructor = a0_0x358bd7;
a0_0x358bd7.superClass = a0_0x58d04c;
a0_0x358bd7.prototype.animalInfo = function () {
  var _0x469c5c = {};
  switch (this.animalSpecies) {
    case 0:
      _0x469c5c.aniName = "Fennec Fox";
      break;
    case 111:
      _0x469c5c.aniName = "Classic Fennec Fox";
      break;
    case 112:
      _0x469c5c.aniName = "Gold-trim Fennec Fox";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x469c5c.aniName = "Fire Fox";
          break;
        case 1:
          _0x469c5c.aniName = "Purple Fire Fox";
      }
      break;
  }
  _0x469c5c.aniCol = "#FF9000";
  _0x469c5c.skinName = this.getSkinName();
  _0x469c5c.upgradeText = "UPGRADED to " + _0x469c5c.aniName + "!\nFennec Fox has very sharp ears (can see animals in hiding holes).\n Press W to Whine!";
  return _0x469c5c;
};
a0_0x358bd7.prototype.getSkinPath = function (_0x41bbeb) {
  return "desert/fennecfox/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x358bd7.prototype.getSkinName = function () {
  var _0x46b454 = this.getSkinPath() + "/fennecfox";
  _0x46b454 += this.specType == 0 ? "" : this.specType;
  return _0x46b454;
};
a0_0x358bd7.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x358bd7.prototype.flapStart = 0;
a0_0x358bd7.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.flapStart = 0;
    return;
  } else if (this.flapStart == 0) {
    this.flapStart = a0_0x4f736f;
  }
  this.setSkinScale();
  var _0x20bcb6 = 0.5;
  var _0x492a1a = a0_0x1d703e != a0_0x30b084 ? a0_0x232cc7("fennecfox", this.spawnTime) : 2;
  _0x492a1a = Math.abs(Math.round(_0x492a1a));
  var _0x4fcbe1 = "skins/" + this.getSkinPath() + "/ears" + _0x492a1a + ".png";
  var _0x248c0a = this.getSkinImageObj(_0x4fcbe1);
  if (_0x248c0a) {
    var _0x9f25f1 = this.skinScale;
    var _0x3c532f = this.skinRad;
    a0_0x4ef4f3.drawImage(_0x248c0a, -_0x3c532f * _0x9f25f1, -_0x3c532f * _0x9f25f1, _0x3c532f * 2 * _0x9f25f1, _0x3c532f * 2 * _0x9f25f1);
  }
};
function a0_0x358bd7() {
  a0_0x358bd7.superClass.call(this, a0_0x1370b8);
}
window.FennecFox = a0_0x358bd7;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x358bd7, a0_0x1370b8, a0_0xffe9fd);
var a0_0x58d04c = a0_0x45645e;
a0_0x2e5dbd.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2e5dbd.prototype.constructor = a0_0x2e5dbd;
a0_0x2e5dbd.superClass = a0_0x58d04c;
a0_0x2e5dbd.prototype.animalInfo = function () {
  var _0x272b64 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x272b64.aniName = "Gobi Bear";
      break;
    case 111:
      _0x272b64.aniName = "Classic Gobi Bear";
      break;
    case 112:
      _0x272b64.aniName = "Gold-trim Gobi Bear";
      break;
    case 202:
      _0x272b64.aniName = "Gobee Bear";
      break;
  }
  _0x272b64.aniCol = "#FF9000";
  _0x272b64.skinName = this.getSkinName();
  _0x272b64.upgradeText = "UPGRADED to " + _0x272b64.aniName + "!\n";
  return _0x272b64;
};
a0_0x2e5dbd.prototype.getSkinName = function () {
  return this.getSkinPath() + "/gobibear" + (this.flag_usingAbility ? "1" : "");
};
a0_0x2e5dbd.prototype.getSkinPath = function () {
  return "desert/gobibear/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x2e5dbd.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x2e5dbd.prototype.biteStart = 0;
a0_0x2e5dbd.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x4f736f;
    }
    if (a0_0x4f736f - this.biteStart < 400) {
      if (this.specType != 0 && this.specType != undefined) {
        var _0x3429cb = this.getSkinImageObj("skins/" + this.getSkinPath() + "/gobibear_head1.png");
        var _0x532b2b = (a0_0x4f736f - this.biteStart) / 1000;
        var _0x38f54a = this.skinScale * 1.1;
        var _0x3c1900 = this.skinRad;
        if (_0x3429cb) {
          frame = 0;
          if (!this.flag_flying) {
            flapAmount = 3;
            flapDur = 0.5;
            frame = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x532b2b, flapDur, flapAmount, 2) : this.birdNoAnimationFlyWingAngle;
          }
          a0_0x4ef4f3.save();
          var _0x3c1900 = this.rad;
          a0_0x4ef4f3.drawImage(_0x3429cb, -_0x3c1900 * _0x38f54a, (-_0x3c1900 + _0x3c1900 * 0.1) * _0x38f54a + frame, _0x3c1900 * 2 * _0x38f54a, _0x3c1900 * 2 * _0x38f54a);
          a0_0x4ef4f3.restore();
        }
      }
    }
  }
};
function a0_0x2e5dbd() {
  a0_0x2e5dbd.superClass.call(this, a0_0x1370b8);
}
window.GobiBear = a0_0x2e5dbd;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2e5dbd, a0_0x1370b8, a0_0x1487f6);
var a0_0x58d04c = a0_0x45645e;
a0_0x1952f0.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1952f0.prototype.constructor = a0_0x1952f0;
a0_0x1952f0.superClass = a0_0x58d04c;
a0_0x1952f0.prototype.animalInfo = function () {
  var _0x2d1f21 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x2d1f21.aniName = "Camel";
      break;
    case 100:
      _0x2d1f21.aniName = "Doomedarius";
      break;
    case 111:
      _0x2d1f21.aniName = "Classic Camel";
      break;
    case 112:
      _0x2d1f21.aniName = "Gold-trim Camel";
      break;
    case 201:
      _0x2d1f21.aniName = "Balloon Warrior";
      break;
    case 202:
      _0x2d1f21.aniName = "Fungal Camel";
      break;
  }
  _0x2d1f21.skinName = this.getSkinName();
  _0x2d1f21.aniCol = "#FF9000";
  _0x2d1f21.upgradeText = "UPGRADED to " + _0x2d1f21.aniName + "!\n Press W to Spit. Try eating oranges from trees!";
  return _0x2d1f21;
};
a0_0x1952f0.prototype.getSkinName = function () {
  let _0xead117 = this.getSkinPath() + "/camel";
  _0xead117 += this.specType == 0 ? "" : this.specType;
  return _0xead117;
};
a0_0x1952f0.prototype.getSkinPath = function () {
  return "desert/camel/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x1952f0.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x1952f0.prototype.getAbilityInfo = function (_0x2d0b39) {
  var _0x47ce69 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x47ce69.abilName = "Spit!";
      break;
    case 100:
      _0x47ce69.abilName = "Cannon Shots!";
      break;
    case 201:
      _0x47ce69.abilName = "Water Balloons!";
      break;
  }
  _0x47ce69.abilImg = "skins/desert/camel/" + this.animalSpecies + this.getSubSpecies() + "/spit.png";
  _0x47ce69.skinThemeID = this.skinThemeID;
  _0x47ce69.mopeSeasonID = this.mopeSeasonID;
  return _0x47ce69;
};
a0_0x1952f0.prototype.biteStart = 0;
a0_0x1952f0.prototype.flapAmount = 3;
a0_0x1952f0.prototype.flapDur = 1;
a0_0x1952f0.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x4f736f;
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x4301e8 = "skins/" + this.getSkinPath() + "/camel_head1.png";
      var _0x3ca771 = this.getSkinImageObj(_0x4301e8);
      var _0x5ee399 = (a0_0x4f736f - this.biteStart) / 1000;
      var _0x47d47a = this.skinScale * 1.1;
      var _0x58377b = this.skinRad;
      if (_0x3ca771) {
        var _0x487561 = 0;
        if (!this.flag_flying) {
          _0x487561 = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x5ee399, this.flapDur, this.flapAmount, 2) : this.flapAmount;
        }
        a0_0x4ef4f3.save();
        var _0x58377b = this.rad;
        a0_0x4ef4f3.drawImage(_0x3ca771, -_0x58377b * _0x47d47a, (-_0x58377b + _0x58377b * 0.1) * _0x47d47a - _0x487561, _0x58377b * 2 * _0x47d47a, _0x58377b * 2 * _0x47d47a);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
function a0_0x1952f0() {
  a0_0x1952f0.superClass.call(this, a0_0x1370b8);
}
window.Camel = a0_0x1952f0;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1952f0, a0_0x1370b8, a0_0x303d9b);
var a0_0x58d04c = a0_0x12658e;
a0_0x1323b8.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1323b8.prototype.constructor = a0_0x1323b8;
a0_0x1323b8.superClass = a0_0x58d04c;
a0_0x1323b8.prototype.updateZ = function () {
  this.z = 1005;
};
a0_0x1323b8.prototype.customDraw = function (_0x1d1b91) {
  var _0x2316d1 = "";
  if (this.speciesType == 201) {
    _0x2316d1 = "skins/desert/camel/" + this.speciesType + "/spit" + this.specType + ".png";
  } else {
    _0x2316d1 = "skins/desert/camel/" + this.speciesType + "/spit.png";
  }
  var _0x1904fa = this.getSkinImageObj(_0x2316d1);
  if (_0x1904fa) {
    a0_0x4ef4f3.save();
    var _0x355701 = this.rad * 2;
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x1904fa, -_0x355701, -_0x355701, _0x355701 * 2, _0x355701 * 2);
    a0_0x4ef4f3.restore();
  }
};
a0_0x1323b8.prototype.getSkinImageObj = function (_0x4ee230) {
  var _0xff7726 = this.speciesType === 100 || this.speciesType === 201 ? 1 : 2;
  var _0x353005 = "./assets/s/" + _0xff7726 + "/" + _0x4ee230;
  if (this.skinThemeID > 0) {
    _0x353005 = "./assets/t/" + this.skinThemeID + "/" + _0x4ee230;
  }
  return a0_0x2cc313(_0x353005, function (_0x5a58ef) {
    console.log(_0x5a58ef.src);
  });
};
function a0_0x1323b8() {
  a0_0x1323b8.superClass.call(this, a0_0x29c115);
}
window.CamelSpit = a0_0x1323b8;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1323b8, a0_0x29c115);
var a0_0x58d04c = a0_0x45645e;
a0_0x44f535.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x44f535.prototype.constructor = a0_0x44f535;
a0_0x44f535.superClass = a0_0x58d04c;
a0_0x44f535.prototype.animalInfo = function () {
  var _0x810345 = {
    aniCol: "#FF9000"
  };
  switch (this.animalSpecies) {
    case 0:
      _0x810345.aniName = "Warthog";
      break;
    case 100:
      _0x810345.aniName = "The Burlone";
      break;
    case 111:
      _0x810345.aniName = "Classic Warthog";
      break;
    case 112:
      _0x810345.aniName = "Gold-trim Warthog";
      break;
    case 200:
      _0x810345.aniName = "WarT. Hog";
      break;
    case 201:
      _0x810345.aniName = "Flame Tiki";
      break;
    case 202:
      _0x810345.aniName = "Dark Matter Warthog";
      break;
    case 204:
      _0x810345.aniName = "Candy Corn Warthog";
      break;
    case 220:
      _0x810345.aniName = "Dark Matter Warthog";
      break;
  }
  _0x810345.skinName = this.getSkinName();
  _0x810345.upgradeText = "UPGRADED to " + _0x810345.aniName + "!\nPress W to Dig and Charge.";
  return _0x810345;
};
a0_0x44f535.prototype.getSkinName = function () {
  let _0xb216f7 = this.getSkinPath() + "/warthog";
  _0xb216f7 += this.specType == 0 ? "" : this.specType;
  return _0xb216f7;
};
a0_0x44f535.prototype.getSkinPath = function () {
  return "desert/warthog/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x44f535.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x44f535.prototype.flapStart = 0;
a0_0x44f535.prototype.drawUnderSkinImgOutline = function () {
  console.log(this.teamID);
  a0_0x44f535.superClass.prototype.drawUnderSkinImgOutline.call(this);
  if (this.flag_usingAbility && !this.isCharging) {
    var _0x32ebbf = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x22b757 = 1.5;
    var _0x40cbed = 1;
    var _0x2c5c0f = _0x40cbed * Math.sin(Math.PI * 2 / _0x22b757 * _0x32ebbf);
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha *= 0.8 - _0x2c5c0f * 0.2;
    a0_0x5c99c1(0, this.rad * 0.3, this.rad * (0.9 + _0x2c5c0f * 0.12), "#b69327");
    a0_0x5c99c1(0, -this.rad * 0.2, this.rad * (0.9 + _0x2c5c0f * 0.09), "#b69327");
    a0_0x4ef4f3.restore();
  }
};
a0_0x44f535.prototype.drawUnderSkinImg = function () {
  if (!this.flag_usingAbility) {
    this.flapStart = 0;
    return;
  } else if (this.flapStart == 0) {
    this.flapStart = a0_0x4f736f;
  }
  if (this.flag_usingAbility && !this.isCharging) {
    var _0x20ab78 = this.rad - this.outlineW;
    var _0x4cc25a = 500 / 340;
    this.setSkinScale();
    var _0x27de30 = 0.8;
    var _0x366d2e = (a0_0x4f736f - this.flapStart) / 1000;
    var _0x378aa2 = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x366d2e, _0x27de30, 1, 1) : 0;
    _0x378aa2 = Math.round(_0x378aa2);
    if (_0x378aa2 < 0) {
      _0x378aa2 = 0;
    }
    var _0x3f840e = "skins/" + this.getSkinPath() + "/leg" + _0x378aa2 + ".png";
    var _0x362684 = this.getSkinImageObj(_0x3f840e);
    if (_0x362684) {
      var _0x4cc25a = this.skinScale;
      var _0x20ab78 = this.skinRad;
      a0_0x4ef4f3.drawImage(_0x362684, -_0x20ab78 * _0x4cc25a, -_0x20ab78 * _0x4cc25a, _0x20ab78 * 2 * _0x4cc25a, _0x20ab78 * 2 * _0x4cc25a);
    }
  }
};
a0_0x44f535.prototype.getAbilityInfo = function (_0x355a9f) {
  var _0x5dbce7 = {
    abilName: "Dig Food\nSudden Charge"
  };
  _0x5dbce7.abilImg = "skins/" + this.getSkinPath() + "/warthog.png";
  _0x5dbce7.skinThemeID = this.skinThemeID;
  _0x5dbce7.mopeSeasonID = this.mopeSeasonID;
  return _0x5dbce7;
};
a0_0x44f535.prototype.isCharging = false;
a0_0x44f535.prototype.readCustomData_onNewlyVisible = function (_0x19db7f) {
  a0_0x44f535.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x19db7f);
  this.customUpdatedProperty(a0_0x3eec29, _0x19db7f);
};
a0_0x44f535.prototype.customUpdatedProperty = function (_0x10ca99, _0x556be4) {
  if (_0x10ca99 == a0_0x3eec29) {
    this.isCharging = _0x556be4.readUInt8() == 1;
  }
};
function a0_0x44f535() {
  a0_0x44f535.superClass.call(this, a0_0x1370b8);
}
window.Warthog = a0_0x44f535;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x44f535, a0_0x1370b8, a0_0x1ce2e4);
var a0_0x58d04c = a0_0x45645e;
a0_0x17534a.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x17534a.prototype.constructor = a0_0x17534a;
a0_0x17534a.superClass = a0_0x58d04c;
a0_0x17534a.prototype.animalInfo = function () {
  var _0x37695e = {};
  switch (this.animalSpecies) {
    case 0:
      _0x37695e.aniName = "Hyena";
      break;
    case 111:
      _0x37695e.aniName = "Classic Hyena";
      break;
    case 112:
      _0x37695e.aniName = "Gold-trim Hyena";
      break;
    case 201:
      _0x37695e.aniName = "DJ Hyena";
      break;
    case 202:
      _0x37695e.aniName = "Anubis Hyena";
      break;
  }
  _0x37695e.aniCol = "#FF9000";
  _0x37695e.skinName = this.getSkinName();
  _0x37695e.upgradeText = "UPGRADED to " + _0x37695e.aniName + "!\nHyenas have a very loud and scary laugh!\nPress W to Laugh.";
  return _0x37695e;
};
a0_0x17534a.prototype.getSkinName = function () {
  return this.getSkinPath() + "/hyena" + (this.specType == 0 ? "" : this.specType);
};
a0_0x17534a.prototype.getSkinPath = function () {
  return "desert/hyena/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x17534a.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x17534a.prototype.biteStart = 0;
a0_0x17534a.prototype.flapAmount = 3;
a0_0x17534a.prototype.flapDur = 1;
a0_0x17534a.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x4f736f;
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x1f764f = this.getSkinImageObj("skins/" + this.getSkinPath() + "/hyena_head.png");
      var _0x1585ab = (a0_0x4f736f - this.biteStart) / 1000;
      var _0xdf3bbd = this.skinScale * 1.1;
      var _0x3a499d = this.skinRad;
      if (_0x1f764f) {
        frame = 0;
        if (!this.flag_flying) {
          frame = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x1585ab, this.flapDur, this.flapAmount, 2) : this.flapAmount;
        }
        a0_0x4ef4f3.save();
        var _0x3a499d = this.rad;
        a0_0x4ef4f3.drawImage(_0x1f764f, -_0x3a499d * _0xdf3bbd, (-_0x3a499d + _0x3a499d * 0.1) * _0xdf3bbd + frame, _0x3a499d * 2 * _0xdf3bbd, _0x3a499d * 2 * _0xdf3bbd);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
a0_0x17534a.prototype.getAbilityInfo = function (_0x2525c7) {
  var _0x1fd2c6 = {
    abilName: "Laughs!"
  };
  _0x1fd2c6.abilImg = "skins/" + this.getSkinPath() + "/hyena2.png";
  _0x1fd2c6.skinThemeID = this.skinThemeID;
  _0x1fd2c6.mopeSeasonID = this.mopeSeasonID;
  return _0x1fd2c6;
};
a0_0x17534a.prototype.getSkinImageObj = function (_0x2f33e1) {
  var _0x14ec9a = this.animalSpecies === 201 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x2f33e1, _0x14ec9a);
};
function a0_0x17534a() {
  a0_0x17534a.superClass.call(this, a0_0x1370b8);
}
window.Hyena = a0_0x17534a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x17534a, a0_0x1370b8, a0_0x4450f0);
var a0_0x2011f1 = a0_0x16089f;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x16089f.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x16089f.prototype.customDraw = function (_0x1d9d1b) {
  a0_0x4ef4f3.save();
  var _0x4ec2d3 = this.getSkinImageObj("skins/desert/hyena/" + this.speciesType + "/laugh.png");
  if (_0x4ec2d3) {
    var _0x5db962 = a0_0x4f736f - this.spawnTime;
    var _0x176872 = _0x5db962 / 1000;
    var _0x28a0f2 = 2;
    var _0x219b92 = 1.5;
    rShift = _0x219b92 * Math.sin(Math.PI * 2 / _0x28a0f2 * _0x176872);
    var _0x4f01af = a0_0xe2d896(_0x176872, 5.1, 1, 1);
    _0x4f01af = a0_0x870f2b(_0x4f01af, 0, 1);
    a0_0x4ef4f3.globalAlpha = _0x4f01af;
    var _0x29018f = 1;
    var _0x46cad3 = this.rad;
    a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(-90));
    a0_0x4ef4f3.drawImage(_0x4ec2d3, -_0x46cad3 * _0x29018f, -_0x46cad3 * _0x29018f, _0x46cad3 * 2 * _0x29018f, _0x46cad3 * 2 * _0x29018f);
  }
  a0_0x4ef4f3.restore();
  this.drawChat();
};
a0_0x16089f.prototype.drawChat = function () {
  if (this.aLine == null) {
    return;
  }
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.font = "10px Arial";
  a0_0x4ef4f3.lineWidth = 1;
  a0_0x4ef4f3.textAlign = "center";
  a0_0x4ef4f3.textBaseline = "middle";
  var _0x4bae8e = this.aLine;
  var _0xa2e813 = a0_0x4f736f > _0x4bae8e.chatFadeT ? 0 : 1;
  _0x4bae8e.chatA += (_0xa2e813 - _0x4bae8e.chatA) * 0.1;
  a0_0x4ef4f3.shadowOffsetX = 0;
  a0_0x4ef4f3.shadowOffsetY = 0;
  if (_0x4bae8e.chatA < 0.02) {
    this.aLine = null;
  }
  var _0x130dd9 = a0_0x4ef4f3.measureText(_0x4bae8e.chatTxt).width;
  var _0x577d42 = 10;
  var _0x3d24d8 = 1;
  var _0x249391 = 1;
  a0_0x4ef4f3.globalAlpha = _0x4bae8e.chatA * 0.8;
  a0_0x4ef4f3.fillStyle = a0_0x28d4ea(this.curBiome);
  a0_0x4ef4f3.fillRect(this.x - _0x3d24d8 - _0x130dd9 / 2, this.y - this.rad - _0x577d42 / 2 - _0x249391, _0x130dd9 + _0x3d24d8 * 2, _0x577d42 + _0x249391 * 2);
  a0_0x4ef4f3.fillStyle = "#F1C34C";
  if (a0_0x1d703e != a0_0x30b084) {
    a0_0x4ef4f3.shadowOffsetX = 1;
    a0_0x4ef4f3.shadowOffsetY = 1;
    a0_0x4ef4f3.shadowColor = "black";
  }
  a0_0x4ef4f3.globalAlpha = _0x4bae8e.chatA;
  a0_0x4ef4f3.fillText(_0x4bae8e.chatTxt, this.x, this.y - this.rad);
  a0_0x4ef4f3.restore();
};
function a0_0x16089f() {
  a0_0x16089f.superClass.call(this);
}
a0_0x16089f.prototype.aLine = null;
a0_0x16089f.prototype.readCustomData_onNewlyVisible = function (_0x543629) {
  a0_0x16089f.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x543629);
  this.aLine = {
    chatTxt: this.speciesType == 201 ? "Oh yeah!" : "Hehehe",
    chatFadeT: a0_0x4f736f + 4000,
    chatA: 0
  };
};
a0_0x16089f.prototype.getSkinImageObj = function (_0x30d4e1) {
  var _0x568f13 = this.speciesType === 201 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x30d4e1, _0x568f13);
};
window.HyenaLaugh = a0_0x16089f;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x16089f, a0_0x20e6c5, a0_0x17f20b);
var a0_0x58d04c = a0_0x45645e;
a0_0x28b410.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x28b410.prototype.constructor = a0_0x28b410;
a0_0x28b410.superClass = a0_0x58d04c;
a0_0x28b410.prototype.animalInfo = function () {
  var _0x5734ca = {
    aniCol: "#FF9000"
  };
  switch (this.animalSpecies) {
    case 0:
      _0x5734ca.aniName = "Rattle Snake";
      break;
    case 111:
      _0x5734ca.aniName = "Classic Rattle Snake";
      break;
    case 112:
      _0x5734ca.aniName = "Gold-trim Rattle Snake";
      break;
    case 100:
      _0x5734ca.aniName = "Gummy Viper";
      break;
  }
  _0x5734ca.upgradeText = "UPGRADED to " + _0x5734ca.aniName + "!\nThe " + _0x5734ca.aniName + " is a very dangerous animal. \nHOLD W to Rattle.";
  _0x5734ca.skinName = this.getSkinName();
  return _0x5734ca;
};
a0_0x28b410.prototype.getSkinName = function () {
  return this.getSkinPath() + "/rattlesnake" + (this.specType == 0 ? "" : this.specType);
};
a0_0x28b410.prototype.getSkinPath = function () {
  return "desert/rattlesnake/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x28b410.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x28b410.prototype.biteStart = 0;
a0_0x28b410.prototype.drawUnderSkinImg = function () {
  if (!this.flag_usingAbility) {
    var _0x3e2cbb = this.rad - this.outlineW;
    var _0x3f6d7b = 500 / 340;
    var _0x4e8ae8 = this.getSkinImageObj("skins/" + this.getSkinPath() + "/tongue.png");
    var _0x17496a = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x4818e7 = a0_0x1d703e == a0_0x30b084 ? 0 : a0_0xe2d896(_0x17496a, 0.7, 6, 0.5);
    var _0xa9b62b = a0_0x1d703e == a0_0x30b084 ? 0 : 5;
    if (_0x4e8ae8) {
      a0_0x4ef4f3.drawImage(_0x4e8ae8, -_0x3e2cbb * _0x3f6d7b, -(_0x3e2cbb + _0xa9b62b + _0x4818e7) * _0x3f6d7b, _0x3e2cbb * 2 * _0x3f6d7b, _0x3e2cbb * 2 * _0x3f6d7b);
    }
  }
};
a0_0x28b410.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x4f736f;
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x47578b = this.getSkinImageObj("skins/" + this.getSkinPath() + "/rattlesnake_head.png");
      var _0x1d58ef = this.skinScale * 1;
      var _0x12e774 = this.skinRad;
      if (_0x47578b) {
        a0_0x4ef4f3.save();
        var _0x12e774 = this.rad;
        a0_0x4ef4f3.drawImage(_0x47578b, -_0x12e774 * _0x1d58ef, -_0x12e774 * 1.2 * _0x1d58ef, _0x12e774 * 2 * _0x1d58ef, _0x12e774 * 2 * _0x1d58ef);
        a0_0x4ef4f3.restore();
      }
    }
    var _0x56717d = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x1088d9 = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x56717d, 0.1, 0.2, 2) : 0;
    var _0x12e774 = this.rad * 1.3;
    var _0x2f6119 = 0;
    var _0x3be5ae = 0;
    var _0x25f57c = 0;
    var _0x2e55e0 = this.getSkinImageObj("skins/" + this.getSkinPath() + "/rattle.png");
    if (_0x2e55e0) {
      a0_0x4ef4f3.save();
      var _0x2f3c39 = -(-_0x3be5ae + _0x1088d9) * a0_0x844a6b(-(_0x2f6119 - 5));
      var _0x1d58ef = this.skinScale * 1.2;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-_0x25f57c) + _0x2f3c39);
      a0_0x4ef4f3.drawImage(_0x2e55e0, -_0x12e774 * _0x1d58ef, -_0x12e774 * 0.7 * _0x1d58ef, _0x12e774 * 2 * _0x1d58ef, _0x12e774 * 2 * _0x1d58ef);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x28b410.prototype.getAbilityInfo = function (_0xbf990) {
  var _0xfcebf4 = {
    abilName: "Rattle!"
  };
  _0xfcebf4.abilImg = "skins/" + this.getSkinPath() + "/rattlesnake.png ";
  _0xfcebf4.skinThemeID = this.skinThemeID;
  _0xfcebf4.mopeSeasonID = this.mopeSeasonID;
  return _0xfcebf4;
};
function a0_0x28b410() {
  a0_0x28b410.superClass.call(this, a0_0x1370b8);
}
window.RattleSnake = a0_0x28b410;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x28b410, a0_0x1370b8, a0_0x240c0c);
var a0_0x2011f1 = a0_0x35e4f6;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x35e4f6.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x35e4f6.prototype.customDraw = function (_0x45c882) {
  a0_0x4ef4f3.save();
  var _0x309285 = this.getSkinImageObj("skins/desert/rattlesnake/" + this.speciesType + "/circle.png");
  if (_0x309285) {
    var _0xfbd398 = a0_0x4f736f - this.spawnTime;
    var _0x50c5ab = _0xfbd398 / 1000;
    var _0x536366 = 2;
    var _0x1b98c5 = 1.5;
    rShift = _0x1b98c5 * Math.sin(Math.PI * 2 / _0x536366 * _0x50c5ab);
    var _0x433d32 = a0_0xe2d896(_0x50c5ab, 5.1, 1, 1);
    _0x433d32 = a0_0x870f2b(_0x433d32, 0, 1);
    a0_0x4ef4f3.globalAlpha = _0x433d32;
    var _0x400ef0 = 1;
    var _0x415a06 = this.rad * 0.8;
    a0_0x4ef4f3.drawImage(_0x309285, -_0x415a06 * _0x400ef0, -_0x415a06 * _0x400ef0, _0x415a06 * 2 * _0x400ef0, _0x415a06 * 2 * _0x400ef0);
  }
  a0_0x4ef4f3.restore();
};
a0_0x35e4f6.prototype.getSkinImageObj = function (_0x57e2ad) {
  var _0x846e76 = this.speciesType === 100 ? 1 : this.mopeSeasonID;
  var _0x18d42c = "./assets/s/" + _0x846e76 + "/" + _0x57e2ad;
  if (this.skinThemeID > 0) {
    _0x18d42c = "./assets/t/" + this.skinThemeID + "/" + _0x57e2ad;
  }
  return a0_0x2cc313(_0x18d42c, function (_0x2d70f3) {
    console.log(_0x2d70f3.src);
  });
};
function a0_0x35e4f6() {
  a0_0x35e4f6.superClass.call(this);
}
window.SnakeRattle = a0_0x35e4f6;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x35e4f6, a0_0x20e6c5, a0_0x5ba657);
var a0_0x154434 = a0_0x154434;
var a0_0x58d04c = a0_0x45645e;
a0_0x154434.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x154434.prototype.constructor = a0_0x154434;
a0_0x154434.superClass = a0_0x58d04c;
a0_0x154434.prototype.getSkinName2 = function () {
  var _0x8299e1 = this.getSkinPath() + "/vulture";
  return _0x8299e1;
};
a0_0x154434.prototype.getSkinName = function () {
  let _0x34744f = this.getSkinPath() + "/vulture";
  if (this.flag_flying && this.flag_usingAbility) {
    _0x34744f += 2;
  } else {
    _0x34744f += this.specType == 0 ? "" : this.specType;
  }
  return _0x34744f;
};
a0_0x154434.prototype.getSkinPath = function () {
  return "desert/vulture/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x154434.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x154434.prototype.getAbilityInfo = function (_0x2c8030) {
  var _0x2405f2 = {
    abilName: "Fly/ Pickup Bones"
  };
  _0x2405f2.abilImg = "skins/" + this.getSkinPath() + "/vulture.png";
  _0x2405f2.skinThemeID = this.skinThemeID;
  _0x2405f2.mopeSeasonID = this.mopeSeasonID;
  return _0x2405f2;
};
a0_0x154434.prototype.animalInfo = function () {
  var _0x18e212 = {
    aniName: "Vulture"
  };
  switch (this.animalSpecies) {
    case 100:
      _0x18e212.aniName = "Vulgeist";
      break;
    case 111:
      _0x18e212.aniName = "Classic Vulture";
      break;
    case 112:
      _0x18e212.aniName = "Gold-trim Vulture";
      break;
    case 204:
      _0x18e212.aniName = "Acid Husk";
      break;
  }
  _0x18e212.aniCol = "#FF9000";
  _0x18e212.skinName = this.getSkinName();
  _0x18e212.upgradeText = "UPGRADED to " + (this.animalSpecies == 1 ? "Rare " : "") + _0x18e212.aniName + "!\nPress W to Grab/Drop bones" + (this.animalSpecies == 1 ? " and animals" : "") + " on other animals,\n (Hint: Use ability on hills to fly) \nTry Eating bones too!";
  return _0x18e212;
};
a0_0x154434.prototype.getHead = function (_0x28c790, _0x16f50c) {
  var _0x57b4d3 = this.flag_flying ? "1" : "1";
  var _0x2b51c8 = "skins/" + this.getSkinName2() + "_head" + _0x57b4d3 + ".png";
  return _0x2b51c8;
};
a0_0x154434.prototype.getWing = function (_0x31ce0b, _0x2e3327, _0x5290d1) {
  var _0x527964 = "skins/" + this.getSkinName2() + "_wing" + _0x2e3327 + ".png";
  return _0x527964;
};
a0_0x154434.prototype.flaps = 0;
a0_0x154434.prototype.flapsMod = 3;
a0_0x154434.prototype.countFlap = true;
a0_0x154434.prototype.canFlap = a0_0x1d703e != a0_0x30b084;
a0_0x154434.prototype.resumeFlapT = 0;
a0_0x154434.prototype.lastFlapFrame = 0;
a0_0x154434.prototype.sF = -1;
a0_0x154434.prototype.wF = 1;
a0_0x154434.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x191293 = "skins";
  if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
    if (!this.canFlap && this.flag_flying && a0_0x4f736f > this.resumeFlapT) {
      this.canFlap = true;
    }
  } else {
    this.canFlap = false;
  }
  {
    var _0x17d8b1 = 500 / 340;
    a0_0x4ef4f3.save();
    var _0x2a242b = this.flag_flying ? 45 : 47;
    var _0x20c9c8 = this.flag_flying ? 90 : 45;
    var _0x57b9d0 = this.flag_flying ? 0.2 : 0.001;
    var _0x53fe18 = this.flag_flying ? 2.5 : 2.3;
    var _0x1dff68 = this.flag_flying ? 2.2 : 2.7;
    var _0x37c29d = this.flag_flying ? 1.2 : 1;
    var _0x78efed = this.flag_flying ? 0.35 : 0.2;
    var _0x2a48e2 = this.flag_flying ? "" : "2";
    var _0x1fe5d4 = (a0_0x4f736f - this.resumeFlapT) / 1000;
    var _0x23aeec = this.canFlap ? a0_0xe2d896(_0x1fe5d4, _0x37c29d, _0x78efed, 2) : this.birdNoAnimationFlyWingAngle;
    if (this.flag_flying && _0x23aeec < 0 && this.countFlap) {
      this.countFlap = false;
      this.flaps++;
      if (this.flaps % this.flapsMod == 0) {
        this.lastFlapFrame = _0x23aeec;
        this.canFlap = false;
        this.resumeFlapT = +new Date() + 1500;
      }
    } else if (_0x23aeec > 0 && !this.countFlap) {
      this.countFlap = true;
    }
    if (!this.canFlap) {
      _0x23aeec = this.lastFlapFrame;
    }
    _0x53fe18 += this.sF * _0x23aeec;
    _0x1dff68 += this.wF * _0x23aeec;
    var _0x198825 = this.getSkinImageObj(this.getWing("vulture", _0x2a48e2 + 1, false));
    if (_0x198825) {
      a0_0x4ef4f3.save();
      var _0x374a1c = 1;
      _0x374a1c = -(-_0x57b9d0 + _0x23aeec);
      var _0xf2fdfe = _0x374a1c * a0_0x844a6b(_0x20c9c8);
      var _0x38e17a = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(_0x2a242b) + _0xf2fdfe);
      var _0x2af1b5 = 0;
      var _0x3f5c88 = this.rad;
      var _0x3fa72e = _0x38e17a * _0x1dff68 * 0.62;
      var _0x32dbb1 = _0x38e17a * _0x53fe18;
      var _0xf3071a = 0.2;
      var _0x4157c0 = 1.7;
      a0_0x4ef4f3.drawImage(_0x198825, _0x2af1b5 + _0x3fa72e * -_0xf3071a, _0x3f5c88 + _0x32dbb1 * -_0x4157c0, _0x3fa72e, _0x32dbb1);
      a0_0x4ef4f3.restore();
    }
    var _0x198825 = this.getSkinImageObj(this.getWing("vulture", _0x2a48e2 + 2, false));
    if (_0x198825) {
      a0_0x4ef4f3.save();
      var _0x374a1c = 1;
      _0x374a1c = -(-_0x57b9d0 + _0x23aeec);
      var _0xf2fdfe = _0x374a1c * a0_0x844a6b(-_0x20c9c8);
      var _0x38e17a = this.rad * 0.8;
      a0_0x4ef4f3.rotate(a0_0x844a6b(-_0x2a242b) + _0xf2fdfe);
      var _0x2af1b5 = 0;
      var _0x3f5c88 = this.rad;
      var _0x3fa72e = _0x38e17a * _0x1dff68 * 0.62;
      var _0x32dbb1 = _0x38e17a * _0x53fe18;
      var _0xf3071a = 0.8;
      var _0x4157c0 = 1.7;
      a0_0x4ef4f3.drawImage(_0x198825, _0x2af1b5 + _0x3fa72e * -_0xf3071a, _0x3f5c88 + _0x32dbb1 * -_0x4157c0, _0x3fa72e, _0x32dbb1);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
    if (this.specType != 0 && this.specType != undefined) {
      var _0x3fe645 = this.getSkinImageObj(this.getHead("vulture", false));
      if (_0x3fe645) {
        var _0x38e17a = this.rad;
        var _0x505c97 = 0;
        if (this.flag_flying) {
          _0x505c97 = (-_0x38e17a + _0x38e17a * 0.4) * _0x17d8b1;
        } else {
          _0x505c97 = (-_0x38e17a + _0x38e17a * 0.1) * _0x17d8b1;
        }
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.drawImage(_0x3fe645, -_0x38e17a * _0x17d8b1, _0x505c97, _0x38e17a * 2 * _0x17d8b1, _0x38e17a * 2 * _0x17d8b1);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
function a0_0x154434() {
  a0_0x154434.superClass.call(this, a0_0x1370b8);
  if (this.resumeFlapT == 0) {
    this.resumeFlapT = +new Date();
  }
}
window.Vulture = a0_0x154434;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x154434, a0_0x1370b8, a0_0x69c437);
var a0_0x58d04c = a0_0x12658e;
a0_0x14821d.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x14821d.prototype.constructor = a0_0x14821d;
a0_0x14821d.superClass = a0_0x58d04c;
a0_0x14821d.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x14821d.prototype.customDraw = function (_0x3fa7fe) {
  var _0x56ca15 = "gameobj/" + this.oType + "/" + this.oType + ".png";
  var _0x3e2adc = this.getSkinImageObj(_0x56ca15);
  if (_0x3e2adc) {
    a0_0x4ef4f3.save();
    var _0x2d3067 = this.rad * 1;
    a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
    a0_0x4ef4f3.drawImage(_0x3e2adc, -_0x2d3067, -_0x2d3067, _0x2d3067 * 2, _0x2d3067 * 2);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x14821d() {
  a0_0x14821d.superClass.call(this, a0_0x2001d2);
}
window.Bone = a0_0x14821d;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x14821d, a0_0x2001d2);
var a0_0x58d04c = a0_0x45645e;
a0_0x2ebd16.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2ebd16.prototype.constructor = a0_0x2ebd16;
a0_0x2ebd16.superClass = a0_0x58d04c;
a0_0x2ebd16.prototype.animalInfo = function () {
  var _0x1f75ef = {};
  switch (this.animalSpecies) {
    case 0:
      _0x1f75ef.aniName = "Bison";
      break;
    case 111:
      _0x1f75ef.aniName = "Classic Bison";
      break;
    case 112:
      _0x1f75ef.aniName = "Gold-trim Bison";
      break;
    case 200:
      _0x1f75ef.aniName = "Titan Bison";
      break;
    case 202:
      _0x1f75ef.aniName = "Minotaur";
      break;
  }
  _0x1f75ef.aniCol = "#FF9000";
  _0x1f75ef.skinName = this.getSkinName();
  _0x1f75ef.upgradeText = "UPGRADED to " + _0x1f75ef.aniName + "!\nHold W to charge and toss opponent in air.";
  return _0x1f75ef;
};
a0_0x2ebd16.prototype.getSpeciesPath = function (_0x431004) {
  return "desert/" + _0x431004 + "/" + this.animalSpecies;
};
a0_0x2ebd16.prototype.getAbilityInfo = function (_0x30248e) {
  var _0x1c86ac = {
    abilName: "Gores!"
  };
  _0x1c86ac.abilImg = "skins/desert/bison/" + this.animalSpecies + this.getSubSpecies() + "/bison_ability.png";
  _0x1c86ac.skinThemeID = this.skinThemeID;
  _0x1c86ac.mopeSeasonID = this.mopeSeasonID;
  return _0x1c86ac;
};
a0_0x2ebd16.prototype.getSkinName = function () {
  return this.getSkin() + "/bison" + (this.specType == 0 ? "" : 1);
};
a0_0x2ebd16.prototype.getSkin = function () {
  return "desert/bison/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x2ebd16.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x2ebd16.prototype.drawUnderSkinImgOutline = function () {
  a0_0x2ebd16.superClass.prototype.drawUnderSkinImgOutline.call(this);
  if (this.flag_usingAbility && this.isHitingAnimal) {
    this.showBackLeg();
  }
};
a0_0x2ebd16.prototype.isHitingAnimal = false;
a0_0x2ebd16.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility) {
    if (this.specType != 0 && this.specType != undefined) {
      if (!this.isHitingAnimal && this.specType == 2) {
        this.isHitingAnimal = true;
      }
      {
        var _0x71fa29 = this.getSkinImageObj("skins/" + this.getSkin() + "/body_front.png");
        var _0xe7d2c8 = this.skinScale * 1;
        var _0x23cd8f = this.skinRad;
        if (_0x71fa29) {
          frame = 0;
          a0_0x4ef4f3.save();
          var _0x23cd8f = this.rad;
          a0_0x4ef4f3.drawImage(_0x71fa29, -_0x23cd8f * _0xe7d2c8, -_0x23cd8f * _0xe7d2c8, _0x23cd8f * 2 * _0xe7d2c8, _0x23cd8f * 2 * _0xe7d2c8);
          a0_0x4ef4f3.restore();
        }
      }
      var _0x71fa29 = this.getSkinImageObj("skins/" + this.getSkin() + "/bison_head" + this.specType + ".png");
      var _0xe7d2c8 = this.skinScale * 1.01;
      var _0x23cd8f = this.skinRad;
      if (_0x71fa29) {
        frame = 0;
        a0_0x4ef4f3.save();
        var _0x23cd8f = this.rad;
        a0_0x4ef4f3.drawImage(_0x71fa29, -_0x23cd8f * _0xe7d2c8, (-_0x23cd8f + _0x23cd8f * 0.2) * _0xe7d2c8 + frame, _0x23cd8f * 2 * _0xe7d2c8, _0x23cd8f * 2 * _0xe7d2c8);
        a0_0x4ef4f3.restore();
      }
    }
  } else {
    this.legYAnchorF = 0;
    this.legHeightF = 0;
    this.isHitingAnimal = false;
  }
};
a0_0x2ebd16.prototype.legYAnchorF = 2.3;
a0_0x2ebd16.prototype.legStretchW = 1.3;
a0_0x2ebd16.prototype.legStretchH = 1;
a0_0x2ebd16.prototype.legHeightF = 20;
a0_0x2ebd16.prototype.showBackLeg = function () {
  var _0x11f06c = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x576811 = a0_0xe2d896(_0x11f06c, 0.3, 1, 0.5);
  var _0x5b2f59 = "front";
  if (_0x576811 <= 0.5 && _0x576811 > 0.1) {
    _0x5b2f59 = "front";
    this.legYAnchorF = 1;
    this.legHeightF = 20;
  } else if (_0x576811 > 0.5) {
    _0x5b2f59 = "back";
    this.legYAnchorF = 2.3;
    this.legHeightF = -5;
  }
  a0_0x4ef4f3.save();
  var _0x3eecbe = a0_0x4ef4f3.globalAlpha;
  a0_0x4ef4f3.globalAlpha = _0x3eecbe * 0.1;
  a0_0x5c99c1(0, 0, this.rad, "#755A2A");
  a0_0x4ef4f3.globalAlpha = _0x3eecbe * 1;
  var _0x565e83 = this.getSkinImageObj("skins/" + this.getSkin() + "/" + _0x5b2f59 + "_legs.png");
  if (_0x565e83) {
    var _0x592ef5 = _0x576811;
    var _0x4e5feb = this.rad * 0.6;
    var _0x37b6a2 = 0;
    var _0x592225 = this.rad;
    var _0x487aa6 = _0x4e5feb * 2 * this.legStretchW;
    var _0x54e2bd = _0x4e5feb * 2 * _0x592ef5;
    var _0x337f06 = 0.5;
    var _0x20aaaf = 0.95;
    a0_0x4ef4f3.drawImage(_0x565e83, _0x37b6a2 + _0x487aa6 * -_0x337f06, _0x592225 + (_0x54e2bd + this.legHeightF) * (-_0x20aaaf * this.legYAnchorF), _0x487aa6, _0x54e2bd * this.legStretchH);
  }
  a0_0x4ef4f3.restore();
};
function a0_0x2ebd16() {
  a0_0x2ebd16.superClass.call(this, a0_0x1370b8);
}
window.Bison = a0_0x2ebd16;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2ebd16, a0_0x1370b8, a0_0x32203e);
var a0_0x58d04c = a0_0x45645e;
a0_0x271288.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x271288.prototype.constructor = a0_0x271288;
a0_0x271288.superClass = a0_0x58d04c;
a0_0x271288.prototype.animalInfo = function () {
  var _0x37f7a2 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x37f7a2.aniName = "Komodo Dragon";
      break;
    case 1:
      _0x37f7a2.aniName = "Golden Komodo";
      break;
    case 2:
      _0x37f7a2.aniName = "Night Komodo";
      break;
    case 111:
      _0x37f7a2.aniName = "Classic Komodo Dragon";
      break;
    case 200:
      switch (this.animalSubSpecies) {
        case 0:
          _0x37f7a2.aniName = "Dowager Varande";
          break;
        case 1:
          _0x37f7a2.aniName = "Emepror Varande";
          break;
      }
      break;
    case 202:
      _0x37f7a2.aniName = "Galaxy Komodo Dragon";
      break;
  }
  _0x37f7a2.aniCol = "#FF9000";
  _0x37f7a2.skinName = this.getSkinName();
  _0x37f7a2.upgradeText = "UPGRADED to " + _0x37f7a2.aniName + "!\n" + _0x37f7a2.aniName + " have very poisonous bite. Press W to bite! Also eat bones.";
  return _0x37f7a2;
};
a0_0x271288.prototype.getAbilityInfo = function (_0x34a2d4) {
  var _0x573eec = {
    abilName: "Poison Bite\n(Sweat Prey)"
  };
  _0x573eec.abilImg = "skins/" + this.getSkinPath() + "/komododragon_ability.png";
  _0x573eec.skinThemeID = this.skinThemeID;
  _0x573eec.mopeSeasonID = this.mopeSeasonID;
  return _0x573eec;
};
a0_0x271288.prototype.getSkinName = function () {
  return this.getSkinPath() + "/komododragon";
};
a0_0x271288.prototype.getSkinPath = function () {
  return "desert/komododragon/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x271288.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies == 200) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x271288.prototype.updateZ = function () {
  if (this.flag_eff_grabbedByFlytrap) {
    this.z = 1100 + this.rad;
  } else if (this.flag_usingAbility && !this.flag_underWater) {
    this.z = 1200 + this.rad;
  } else if (this.flag_flying || this.flag_eff_tossedInAir) {
    this.z = 10000;
    if (this.flag_isGrabbed) {
      this.z -= this.rad;
    } else {
      this.z += this.rad;
    }
  } else {
    this.z = this.rad;
  }
};
a0_0x271288.prototype.straightTongueOffsetY = -0.45;
a0_0x271288.prototype.straightTongueScaleF = 1.8;
a0_0x271288.prototype.drawUnderSkinImg = function () {
  if (this.specType != 0) {
    return;
  }
  this.setSkinScale();
  if (+new Date() < this.spawnTime + 5000) {
    return;
  }
  if (!this.flag_usingAbility && !this.wasLicking && +new Date() > this.nextShowT) {
    var _0xf7523e = this.skinScale * this.straightTongueScaleF;
    var _0x146a4e = this.skinRad;
    var _0x3f43e6 = this.getSkinImageObj("skins/" + this.getSkinPath() + "/tongue.png");
    var _0x392d5f = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0xc97ca1 = a0_0xe2d896(_0x392d5f, 0.7, 12, 0.5);
    if (_0x3f43e6) {
      a0_0x4ef4f3.drawImage(_0x3f43e6, -_0x146a4e * _0xf7523e, (-_0x146a4e + _0x146a4e * this.straightTongueOffsetY) * _0xf7523e + _0xc97ca1, _0x146a4e * 2 * _0xf7523e, _0x146a4e * 2 * _0xf7523e);
    }
  }
};
a0_0x271288.prototype.tongueAnimationDur = 1;
a0_0x271288.prototype.tongueScaleF = 1.5;
a0_0x271288.prototype.tongueAncherY = -0.21;
a0_0x271288.prototype.showTongue = true;
a0_0x271288.prototype.nextShowT = 0;
a0_0x271288.prototype.lastLickSide = 0;
a0_0x271288.prototype.wasLicking = false;
a0_0x271288.prototype.isLicking = false;
a0_0x271288.prototype.lickFaceOffsetY = -0.3;
a0_0x271288.prototype.biteStart = 0;
var a0_0x136596 = 0;
var a0_0x202ed6 = 1.2;
a0_0x271288.prototype.drawSkinCustomization = function () {
  this.setSkinScale();
  var _0x21c257 = -0.15;
  if (this.flag_usingAbility) {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x4f736f;
    }
    if (this.specType == 1) {
      {
        var _0xb9a816 = this.getSkinImageObj("skins/" + this.getSkinPath() + "/komododragon_neck.png");
        if (_0xb9a816) {
          var _0x585452 = (a0_0x4f736f - this.biteStart) / 1000;
          var _0x33317d = 5;
          var _0x64150 = 1;
          var _0x457fa7 = a0_0xe2d896(_0x585452, _0x64150, _0x33317d, 1);
          a0_0x4ef4f3.save();
          var _0x5a378f = this.rad;
          var _0x14fe9e = this.skinScale * 1;
          a0_0x4ef4f3.drawImage(_0xb9a816, -_0x5a378f * _0x14fe9e, (-_0x5a378f + _0x5a378f * -0.05) * _0x14fe9e + _0x457fa7, _0x5a378f * 2 * _0x14fe9e, _0x5a378f * 2 * _0x14fe9e);
          a0_0x4ef4f3.restore();
        }
      }
      {
        if (!this.flag_underWater) {
          var _0x39389f = "skins/" + this.getSkinPath() + "/komododragon_tail.png";
          var _0x24dd62 = this.getSkinImageObj(_0x39389f);
          if (_0x24dd62) {
            var _0x14fe9e = this.skinScale * a0_0x202ed6;
            var _0x5a378f = this.skinRad;
            a0_0x4ef4f3.drawImage(_0x24dd62, -_0x5a378f * _0x14fe9e, (-_0x5a378f + _0x5a378f * a0_0x136596) * _0x14fe9e, _0x5a378f * 2 * _0x14fe9e, _0x5a378f * 2 * _0x14fe9e);
          }
        }
      }
      {
        var _0xdae70f = this.getSkinImageObj("skins/" + this.getSkinPath() + "/komododragon_attack.png");
        var _0x14fe9e = this.skinScale * 1;
        var _0x5a378f = this.skinRad;
        var _0x33317d = 12;
        var _0x64150 = 0.9;
        var _0x457fa7 = a0_0xe2d896(_0x585452, _0x64150, _0x33317d, 1);
        if (_0xdae70f) {
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.drawImage(_0xdae70f, -_0x5a378f * _0x14fe9e, -_0x5a378f * _0x14fe9e + _0x457fa7, _0x5a378f * 2 * _0x14fe9e, _0x5a378f * 2 * _0x14fe9e);
          a0_0x4ef4f3.restore();
        }
      }
    }
  }
  if (this.specType == 0) {
    if (!this.flag_underWater) {
      var _0x39389f = "skins/" + this.getSkinPath() + "/komododragon_tail.png";
      var _0x24dd62 = this.getSkinImageObj(_0x39389f);
      if (_0x24dd62) {
        var _0x14fe9e = this.skinScale * a0_0x202ed6;
        var _0x5a378f = this.skinRad;
        a0_0x4ef4f3.drawImage(_0x24dd62, -_0x5a378f * _0x14fe9e, (-_0x5a378f + _0x5a378f * a0_0x136596) * _0x14fe9e, _0x5a378f * 2 * _0x14fe9e, _0x5a378f * 2 * _0x14fe9e);
      }
      var _0xdae70f = this.getSkinImageObj("skins/" + this.getSkinPath() + "/komododragon_attack.png");
      var _0x14fe9e = this.skinScale * 1;
      var _0x5a378f = this.skinRad;
      var _0x33317d = 12;
      var _0x64150 = 0.9;
      var _0x457fa7 = a0_0xe2d896(_0x585452, _0x64150, _0x33317d, 1);
      if (_0xdae70f) {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.drawImage(_0xdae70f, -_0x5a378f * _0x14fe9e, -_0x5a378f * _0x14fe9e + _0x457fa7, _0x5a378f * 2 * _0x14fe9e, _0x5a378f * 2 * _0x14fe9e);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.save();
      var _0x39389f = "skins/" + this.getSkinPath() + "/licked_face.png";
      var _0x24dd62 = this.getSkinImageObj(_0x39389f);
      if (_0x24dd62) {
        var _0x1af125 = this.lickedAmt / 100;
        a0_0x4ef4f3.globalAlpha = _0x1af125;
        a0_0x4ef4f3.drawImage(_0x24dd62, -_0x5a378f * _0x14fe9e, (-_0x5a378f + _0x5a378f * _0x21c257) * _0x14fe9e + _0x457fa7, _0x5a378f * 2 * _0x14fe9e, _0x5a378f * 2 * _0x14fe9e);
      }
      a0_0x4ef4f3.restore();
      a0_0x4ef4f3.save();
      var _0x39389f = "skins/" + this.getSkinPath() + "/komododragon_head.png";
      var _0x24dd62 = this.getSkinImageObj(_0x39389f);
      if (_0x24dd62) {
        var _0x14fe9e = this.skinScale;
        var _0x5a378f = this.skinRad;
        a0_0x4ef4f3.drawImage(_0x24dd62, -_0x5a378f * _0x14fe9e, -_0x5a378f * _0x14fe9e, _0x5a378f * 2 * _0x14fe9e, _0x5a378f * 2 * _0x14fe9e);
      }
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x271288.prototype.lickSide = 0;
a0_0x271288.prototype.lickedAmt = 0;
a0_0x271288.prototype.readCustomData_onNewlyVisible = function (_0x1603e1) {
  a0_0x271288.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x1603e1);
  var _0x5178d3 = _0x1603e1.readUInt8() == 1;
  this.nextShowT = +new Date() + 3000;
  this.isLicking = _0x5178d3;
  this.lickSide = _0x1603e1.readUInt8();
  this.lickedAmt = _0x1603e1.readUInt8();
};
a0_0x271288.prototype.customUpdatedProperty = function (_0x285f1d, _0x4c0bb7) {
  if (_0x285f1d == a0_0x256382) {
    var _0x4a19e4 = _0x4c0bb7.readUInt8() == 1;
    this.nextShowT = +new Date() + 3000;
    this.isLicking = _0x4a19e4;
    if (!this.wasLicking && this.isLicking) {
      this.wasLicking = true;
    }
  } else if (_0x285f1d == a0_0x5cd13d) {
    this.lickedAmt = _0x4c0bb7.readUInt8();
  } else if (_0x285f1d == a0_0x1ffef4) {
    this.lickSide = _0x4c0bb7.readUInt8();
  }
};
function a0_0x271288() {
  a0_0x271288.superClass.call(this, a0_0x1370b8);
}
window.KomodoDragon = a0_0x271288;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x271288, a0_0x1370b8, a0_0x25f6dd);
var a0_0x58d04c = a0_0x12658e;
a0_0x1ff189.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1ff189.prototype.constructor = a0_0x1ff189;
a0_0x1ff189.superClass = a0_0x58d04c;
a0_0x1ff189.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x1ff189.prototype.customDraw = function (_0x48e42a) {
  a0_0x4ef4f3.save();
  this.drawOutlinedCircle("", a0_0x580248);
  a0_0x4ef4f3.restore();
};
function a0_0x1ff189() {
  a0_0x1ff189.superClass.call(this, a0_0x2e4522);
}
window.SweatPoison = a0_0x1ff189;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1ff189, a0_0x2e4522);
var a0_0x58d04c = a0_0x12658e;
a0_0x4bd39e.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4bd39e.prototype.constructor = a0_0x4bd39e;
a0_0x4bd39e.superClass = a0_0x58d04c;
a0_0x4bd39e.prototype.updateZ = function () {
  this.z = -154;
};
a0_0x4bd39e.prototype.customDraw = function (_0x5543e1) {
  a0_0x4ef4f3.save();
  this.rPer = 0;
  var _0x27eae0 = a0_0x580248;
  this.drawOutlinedCircle("", _0x27eae0);
  var _0x5d05a9 = 1;
  if (a0_0x1d703e != 2) {
    a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
  }
  var _0x2f3ccc = 0;
  var _0x559103 = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x60bc15 = 7;
  var _0x4aa015 = 4;
  _0x2f3ccc = _0x4aa015 * Math.sin(Math.PI * 2 / _0x60bc15 * _0x559103);
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x5d05a9 + _0x2f3ccc), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  if (a0_0x1d703e != 2) {
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x5d05a9 + _0x2f3ccc), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x2f3ccc), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x2f3ccc), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x2f3ccc), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x2f3ccc), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    if (this.rad > 50) {
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 10, 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
    }
  }
  a0_0x4ef4f3.restore();
};
function a0_0x4bd39e() {
  a0_0x4bd39e.superClass.call(this, a0_0x40223a);
}
window.PoisonPool = a0_0x4bd39e;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4bd39e, a0_0x40223a);
var a0_0x58d04c = a0_0x45645e;
a0_0x3126be.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3126be.prototype.constructor = a0_0x3126be;
a0_0x3126be.superClass = a0_0x58d04c;
a0_0x3126be.prototype.updateZ = function () {
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_isInArena) {
    this.z = 10000 + this.rad;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else {
    this.z = 1200 + this.rad;
  }
};
a0_0x3126be.prototype.animalInfo = function () {
  var _0x4a2875 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x4a2875.aniName = "Giant Scorpion";
      break;
    case 1:
      _0x4a2875.aniName = "Golden Scorpion";
      break;
    case 2:
      _0x4a2875.aniName = "Carnelian Scorpion";
      break;
    case 111:
      _0x4a2875.aniName = "Classic Giant Scorpion";
      break;
    case 204:
      _0x4a2875.aniName = "Selamorph Scorpion";
      break;
    case 220:
      _0x4a2875.aniName = "Nebuladon Scorpion";
      break;
  }
  _0x4a2875.aniCol = "#FF9000";
  _0x4a2875.skinName = "scorpion";
  _0x4a2875.upgradeText = "UPGRADED to " + _0x4a2875.aniName + "!\nSting and Shiver your prey to death.\n(Press W to Sting)";
  return _0x4a2875;
};
a0_0x3126be.prototype.getAbilityInfo = function (_0x21aea8) {
  var _0x361b12 = {
    abilName: "Sting!\n(Shivers Prey)",
    abilImg: "skins/desert/scorpion/" + this.animalSpecies + "/scorpion_ability.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x361b12;
};
a0_0x3126be.prototype.getSkinName = function () {
  var _0x5d0d7d = "desert/scorpion/" + this.animalSpecies + "/scorpion";
  _0x5d0d7d += this.specType == 0 ? "" : this.specType;
  return _0x5d0d7d;
};
a0_0x3126be.prototype.stingerScaleF = 0.7;
a0_0x3126be.prototype.stingerOffsetY = -0.6;
a0_0x3126be.prototype.poison = 50;
a0_0x3126be.prototype.clawAnimation = null;
a0_0x3126be.prototype.stingAnimation = null;
a0_0x3126be.prototype.stingerTailNormal = null;
a0_0x3126be.prototype.stingerTail = null;
a0_0x3126be.prototype.stingerAttack = null;
a0_0x3126be.prototype.stingerAttackFull = null;
a0_0x3126be.prototype.stingerNormal = null;
a0_0x3126be.prototype.stingerNormalFull = null;
a0_0x3126be.prototype.isUsingAbility = false;
a0_0x3126be.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.clawAnimation = null;
    this.stingAnimation = null;
    this.isUsingAbility = false;
  }
  if (!this.isUsingAbility && this.flag_eff_aniInClaws) {
    this.isUsingAbility = true;
    this.stingAnimation = null;
  }
  if (this.isUsingAbility && !this.flag_usingDiveAbility) {
    if (this.stingAnimation == null) {
      this.stingAnimation = new a0_0x100d8b(this, 1, a0_0x100d8b.bow, {
        v1: 5
      });
      this.stingAnimation.onFrameEntered = function (_0x3e2909) {
        a0_0x4ef4f3.save();
        var _0x1a1c58 = this.forObj.skinScale * this.forObj.stingerScaleF;
        var _0x5ce4c7 = this.forObj.rad;
        if (this.forObj.stingerTailAttack) {
          a0_0x4ef4f3.drawImage(this.forObj.stingerTailAttack, -_0x5ce4c7 * _0x1a1c58, (-_0x5ce4c7 + _0x5ce4c7 * this.forObj.stingerOffsetY) * _0x1a1c58, _0x5ce4c7 * 2 * _0x1a1c58, (_0x5ce4c7 + _0x5ce4c7 * _0x3e2909) * 2 * _0x1a1c58);
        }
        if (this.forObj.stingerTail) {
          a0_0x4ef4f3.drawImage(this.forObj.stingerTail, -_0x5ce4c7 * _0x1a1c58, (-_0x5ce4c7 + _0x5ce4c7 * _0x3e2909) * _0x1a1c58, _0x5ce4c7 * 2 * _0x1a1c58, _0x5ce4c7 * 2 * _0x1a1c58);
        }
        if (this.forObj.stingerAttack) {
          a0_0x4ef4f3.drawImage(this.forObj.stingerAttack, -_0x5ce4c7 * _0x1a1c58, (-_0x5ce4c7 + _0x5ce4c7 * _0x3e2909) * _0x1a1c58, _0x5ce4c7 * 2 * _0x1a1c58, _0x5ce4c7 * 2 * _0x1a1c58);
        }
        var _0x29b7ad = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x3637fb = a0_0xe2d896(_0x29b7ad, 5, 1, 1);
        var _0x49a82f = Math.max(0, _0x3637fb);
        a0_0x4ef4f3.globalAlpha = _0x49a82f * Math.max(0, this.poison / 100);
        if (this.forObj.stingerAttackFull) {
          a0_0x4ef4f3.drawImage(this.forObj.stingerAttackFull, -_0x5ce4c7 * _0x1a1c58, (-_0x5ce4c7 + _0x5ce4c7 * _0x3e2909) * _0x1a1c58, _0x5ce4c7 * 2 * _0x1a1c58, _0x5ce4c7 * 2 * _0x1a1c58);
        }
        a0_0x4ef4f3.restore();
      };
    }
    if (this.stingAnimation) {
      this.stingAnimation.run();
    }
  }
  if (this.stingAnimation == null || this.stingAnimation.hasStopped) {
    if (!this.flag_underWater && !this.flag_usingDiveAbility) {
      if (this.stingerTailNormal != null && this.stingerNormalFull != null) {
        var _0x35021b = this.skinScale * this.stingerScaleF;
        var _0x217109 = this.skinRad;
        var _0x22547f = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x25e58a = 3;
        var _0x1e52ff = 1.5;
        var _0x5829d0 = 0;
        var _0x22c8ee = 0;
        if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
          _0x5829d0 = a0_0xe2d896(_0x22547f, _0x1e52ff, _0x25e58a, 2);
          _0x22c8ee = a0_0xe2d896(_0x22547f, _0x1e52ff, 1, 2);
        }
        a0_0x4ef4f3.save();
        var _0x217109 = this.rad - _0x5829d0 * 0.5;
        a0_0x4ef4f3.drawImage(this.stingerTailNormal, -_0x217109 * _0x35021b, (-_0x217109 + _0x217109 * this.stingerOffsetY) * _0x35021b + _0x5829d0 * -_0x22c8ee, _0x217109 * 2 * _0x35021b, _0x217109 * 2 * _0x35021b);
        var _0x22547f = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x2b1384 = a0_0xe2d896(_0x22547f, 5, 1, 1);
        var _0x321623 = Math.max(0, _0x2b1384);
        a0_0x4ef4f3.globalAlpha = _0x321623 * Math.max(0, this.poison / 100);
        a0_0x4ef4f3.drawImage(this.stingerNormalFull, -_0x217109 * _0x35021b, (-_0x217109 + _0x217109 * this.stingerOffsetY) * _0x35021b + _0x5829d0 * -_0x22c8ee, _0x217109 * 2 * _0x35021b, _0x217109 * 2 * _0x35021b);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
a0_0x3126be.prototype.drawWhenUnderwater = function () {
  this.drawUnderwaterCustomization(1, 1.1);
};
a0_0x3126be.prototype.tailOffsetY = -0.25;
a0_0x3126be.prototype.tailScaleF = 1.2;
var a0_0x55acbf = 4;
var a0_0x420bae = 0.1;
a0_0x3126be.prototype.drawUnderSkinImg = function () {
  var _0x3bfd1a = "skins/desert/scorpion/" + this.animalSpecies + "/tail_back.png";
  var _0x7da42b = this.getSkinImageObj(_0x3bfd1a);
  if (_0x7da42b) {
    var _0x59de03 = 0;
    if (this.stingAnimation) {
      if (this.stingAnimation.frame < 0.5) {
        _0x59de03 = -this.stingAnimation.frame * 0.3;
      }
    }
    var _0x57e7bd = this.skinScale * this.tailScaleF;
    var _0x25a661 = this.skinRad;
    a0_0x4ef4f3.drawImage(_0x7da42b, -_0x25a661 * _0x57e7bd, (-_0x25a661 + _0x25a661 * this.tailOffsetY) * _0x57e7bd, _0x25a661 * 2 * _0x57e7bd, (_0x25a661 + _0x25a661 * _0x59de03) * 2 * _0x57e7bd);
  }
  if (this.flag_usingAbility && !this.flag_underWater) {
    if (this.clawAnimation == null) {
      this.clawAnimation = new a0_0x100d8b(this, 0.9, a0_0x100d8b.bow, {
        v1: a0_0x55acbf
      });
      this.clawAnimation.keepLastFrame = true;
      this.clawAnimation.onFrameEntered = function (_0x5b6302) {
        var _0x3cb85c = 0;
        if (_0x5b6302 < 0.5) {
          _0x3cb85c = -_0x5b6302;
        }
        var _0x543a0c = "skins/desert/scorpion/" + this.forObj.animalSpecies + "/arms.png";
        if (this.forObj.flag_eff_aniInClaws) {
          _0x543a0c = "skins/desert/scorpion/" + this.forObj.animalSpecies + "/arms-grabbed.png";
        }
        var _0xc015e7 = this.forObj.getSkinImageObj(_0x543a0c);
        if (_0xc015e7) {
          var _0x49ccfb = this.forObj.skinScale * this.forObj.tailScaleF;
          var _0x2e5969 = this.forObj.skinRad;
          if (!this.hasStopped && this.timePassed < 0.75) {
            a0_0x420bae = _0x3cb85c;
            a0_0x4ef4f3.drawImage(_0xc015e7, -_0x2e5969 * _0x49ccfb, (-_0x2e5969 + _0x2e5969 * _0x3cb85c) * _0x49ccfb, _0x2e5969 * 2 * _0x49ccfb, _0x2e5969 * 2 * _0x49ccfb);
          } else {
            a0_0x4ef4f3.drawImage(_0xc015e7, -_0x2e5969 * _0x49ccfb, (-_0x2e5969 + _0x2e5969 * a0_0x420bae) * _0x49ccfb, _0x2e5969 * 2 * _0x49ccfb, _0x2e5969 * 2 * _0x49ccfb);
          }
        }
      };
    }
    if (this.clawAnimation != null) {
      this.clawAnimation.run();
    }
  }
};
a0_0x3126be.prototype.readCustomData_onNewlyVisible = function (_0x415626) {
  a0_0x3126be.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x415626);
  this.poison = _0x415626.readUInt8();
};
a0_0x3126be.prototype.customUpdatedProperty = function (_0x1ebc5e, _0x4993a2) {
  if (_0x1ebc5e == a0_0x5cd13d) {
    this.poison = _0x4993a2.readUInt8();
  }
};
function a0_0x3126be() {
  a0_0x3126be.superClass.call(this, a0_0x1370b8);
}
a0_0x3126be.prototype.preLoad = function () {
  this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/scorpion1.png");
  this.stingerTailNormal = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/stinger_normal.png");
  this.stingerTail = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/stinger_tail.png");
  this.stingerTailAttack = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/attack_tail.png");
  this.stingerAttack = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/attack_stinger_dull.png");
  this.stingerAttackFull = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/attack_stinger_full.png");
  this.stingerNormal = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/normal_stinger_dull.png");
  this.stingerNormalFull = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/normal_stinger_full.png");
};
window.GiantScorpion = a0_0x3126be;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3126be, a0_0x1370b8, a0_0x527dbe);
var a0_0x58d04c = a0_0x45645e;
a0_0x2e4ee6.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2e4ee6.prototype.constructor = a0_0x2e4ee6;
a0_0x2e4ee6.superClass = a0_0x58d04c;
a0_0x2e4ee6.prototype.updateZ = function () {
  if (this.flag_usingAbility && this.webState > 2) {
    this.z = 1000;
  } else if (this.flag_eff_isOnSpiderWeb) {
    this.z = 1000 + this.rad;
  } else {
    this.z = 1000 + this.rad;
  }
};
a0_0x2e4ee6.prototype.animalInfo = function () {
  var _0x14cd76 = {};
  switch (this.animalSubSpecies) {
    case 0:
      _0x14cd76.aniName = "Blackwidow Spider";
      break;
    case 1:
      _0x14cd76.aniName = "Goldenwidow Spider";
      break;
    case 2:
      _0x14cd76.aniName = "Queen Blackwidow";
      break;
    case 111:
      _0x14cd76.aniName = "Classic Blackwidow Spider";
      break;
    case 204:
      _0x14cd76.aniName = "Blood Widow Spider!";
      break;
    case 2023:
      _0x14cd76.aniName = "Bot X-303";
      break;
  }
  _0x14cd76.aniCol = "#FF9000";
  _0x14cd76.skinName = this.getSkinName();
  _0x14cd76.upgradeText = "UPGRADED to " + _0x14cd76.aniName + "!\nBlackwidow is a sneaky predator. It traps prey in the web and injects sweat poison.\nPress W to spin and throw web.";
  return _0x14cd76;
};
a0_0x2e4ee6.prototype.getAbilityInfo = function (_0x3e64ec) {
  var _0x212e56 = {
    abilName: "Spin Web & Bite\n(Sweat Prey)",
    abilImg: "skins/desert/blackwidow/" + this.animalSpecies + "/" + this.animalSubSpecies + "/blackwidow.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x212e56;
};
a0_0x2e4ee6.prototype.readCustomData_onNewlyVisible = function (_0x52479f) {
  a0_0x2e4ee6.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x52479f);
  this.customUpdatedProperty(a0_0x54473e, _0x52479f);
};
a0_0x2e4ee6.prototype.webX = 0;
a0_0x2e4ee6.prototype.webY = 0;
a0_0x2e4ee6.prototype.spiderX = 0;
a0_0x2e4ee6.prototype.spiderY = 0;
a0_0x2e4ee6.prototype.webState = 0;
a0_0x2e4ee6.prototype.customUpdatedProperty = function (_0x13a8c5, _0x8eef6) {
  if (_0x13a8c5 == a0_0x54473e) {
    this.webState = _0x8eef6.readUInt8();
  }
};
a0_0x2e4ee6.prototype.setStealth = function () {
  if (a0_0xe92752 == a0_0x2a4d6d && this.flag_usingAbility && (this.flag_stealth || this.flag_inHidingHole || this.flag_eff_isUnderTree)) {
    this.idealOp = 0.01;
  } else {
    a0_0x2e4ee6.superClass.prototype.setStealth.call(this);
  }
};
a0_0x2e4ee6.prototype.readUpdatedPropertyItem = function (_0x157b8d, _0x3fabb6) {
  a0_0x2e4ee6.superClass.prototype.readUpdatedPropertyItem.call(this, _0x157b8d, _0x3fabb6);
  if (_0x157b8d == a0_0x55ca43) {
    if (this.webState == 0) {
      this.web_nx = this.web_ox = this.webX = this.x;
      this.web_ny = this.web_oy = this.webY = this.y;
      this.spider_ox = this.spiderX = this.spider_nx = this.x;
      this.spider_oy = this.spiderY = this.spider_ny = this.y;
    }
    var _0x1d53ec = _0x3fabb6.readUInt8() == 1;
    if (_0x1d53ec) {
      var _0x432bc0 = _0x3fabb6.readUInt16() / 4;
      var _0x82b79c = _0x3fabb6.readUInt16() / 4;
      this.web_ox = this.webX;
      this.web_oy = this.webY;
      this.web_nx = _0x432bc0;
      this.web_ny = _0x82b79c;
      var _0x44af01 = _0x3fabb6.readUInt16() / 4;
      var _0x3dcc08 = _0x3fabb6.readUInt16() / 4;
      this.spider_ox = this.spiderX;
      this.spider_oy = this.spiderY;
      this.spider_nx = _0x44af01;
      this.spider_ny = _0x3dcc08;
    }
  }
};
a0_0x2e4ee6.prototype.onLerpUpdate = function (_0x6850e4) {
  if (this.webState > 0) {
    this.webX = _0x6850e4 * (this.web_nx - this.web_ox) + this.web_ox;
    this.webY = _0x6850e4 * (this.web_ny - this.web_oy) + this.web_oy;
    this.spiderX = _0x6850e4 * (this.spider_nx - this.spider_ox) + this.spider_ox;
    this.spiderY = _0x6850e4 * (this.spider_ny - this.spider_oy) + this.spider_oy;
  }
};
a0_0x2e4ee6.prototype.afterCustomDraw = function (_0x66a95e) {
  if (this.webState > 0 && a0_0x1c918d == this.id && this.flag_usingAbility) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.strokeStyle = this.animalSpecies == 1 ? "gold" : "white";
    a0_0x4ef4f3.globalAlpha = 0.3;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.moveTo(this.webX, this.webY);
    a0_0x4ef4f3.lineTo(this.spiderX, this.spiderY);
    a0_0x4ef4f3.stroke();
    a0_0x4ef4f3.restore();
  }
};
a0_0x2e4ee6.prototype.getSkinName = function () {
  return "desert/blackwidow/" + this.animalSpecies + "/" + this.animalSubSpecies + "/blackwidow" + (this.specType == 0 ? "" : this.specType);
};
a0_0x2e4ee6.prototype.drawSkinCustomization = function () {
  if (this.webState == 0 && this.flag_usingAbility) {
    var _0x43fec3 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x23b369 = 0.75;
    var _0x6bc5a6 = 1;
    var _0x5e58d7 = _0x6bc5a6 * Math.sin(Math.PI * 2 / _0x23b369 * _0x43fec3);
    a0_0x4ef4f3.globalAlpha = 0.3;
    var _0x4b4a5a = this.animalSpecies == 1 ? "gold" : "#f2f2f2";
    a0_0x5c99c1(0, -this.rad * 1.07, this.rad * 0.07, _0x4b4a5a);
    a0_0x4ef4f3.globalAlpha = 0.8 - _0x5e58d7 * 0.2;
    a0_0x5c99c1(0, -this.rad * 1.07, this.rad * 0.07 + (0.05 + _0x5e58d7), _0x4b4a5a);
  }
};
function a0_0x2e4ee6() {
  a0_0x2e4ee6.superClass.call(this, a0_0x1370b8);
}
window.BlackWidowSpider = a0_0x2e4ee6;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2e4ee6, a0_0x1370b8, a0_0x2ed274);
var a0_0x2011f1 = a0_0xec9bc1;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0xec9bc1.prototype.updateZ = function () {
  if (this.state == 0) {
    this.z = 10000;
  } else {
    this.z = 1000;
  }
};
a0_0xec9bc1.prototype.webAlpha = 0.5;
a0_0xec9bc1.prototype.customDraw = function (_0x365f05) {
  a0_0x4ef4f3.save();
  if (this.state > 0) {
    var _0x57c901 = this.getSkinImageObj("img/web/" + this.webType + "/spiderWeb.png");
    var _0x38ca0d = this.rad;
    if (_0x57c901) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = this.webAlpha;
      a0_0x4ef4f3.drawImage(_0x57c901, -_0x38ca0d, -_0x38ca0d, _0x38ca0d * 2, _0x38ca0d * 2);
      a0_0x4ef4f3.restore();
    }
  }
  a0_0x4ef4f3.restore();
};
a0_0xec9bc1.prototype.state = 0;
a0_0xec9bc1.prototype.spiderX = 0;
a0_0xec9bc1.prototype.spiderY = 0;
a0_0xec9bc1.prototype.readUpdatedProperty = function (_0x92eb57, _0x1ce5ec) {
  if (_0x92eb57 == a0_0x54473e) {
    this.state = _0x1ce5ec.readUInt8();
  } else if (_0x92eb57 == a0_0x11e112) {
    var _0x453268 = _0x1ce5ec.readUInt8() / 100;
    if (_0x453268 < this.webAlpha) {
      this.webAlpha = _0x453268;
    }
  }
};
a0_0xec9bc1.prototype.readCustomData_onNewlyVisible = function (_0x431d8d) {
  a0_0xec9bc1.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x431d8d);
  this.state = _0x431d8d.readUInt8();
  var _0x29d8c4 = _0x431d8d.readUInt8() / 100;
  if (_0x29d8c4 < this.webAlpha) {
    this.webAlpha = _0x29d8c4;
  }
  this.webType = _0x431d8d.readUInt8();
};
function a0_0xec9bc1() {
  a0_0xec9bc1.superClass.call(this);
}
window.BlackwidowWeb = a0_0xec9bc1;
a0_0xa5d548.setCustomClassForGameObjType(a0_0xec9bc1, a0_0x20e6c5, a0_0x181c87);
var a0_0x58d04c = a0_0x45645e;
a0_0xe4787b.prototype = Object.create(a0_0x58d04c.prototype);
a0_0xe4787b.prototype.constructor = a0_0xe4787b;
a0_0xe4787b.superClass = a0_0x58d04c;
a0_0xe4787b.prototype.skinFolder = function () {
  return "desert/";
};
a0_0xe4787b.prototype.animalInfo = function () {
  var _0x2539cb = {};
  switch (this.animalSpecies) {
    case 0:
      _0x2539cb.aniName = "Pterodactyl";
      break;
    case 1:
      _0x2539cb.aniName = "Golden Pterodactyl";
      break;
    case 2:
      _0x2539cb.aniName = "Emerald Pterodactyl";
      break;
    case 100:
      _0x2539cb.aniName = "Carnageodactyl";
      break;
    case 111:
      _0x2539cb.aniName = "Classic Pterodactyl";
      break;
  }
  _0x2539cb.aniCol = "#FF9000";
  _0x2539cb.skinName = this.skinFolder() + "/pterodactyl/" + this.animalSpecies + "/pterodactyl";
  _0x2539cb.upgradeText = "UPGRADED to " + _0x2539cb.aniName + "!\nFly and dive onto prey to pick it up.";
  return _0x2539cb;
};
a0_0xe4787b.prototype.getHead = function (_0x115a31, _0x348fe9) {
  var _0x8e291a = "";
  var _0x274389 = "skins/" + this.skinFolder() + "/" + _0x115a31 + "/" + this.animalSpecies + "/" + _0x115a31 + "_head" + _0x8e291a + ".png";
  return _0x274389;
};
a0_0xe4787b.prototype.getSkinName = function () {
  var _0x52546d = this.skinFolder() + "/pterodactyl/" + this.animalSpecies + "/pterodactyl";
  if (this.specType == 4) {
    _0x52546d += "4";
  } else {
    _0x52546d += this.specType == 0 ? "" : 1;
  }
  return _0x52546d;
};
a0_0xe4787b.prototype.getWing = function (_0x4bc359, _0x2c9ae5) {
  if (!this.flag_flying) {
    _0x2c9ae5 = _0x2c9ae5 + "" + _0x2c9ae5;
  }
  var _0xea06fd = "skins/" + this.skinFolder() + "/" + _0x4bc359 + "/" + this.animalSpecies + "/" + _0x4bc359 + "_wing" + _0x2c9ae5 + "_nohand.png";
  return _0xea06fd;
};
a0_0xe4787b.prototype.getWingBone = function (_0x21d4d6, _0x1de0a4) {
  if (!this.flag_flying) {
    _0x1de0a4 = _0x1de0a4 + "" + _0x1de0a4;
  }
  var _0x5d5f2c = "skins/" + this.skinFolder() + "/" + _0x21d4d6 + "/" + this.animalSpecies + "/" + _0x21d4d6 + "_wing" + _0x1de0a4 + "_bones.png";
  return _0x5d5f2c;
};
a0_0xe4787b.prototype.getHand = function (_0xc5ea5f, _0xe4b74d) {
  if (!this.flag_flying) {
    _0xe4b74d = _0xe4b74d + "" + _0xe4b74d;
  }
  if (this.isGliding) {
    _0xe4b74d = _0xe4b74d + "3";
  }
  var _0x1f9739 = "skins/" + this.skinFolder() + "/" + _0xc5ea5f + "/" + this.animalSpecies + "/" + _0xc5ea5f + "_hand" + _0xe4b74d + ".png";
  return _0x1f9739;
};
a0_0xe4787b.prototype.biteStart = 0;
a0_0xe4787b.prototype.flaps = 0;
a0_0xe4787b.prototype.flapsMod = 5;
a0_0xe4787b.prototype.countFlap = true;
a0_0xe4787b.prototype.canFlap = a0_0x1d703e != a0_0x30b084;
a0_0xe4787b.prototype.resumeFlapT = 0;
a0_0xe4787b.prototype.lastFlapFrame = 0;
a0_0xe4787b.prototype.flapSpeed = 1;
a0_0xe4787b.prototype.flapAmount = 0.2;
a0_0xe4787b.prototype.r = 22.5;
a0_0xe4787b.prototype.ax = 0;
a0_0xe4787b.prototype.ay = 1;
a0_0xe4787b.prototype.ww = 4;
a0_0xe4787b.prototype.wh = 2.5;
a0_0xe4787b.prototype.ax2 = 1;
a0_0xe4787b.prototype.rf = -2;
a0_0xe4787b.prototype.erf = 11.5;
a0_0xe4787b.prototype.erf_gliding = 30;
a0_0xe4787b.prototype.lx = -0.05;
a0_0xe4787b.prototype.famt = 0.5;
a0_0xe4787b.prototype.yf = 0.15;
a0_0xe4787b.prototype.xf = -0.2;
a0_0xe4787b.prototype.legScale = 1.15;
a0_0xe4787b.prototype.handPerc = 0.9;
a0_0xe4787b.prototype.handWF = 0;
a0_0xe4787b.prototype.set = false;
a0_0xe4787b.prototype.wOffset = 0.1;
a0_0xe4787b.prototype.headF = 0.5;
a0_0xe4787b.prototype.headFDisp = -0.6;
a0_0xe4787b.prototype.headScale = 0.8;
a0_0xe4787b.prototype.headX = 0.225;
a0_0xe4787b.prototype.drawLegs = function () {
  var _0x30e7f1 = 500 / 340;
  var _0x3942cf = this.flag_eff_aniInClaws ? "legs2" : "legs";
  var _0x4181d7 = this.getSkinImageObj("skins/" + this.skinFolder() + "/pterodactyl/" + this.animalSpecies + "/" + _0x3942cf + ".png");
  if (_0x4181d7) {
    a0_0x4ef4f3.save();
    var _0x5cbee5 = this.rad;
    _0x30e7f1 *= this.legScale;
    a0_0x4ef4f3.drawImage(_0x4181d7, -_0x5cbee5 * _0x30e7f1, (-_0x5cbee5 + _0x5cbee5 * this.lx) * _0x30e7f1, _0x5cbee5 * 2 * _0x30e7f1, _0x5cbee5 * 2 * _0x30e7f1);
    a0_0x4ef4f3.restore();
  }
};
a0_0xe4787b.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility) {
    this.drawWing(this.frame, 1);
    this.drawWing(this.frame, 2);
  }
  if (this.specType == 2) {
    this.drawLegs();
  }
};
a0_0xe4787b.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility) {
    this.drawBone(this.frame, 1);
    this.drawBone(this.frame, 2);
    this.drawHand(this.frame, 1);
    this.drawHand(this.frame, 2);
    var _0x5c3b1d = 500 / 340;
    var _0x45bd59 = this.getHead("pterodactyl", false);
    var _0x3210f2 = this.getSkinImageObj(_0x45bd59);
    if (_0x3210f2) {
      a0_0x4ef4f3.save();
      _0x5c3b1d += -(this.headF * 0.1) * this.frame;
      var _0x1ee3b4 = this.rad;
      a0_0x4ef4f3.drawImage(_0x3210f2, -_0x1ee3b4 * _0x5c3b1d, (-_0x1ee3b4 + _0x1ee3b4 * (0.3 + this.headFDisp * (this.frame / 10)) + this.headF * this.frame) * _0x5c3b1d, _0x1ee3b4 * 2 * _0x5c3b1d, _0x1ee3b4 * 2 * _0x5c3b1d);
      a0_0x4ef4f3.restore();
    }
  } else if (this.animalSpecies == 100) {
    var _0x5a8530 = a0_0x4f736f - this.nextJawAnimT;
    var _0x42efbb = Math.trunc(_0x5a8530 / a0_0x7e3638) % 16;
    if (a0_0x4f736f < this.nextJawAnimT) {
      _0x42efbb = 0;
    }
    if (_0x42efbb >= 15) {
      this.nextJawAnimT = a0_0x4f736f + 5000;
    }
    var _0x5421a2 = this.getSkinImageObj("skins/desert/pterodactyl/100/mouth/pterodactyl_head" + _0x42efbb + ".png");
    if (_0x5421a2) {
      var _0x5c3b1d = 500 / 340 * this.headScale;
      a0_0x4ef4f3.save();
      var _0x1ee3b4 = this.rad;
      a0_0x4ef4f3.drawImage(_0x5421a2, -_0x1ee3b4 * _0x5c3b1d, (-_0x1ee3b4 + _0x1ee3b4 * this.headX) * _0x5c3b1d, _0x1ee3b4 * 2 * _0x5c3b1d, _0x1ee3b4 * 2 * _0x5c3b1d);
      a0_0x4ef4f3.restore();
    }
  } else {
    var _0x45bd59 = this.getHead("pterodactyl", false);
    var _0x3210f2 = this.getSkinImageObj(_0x45bd59);
    if (_0x3210f2) {
      var _0x5c3b1d = 500 / 340 * this.headScale;
      a0_0x4ef4f3.save();
      var _0x1ee3b4 = this.rad;
      a0_0x4ef4f3.drawImage(_0x3210f2, -_0x1ee3b4 * _0x5c3b1d, (-_0x1ee3b4 + _0x1ee3b4 * this.headX) * _0x5c3b1d, _0x1ee3b4 * 2 * _0x5c3b1d, _0x1ee3b4 * 2 * _0x5c3b1d);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0xe4787b.prototype.nextJawAnimT = 0;
var a0_0x7e3638 = 70;
a0_0xe4787b.prototype.drawWing = function (_0x41ac08, _0xccf52a) {
  var _0x4c67ec = _0xccf52a == 1 ? 1 : -1;
  var _0x31697a = this.getSkinImageObj(this.getWing("pterodactyl", _0xccf52a));
  if (_0x31697a) {
    var _0x49aafc = -(-0.2 + _0x41ac08) * a0_0x844a6b(_0x4c67ec * this.r);
    var _0x3ebd54 = this.rad * 0.8;
    var _0x17c4c5 = 0;
    var _0x5c9e0d = this.rad;
    var _0xd4db26 = _0x3ebd54 * this.ww;
    var _0x5d77c6 = _0x3ebd54 * this.wh;
    var _0x4d0a67 = _0xccf52a == 1 ? this.ax : this.ax2;
    var _0xd6a538 = this.ay + this.yf * _0x41ac08;
    a0_0x4ef4f3.save();
    _0x49aafc *= this.rf;
    var _0x283327 = this.isGliding ? this.erf_gliding : this.erf;
    a0_0x4ef4f3.rotate(a0_0x844a6b(_0x4c67ec * _0x283327) + _0x49aafc);
    var _0x33ad40 = _0x41ac08 * _0xd4db26 * _0x4c67ec * this.wOffset;
    a0_0x4ef4f3.drawImage(_0x31697a, _0x17c4c5 + _0xd4db26 * -_0x4d0a67 + _0x33ad40, _0x5c9e0d + _0x5d77c6 * -_0xd6a538, _0xd4db26, _0x5d77c6);
    a0_0x4ef4f3.restore();
  }
};
a0_0xe4787b.prototype.drawBone = function (_0x53188e, _0x588590) {
  var _0x3d85cb = this.getSkinImageObj(this.getWingBone("pterodactyl", _0x588590));
  var _0x26da12 = _0x588590 == 1 ? 1 : -1;
  if (_0x3d85cb) {
    var _0xe314bf = -(-0.2 + _0x53188e) * a0_0x844a6b(_0x26da12 * this.r);
    var _0x31bb12 = this.rad * 0.8;
    var _0xc79c88 = 0;
    var _0x4944aa = this.rad;
    var _0x512295 = _0x31bb12 * this.ww;
    var _0x6e3bb2 = _0x31bb12 * this.wh;
    var _0x38db3b = _0x588590 == 1 ? this.ax : this.ax2;
    var _0xde7cf2 = this.ay + this.yf * _0x53188e;
    a0_0x4ef4f3.save();
    _0xe314bf *= this.rf;
    var _0x65b7f6 = this.isGliding ? this.erf_gliding : this.erf;
    a0_0x4ef4f3.rotate(a0_0x844a6b(_0x26da12 * _0x65b7f6) + _0xe314bf);
    var _0x4a0654 = _0x53188e * _0x512295 * _0x26da12 * this.wOffset;
    a0_0x4ef4f3.drawImage(_0x3d85cb, _0xc79c88 + _0x512295 * -_0x38db3b + _0x4a0654, _0x4944aa + _0x6e3bb2 * -_0xde7cf2, _0x512295, _0x6e3bb2);
    a0_0x4ef4f3.restore();
  }
};
var a0_0x2f7265 = 0;
a0_0xe4787b.prototype.drawHand = function (_0x20e8bd, _0x4afc18) {
  var _0x422f75 = _0x4afc18 == 1 ? 1 : -1;
  var _0x35bada = this.getSkinImageObj(this.getHand("pterodactyl", _0x4afc18));
  if (_0x35bada) {
    var _0x37e9ac = -(-0.2 + _0x20e8bd) * a0_0x844a6b(_0x422f75 * this.r);
    var _0x2e4f70 = this.rad * 0.8;
    var _0x312e08 = 0;
    var _0x5a35f2 = this.rad;
    var _0xa418d4 = _0x2e4f70 * this.ww;
    var _0x58bee1 = _0x2e4f70 * this.wh + (!this.flag_flying ? this.wh * a0_0x2f7265 : 0);
    var _0x136b97 = _0x422f75 == 1 ? this.ax : this.ax2;
    var _0x44ebb7 = _0x136b97 + _0x422f75 * this.xf * _0x20e8bd;
    var _0x41ec5c = this.ay + this.yf * _0x20e8bd;
    _0x37e9ac *= this.rf;
    var _0x3d0dab = this.isGliding ? this.erf_gliding : this.erf;
    a0_0x4ef4f3.save();
    this.drawImage(_0x35bada, _0x312e08 + _0xa418d4 * -_0x44ebb7, _0x5a35f2 + _0x58bee1 * -_0x41ec5c, _0xa418d4 + _0xa418d4 * _0x422f75 * this.handWF, _0x58bee1, a0_0x844a6b(_0x422f75 * _0x3d0dab) + _0x37e9ac);
    a0_0x4ef4f3.restore();
  }
};
a0_0xe4787b.prototype.frame = 0;
a0_0xe4787b.prototype.lastFlapFrame = 0;
a0_0xe4787b.prototype.getFrame = function () {
  if (!this.canFlap && this.flag_flying && a0_0x4f736f > this.resumeFlapT) {
    this.canFlap = true;
  }
  var _0x1bfbb4 = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x29f4c8 = a0_0x1d703e != a0_0x30b084 && this.canFlap ? a0_0xe2d896(_0x1bfbb4, this.flapSpeed, this.flapAmount * this.handPerc, 2) : this.birdNoAnimationFlyWingAngle;
  if (this.flag_flying && _0x29f4c8 < 0 && this.countFlap) {
    this.countFlap = false;
    this.flaps++;
    if (this.flaps % this.flapsMod == 0) {
      this.lastFlapFrame = _0x29f4c8;
      this.canFlap = false;
      this.resumeFlapT = +new Date() + 1500;
    }
  } else if (_0x29f4c8 > 0 && !this.countFlap) {
    this.countFlap = true;
  }
  if (!this.canFlap) {
    _0x29f4c8 = this.lastFlapFrame;
  } else {
    this.lastFlapFrame = _0x29f4c8;
  }
  return _0x29f4c8;
};
a0_0xe4787b.prototype.beforeCustomDraw = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  if (!this.flag_flying && !this.set) {
    this.set = true;
    this.r = 11.25;
    this.erf = 5.75;
    this.ww = 3.5;
  } else if (this.flag_flying && this.set) {
    this.set = false;
    this.r = 22.5;
    this.erf = 11.5;
    this.ww = 4.5;
  }
  if (this.isGliding) {
    this.flapAmount = 0;
  } else {
    this.flapAmount = this.famt;
  }
  this.frame = this.getFrame();
};
a0_0xe4787b.prototype.updateZ = function () {
  if (this.flag_eff_grabbedByFlytrap) {
    this.z = 1100 + this.rad;
  } else if (!this.flag_flying && this.flag_usingAbility && !this.flag_underWater) {
    this.z = 1200 + this.rad;
  } else if (this.flag_flying || this.flag_eff_tossedInAir) {
    this.z = 110000;
    if (this.flag_isGrabbed) {
      this.z -= this.rad;
    } else {
      this.z += this.rad;
    }
    if (this.flag_eff_aniInClaws) {
      this.z += 100;
    }
  } else {
    this.z = 1000 + this.rad;
  }
};
a0_0xe4787b.prototype.getAbilityInfo = function (_0x5b101e) {
  var _0x47448f = {
    abilName: "Dive Attack\n(Fly with Prey)"
  };
  _0x47448f.abilImg = "skins/" + this.getSkinName() + "_ability.png";
  _0x47448f.skinThemeID = this.skinThemeID;
  _0x47448f.mopeSeasonID = this.mopeSeasonID;
  return _0x47448f;
};
a0_0xe4787b.prototype.readCustomData_onNewlyVisible = function (_0x7e37f9) {
  a0_0xe4787b.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x7e37f9);
  this.isGliding = _0x7e37f9.readUInt8() == 1;
};
a0_0xe4787b.prototype.customUpdatedProperty = function (_0xf153dc, _0x100881) {
  this.isGliding = _0x100881.readUInt8() == 1;
};
function a0_0xe4787b() {
  a0_0xe4787b.superClass.call(this, a0_0x1370b8);
}
window.Pterodactyl = a0_0xe4787b;
a0_0xa5d548.setCustomClassForGameObjType(a0_0xe4787b, a0_0x1370b8, a0_0x47c97f);
var a0_0x58d04c = a0_0x45645e;
a0_0x427dd7.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x427dd7.prototype.constructor = a0_0x427dd7;
a0_0x427dd7.superClass = a0_0x58d04c;
a0_0x427dd7.prototype.animalInfo = function () {
  var _0x54c051 = {
    aniName: "Bullet Ant",
    aniCol: "#FF9000",
    skinName: "desert/bulletant/0/bulletant"
  };
  _0x54c051.upgradeText = "UPGRADED to " + _0x54c051.aniName + "!\nHold 'W' to pick anything and take to your Anthill.";
  return _0x54c051;
};
var a0_0x40a334 = 1;
a0_0x427dd7.prototype.drawSkinCustomization = function () {
  var _0xd7809f = "skins/desert/bulletant/" + this.animalSpecies + "/head.png";
  var _0x1a4620 = this.getSkinImageObj(_0xd7809f);
  if (_0x1a4620) {
    var _0x36b621 = this.skinScale * 1.2;
    var _0x2f85b4 = this.skinRad;
    a0_0x4ef4f3.drawImage(_0x1a4620, -_0x2f85b4 * _0x36b621, (-_0x2f85b4 + _0x2f85b4 * 0.3) * _0x36b621, _0x2f85b4 * 2 * _0x36b621, _0x2f85b4 * 2 * _0x36b621);
  }
};
var a0_0x43dbb9 = -0.7;
a0_0x427dd7.prototype.drawUnderSkinImg = function () {
  var _0x283066 = "skins/desert/bulletant/" + this.animalSpecies + "/abdomen.png";
  var _0x7338c3 = this.getSkinImageObj(_0x283066);
  if (_0x7338c3) {
    var _0x14bc10 = this.skinScale * 0.9;
    var _0x5b9de0 = this.skinRad;
    a0_0x4ef4f3.drawImage(_0x7338c3, -_0x5b9de0 * _0x14bc10, (-_0x5b9de0 + _0x5b9de0 * a0_0x43dbb9) * _0x14bc10, _0x5b9de0 * 2 * _0x14bc10, _0x5b9de0 * 2 * _0x14bc10);
  }
};
a0_0x427dd7.prototype.getSkinName = function () {
  var _0x3c7046 = "desert/bulletant/" + this.animalSpecies + "/body";
  return _0x3c7046;
};
function a0_0x427dd7() {
  a0_0x427dd7.superClass.call(this, a0_0x1370b8);
}
window.BulletAnt = a0_0x427dd7;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x427dd7, a0_0x1370b8, a0_0x14a39f);
var a0_0x58d04c = a0_0x12658e;
a0_0x57cb91.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x57cb91.prototype.constructor = a0_0x57cb91;
a0_0x57cb91.superClass = a0_0x58d04c;
a0_0x57cb91.prototype.FlytrapType = 0;
a0_0x57cb91.prototype.updateZ = function () {
  this.z = 100;
};
a0_0x57cb91.prototype.getSkinFolder = function (_0x50a39f) {
  return "desert/flytrap";
};
a0_0x57cb91.prototype.customDraw = function (_0x15e2e0) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 1;
  var _0x59b6ab = this.getSkinImageObj("img/" + this.getSkinFolder() + "/base.png");
  if (_0x59b6ab) {
    var _0x56d91f = this.rad * 1.25;
    a0_0x4ef4f3.drawImage(_0x59b6ab, -_0x56d91f, -_0x56d91f, _0x56d91f * 2, _0x56d91f * 2);
  }
  a0_0x4ef4f3.restore();
};
function a0_0x57cb91() {
  a0_0x57cb91.superClass.call(this, a0_0x6e79ef);
  this.drawEffectScale_Slow = true;
}
window.Flytrap = a0_0x57cb91;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x57cb91, a0_0x6e79ef);
var a0_0x58d04c = a0_0x12658e;
a0_0x2af2e2.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2af2e2.prototype.constructor = a0_0x2af2e2;
a0_0x2af2e2.superClass = a0_0x58d04c;
a0_0x2af2e2.prototype.FlytrapMouthType = 0;
a0_0x2af2e2.prototype.updateZ = function () {
  this.z = 1100 + this.rad;
};
var a0_0x582ab6 = 140;
var a0_0xf8c427 = 1.25;
var a0_0xd3a2fa = 2.5;
var a0_0x31fbb0 = 1.25;
var a0_0x35ac3e = 1.5;
var a0_0x2e6639 = 180;
var a0_0x77174b = 1.5;
var a0_0x348b10 = 1;
var a0_0x3b3a1a = 1;
var a0_0x4a2822 = 0;
var a0_0x4933e2 = 0;
var a0_0x35066f = -160;
var a0_0x3ddd7c = 1;
var a0_0x4ae4ce = 0;
a0_0x2af2e2.prototype.topA = 180;
a0_0x2af2e2.prototype.botA = 180;
a0_0x2af2e2.prototype.distBeforeAttack = 0;
a0_0x2af2e2.prototype.maxDist = 0;
a0_0x2af2e2.prototype.distCovered = 0;
a0_0x2af2e2.prototype.isAttacking = false;
a0_0x2af2e2.prototype.isMouthClosed = false;
a0_0x2af2e2.prototype.grabbedAni = false;
a0_0x2af2e2.prototype.getSkinFolder = function (_0x71e8f8) {
  return "desert/flytrap";
};
a0_0x2af2e2.prototype.beforeCustomDraw = function (_0x56d0fe) {
  if (!this.dead) {
    var _0x38b884 = this.getSkinImageObj("img/" + this.getSkinFolder() + "/mouth/stem.png");
    if (_0x38b884) {
      var _0x507641 = this.rad;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.translate(this.anchor_x, this.anchor_y);
      a0_0x4ef4f3.rotate(this.angle - a0_0x844a6b(a0_0x2e6639));
      var _0x352f34 = a0_0x3eb918({
        x: this.x,
        y: this.y
      }, {
        x: this.anchor_x,
        y: this.anchor_y
      });
      a0_0x4ef4f3.drawImage(_0x38b884, -_0x507641 * a0_0xf8c427, -_0x507641, _0x507641 * 2 * a0_0x31fbb0, _0x507641 * 2 + _0x352f34);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x2af2e2.prototype.customDraw = function (_0x39c186) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 1;
  var _0x23c889 = "bottom" + (this.isKillable ? "_e" : "");
  var _0x48ba7d = this.getSkinImageObj("img/" + this.getSkinFolder() + "/mouth/" + _0x23c889 + ".png");
  if (_0x48ba7d) {
    var _0x43a8d9 = this.rad;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle - a0_0x844a6b(this.botA));
    a0_0x4ef4f3.drawImage(_0x48ba7d, -_0x43a8d9 * a0_0x3b3a1a, -_0x43a8d9 * a0_0x3b3a1a, _0x43a8d9 * 2, _0x43a8d9 * 2);
    a0_0x4ef4f3.restore();
  }
  if (!this.grabbedAni) {
    var _0x2ac534 = this.isMouthClosed ? "closed" : "top";
    var _0x48ba7d = this.getSkinImageObj("img/" + this.getSkinFolder() + "/mouth/" + _0x2ac534 + ".png");
    if (_0x48ba7d) {
      var _0x43a8d9 = this.rad;
      {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.rotate(this.angle - a0_0x844a6b(this.topA));
        a0_0x4ef4f3.drawImage(_0x48ba7d, -_0x43a8d9 * a0_0x348b10, -_0x43a8d9 * a0_0x348b10, _0x43a8d9 * 2, _0x43a8d9 * 2);
        a0_0x4ef4f3.restore();
      }
    }
  }
  a0_0x4ef4f3.restore();
};
a0_0x2af2e2.prototype.isAttacking = false;
a0_0x2af2e2.prototype.isMouthClosed = false;
a0_0x2af2e2.prototype.grabbedAni = false;
a0_0x2af2e2.prototype.readCustomData_onNewlyVisible = function (_0x467251) {
  a0_0x2af2e2.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x467251);
  var _0x448e38 = _0x467251.readBitGroup();
  this.isAttacking = _0x448e38.getBool();
  this.isMouthClosed = _0x448e38.getBool();
  this.grabbedAni = _0x448e38.getBool();
  this.anchor_x = _0x467251.readUInt16() / 4;
  this.anchor_y = _0x467251.readUInt16() / 4;
};
a0_0x2af2e2.prototype.readUpdatedProperty = function (_0x1470fb, _0xc3a81b) {
  if (_0x1470fb == a0_0x30ff74) {
    this.isAttacking = _0xc3a81b.readUInt8() == 1;
  }
  if (_0x1470fb == a0_0x7caebd) {
    this.isMouthClosed = _0xc3a81b.readUInt8() == 1;
  }
  if (_0x1470fb == a0_0x59b565) {
    this.grabbedAni = _0xc3a81b.readUInt8() == 1;
  }
};
function a0_0x2af2e2() {
  a0_0x2af2e2.superClass.call(this, a0_0x447d2a);
  this.doesDrawEffectScale = this.drawEffectScale_Slow = true;
}
window.FlytrapMouth = a0_0x2af2e2;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2af2e2, a0_0x447d2a);
var a0_0x58d04c = a0_0x12658e;
a0_0x3d5521.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3d5521.prototype.constructor = a0_0x3d5521;
a0_0x3d5521.superClass = a0_0x58d04c;
a0_0x3d5521.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x3d5521.prototype.customDraw = function (_0x320202) {
  var _0x38cbcc = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x5f63d5 = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x38cbcc + ".png");
  if (_0x5f63d5) {
    a0_0x4ef4f3.save();
    var _0x5decd8 = this.rad * 1.2;
    a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0x5f63d5, -_0x5decd8, -_0x5decd8, _0x5decd8 * 2, _0x5decd8 * 2);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x3d5521() {
  a0_0x3d5521.superClass.call(this, a0_0x1eff53);
  this.doesDrawEffectScale = false;
}
window.AloeveraLeaf = a0_0x3d5521;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3d5521, a0_0x1eff53);
var a0_0x58d04c = a0_0x12658e;
a0_0xb1d140.prototype = Object.create(a0_0x58d04c.prototype);
a0_0xb1d140.prototype.constructor = a0_0xb1d140;
a0_0xb1d140.superClass = a0_0x58d04c;
a0_0xb1d140.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0xb1d140.prototype.customDraw = function (_0xd5f95c) {
  var _0x374d76 = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x549712 = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x374d76 + ".png");
  if (_0x549712) {
    a0_0x4ef4f3.save();
    var _0x4f9fba = this.rad * 1.15;
    a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0x549712, -_0x4f9fba, -_0x4f9fba, _0x4f9fba * 2, _0x4f9fba * 2);
    a0_0x4ef4f3.restore();
  }
};
function a0_0xb1d140() {
  a0_0xb1d140.superClass.call(this, a0_0x1f7a07);
  this.doesDrawEffectScale = this.drawEffectScale_Slow = false;
}
window.AloeveraPlant = a0_0xb1d140;
a0_0xa5d548.setCustomClassForGameObjType(a0_0xb1d140, a0_0x1f7a07);
var a0_0x58d04c = a0_0x12658e;
a0_0x17aaca.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x17aaca.prototype.constructor = a0_0x17aaca;
a0_0x17aaca.superClass = a0_0x58d04c;
a0_0x17aaca.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x17aaca.prototype.customDraw = function (_0x28794b) {
  var _0x156290 = this.isEdibleOutlined() ? "e" : "0";
  var _0x2fe767 = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x156290 + ".png");
  if (_0x2fe767) {
    a0_0x4ef4f3.save();
    var _0x519652 = this.rad * 1.15;
    a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0x2fe767, -_0x519652, -_0x519652, _0x519652 * 2, _0x519652 * 2);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x17aaca() {
  a0_0x17aaca.superClass.call(this, a0_0xc65734);
  this.doesDrawEffectScale = this.drawEffectScale_Slow = false;
}
window.Cactus = a0_0x17aaca;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x17aaca, a0_0xc65734);
var a0_0x58d04c = a0_0x12658e;
a0_0x57d4e3.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x57d4e3.prototype.constructor = a0_0x57d4e3;
a0_0x57d4e3.superClass = a0_0x58d04c;
a0_0x57d4e3.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x57d4e3.prototype.customDraw = function (_0x48677a) {
  var _0x1d3115 = this.isEdibleOutlined() ? "cactuspear_e" : "cactuspear";
  _0x1d3115 = "gameobj/" + this.oType + "/" + _0x1d3115 + ".png";
  var _0xbd1c21 = this.getSkinImageObj(_0x1d3115);
  if (_0xbd1c21) {
    a0_0x4ef4f3.save();
    var _0x58bccb = this.rad;
    a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0xbd1c21, -_0x58bccb, -_0x58bccb, _0x58bccb * 2, _0x58bccb * 2);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x57d4e3() {
  a0_0x57d4e3.superClass.call(this, a0_0x538c88);
  this.doesDrawEffectScale = false;
}
window.CactusPear = a0_0x57d4e3;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x57d4e3, a0_0x538c88);
var a0_0x58d04c = a0_0x12658e;
a0_0x112b65.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x112b65.prototype.constructor = a0_0x112b65;
a0_0x112b65.superClass = a0_0x58d04c;
a0_0x112b65.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x112b65.prototype.customDraw = function (_0x30acfc) {
  var _0x505d80 = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x32a668 = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x505d80 + ".png");
  if (_0x32a668) {
    a0_0x4ef4f3.save();
    var _0x3786d3 = this.rad;
    a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0x32a668, -_0x3786d3, -_0x3786d3, _0x3786d3 * 2, _0x3786d3 * 2);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x112b65() {
  a0_0x112b65.superClass.call(this, a0_0x380b7);
  this.doesDrawEffectScale = false;
}
window.DateFruit = a0_0x112b65;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x112b65, a0_0x380b7);
var a0_0x58d04c = a0_0x12658e;
a0_0x2aeedf.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2aeedf.prototype.constructor = a0_0x2aeedf;
a0_0x2aeedf.superClass = a0_0x58d04c;
a0_0x2aeedf.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x2aeedf.prototype.customDraw = function (_0x356155) {
  var _0x2f0050 = this.isEdibleOutlined() ? "e" : this.oType;
  var _0xb26bde = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.specType + "/" + _0x2f0050 + ".png");
  if (_0xb26bde) {
    a0_0x4ef4f3.save();
    var _0x11d84b = this.rad;
    a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0xb26bde, -_0x11d84b, -_0x11d84b, _0x11d84b * 2, _0x11d84b * 2);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x2aeedf() {
  a0_0x2aeedf.superClass.call(this, a0_0xb6eb9e);
  this.doesDrawEffectScale = false;
}
window.Mango = a0_0x2aeedf;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2aeedf, a0_0xb6eb9e);
var a0_0x58d04c = a0_0x12658e;
a0_0x3d3f53.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3d3f53.prototype.constructor = a0_0x3d3f53;
a0_0x3d3f53.superClass = a0_0x58d04c;
a0_0x3d3f53.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x3d3f53.prototype.customDraw = function (_0x5050e4) {
  var _0x48988b = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x4e421d = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x48988b + ".png");
  if (_0x4e421d) {
    a0_0x4ef4f3.save();
    var _0x11f1d7 = this.rad;
    a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0x4e421d, -_0x11f1d7, -_0x11f1d7, _0x11f1d7 * 2, _0x11f1d7 * 2);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x3d3f53() {
  a0_0x3d3f53.superClass.call(this, a0_0x8061ff);
  this.doesDrawEffectScale = false;
}
window.Melon = a0_0x3d3f53;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3d3f53, a0_0x8061ff);
var a0_0x58d04c = a0_0x12658e;
a0_0x24ea25.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x24ea25.prototype.constructor = a0_0x24ea25;
a0_0x24ea25.superClass = a0_0x58d04c;
a0_0x24ea25.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x24ea25.prototype.customDraw = function (_0x5177c0) {
  var _0x290e4a = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x2aef68 = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x290e4a + ".png");
  if (_0x2aef68) {
    a0_0x4ef4f3.save();
    var _0x17a94d = this.rad;
    a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0x2aef68, -_0x17a94d, -_0x17a94d, _0x17a94d * 2, _0x17a94d * 2);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x24ea25() {
  a0_0x24ea25.superClass.call(this, a0_0x53272b);
  this.doesDrawEffectScale = false;
}
window.MelonSlice = a0_0x24ea25;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x24ea25, a0_0x53272b);
var a0_0x58d04c = a0_0x12658e;
a0_0x208934.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x208934.prototype.constructor = a0_0x208934;
a0_0x208934.superClass = a0_0x58d04c;
a0_0x208934.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x208934.prototype.customDraw = function (_0x16cb79) {
  var _0x277fa7 = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x1e5ab0 = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x277fa7 + ".png");
  if (_0x1e5ab0) {
    a0_0x4ef4f3.save();
    var _0x3e0341 = this.rad;
    a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0x1e5ab0, -_0x3e0341, -_0x3e0341, _0x3e0341 * 2, _0x3e0341 * 2);
    a0_0x4ef4f3.restore();
  }
};
a0_0x208934.prototype.updateZ = function () {
  this.z = 1000 + this.rad;
};
function a0_0x208934() {
  a0_0x208934.superClass.call(this, a0_0x1dd92a);
  this.doesDrawEffectScale = false;
}
window.Orange = a0_0x208934;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x208934, a0_0x1dd92a);
var a0_0x58d04c = a0_0x12658e;
a0_0x222385.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x222385.prototype.constructor = a0_0x222385;
a0_0x222385.superClass = a0_0x58d04c;
a0_0x222385.prototype.updateZ = function () {
  this.z = -158;
};
a0_0x222385.prototype.customDraw = function (_0x38e52c) {
  a0_0x4ef4f3.save();
  if (a0_0x1d703e != a0_0x30b084) {
    a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
  }
  var _0x393588 = 0;
  var _0xc7d970 = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0xc04316 = 6;
  var _0x312e6b = 1.5;
  _0x393588 = _0x312e6b * Math.sin(Math.PI * 2 / _0xc04316 * _0xc7d970);
  var _0x2e47ba = 4;
  if (_0x38e52c) {
    a0_0x4ef4f3.fillStyle = "#b0a13b";
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
  } else {
    a0_0x4ef4f3.fillStyle = "#bdae47";
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x2e47ba + _0x393588), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    if (a0_0x1d703e != a0_0x30b084) {
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x393588), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x393588), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x393588), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x393588), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      if (this.rad > 50) {
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 10, 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
      }
    }
  }
  a0_0x4ef4f3.restore();
};
function a0_0x222385() {
  a0_0x222385.superClass.call(this, a0_0x2d0828);
  this.animateRadOnSpawn = false;
}
window.Quicksand = a0_0x222385;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x222385, a0_0x2d0828);
var a0_0x58d04c = a0_0x12658e;
a0_0x1a1509.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1a1509.prototype.constructor = a0_0x1a1509;
a0_0x1a1509.superClass = a0_0x58d04c;
a0_0x1a1509.prototype.updateZ = function () {
  this.z = -158;
};
a0_0x1a1509.prototype.customDraw = function (_0x1fff6f) {
  var _0x1f42ff = 4;
  a0_0x4ef4f3.save();
  if (a0_0x1d703e != a0_0x30b084) {
    a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
  }
  var _0x32474e = 0;
  var _0x3d2610 = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x170538 = 6;
  var _0x355bc2 = 1.5;
  _0x32474e = _0x355bc2 * Math.sin(Math.PI * 2 / _0x170538 * _0x3d2610);
  if (this.isOasisWater && _0x1fff6f) {
    a0_0x4ef4f3.fillStyle = "#AE9F43";
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
  } else {
    var _0x389404 = "#3881C4";
    var _0x1f42ff = 4;
    a0_0x4ef4f3.fillStyle = this.isOasisWater ? _0x389404 : "#AE9F43";
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    if (a0_0x1d703e != a0_0x30b084) {
      a0_0x4ef4f3.fillStyle = this.isOasisWater ? _0x389404 : "#bdae47";
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x1f42ff + _0x32474e), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x32474e), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x32474e), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x32474e), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x32474e), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      if (this.rad > 50) {
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 10, 0, Math.PI * 2);
        a0_0x4ef4f3.fill();
      }
    }
  }
  a0_0x4ef4f3.restore();
};
a0_0x1a1509.prototype.afterCustomDraw = function () {};
function a0_0x1a1509() {
  a0_0x1a1509.superClass.call(this, a0_0x2ecc74);
  this.animateRadOnSpawn = false;
}
a0_0x1a1509.prototype.readCustomData_onNewlyVisible = function (_0xb6c02) {
  a0_0x1a1509.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0xb6c02);
  this.isOasisWater = _0xb6c02.readUInt8() == 1;
  if (this.isOasisWater) {
    var _0x589bb1 = _0xb6c02.readUInt16() / 10;
    this.setNewRad(_0x589bb1);
  }
};
a0_0x1a1509.prototype.readUpdatedProperty = function (_0xa54983, _0x271709) {
  if (_0xa54983 == a0_0x31a989) {
    var _0x4ac5e5 = _0x271709.readUInt16() / 10;
    this.setNewRad(_0x4ac5e5);
  }
};
a0_0x1a1509.prototype.circles = new Array();
a0_0x1a1509.prototype.isOasisWater = false;
window.Oasis = a0_0x1a1509;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1a1509, a0_0x2ecc74);
var a0_0x3126b8 = a0_0x3126b8;
var a0_0x58d04c = a0_0x45645e;
a0_0x3126b8.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3126b8.prototype.constructor = a0_0x3126b8;
a0_0x3126b8.superClass = a0_0x58d04c;
a0_0x3126b8.prototype.getSkinName = function () {
  let _0x977bc = this.getSpeciesPath() + "/lion";
  _0x977bc += this.specType == 0 ? "" : this.specType;
  return _0x977bc;
};
a0_0x3126b8.prototype.getSpeciesPath = function () {
  return "land/lion/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x3126b8.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  var _0x36767e = "";
  if (this.animalSpecies == 1 || this.animalSpecies == 2 || this.animalSpecies == 200) {
    _0x36767e = "/" + this.animalSubSpecies;
  }
  return _0x36767e;
};
a0_0x3126b8.prototype.getAbilityInfo = function (_0x406363) {
  var _0x340a27 = {
    abilName: "Loud " + (this.animalSpecies == 2 ? "Meow" : "Noise")
  };
  if (this.animalSpecies == 1) {
    _0x340a27.abilName += "\n& Camouflage";
  }
  var _0x3a1ebb = this.getSubSpecies();
  _0x340a27.abilImg = "skins/" + this.getSpeciesPath() + "/lion_roar.png";
  _0x340a27.skinThemeID = this.skinThemeID;
  _0x340a27.mopeSeasonID = this.mopeSeasonID;
  return _0x340a27;
};
a0_0x3126b8.prototype.animalInfo = function () {
  var _0x173adb = {};
  switch (this.animalSpecies) {
    case 0:
      _0x173adb.aniName = "Lion";
      break;
    case 1:
      _0x173adb.aniName = "Lioness";
      break;
    case 2:
      _0x173adb.aniName = "Lion Cub";
      break;
    case 3:
      _0x173adb.aniName = "Black-Maned\nLion";
      break;
    case 4:
      _0x173adb.aniName = "White Lion";
      break;
    case 5:
      _0x173adb.aniName = "Black Lion";
      break;
    case 100:
      _0x173adb.aniName = "The Mantalian";
      break;
    case 200:
      if (this.animalSubSpecies == 0) {
        _0x173adb.aniName = "Clowoud Lion";
      } else if (this.animalSubSpecies == 1) {
        _0x173adb.aniName = "Sunset Clowoud Lion";
      } else if (this.animalSubSpecies == 2) {
        _0x173adb.aniName = "Storm Clowoud Lion";
      }
      break;
    case 111:
      _0x173adb.aniName = "Classic Lion";
      break;
    case 112:
      _0x173adb.aniName = "Gold-trim Lion";
      break;
    case 202:
      _0x173adb.aniName = "Chimera Lion";
      break;
    case 220:
      _0x173adb.aniName = "Ghastly Jade Lion";
      break;
  }
  _0x173adb.aniDesc = "";
  if (this.animalSpecies == 1) {
    _0x173adb.upgradeText = "UPGRADED to " + _0x173adb.aniName + "!\n Lioness are fast and can launch an ambush attack. (Stop moving to camouflage)!";
  } else if (this.animalSpecies == 2) {
    _0x173adb.upgradeText = "UPGRADED to " + _0x173adb.aniName + "!\n Press W to release a mighty MEOW!";
  } else {
    _0x173adb.upgradeText = "UPGRADED to " + _0x173adb.aniName + "!\n Press W to release a mighty ROAR (Rawr!)!";
  }
  _0x173adb.aniCol = "#FF9000";
  _0x173adb.skinName = this.getSkinName();
  return _0x173adb;
};
a0_0x3126b8.prototype.setStealth = function () {
  a0_0x3126b8.superClass.prototype.setStealth.call(this);
  if (this.flag_stealth) {
    if (this.animalSpecies == 1) {
      this.idealOp = a0_0x1c918d == this.id ? 0.1 : 0;
    }
  }
};
a0_0x3126b8.prototype.biteStart = 0;
a0_0x3126b8.prototype.flapAmount = 3;
a0_0x3126b8.prototype.flapDur = 1.5;
a0_0x3126b8.prototype.roarStartT = -500;
var a0_0xc62365 = 1;
var a0_0x399d63 = 1;
a0_0x3126b8.prototype.drawSkinCustomization = function () {
  this.setSkinScale();
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x4f736f + this.roarStartT;
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x3e93cd = "skins/" + this.getSpeciesPath() + "/lion_head1.png";
      var _0x54852c = this.getSkinImageObj(_0x3e93cd);
      var _0x1a2f65 = (a0_0x4f736f - this.biteStart) / 1000;
      var _0x448f96 = this.skinScale * 1.07;
      var _0x53609d = this.skinRad;
      if (_0x54852c) {
        var _0x4b4ce5 = 0;
        var _0x9d7aed = this.flapAmount - (this.animalSpecies == 2 ? 0.5 : 0);
        _0x4b4ce5 = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x1a2f65, this.flapDur, _0x9d7aed, 2) : this.flapAmount;
        a0_0x4ef4f3.save();
        var _0x53609d = this.rad;
        a0_0x4ef4f3.drawImage(_0x54852c, -_0x53609d * _0x448f96, (-_0x53609d + _0x53609d * 0.1) * _0x448f96 - _0x4b4ce5, _0x53609d * 2 * _0x448f96, _0x53609d * 2 * _0x448f96);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
a0_0x3126b8.prototype.drawNickName = function (_0x276dfe) {
  if (this.flag_stealth) {
    _0x276dfe = 0;
  }
  a0_0x3126b8.superClass.prototype.drawNickName.call(this, _0x276dfe);
};
function a0_0x3126b8() {
  a0_0x3126b8.superClass.call(this, a0_0x1370b8);
}
window.Lion = a0_0x3126b8;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3126b8, a0_0x1370b8, a0_0x1a694e);
var a0_0x58d04c = a0_0x45645e;
a0_0x2984a2.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2984a2.prototype.constructor = a0_0x2984a2;
a0_0x2984a2.superClass = a0_0x58d04c;
a0_0x2984a2.prototype.animalInfo = function () {
  var _0x104190 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x104190.aniName = "Rhino";
      break;
    case 1:
      _0x104190.aniName = "White Rhino";
      break;
    case 2:
      _0x104190.aniName = "Black Rhino";
      break;
    case 3:
      _0x104190.aniName = "Woolly Rhino";
      break;
    case 111:
      _0x104190.aniName = "Classic Rhino";
      break;
    case 112:
      _0x104190.aniName = "Gold-trim Rhino";
      break;
    case 201:
      _0x104190.aniName = "Shrub Rhino";
      break;
    case 202:
      _0x104190.aniName = "Cotton Candy Rhino";
      break;
    case 204:
      _0x104190.aniName = "Acuti Rhino";
      break;
    case 220:
      _0x104190.aniName = "Ink Rhino";
      break;
  }
  _0x104190.skinName = this.getSkinName();
  _0x104190.aniDesc = "";
  _0x104190.upgradeText = "UPGRADED to " + _0x104190.aniName + "!\n Press W to CHARGE with your mighty horn!";
  _0x104190.aniCol = "#94a3a9";
  return _0x104190;
};
a0_0x2984a2.prototype.getAbilityInfo = function (_0x3acdac) {
  var _0xe5be03 = {
    abilName: "Charge!"
  };
  _0xe5be03.abilImg = "skins/" + this.getSpeciesPath() + "/rhino_charge.png";
  _0xe5be03.skinThemeID = this.skinThemeID;
  _0xe5be03.mopeSeasonID = this.mopeSeasonID;
  return _0xe5be03;
};
a0_0x2984a2.prototype.getSkinName = function () {
  let _0x55161a = this.getSpeciesPath() + "/rhino";
  _0x55161a += this.specType == 0 ? "" : 1;
  return _0x55161a;
};
a0_0x2984a2.prototype.getSpeciesPath = function () {
  return "land/rhino/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x2984a2.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
var a0_0x40a334 = 0.1;
a0_0x2984a2.prototype.drawOnTopOfSkinImg = function () {
  if (a0_0x36dadf) {
    a0_0x2984a2.superClass.prototype.drawOnTopOfSkinImg.call(this);
  }
};
a0_0x2984a2.prototype.drawSkinCustomization = function () {
  if (a0_0x36dadf) {
    a0_0x2984a2.superClass.prototype.drawSkinCustomization.call(this);
  } else if (this.flag_usingAbility) {
    var _0x40a124 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/rhino_head1.png");
    var _0x162580 = this.skinScale * 0.98;
    var _0x3bf57c = this.skinRad;
    if (_0x40a124) {
      frame = 0;
      a0_0x4ef4f3.save();
      var _0x3bf57c = this.rad;
      a0_0x4ef4f3.drawImage(_0x40a124, -_0x3bf57c * _0x162580, (-_0x3bf57c + _0x3bf57c * a0_0x40a334) * _0x162580 + frame, _0x3bf57c * 2 * _0x162580, _0x3bf57c * 2 * _0x162580);
      a0_0x4ef4f3.restore();
    }
  }
};
function a0_0x2984a2() {
  a0_0x2984a2.superClass.call(this, a0_0x1370b8);
}
window.Rhino = a0_0x2984a2;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2984a2, a0_0x1370b8, a0_0x32eb58);
var a0_0x58d04c = a0_0x45645e;
a0_0x2afa68.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2afa68.prototype.constructor = a0_0x2afa68;
a0_0x2afa68.superClass = a0_0x58d04c;
a0_0x2afa68.prototype.animalInfo = function () {
  var _0x4e7343 = {};
  _0x4e7343.skinName = "land/pig/" + this.animalSpecies + this.getSubSpecies() + "/pig";
  _0x4e7343.aniName = "Pig";
  switch (this.animalSpecies) {
    case 0:
      _0x4e7343.aniName = "Pig";
      _0x4e7343.upgradeText = "UPGRADED to " + _0x4e7343.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
    case 1:
      _0x4e7343.aniName = "Pinky Pig";
      _0x4e7343.upgradeText = "UPGRADED to " + _0x4e7343.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
    case 111:
      _0x4e7343.aniName = "Classic Pig";
      _0x4e7343.upgradeText = "UPGRADED to " + _0x4e7343.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
    case 112:
      _0x4e7343.aniName = "Gold-trim Pig";
      _0x4e7343.upgradeText = "UPGRADED to " + _0x4e7343.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
      break;
    case 201:
      _0x4e7343.aniName = "Floaty Pig";
      _0x4e7343.upgradeText = "UPGRADED to " + _0x4e7343.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
    case 204:
      switch (this.animalSubSpecies) {
        case 0:
          _0x4e7343.aniName = "Butcher Pig";
          break;
        case 1:
          _0x4e7343.aniName = "Hot Dog Pig";
      }
      _0x4e7343.upgradeText = "UPGRADED to " + _0x4e7343.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
    case 2:
      {
        _0x4e7343.aniName = "Stinky Pig";
        _0x4e7343.upgradeText = "UPGRADED to " + _0x4e7343.aniName + "!\n " + _0x4e7343.aniName + " dives through MUD (can use stink everywhere!)";
      }
      break;
    case 202:
      _0x4e7343.aniName = "Piggy Bank";
      _0x4e7343.upgradeText = "UPGRADED to " + _0x4e7343.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
    case 220:
      _0x4e7343.aniName = "Fumigator Pig";
      _0x4e7343.upgradeText = "UPGRADED to " + _0x4e7343.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
  }
  _0x4e7343.aniCol = "#DD6BD4";
  return _0x4e7343;
};
a0_0x2afa68.prototype.getAbilityInfo = function (_0x4103bc) {
  var _0x4d68c5 = {
    abilName: "Stink cloud"
  };
  _0x4d68c5.abilImg = "skins/" + this.getSpeciesPath() + "/pig.png";
  _0x4d68c5.skinThemeID = this.skinThemeID;
  _0x4d68c5.mopeSeasonID = this.mopeSeasonID;
  return _0x4d68c5;
};
a0_0x2afa68.prototype.getSkinName = function () {
  let _0x4b2d12 = this.getSpeciesPath() + "/pig";
  return _0x4b2d12;
};
a0_0x2afa68.prototype.getSpeciesPath = function () {
  return "land/pig/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x2afa68.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 204) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x2afa68.prototype.animalDiveColor = function () {
  if (this.flag_underWater) {
    if (this.flag_eff_isInMud) {
      return "#7E6A35";
    } else {
      return "#4E71C3";
    }
  }
  return "";
};
a0_0x2afa68.prototype.animalDivesInMud = function () {
  return true;
};
function a0_0x2afa68() {
  a0_0x2afa68.superClass.call(this, a0_0x1370b8);
}
window.Pig = a0_0x2afa68;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2afa68, a0_0x1370b8, a0_0x3d5a13);
var a0_0x58d04c = a0_0x45645e;
a0_0x298d4c.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x298d4c.prototype.constructor = a0_0x298d4c;
a0_0x298d4c.superClass = a0_0x58d04c;
a0_0x298d4c.prototype.animalInfo = function () {
  var _0x2a9759 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x2a9759.aniName = "Deer";
      break;
    case 1:
      _0x2a9759.aniName = "Doe";
      break;
    case 2:
      _0x2a9759.aniName = "Marsh Deer";
      break;
    case 100:
      _0x2a9759.aniName = "The Wendigo";
      break;
    case 111:
      _0x2a9759.aniName = "Classic Deer";
      break;
    case 112:
      _0x2a9759.aniName = "Gold-trim Deer";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x2a9759.aniName = "Mezavor";
          break;
        case 1:
          _0x2a9759.aniName = "Divine Deer";
      }
      break;
  }
  _0x2a9759.aniDesc = "";
  _0x2a9759.upgradeText = "UPGRADED to " + _0x2a9759.aniName + "! \nPress W to dig up food! \nDig in mud for better food!\n Hint:Check water areas for new food sources!";
  _0x2a9759.aniCol = "#C4773E";
  _0x2a9759.skinName = this.getSkinName();
  return _0x2a9759;
};
a0_0x298d4c.prototype.getSkinName = function () {
  let _0x1adec5 = this.getSpeciesPath() + "/deer";
  return _0x1adec5;
};
a0_0x298d4c.prototype.getSpeciesPath = function () {
  return "land/deer/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x298d4c.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x298d4c.prototype.getAbilityInfo = function (_0x1c41d3) {
  var _0x4e1098 = {
    abilName: "Dig Food!"
  };
  _0x4e1098.abilImg = "skins/" + this.getSpeciesPath() + "/deer.png";
  _0x4e1098.skinThemeID = this.skinThemeID;
  _0x4e1098.mopeSeasonID = this.mopeSeasonID;
  return _0x4e1098;
};
a0_0x298d4c.prototype.moveF = 0.08;
a0_0x298d4c.prototype.jumpAnim = null;
a0_0x298d4c.prototype.frame = 0;
a0_0x298d4c.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility) {
    if (this.animalType == a0_0x31131a || this.animalType == a0_0x563df4) {
      var _0x16fee6 = (a0_0x4f736f - this.spawnTime) / 1000;
      var _0x38c28d = 1.5;
      var _0x39a3b9 = 1;
      var _0x2a667d = _0x39a3b9 * Math.sin(Math.PI * 2 / _0x38c28d * _0x16fee6);
      var _0x45d336 = a0_0x4ef4f3.globalAlpha;
      a0_0x4ef4f3.globalAlpha *= 0.8;
      a0_0x5c99c1(0, this.rad * 0.3, this.rad * (0.9 + _0x2a667d * 0.12), "#7F582B");
      a0_0x5c99c1(0, -this.rad * 0.3, this.rad * (1.05 + _0x2a667d * 0.09), "#7F582B");
      a0_0x4ef4f3.globalAlpha = _0x45d336;
    }
  }
};
function a0_0x298d4c() {
  a0_0x298d4c.superClass.call(this, a0_0x1370b8);
}
window.Deer = a0_0x298d4c;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x298d4c, a0_0x1370b8, a0_0x31131a);
var a0_0x58d04c = a0_0x45645e;
a0_0x35ee35.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x35ee35.prototype.constructor = a0_0x35ee35;
a0_0x35ee35.superClass = a0_0x58d04c;
a0_0x35ee35.prototype.animalInfo = function () {
  var _0x2df909 = {
    aniCol: "#755A2A"
  };
  switch (this.animalSpecies) {
    case 0:
      _0x2df909.aniName = "Donkey";
      _0x2df909.upgradeText = "UPGRADED to " + _0x2df909.aniName + "!\nPress 'W' to give RARE kick and stun your opponents";
      break;
    case 1:
      _0x2df909.aniName = "Jackass";
      _0x2df909.aniCol = "#000";
      _0x2df909.upgradeText = "UPGRADED to " + _0x2df909.aniName + "!\nPress 'W' to give RARE kick and stun your opponents.\n(Keep mouse close to your animal along with boosting to become a mad donkey!)";
      break;
    case 2:
      _0x2df909.aniName = "Zonkey";
      _0x2df909.aniCol = "#755A2A";
      _0x2df909.upgradeText = "UPGRADED to " + _0x2df909.aniName + "!\nPress 'W' to give RARE kick and stun your opponents";
      break;
    case 100:
      _0x2df909.aniName = "Equusthulhu";
      _0x2df909.aniCol = "#755A2A";
      _0x2df909.upgradeText = "UPGRADED to " + _0x2df909.aniName + "!\nPress 'W' to give RARE kick and stun your opponents";
      break;
    case 111:
      _0x2df909.aniName = "Classic Donkey";
      _0x2df909.aniCol = "#755A2A";
      _0x2df909.upgradeText = "UPGRADED to " + _0x2df909.aniName + "!\nPress 'W' to give RARE kick and stun your opponents";
      break;
    case 112:
      _0x2df909.aniName = "Gold-trim Donkey";
      _0x2df909.aniCol = "#755A2A";
      _0x2df909.upgradeText = "UPGRADED to " + _0x2df909.aniName + "!\nPress 'W' to give RARE kick and stun your opponents";
      break;
    case 202:
      _0x2df909.aniName = "Headless Mule";
      _0x2df909.upgradeText = "UPGRADED to " + _0x2df909.aniName + "!\nPress 'W' to give RARE kick and stun your opponents";
      break;
  }
  _0x2df909.skinName = this.getSkinName();
  _0x2df909.aniDesc = "";
  return _0x2df909;
};
a0_0x35ee35.prototype.getAbilityInfo = function (_0x456c32) {
  var _0x590a8b = {
    abilName: "Back Kick!"
  };
  _0x590a8b.abilImg = "skins/" + this.getSpeciesPath() + "/donkey.png";
  _0x590a8b.skinThemeID = this.skinThemeID;
  _0x590a8b.mopeSeasonID = this.mopeSeasonID;
  return _0x590a8b;
};
a0_0x35ee35.prototype.getSkinName = function () {
  let _0x30a634 = this.getSpeciesPath() + "/donkey";
  if (this.specType != 0) {
    if (this.specType > 2) {
      _0x30a634 += 3;
    } else {
      _0x30a634 += this.specType;
    }
  }
  return _0x30a634;
};
a0_0x35ee35.prototype.getSpeciesPath = function () {
  return "land/donkey/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x35ee35.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x35ee35.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility && this.biteStart > 0) {
    a0_0x4ef4f3.save();
    var _0x2e5ed5 = a0_0x4ef4f3.globalAlpha;
    a0_0x4ef4f3.globalAlpha = _0x2e5ed5 * 1;
    var _0x355d64 = "skins/" + this.getSpeciesPath() + "/legs.png";
    var _0x13e5b2 = this.getSkinImageObj(_0x355d64);
    if (_0x13e5b2) {
      var _0x15fbe6 = Math.min(1, (a0_0x4f736f - this.biteStart) / 1350);
      var _0x1fca29 = this.rad;
      var _0x1e3dae = 0;
      var _0x1fa024 = this.rad * 1;
      var _0x1d4172 = _0x1fca29 * 2;
      var _0x4ebfde = _0x1fca29 * 2 * _0x15fbe6;
      var _0x286ee5 = 0.5;
      var _0x367ba0 = 2.5;
      a0_0x4ef4f3.drawImage(_0x13e5b2, _0x1e3dae + _0x1d4172 * -_0x286ee5, _0x1fa024 + _0x4ebfde * -_0x367ba0, _0x1d4172, _0x4ebfde);
    }
    a0_0x4ef4f3.restore();
  }
};
a0_0x35ee35.prototype.biteStart = 0;
a0_0x35ee35.prototype.flapAmount = 0.3;
a0_0x35ee35.prototype.flapDur = 1;
a0_0x35ee35.prototype.roarStartT = -500;
a0_0x35ee35.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    if (this.specType == 0) {
      return;
    }
    var _0x3accde = this.specType - 2;
    var _0x4d2c84 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/donkey_head" + _0x3accde + ".png");
    var _0x335c06 = this.skinRad;
    if (_0x4d2c84) {
      a0_0x4ef4f3.save();
      var _0x335c06 = this.rad * 1.3;
      var _0x49b110 = 0;
      var _0x3a8b8b = this.rad;
      var _0x2133a9 = 1;
      var _0x39d070 = _0x335c06 * 2 * _0x2133a9;
      var _0x132f0a = _0x335c06 * 2 * _0x2133a9;
      var _0x6b7d0 = 0.5;
      var _0xf726c3 = 0.7;
      a0_0x4ef4f3.drawImage(_0x4d2c84, _0x49b110 + _0x39d070 * -_0x6b7d0, _0x3a8b8b + _0x132f0a * -_0xf726c3, _0x39d070, _0x132f0a);
      a0_0x4ef4f3.restore();
    }
  } else {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x4f736f + this.roarStartT;
    }
    var _0x17723c = (a0_0x4f736f - this.biteStart) / 1000;
    var _0x1c5439 = 0;
    _0x1c5439 = a0_0xe2d896(_0x17723c, this.flapDur, this.flapAmount, 2);
    var _0x4d2c84 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/donkey_head" + this.specType + ".png");
    var _0x335c06 = this.skinRad;
    if (_0x4d2c84) {
      a0_0x4ef4f3.save();
      var _0x2133a9 = 0;
      var _0xd56420 = 1;
      var _0x1e1f76 = 0.85;
      var _0x13f0de = 1.2;
      if (this.specType == 1) {
        _0x2133a9 = -25;
        _0xd56420 = 1.2 - _0x1c5439 * 0.3;
        _0x1e1f76 = 0.8 + _0x1c5439 * 0.3;
        _0x13f0de = 1.4 - _0x1c5439 * 0.3;
      } else if (this.specType == 2) {
        _0x2133a9 = 25;
        _0xd56420 = 0.8 - _0x1c5439 * 0.3;
        _0x1e1f76 = 0.8 + _0x1c5439 * 0.3;
        _0x13f0de = 1.4 - _0x1c5439 * 0.3;
        _0x1c5439 *= -1;
      }
      var _0x335c06 = this.rad * 1;
      var _0x49b110 = 0;
      var _0x3a8b8b = this.rad;
      var _0x39d070 = _0x335c06 * 2 * _0x13f0de;
      var _0x132f0a = _0x335c06 * 2 * _0x13f0de;
      var _0x6b7d0 = _0xd56420 * 0.5;
      var _0xf726c3 = _0x1e1f76 * 1;
      a0_0x4ef4f3.rotate(a0_0x844a6b(_0x2133a9) + _0x1c5439);
      a0_0x4ef4f3.drawImage(_0x4d2c84, _0x49b110 + _0x39d070 * -_0x6b7d0, _0x3a8b8b + _0x132f0a * -_0xf726c3, _0x39d070, _0x132f0a);
      a0_0x4ef4f3.restore();
    }
  }
};
function a0_0x35ee35() {
  a0_0x35ee35.superClass.call(this, a0_0x1370b8);
}
window.Donkey = a0_0x35ee35;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x35ee35, a0_0x1370b8, a0_0x41fd5c);
var a0_0x58d04c = a0_0x45645e;
a0_0x5c0c64.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5c0c64.prototype.constructor = a0_0x5c0c64;
a0_0x5c0c64.superClass = a0_0x58d04c;
a0_0x5c0c64.prototype.animalInfo = function () {
  var _0x200302 = {
    aniCol: "#755A2A"
  };
  switch (this.animalSpecies) {
    case 0:
      _0x200302.aniName = "Zebra";
      break;
    case 1:
      _0x200302.aniName = "Okapi";
      break;
    case 2:
      _0x200302.aniName = "Okapi";
      break;
    case 100:
      _0x200302.aniName = "Unicornze";
      break;
    case 111:
      _0x200302.aniName = "Classic Zebra";
      break;
    case 112:
      _0x200302.aniName = "Gold-trim Zebra";
      break;
    case 201:
      _0x200302.aniName = "Playground Zebra";
      break;
    case 202:
      _0x200302.aniName = "Synth Zebra";
      break;
  }
  _0x200302.aniCol = "#000";
  _0x200302.skinName = this.getSkinName();
  _0x200302.upgradeText = "UPGRADED to " + _0x200302.aniName + "!\n Press 'W' to give RARE kick and stun your opponents";
  _0x200302.aniDesc = "";
  return _0x200302;
};
a0_0x5c0c64.prototype.getSkinImageObj = function (_0xe63069) {
  var _0x5c69d3 = this.animalSpecies === 201 || this.animalSpecies === 2 || this.animalSpecies === 1 || this.animalSpecies === 100 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0xe63069, _0x5c69d3);
};
a0_0x5c0c64.prototype.getAbilityInfo = function (_0x257cd0) {
  var _0x1c3e32 = {
    abilName: "Side Kick!"
  };
  _0x1c3e32.abilImg = "skins/" + this.getSpeciesPath() + "/ability.png";
  _0x1c3e32.skinThemeID = this.skinThemeID;
  _0x1c3e32.mopeSeasonID = this.mopeSeasonID;
  return _0x1c3e32;
};
a0_0x5c0c64.prototype.getSkinName = function () {
  let _0xeaa791 = this.getSpeciesPath() + "/zebra";
  return _0xeaa791;
};
a0_0x5c0c64.prototype.getSpeciesPath = function () {
  return "land/zebra/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x5c0c64.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x5c0c64() {
  a0_0x5c0c64.superClass.call(this, a0_0x1370b8);
}
window.Zebra = a0_0x5c0c64;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5c0c64, a0_0x1370b8, a0_0x4f39e9);
var a0_0x12718d = a0_0x12718d;
var a0_0x58d04c = a0_0x45645e;
a0_0x12718d.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x12718d.prototype.constructor = a0_0x12718d;
a0_0x12718d.superClass = a0_0x58d04c;
a0_0x12718d.prototype.objSkinSpotsCanvas = null;
a0_0x12718d.prototype.animalInfo = function () {
  var _0x57c916 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x57c916.aniName = "Mouse";
      break;
    case 1:
      _0x57c916.aniName = "Golden Mouse";
      break;
    case 2:
      _0x57c916.aniName = "Purple Mouse";
      break;
    case 100:
      _0x57c916.aniName = "Robo Mouse";
      break;
    case 112:
      _0x57c916.aniName = "Gold-trim Mouse";
      break;
    case 201:
      _0x57c916.aniName = "Bubbly Mouse";
      break;
    case 111:
      _0x57c916.aniName = "Classic Mouse";
      break;
    case 202:
      _0x57c916.aniName = "Super Mouse";
      break;
    case 204:
      switch (this.animalSubSpecies) {
        case 0:
          _0x57c916.aniName = "Dark Plague Rat";
          break;
        case 1:
          _0x57c916.aniName = "Light Plague Rat";
      }
      break;
    case 250:
      _0x57c916.aniName = "Sample Mouse";
      break;
  }
  _0x57c916.upgradeText = "You're a tiny " + _0x57c916.aniName + "- Eat food to grow!";
  _0x57c916.aniCol = "gray";
  _0x57c916.skinName = "land/mouse/" + this.animalSpecies + this.getSubSpecies() + "/mouse";
  return _0x57c916;
};
a0_0x12718d.prototype.getSkinName = function () {
  return "land/mouse/" + this.animalSpecies + this.getSubSpecies() + "/mouse";
};
a0_0x12718d.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 204) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
function a0_0x12718d() {
  a0_0x12718d.superClass.call(this, a0_0x1370b8);
}
window.Mouse = a0_0x12718d;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x12718d, a0_0x1370b8, a0_0x4083f6);
var a0_0x2338c9 = a0_0x2338c9;
var a0_0x58d04c = a0_0x45645e;
a0_0x2338c9.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2338c9.prototype.constructor = a0_0x2338c9;
a0_0x2338c9.superClass = a0_0x58d04c;
a0_0x2338c9.prototype.objSkinSpotsCanvas = null;
a0_0x2338c9.prototype.getSkinName = function () {
  let _0x45a689 = this.getSpeciesPath() + "/bear";
  return _0x45a689;
};
a0_0x2338c9.prototype.getSpeciesPath = function () {
  return "land/bear/" + this.animalSpecies + "/" + this.animalSubSpecies;
};
a0_0x2338c9.prototype.animalInfo = function () {
  var _0x445f5a = {};
  var _0x571add = "";
  switch (this.animalSubSpecies) {
    case 0:
      _0x445f5a.aniName = "Bear";
      _0x445f5a.upgradeText = "UPGRADED to BEAR!\n Bears climb through green hills! (Press W to use your claw!)";
      _0x445f5a.aniCol = "#99591C";
      _0x571add = "bear";
      break;
    case 1:
      _0x445f5a.aniName = "Panda";
      _0x445f5a.upgradeText = "UPGRADED to " + _0x445f5a.aniName + "!\n " + _0x445f5a.aniName + " climb through green hills! (Press W to use your claw!)";
      _0x445f5a.aniCol = "#99591C";
      _0x571add = "bear";
      break;
    case 111:
      _0x445f5a.aniName = "Classic Bear";
      _0x445f5a.upgradeText = "UPGRADED to " + _0x445f5a.aniName + "!\n " + _0x445f5a.aniName + " climb through green hills! (Press W to use your claw!)";
      break;
    case 112:
      _0x445f5a.aniName = "Gold-trim Bear";
      _0x445f5a.upgradeText = "UPGRADED to " + _0x445f5a.aniName + "!\n " + _0x445f5a.aniName + " climb through green hills! (Press W to use your claw!)";
      break;
    case 202:
      _0x445f5a.aniName = "Beekeeper Bear";
      _0x445f5a.upgradeText = "UPGRADED to " + _0x445f5a.aniName + "!\n " + _0x445f5a.aniName + " climb through green hills! (Press W to use your claw!)";
      break;
    case 2023:
      _0x445f5a.aniName = "Spooky Bear";
      _0x445f5a.upgradeText = "UPGRADED to " + _0x445f5a.aniName + "!\n " + _0x445f5a.aniName + " climb through green hills! (Press W to use your claw!)";
      break;
    case 204:
      _0x445f5a.aniName = "Mr. Teddy";
      _0x445f5a.upgradeText = "UPGRADED to " + _0x445f5a.aniName + "!\n " + _0x445f5a.aniName + " climb through green hills! (Press W to use your claw!)";
      _0x445f5a.aniCol = "#99591C";
      _0x571add = "mr_teddy";
      break;
  }
  _0x445f5a.aniCol = "#CAC05B";
  _0x445f5a.skinName = this.getSkinName();
  return _0x445f5a;
};
a0_0x2338c9.prototype.getAbilityInfo = function (_0x4650b9) {
  var _0x59feb7 = {
    abilName: "Claw Slash!"
  };
  _0x59feb7.abilImg = "skins/" + this.getSpeciesPath() + "/clawslash.png";
  _0x59feb7.skinThemeID = this.skinThemeID;
  _0x59feb7.mopeSeasonID = this.mopeSeasonID;
  return _0x59feb7;
};
function a0_0x2338c9() {
  a0_0x2338c9.superClass.call(this, a0_0x1370b8);
}
window.Bear = a0_0x2338c9;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2338c9, a0_0x1370b8, a0_0x5a613b);
var a0_0x366243 = a0_0x366243;
var a0_0x58d04c = a0_0x45645e;
a0_0x366243.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x366243.prototype.constructor = a0_0x366243;
a0_0x366243.superClass = a0_0x58d04c;
a0_0x366243.prototype.objSkinSpotsCanvas = null;
a0_0x366243.prototype.animalInfo = function () {
  var _0x1e3e51 = {};
  switch (this.animalSubSpecies) {
    case 0:
      _0x1e3e51.aniName = "Crocodile";
      _0x1e3e51.aniCol = "#30F51C";
      break;
    case 1:
      _0x1e3e51.aniName = "Giant Crocodile";
      _0x1e3e51.aniCol = "#757e71";
      break;
    case 100:
      _0x1e3e51.aniName = "Uncle Sam";
      _0x1e3e51.aniCol = "#757e71";
      break;
    case 201:
      _0x1e3e51.aniName = "Big Hoss";
      _0x1e3e51.aniCol = "#757e71";
      break;
    case 202:
      _0x1e3e51.aniName = "Croczilla";
      break;
    case 203:
      _0x1e3e51.aniName = "Ammit";
      break;
    case 2023:
      _0x1e3e51.aniName = "Sharkzilla";
      break;
  }
  if (this.animalSpecies == 111) {
    _0x1e3e51.aniName = "Classic Crocodile";
  }
  if (this.animalSpecies == 112) {
    _0x1e3e51.aniName = "Gold-trim Crocodile";
  }
  _0x1e3e51.upgradeText = "UPGRADED to " + _0x1e3e51.aniName + "!\n Press W to bite and drag around animals! \n+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!";
  _0x1e3e51.skinName = this.getSkinName();
  return _0x1e3e51;
};
a0_0x366243.prototype.getSkinName = function () {
  let _0x572017 = this.getSpeciesPath() + "/croc";
  return _0x572017;
};
a0_0x366243.prototype.getSpeciesPath = function () {
  return "land/croc/" + this.animalSpecies + "/" + this.animalSubSpecies;
};
a0_0x366243.prototype.setStealth = function () {
  a0_0x366243.superClass.prototype.setStealth.call(this);
  if (this.isCamouflage) {
    this.idealOp = a0_0x1c918d == this.id ? 0.1 : 0;
  }
};
a0_0x366243.prototype.isCamouflage = false;
a0_0x366243.prototype.drawUnderSkinTail = function (_0x5d6300) {
  if (!this.isCamouflage) {
    a0_0x366243.superClass.prototype.drawUnderSkinTail.call(this, _0x5d6300);
  }
};
a0_0x366243.prototype.drawHealthBar = function () {
  if (!this.isCamouflage) {
    a0_0x366243.superClass.prototype.drawHealthBar.call(this);
  }
};
a0_0x366243.prototype.customUpdatedProperty = function (_0x4f8456, _0x2014f0) {
  if (_0x4f8456 == a0_0x44ec4c) {
    this.isCamouflage = _0x2014f0.readUInt8() == 1;
    this.setStealth();
  }
};
a0_0x366243.prototype.readCustomData_onNewlyVisible = function (_0x170ee1) {
  a0_0x366243.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x170ee1);
  this.isCamouflage = _0x170ee1.readUInt8() == 1;
  this.setStealth();
};
a0_0x366243.prototype.getAbilityInfo = function (_0x2754d2) {
  var _0x208190 = {
    abilName: "Bite Grab!"
  };
  _0x208190.abilImg = "skins/" + this.getSpeciesPath() + "/croc.png";
  _0x208190.skinThemeID = this.skinThemeID;
  _0x208190.mopeSeasonID = this.mopeSeasonID;
  return _0x208190;
};
function a0_0x366243() {
  a0_0x366243.superClass.call(this, a0_0x1370b8);
}
window.Croc = a0_0x366243;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x366243, a0_0x1370b8, a0_0x20917b);
var a0_0x58d04c = a0_0x45645e;
a0_0x5ef2e0.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5ef2e0.prototype.constructor = a0_0x5ef2e0;
a0_0x5ef2e0.superClass = a0_0x58d04c;
a0_0x5ef2e0.prototype.updateZ = function () {
  this.z = 100000;
};
a0_0x5ef2e0.prototype.canUseTailslap = false;
a0_0x5ef2e0.prototype.tailState = 0;
a0_0x5ef2e0.prototype.lava = 100;
a0_0x5ef2e0.prototype.getSkinName = function () {
  var _0x37de55 = a0_0x1528ea || a0_0x1d703e == a0_0x30b084 ? "kingdragon" : "kingdragon_body";
  return "volcano/kingdragon/" + this.animalSpecies + "/" + _0x37de55;
};
a0_0x5ef2e0.prototype.customUpdatedProperty = function (_0x1ad2a8, _0xa6e530) {
  if (_0x1ad2a8 == a0_0x115b85) {
    this.canUseTailslap = _0xa6e530.readUInt8() == 1;
  } else if (_0x1ad2a8 == a0_0x11dd56) {
    this.tailState = _0xa6e530.readUInt16() / 100;
  }
};
a0_0x5ef2e0.prototype.leftWingAnim = null;
a0_0x5ef2e0.prototype.flapAngleDiff = 3;
a0_0x5ef2e0.prototype.flapAngle = 3;
a0_0x5ef2e0.prototype.flapF = 0.1;
a0_0x5ef2e0.prototype.flapDur = 2;
a0_0x5ef2e0.prototype.sF = 0.02;
a0_0x5ef2e0.prototype.drawWings = function () {
  if (a0_0x1d703e == a0_0x30b084 || a0_0x1528ea) {
    return;
  }
  if (this.leftWingAnim == null) {
    this.leftWingAnim = new a0_0x100d8b(this, this.flapDur, a0_0x100d8b.wave);
    this.leftWingAnim.keepLastFrame = true;
    this.leftWingAnim.loop = true;
    this.leftWingAnim.onFrameEntered = function (_0x531252) {
      this.forObj.frame1 = _0x531252;
    };
  }
  if (this.leftWingAnim != null) {
    this.leftWingAnim.run();
  }
  var _0x4aa0c8 = this.rad - this.outlineW;
  var _0x40bd6c = this.frame1 * this.sF * _0x4aa0c8;
  var _0x48fc87 = -(-this.flapF + this.frame1);
  var _0x15c108 = _0x48fc87 * a0_0x844a6b(this.flapAngle);
  var _0x48d568 = 500 / 340;
  var _0x28b466 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/left_wing.png");
  var _0x4110d5 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/right_wing.png");
  if (_0x28b466 && _0x4110d5) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(a0_0x844a6b(this.flapAngleDiff) + _0x15c108);
    a0_0x4ef4f3.drawImage(_0x28b466, -_0x4aa0c8 * _0x48d568, -_0x4aa0c8 * _0x48d568 + _0x40bd6c, _0x4aa0c8 * 2 * _0x48d568, _0x4aa0c8 * 2 * _0x48d568 + _0x40bd6c * 1.5);
    a0_0x4ef4f3.restore();
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(-(a0_0x844a6b(this.flapAngleDiff) + _0x15c108));
    a0_0x4ef4f3.drawImage(_0x4110d5, -_0x4aa0c8 * _0x48d568, -_0x4aa0c8 * _0x48d568 + _0x40bd6c, _0x4aa0c8 * 2 * _0x48d568, _0x4aa0c8 * 2 * _0x48d568 + _0x40bd6c * 1.5);
    a0_0x4ef4f3.restore();
    if (this.animalSpecies == 4) {
      let _0x234d03 = a0_0x232cc7("kd", this.spawnTime);
      if (_0x234d03 !== undefined && _0x234d03 != null) {
        this.theFrame = _0x234d03;
      }
      let _0xa420c4 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = Math.max(0, _0xa420c4);
      var _0x22c7d0 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/left_wing_tips.png");
      var _0x468ef9 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/right_wing_tips.png");
      if (_0x22c7d0 && _0x468ef9) {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.rotate(a0_0x844a6b(this.flapAngleDiff) + _0x15c108);
        a0_0x4ef4f3.drawImage(_0x22c7d0, -_0x4aa0c8 * _0x48d568, -_0x4aa0c8 * _0x48d568 + _0x40bd6c, _0x4aa0c8 * 2 * _0x48d568, _0x4aa0c8 * 2 * _0x48d568 + _0x40bd6c * 1.5);
        a0_0x4ef4f3.restore();
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.rotate(-(a0_0x844a6b(this.flapAngleDiff) + _0x15c108));
        a0_0x4ef4f3.drawImage(_0x468ef9, -_0x4aa0c8 * _0x48d568, -_0x4aa0c8 * _0x48d568 + _0x40bd6c, _0x4aa0c8 * 2 * _0x48d568, _0x4aa0c8 * 2 * _0x48d568 + _0x40bd6c * 1.5);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.restore();
    }
  }
  var _0x2e3c57 = this.lava;
  var _0x3f925d = 50;
  if (_0x2e3c57 < _0x3f925d) {
    var _0x79e8a5 = _0x2e3c57 / _0x3f925d;
    var _0x5ca036 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/left_wing1.png");
    var _0x1e67d8 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/right_wing2.png");
    if (_0x5ca036 && _0x1e67d8) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 1 - _0x79e8a5;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.rotate(a0_0x844a6b(this.flapAngleDiff) + _0x15c108);
      a0_0x4ef4f3.drawImage(_0x5ca036, -_0x4aa0c8 * _0x48d568, -_0x4aa0c8 * _0x48d568 + _0x40bd6c, _0x4aa0c8 * 2 * _0x48d568, _0x4aa0c8 * 2 * _0x48d568 + _0x40bd6c * 1.5);
      a0_0x4ef4f3.restore();
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.rotate(-(a0_0x844a6b(this.flapAngleDiff) + _0x15c108));
      a0_0x4ef4f3.drawImage(_0x1e67d8, -_0x4aa0c8 * _0x48d568, -_0x4aa0c8 * _0x48d568 + _0x40bd6c, _0x4aa0c8 * 2 * _0x48d568, _0x4aa0c8 * 2 * _0x48d568 + _0x40bd6c * 1.5);
      a0_0x4ef4f3.restore();
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x5ef2e0.prototype.drawSkinCustomization = function () {
  if (this.flag_underWater) {
    return;
  }
  if (a0_0x1d703e == a0_0x30b084 || a0_0x1528ea) {
    return;
  }
  var _0x3a84cb = 500 / 340;
  let _0x16fc19 = a0_0x232cc7("kd", this.spawnTime);
  if (_0x16fc19 !== undefined && _0x16fc19 != null) {
    this.theFrame = _0x16fc19;
  }
  let _0x3a94b9 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
  var _0x2a537f = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/nostrils.png");
  if (_0x2a537f) {
    a0_0x4ef4f3.save();
    var _0xb047e9 = this.lava;
    var _0x48e912 = 100;
    var _0x46ce65 = _0xb047e9 / _0x48e912;
    a0_0x4ef4f3.globalAlpha = Math.max(0, _0x3a94b9) * _0x46ce65;
    var _0x3199bc = this.rad - this.outlineW;
    a0_0x4ef4f3.drawImage(_0x2a537f, -_0x3199bc * _0x3a84cb, -_0x3199bc * _0x3a84cb, _0x3199bc * 2 * _0x3a84cb, _0x3199bc * 2 * _0x3a84cb);
    a0_0x4ef4f3.restore();
  }
  if (!this.canUseTailslap) {
    var _0x4b040c = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone1.png");
    if (_0x4b040c) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 1;
      var _0x3199bc = this.rad - this.outlineW;
      a0_0x4ef4f3.drawImage(_0x4b040c, -_0x3199bc * _0x3a84cb, -_0x3199bc * _0x3a84cb, _0x3199bc * 2 * _0x3a84cb, _0x3199bc * 2 * _0x3a84cb);
      a0_0x4ef4f3.restore();
    }
    var _0x332f23 = 0;
    if (this.tailState < 11 && this.tailState > 5) {
      var _0x206bf6 = this.tailState - 5;
      _0x332f23 = _0x206bf6 / 6;
    } else if (this.tailState <= 3) {
      _0x332f23 = this.tailState / 3;
    }
    var _0x31e730 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone3.png");
    if (this.tailState < 11) {
      if (_0x31e730) {
        a0_0x4ef4f3.save();
        if (this.tailState > 5) {
          a0_0x4ef4f3.globalAlpha = 1 - _0x332f23;
        } else {
          a0_0x4ef4f3.globalAlpha = 1;
        }
        var _0x3199bc = this.rad - this.outlineW;
        a0_0x4ef4f3.drawImage(_0x31e730, -_0x3199bc * _0x3a84cb, -_0x3199bc * _0x3a84cb, _0x3199bc * 2 * _0x3a84cb, _0x3199bc * 2 * _0x3a84cb);
        a0_0x4ef4f3.restore();
      }
    }
    var _0xee88d3 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone2.png");
    if (this.tailState < 3) {
      if (_0xee88d3) {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.globalAlpha = 1 - _0x332f23;
        var _0x3199bc = this.rad - this.outlineW;
        a0_0x4ef4f3.drawImage(_0xee88d3, -_0x3199bc * _0x3a84cb, -_0x3199bc * _0x3a84cb, _0x3199bc * 2 * _0x3a84cb, _0x3199bc * 2 * _0x3a84cb);
        a0_0x4ef4f3.restore();
      }
    }
  } else {
    var _0xee88d3 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone2.png");
    if (_0xee88d3) {
      a0_0x4ef4f3.save();
      var _0x1c5069 = Math.max(0.3, _0x3a94b9);
      a0_0x4ef4f3.globalAlpha = _0x1c5069;
      var _0x3199bc = this.rad - this.outlineW;
      a0_0x4ef4f3.drawImage(_0xee88d3, -_0x3199bc * _0x3a84cb, -_0x3199bc * _0x3a84cb, _0x3199bc * 2 * _0x3a84cb, _0x3199bc * 2 * _0x3a84cb);
      a0_0x4ef4f3.restore();
    }
  }
  this.drawWings();
};
a0_0x5ef2e0.prototype.drawLowWaterDrop = function () {
  if (this.flag_underWater) {
    return;
  }
  if (this.flag_lowWat) {
    var _0x45b856 = 1.2;
    var _0x2b66d9 = 0.2;
    var _0xece90d = 0.8;
    var _0x5d6864 = (_0xece90d - _0x2b66d9) * 0.5;
    var _0x1cf156 = _0x2b66d9 + _0x5d6864 + _0x5d6864 * Math.sin(Math.PI * 2 / _0x45b856 * (a0_0x4f736f / 1000));
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = _0x1cf156;
    a0_0x4ef4f3.fillStyle = a0_0x5479b9;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, this.rad + 5, 5, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.restore();
  }
};
a0_0x5ef2e0.prototype.animalInfo = function () {
  var _0x5b300e = {};
  switch (this.animalSpecies) {
    case 0:
      _0x5b300e.aniName = "King Dragon";
      break;
    case 1:
      _0x5b300e.aniName = "Golden King Dragon";
      break;
    case 2:
      _0x5b300e.aniName = "King Ripper";
      break;
    case 3:
      _0x5b300e.aniName = "King Stan";
      break;
    case 4:
      _0x5b300e.aniName = "King Shah";
      break;
    case 5:
      _0x5b300e.aniName = "Queen Scarlet";
      break;
    case 6:
      _0x5b300e.aniName = "Queen Celeste";
      break;
    case 111:
      _0x5b300e.aniName = "Classic King Dragon";
      break;
    case 200:
      _0x5b300e.aniName = "Queen Flame";
      break;
    case 202:
      _0x5b300e.aniName = "King Graveyard";
      break;
  }
  _0x5b300e.aniCol = "#FF9000";
  _0x5b300e.skinName = this.getSkinName();
  _0x5b300e.upgradeText = "UPGRADED to " + _0x5b300e.aniName;
  _0x5b300e.upgradeText += "!\nYou got firestream that burns your victim alive! Watch your tail and slap them hard.";
  _0x5b300e.aniCol = "black";
  return _0x5b300e;
};
a0_0x5ef2e0.prototype.getAbilityInfo = function (_0x3c678e) {
  var _0x3e065b = {
    abilName: "Firestream\n& Tail slap"
  };
  var _0x27b229 = 0;
  switch (this.animalSpecies) {
    case 0:
      _0x27b229 = 1;
      break;
    case 1:
      _0x27b229 = 2;
      break;
    case 2:
      _0x27b229 = 4;
      break;
    case 3:
      _0x27b229 = 5;
      break;
    case 4:
      _0x27b229 = 6;
      break;
    case 5:
      _0x27b229 = 9;
      break;
    case 6:
      _0x27b229 = 8;
      break;
  }
  _0x3e065b.speciesType = _0x27b229;
  _0x3e065b.abilImg = "img/fire/" + _0x27b229 + "/0.png";
  _0x3e065b.skinThemeID = this.skinThemeID;
  _0x3e065b.mopeSeasonID = this.mopeSeasonID;
  return _0x3e065b;
};
function a0_0x5ef2e0() {
  this.lava = 100;
  a0_0x5ef2e0.superClass.call(this, a0_0x1370b8);
}
window.KingDragon = a0_0x5ef2e0;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5ef2e0, a0_0x1370b8, a0_0x9fe8e0);
var a0_0x58d04c = a0_0x45645e;
a0_0x10266f.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x10266f.prototype.constructor = a0_0x10266f;
a0_0x10266f.superClass = a0_0x58d04c;
a0_0x10266f.prototype.animalInfo = function () {
  var _0x439343 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x439343.aniName = "The Yeti!";
      break;
    case 1:
      _0x439343.aniName = "Golden Yeti!";
      break;
    case 2:
      _0x439343.aniName = "Emerald Yeti!";
      break;
    case 3:
      _0x439343.aniName = "Aqua Yeti";
      break;
    case 111:
      _0x439343.aniName = "Classic Yeti";
      break;
    case 201:
      _0x439343.aniName = "Squishy Yeti";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x439343.aniName = "Lovely Yeti";
          break;
        case 1:
          _0x439343.aniName = "Frosty Eye Demon";
      }
      break;
    case 204:
      _0x439343.aniName = "Frost Wolf";
      break;
    case 220:
      _0x439343.aniName = "Glacial Demon";
      break;
  }
  _0x439343.skinName = this.getSkinName();
  _0x439343.aniDesc = "";
  _0x439343.upgradeText = "UPGRADED to " + _0x439343.aniName + "!\n So it really exists... \n Hold W to turn into snow, release W to freeeeeze!";
  _0x439343.aniCol = "#839eb5";
  return _0x439343;
};
a0_0x10266f.prototype.getAbilityInfo = function (_0x541893) {
  var _0x44871d = {
    abilName: "Yeti Roar" + (this.animalSpecies == 3 ? " &\n Ice Statue" : "") + ""
  };
  _0x44871d.abilImg = "skins/arctic/yeti/" + this.animalSpecies + this.getSubSpecies() + "/ability.png";
  _0x44871d.skinThemeID = this.skinThemeID;
  _0x44871d.mopeSeasonID = this.mopeSeasonID;
  return _0x44871d;
};
a0_0x10266f.prototype.getSkinName = function () {
  var _0x50422a = this.specType == 0 ? "" : 1;
  return this.getSpeciesPath("yeti") + "/yeti" + _0x50422a;
};
a0_0x10266f.prototype.getSubSpecies = function () {
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x10266f.prototype.getSpeciesPath = function (_0x1e6a7a) {
  return "arctic/" + _0x1e6a7a + "/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x10266f.prototype.drawOnTopOfSkinImg = function () {};
a0_0x10266f.prototype.isTransforming = false;
a0_0x10266f.prototype.readCustomData_onNewlyVisible = function (_0x212cdf) {
  a0_0x10266f.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x212cdf);
  this.isTransforming = _0x212cdf.readUInt8() == 1;
};
a0_0x10266f.prototype.customUpdatedProperty = function (_0x1f9594, _0x509673) {
  if (_0x1f9594 == a0_0x185bca) {
    this.isTransforming = _0x509673.readUInt8() == 1;
  }
};
a0_0x10266f.prototype.getIdealOpacity = function () {
  var _0x152543 = this.flag_underWater || this.flag_usingAbility && this.isTransforming || this.isCamouflage ? 0 : 1;
  return _0x152543;
};
a0_0x10266f.prototype.biteStart = 0;
a0_0x10266f.prototype.flapAmount = 3;
a0_0x10266f.prototype.flapDur = 1.5;
a0_0x10266f.prototype.roarStartT = -500;
a0_0x10266f.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility && this.isTransforming) {
    if (this.isTransforming) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 1;
      var _0x35be42 = this.getSkinImageObj("img/snowball.png");
      if (_0x35be42) {
        var _0x543acf = this.rad;
        a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
        a0_0x4ef4f3.drawImage(_0x35be42, -_0x543acf, -_0x543acf, _0x543acf * 2, _0x543acf * 2);
      } else {
        this.drawOutlinedCircle("", "white");
      }
      a0_0x4ef4f3.restore();
    }
  } else {
    if (this.animalSpecies == 4) {
      return;
    }
    this.setSkinScale();
    if (!this.flag_usingAbility) {
      this.biteStart = 0;
      return;
    } else {
      if (this.biteStart == 0) {
        this.biteStart = a0_0x4f736f + this.roarStartT;
      }
      if (this.specType != 0 && this.specType != undefined) {
        var _0x12d0e9 = "skins/arctic/yeti/" + this.animalSpecies + "/yeti_head1.png";
        var _0x1285a9 = this.getSkinImageObj(_0x12d0e9);
        var _0x3307f0 = (a0_0x4f736f - this.biteStart) / 1000;
        var _0x1f9e43 = this.skinScale * 1.07;
        var _0x543acf = this.skinRad;
        if (_0x1285a9) {
          var _0x54700d = 0;
          var _0x108261 = this.flapAmount - (this.animalSpecies == 1 ? 0.5 : 0);
          _0x54700d = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x3307f0, this.flapDur, _0x108261, 2) : this.flapAmount;
          a0_0x4ef4f3.save();
          var _0x543acf = this.rad;
          a0_0x4ef4f3.drawImage(_0x1285a9, -_0x543acf * _0x1f9e43, (-_0x543acf + _0x543acf * 0.1) * _0x1f9e43 - _0x54700d, _0x543acf * 2 * _0x1f9e43, _0x543acf * 2 * _0x1f9e43);
          a0_0x4ef4f3.restore();
        }
      }
    }
  }
};
function a0_0x10266f() {
  a0_0x10266f.superClass.call(this, a0_0x1370b8);
}
window.Yeti = a0_0x10266f;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x10266f, a0_0x1370b8, a0_0x38090e);
var a0_0x58d04c = a0_0x45645e;
a0_0x335547.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x335547.prototype.constructor = a0_0x335547;
a0_0x335547.superClass = a0_0x58d04c;
a0_0x335547.prototype.animalInfo = function () {
  var _0xb1e842 = {};
  switch (this.animalSpecies) {
    case 0:
      _0xb1e842.aniName = "Mammoth!";
      break;
    case 1:
      _0xb1e842.aniName = "Golden Mammoth!";
      break;
    case 111:
      _0xb1e842.aniName = "Classic Mammoth";
      break;
    case 2:
      _0xb1e842.aniName = "Black Mammoth!";
      break;
    case 201:
      _0xb1e842.aniName = "Lost Tourist!";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0xb1e842.aniName = "Acid Mammoth";
          break;
        case 1:
          _0xb1e842.aniName = "Crystal Golem";
      }
      break;
    case 220:
      _0xb1e842.aniName = " Golem Mammoth";
      break;
  }
  _0xb1e842.skinName = this.getSkinName();
  _0xb1e842.aniDesc = "";
  _0xb1e842.upgradeText = "UPGRADED to " + _0xb1e842.aniName + "\n Press W to roll snowballs with your trunk!\n The bigger the snowball gets, the longer the freeze!";
  _0xb1e842.aniCol = "#9d4717";
  return _0xb1e842;
};
a0_0x335547.prototype.getAbilityInfo = function (_0x5cdcc2) {
  var _0x31ffd6 = {
    abilName: "Roll snow",
    abilImg: "img/snowball.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x31ffd6;
};
a0_0x335547.prototype.getSkinName = function () {
  var _0x43fdf4 = this.specType == 0 ? "" : 1;
  return "arctic/mammoth/" + this.animalSpecies + this.getSubSpecies() + "/mammoth" + _0x43fdf4;
};
a0_0x335547.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
function a0_0x335547() {
  a0_0x335547.superClass.call(this, a0_0x1370b8);
}
window.Mammoth = a0_0x335547;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x335547, a0_0x1370b8, a0_0x2a957c);
var a0_0x58d04c = a0_0x45645e;
a0_0x143659.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x143659.prototype.constructor = a0_0x143659;
a0_0x143659.superClass = a0_0x58d04c;
a0_0x143659.prototype.animalInfo = function () {
  var _0xa34fbe = {};
  switch (this.animalSpecies) {
    case 0:
      _0xa34fbe.aniName = "Sabertooth Tiger!";
      break;
    case 1:
      _0xa34fbe.aniName = "Golden Tiger!";
      break;
    case 2:
      _0xa34fbe.aniName = "Margala Sabertooth!";
      break;
    case 111:
      _0xa34fbe.aniName = "Classic Sabertooth";
      break;
    case 200:
      _0xa34fbe.aniName = "Techno Saber!";
      break;
    case 201:
      _0xa34fbe.aniName = "Strawbertooth!";
      break;
    case 202:
      _0xa34fbe.aniName = "Ice-Fang Sabertooth";
      break;
    case 204:
      _0xa34fbe.aniName = "Shadow Sabeertooth!";
      break;
  }
  _0xa34fbe.skinName = this.getSkinName();
  _0xa34fbe.aniDesc = "";
  _0xa34fbe.upgradeText = "UPGRADED to " + _0xa34fbe.aniName + "\nSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!";
  _0xa34fbe.aniCol = "#945A99";
  return _0xa34fbe;
};
a0_0x143659.prototype.getAbilityInfo = function (_0x145ee3) {
  var _0x3d6d4b = {
    abilName: "Claw Slash!"
  };
  _0x3d6d4b.abilImg = "skins/arctic/sabertooth/" + this.animalSpecies + this.getSubSpecies() + "/sabertooth.png";
  _0x3d6d4b.skinThemeID = this.skinThemeID;
  _0x3d6d4b.mopeSeasonID = this.mopeSeasonID;
  return _0x3d6d4b;
};
a0_0x143659.prototype.getSkinName = function () {
  return "arctic/sabertooth/" + this.animalSpecies + this.getSubSpecies() + "/sabertooth" + (this.specType == 0 ? "" : this.specType);
};
a0_0x143659.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x143659() {
  a0_0x143659.superClass.call(this, a0_0x1370b8);
}
window.Sabertooth = a0_0x143659;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x143659, a0_0x1370b8, a0_0x5510d8);
var a0_0x58d04c = a0_0x45645e;
a0_0x5c8969.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5c8969.prototype.constructor = a0_0x5c8969;
a0_0x5c8969.superClass = a0_0x58d04c;
a0_0x5c8969.prototype.animalInfo = function () {
  var _0x162f3d = {};
  switch (this.animalSpecies) {
    case 0:
      _0x162f3d.aniName = "Penguin";
      break;
    case 111:
      _0x162f3d.aniName = "Classic Penguin";
      break;
    case 112:
      _0x162f3d.aniName = "Gold-trim Penguin";
      break;
    case 201:
      _0x162f3d.aniName = "Surfer Penguin";
      break;
    case 202:
      _0x162f3d.aniName = "UFO Pigeon";
      break;
  }
  _0x162f3d.skinName = this.getSkinName();
  _0x162f3d.aniDesc = "";
  _0x162f3d.upgradeText = "UPGRADED to " + _0x162f3d.aniName + "!\n Left-click to run!\n (HOLD W to slide FAST on ice)!";
  _0x162f3d.aniCol = "#FFFFFF";
  return _0x162f3d;
};
a0_0x5c8969.prototype.getAbilityInfo = function (_0x23a9dc) {
  var _0x356b72 = {
    abilName: "Slide on ice"
  };
  _0x356b72.abilImg = "skins/arctic/penguin/" + this.animalSpecies + this.getSubSpecies() + "/penguin1.png";
  _0x356b72.skinThemeID = this.skinThemeID;
  _0x356b72.mopeSeasonID = this.mopeSeasonID;
  return _0x356b72;
};
a0_0x5c8969.prototype.getSkinName = function () {
  return "arctic/penguin/" + this.animalSpecies + this.getSubSpecies() + "/penguin" + (this.specType == 0 ? "" : 1);
};
a0_0x5c8969.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x5c8969() {
  a0_0x5c8969.superClass.call(this, a0_0x1370b8);
}
window.Penguin = a0_0x5c8969;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5c8969, a0_0x1370b8, a0_0x254dfc);
var a0_0x58d04c = a0_0x45645e;
a0_0x3a609f.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3a609f.prototype.constructor = a0_0x3a609f;
a0_0x3a609f.superClass = a0_0x58d04c;
a0_0x3a609f.prototype.animalInfo = function () {
  var _0x43708f = {};
  switch (this.animalSpecies) {
    case 0:
      _0x43708f.aniName = "Seal";
      break;
    case 111:
      _0x43708f.aniName = "Classic Seal";
      break;
    case 112:
      _0x43708f.aniName = "Gold-trim Seal";
      break;
    case 201:
      _0x43708f.aniName = "Hawaiian Monk";
      break;
    case 202:
      _0x43708f.aniName = "Soapy Seal";
      break;
  }
  _0x43708f.skinName = this.getSkinName();
  _0x43708f.aniDesc = "";
  _0x43708f.upgradeText = "UPGRADED to " + _0x43708f.aniName + "!\n You can slide on ice (Hold W) + can climb hills (rocks too!)";
  _0x43708f.aniCol = "#633838";
  return _0x43708f;
};
a0_0x3a609f.prototype.getAbilityInfo = function (_0xceb953) {
  var _0x27b556 = {
    abilName: "Slide on ice"
  };
  _0x27b556.abilImg = "skins/arctic/seal/" + this.animalSpecies + this.getSubSpecies() + "/seal1.png";
  _0x27b556.skinThemeID = this.skinThemeID;
  _0x27b556.mopeSeasonID = this.mopeSeasonID;
  return _0x27b556;
};
a0_0x3a609f.prototype.getSkinName = function () {
  return "arctic/seal/" + this.animalSpecies + this.getSubSpecies() + "/seal" + (this.specType == 0 ? "" : 1);
};
a0_0x3a609f.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x3a609f() {
  a0_0x3a609f.superClass.call(this, a0_0x1370b8);
}
window.Seal = a0_0x3a609f;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3a609f, a0_0x1370b8, a0_0x34beb5);
var a0_0x58d04c = a0_0x45645e;
a0_0x444d98.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x444d98.prototype.constructor = a0_0x444d98;
a0_0x444d98.superClass = a0_0x58d04c;
a0_0x444d98.prototype.animalInfo = function () {
  var _0x2df9dc = {};
  switch (this.animalSpecies) {
    case 0:
      switch (this.animalSubSpecies) {
        case 0:
          _0x2df9dc.aniName = "Walrus!";
          break;
        case 223:
          _0x2df9dc.aniName = "Valentine Walrus!";
          break;
      }
      break;
    case 100:
      _0x2df9dc.aniName = "Candy Rus!";
      break;
    case 111:
      _0x2df9dc.aniName = "Classic Walrus";
      break;
    case 112:
      _0x2df9dc.aniName = "Gold-trim Walrus";
      break;
    case 201:
      _0x2df9dc.aniName = "Walrusmelon!";
      break;
    case 202:
      _0x2df9dc.aniName = "Potato Walrus";
      break;
  }
  _0x2df9dc.skinName = this.getSkinName();
  _0x2df9dc.aniDesc = "";
  _0x2df9dc.upgradeText = "UPGRADED to " + _0x2df9dc.aniName + "\n You can slide on ice (Hold W) + can climb hills (rocks too!)";
  _0x2df9dc.aniCol = "#633838";
  return _0x2df9dc;
};
a0_0x444d98.prototype.getAbilityInfo = function (_0x63dd65) {
  var _0x300d9c = {
    abilName: "Slide on ice"
  };
  _0x300d9c.abilImg = "skins/arctic/walrus/" + this.animalSpecies + this.getSubSpecies() + "/walrus1.png";
  _0x300d9c.skinThemeID = this.skinThemeID;
  _0x300d9c.mopeSeasonID = this.mopeSeasonID;
  return _0x300d9c;
};
a0_0x444d98.prototype.getSkinName = function () {
  return "arctic/walrus/" + this.animalSpecies + this.getSubSpecies() + "/walrus" + (this.specType == 0 ? "" : 1);
};
a0_0x444d98.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x444d98() {
  a0_0x444d98.superClass.call(this, a0_0x1370b8);
}
window.Walrus = a0_0x444d98;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x444d98, a0_0x1370b8, a0_0x6e4e18);
var a0_0x58d04c = a0_0x45645e;
a0_0x57c1b0.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x57c1b0.prototype.constructor = a0_0x57c1b0;
a0_0x57c1b0.superClass = a0_0x58d04c;
a0_0x57c1b0.prototype.animalInfo = function () {
  var _0x25f570 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x25f570.aniName = "Wolf!";
      break;
    case 111:
      _0x25f570.aniName = "Classic Wolf";
      break;
    case 112:
      _0x25f570.aniName = "Gold-trim Wolf";
      break;
    case 201:
      _0x25f570.aniName = "Pineapple Wolf!";
      break;
    case 220:
      _0x25f570.aniName = "Okami Wolf";
      break;
  }
  _0x25f570.skinName = this.getSkinName();
  _0x25f570.upgradeText = "UPGRADED to " + _0x25f570.aniName + "\n Wolf paws turn very well on ice!\n Press W to howl!";
  _0x25f570.aniCol = "#6B6B6B";
  return _0x25f570;
};
a0_0x57c1b0.prototype.getAbilityInfo = function (_0x33c06e) {
  var _0x1adbfc = {
    abilName: "Howl!"
  };
  _0x1adbfc.abilImg = "skins/arctic/wolf/" + this.animalSpecies + this.getSubSpecies() + "/wolf1.png";
  _0x1adbfc.skinThemeID = this.skinThemeID;
  _0x1adbfc.mopeSeasonID = this.mopeSeasonID;
  return _0x1adbfc;
};
a0_0x57c1b0.prototype.getSkinName = function () {
  var _0x18587f = this.specType == 0 ? "" : 1;
  return "arctic/wolf/" + this.animalSpecies + this.getSubSpecies() + "/wolf" + _0x18587f;
};
a0_0x57c1b0.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x57c1b0() {
  a0_0x57c1b0.superClass.call(this, a0_0x1370b8);
}
window.Wolf = a0_0x57c1b0;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x57c1b0, a0_0x1370b8, a0_0x3bbebf);
var a0_0x58d04c = a0_0x45645e;
a0_0x1b2956.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1b2956.prototype.constructor = a0_0x1b2956;
a0_0x1b2956.superClass = a0_0x58d04c;
a0_0x1b2956.prototype.animalInfo = function () {
  var _0x4d6121 = {
    aniName: "Wolverine!"
  };
  switch (this.animalSpecies) {
    case 111:
      _0x4d6121.aniName = "Classic Wolverine";
      break;
    case 202:
      _0x4d6121.aniName = "Floral Wolverine";
      break;
    case 112:
      _0x4d6121.aniName = "Gold-trim Wolverine";
      break;
    case 220:
      _0x4d6121.aniName = "Summoner Wolverine";
      break;
  }
  _0x4d6121.skinName = this.getSkinName();
  _0x4d6121.upgradeText = "UPGRADED to " + _0x4d6121.aniName + "!\n Press W to Let out a Powerful GROWL! (Knocks back prey!)";
  _0x4d6121.aniCol = "#843A0F";
  return _0x4d6121;
};
a0_0x1b2956.prototype.getAbilityInfo = function (_0x3f44eb) {
  var _0x4a0063 = {
    abilName: "Roar!"
  };
  _0x4a0063.abilImg = "skins/arctic/wolverine/" + this.animalSpecies + this.getSubSpecies() + "/wolverine1.png";
  _0x4a0063.skinThemeID = this.skinThemeID;
  _0x4a0063.mopeSeasonID = this.mopeSeasonID;
  return _0x4a0063;
};
a0_0x1b2956.prototype.getSkinName = function () {
  return "arctic/wolverine/" + this.animalSpecies + this.getSubSpecies() + "/wolverine" + (this.specType == 0 ? "" : this.specType);
};
a0_0x1b2956.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x1b2956() {
  a0_0x1b2956.superClass.call(this, a0_0x1370b8);
}
window.Wolverine = a0_0x1b2956;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1b2956, a0_0x1370b8, a0_0x40cc4c);
var a0_0x58d04c = a0_0x45645e;
a0_0x21cfec.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x21cfec.prototype.constructor = a0_0x21cfec;
a0_0x21cfec.superClass = a0_0x58d04c;
a0_0x21cfec.prototype.animalInfo = function () {
  var _0x4d39f9 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x4d39f9.aniName = "Muskox!";
      break;
    case 111:
      _0x4d39f9.aniName = "Classic Muskox";
      break;
    case 112:
      _0x4d39f9.aniName = "Gold-trim Muskox";
      break;
    case 200:
      _0x4d39f9.aniName = "Brazen Bull!";
      break;
    case 201:
      _0x4d39f9.aniName = "Fireworks Ox!";
      break;
    case 202:
      _0x4d39f9.aniName = "Monitor Muskox";
      break;
  }
  _0x4d39f9.skinName = this.getSkinName();
  _0x4d39f9.aniDesc = "";
  _0x4d39f9.upgradeText = "UPGRADED to " + _0x4d39f9.aniName + "\n Press W to charge with your horns! \nPlus move decently on ice!";
  _0x4d39f9.aniCol = "#231f18";
  return _0x4d39f9;
};
a0_0x21cfec.prototype.getAbilityInfo = function (_0x45eb5c) {
  var _0x291fe6 = {
    abilName: "Charge!",
    abilImg: "skins/arctic/muskox/" + this.animalSpecies + "/muskox2.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x291fe6;
};
a0_0x21cfec.prototype.getSkinName = function () {
  return "arctic/muskox/" + this.animalSpecies + this.getSubSpecies() + "/muskox" + (this.flag_usingAbility ? "2" : "");
};
a0_0x21cfec.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x21cfec() {
  a0_0x21cfec.superClass.call(this, a0_0x1370b8);
}
window.Muskox = a0_0x21cfec;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x21cfec, a0_0x1370b8, a0_0x1f838c);
var a0_0x58d04c = a0_0x45645e;
a0_0x34a009.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x34a009.prototype.constructor = a0_0x34a009;
a0_0x34a009.superClass = a0_0x58d04c;
a0_0x34a009.prototype.animalInfo = function () {
  var _0x4bb951 = {};
  if (this.animalSpecies == 1) {
    _0x4bb951.aniName = "The Snowman";
    _0x4bb951.skinName = "arctic/snowman/" + this.animalSpecies + "/snowman";
  } else if (this.animalSpecies == 2) {
    _0x4bb951.aniName = "The Snowgirl";
    _0x4bb951.skinName = "arctic/snowman/" + this.animalSpecies + "/snowgirl";
  }
  _0x4bb951.aniDesc = "";
  _0x4bb951.upgradeText = "UPGRADED to " + _0x4bb951.aniName + "!\n So it really exists... \n Hold W to turn into snow, release W to freeeeeze!";
  _0x4bb951.aniCol = "#839eb5";
  return _0x4bb951;
};
a0_0x34a009.prototype.getAbilityInfo = function (_0x3412e6) {
  var _0x3e04a0 = {
    abilName: "Freeze Prey!",
    abilImg: "skins/arctic/snowman/" + this.animalSpecies + "/ability.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x3e04a0;
};
a0_0x34a009.prototype.getSkinName = function () {
  var _0x3405bf = "";
  if (this.animalSpecies == 2) {
    _0x3405bf = "arctic/snowman/" + this.animalSpecies + "/snowgirl";
  } else {
    _0x3405bf = "arctic/snowman/" + this.animalSpecies + "/snowman";
  }
  _0x3405bf += this.specType == 0 ? "" : 1;
  return _0x3405bf;
};
a0_0x34a009.prototype.drawUnderSkinTail = function (_0x2754fd) {
  if (!this.isCamouflage) {
    a0_0x34a009.superClass.prototype.drawUnderSkinTail.call(this, _0x2754fd);
  }
};
a0_0x34a009.prototype.drawHealthBar = function () {
  if (!this.isCamouflage) {
    a0_0x34a009.superClass.prototype.drawHealthBar.call(this);
  }
};
a0_0x34a009.prototype.isTransforming = false;
a0_0x34a009.prototype.isCamouflage = false;
a0_0x34a009.prototype.carrotAlpha = 0;
a0_0x34a009.prototype.getIdealOpacity = function () {
  var _0x47c18a = this.flag_underWater || this.flag_usingAbility && this.isTransforming || this.isCamouflage ? 0 : 1;
  return _0x47c18a;
};
a0_0x34a009.prototype.biteStart = 0;
a0_0x34a009.prototype.flapAmount = 3;
a0_0x34a009.prototype.flapDur = 1.5;
a0_0x34a009.prototype.roarStartT = -500;
a0_0x34a009.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility && this.isTransforming) {
    if (this.isTransforming) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 1;
      var _0x447da6 = this.getSkinImageObj("img/snowball.png");
      if (_0x447da6) {
        var _0x4341ef = this.rad;
        a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2);
        a0_0x4ef4f3.drawImage(_0x447da6, -_0x4341ef, -_0x4341ef, _0x4341ef * 2, _0x4341ef * 2);
      } else {
        this.drawOutlinedCircle("", "white");
      }
      a0_0x4ef4f3.restore();
    }
  } else {
    this.setSkinScale();
    if (!this.flag_usingAbility && !this.isCamouflage) {
      if (this.carrotAlpha > 0) {
        var _0x213972 = this.getSkinImageObj("skins/arctic/snowman/" + this.animalSpecies + "/carrot_nose.png");
        var _0x1e126d = this.skinScale;
        var _0x4341ef = this.skinRad;
        if (_0x213972) {
          a0_0x4ef4f3.save();
          var _0x4341ef = this.rad;
          a0_0x4ef4f3.globalAlpha = this.carrotAlpha;
          a0_0x4ef4f3.drawImage(_0x213972, -_0x4341ef * _0x1e126d, -_0x4341ef * _0x1e126d, _0x4341ef * 2 * _0x1e126d, _0x4341ef * 2 * _0x1e126d);
          a0_0x4ef4f3.restore();
        }
      }
      this.biteStart = 0;
      return;
    } else {
      if (this.biteStart == 0) {
        this.biteStart = a0_0x4f736f + this.roarStartT;
      }
      if (this.specType != 0 && this.specType != undefined) {
        var _0x4017cc = this.animalSpecies == 2 ? "snowgirl" : "snowman";
        var _0x4b7a9e = "skins/arctic/snowman/" + this.animalSpecies + "/" + _0x4017cc + "_head1.png";
        var _0x213972 = this.getSkinImageObj(_0x4b7a9e);
        var _0x561647 = (a0_0x4f736f - this.biteStart) / 1000;
        var _0x1e126d = this.skinScale * 1.07;
        var _0x4341ef = this.skinRad;
        if (_0x213972) {
          var _0x3c7ccf = 0;
          var _0x501dec = this.flapAmount - (this.animalSpecies == 1 ? 0.5 : 0);
          _0x3c7ccf = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x561647, this.flapDur, _0x501dec, 2) : this.flapAmount;
          a0_0x4ef4f3.save();
          var _0x4341ef = this.rad;
          a0_0x4ef4f3.drawImage(_0x213972, -_0x4341ef * _0x1e126d, (-_0x4341ef + _0x4341ef * 0.1) * _0x1e126d - _0x3c7ccf, _0x4341ef * 2 * _0x1e126d, _0x4341ef * 2 * _0x1e126d);
          a0_0x4ef4f3.restore();
        }
      }
    }
  }
};
a0_0x34a009.prototype.customUpdatedProperty = function (_0x23522a, _0x4deef9) {
  if (_0x23522a == a0_0x185bca) {
    this.isTransforming = _0x4deef9.readUInt8() == 1;
  } else if (_0x23522a == a0_0x44ec4c) {
    this.isCamouflage = _0x4deef9.readUInt8() == 1;
  } else if (_0x23522a == a0_0x417eac) {
    this.carrotAlpha = _0x4deef9.readUInt16() / 1000;
  } else if (_0x23522a == a0_0x1304ff) {
    this.lights = _0x4deef9.readUInt8();
  }
};
a0_0x34a009.prototype.readCustomData_onNewlyVisible = function (_0x464025) {
  a0_0x34a009.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x464025);
  this.isTransforming = _0x464025.readUInt8() == 1;
  this.isCamouflage = _0x464025.readUInt8() == 1;
  this.carrotAlpha = _0x464025.readUInt16() / 1000;
  this.lights = _0x464025.readUInt8();
};
function a0_0x34a009() {
  a0_0x34a009.superClass.call(this, a0_0x1370b8);
}
window.Snowman = a0_0x34a009;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x34a009, a0_0x1370b8, a0_0xb93d7c);
var a0_0x58d04c = a0_0x45645e;
a0_0x40d4b0.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x40d4b0.prototype.constructor = a0_0x40d4b0;
a0_0x40d4b0.superClass = a0_0x58d04c;
a0_0x40d4b0.prototype.updateZ = function () {
  this.z = this.rad;
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else if (this.flag_flying) {
    this.z = 100000;
    if (this.flag_isGrabbed) {
      this.z -= this.rad;
    }
  } else if (this.flag_canClimbHill) {
    this.z = 1003;
  } else {
    this.z = this.rad;
  }
};
a0_0x40d4b0.prototype.animalInfo = function () {
  var _0x1b5c2e = {
    aniName: "Markhor"
  };
  switch (this.animalSpecies) {
    case 204:
      switch (this.animalSubSpecies) {
        case 2:
          _0x1b5c2e.aniName = "Golden Devil Goat";
          break;
      }
      break;
    case 111:
      _0x1b5c2e.aniName = "Classic Markhor";
      break;
    case 112:
      _0x1b5c2e.aniName = "Gold-trim Markhor";
      break;
    case 201:
      switch (this.animalSubSpecies) {
        case 1:
          _0x1b5c2e.aniName = "Fruity Ice Markhor";
          break;
      }
      break;
    case 1:
      switch (this.animalSubSpecies) {
        case 0:
          _0x1b5c2e.aniName = "Markhor";
          break;
      }
      break;
    case 2:
      switch (this.animalSubSpecies) {
        case 0:
          _0x1b5c2e.aniName = "Big Goat";
      }
      break;
  }
  _0x1b5c2e.aniCol = "#FF9000";
  _0x1b5c2e.skinName = this.getSkinName();
  _0x1b5c2e.upgradeText = "UPGRADED to " + _0x1b5c2e.aniName + "!\nPress 'W' to Jump High from hills. Ram in the preys on land.";
  return _0x1b5c2e;
};
a0_0x40d4b0.prototype.moveF = 0.08;
a0_0x40d4b0.prototype.jumpAnim = null;
a0_0x40d4b0.prototype.frame = 0;
a0_0x40d4b0.prototype.getSkinImageObj = function (_0x3200e7) {
  var _0x15f10f = 1;
  return this.getSkinImageObjForSeason(_0x3200e7, _0x15f10f);
};
a0_0x40d4b0.prototype.getAbilityInfo = function (_0x22faad) {
  var _0x383511 = {};
  _0x383511.abilImg = "skins/" + this.getSpeciesPath("markhor") + "/ability.png";
  _0x383511.abilName = "Head Butt";
  _0x383511.skinThemeID = this.skinThemeID;
  _0x383511.mopeSeasonID = this.mopeSeasonID;
  return _0x383511;
};
a0_0x40d4b0.prototype.getSpeciesPath = function (_0x115824) {
  var _0x1a5304 = "/" + this.animalSubSpecies;
  return "arctic/" + _0x115824 + "/" + this.animalSpecies + _0x1a5304;
};
a0_0x40d4b0.prototype.moveF = 0.08;
a0_0x40d4b0.prototype.jumpAnim = null;
a0_0x40d4b0.prototype.frame = 0;
a0_0x40d4b0.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility && this.specType > 2) {
    var _0x57c3f8 = 1;
    if (this.jumpAnim == null) {
      this.jumpAnim = new a0_0x100d8b(this, 0.5, a0_0x100d8b.halfWave);
      this.jumpAnim.keepLastFrame = true;
      this.jumpAnim.loop = true;
      this.jumpAnim.onFrameEntered = function (_0x11454f) {
        this.forObj.frame = _0x11454f;
      };
      this.jumpAnim.onStop = function () {};
    }
    if (this.jumpAnim != null) {
      this.jumpAnim.run();
    }
    var _0x1d0335 = this.rad - this.outlineW;
    var _0x1b8ec6 = 500 / 340;
    this.setSkinScale();
    var _0xacac0c = "skins/" + this.getSpeciesPath("markhor") + "/front_legs.png";
    var _0x2d3e25 = "skins/" + this.getSpeciesPath("markhor") + "/back_legs.png";
    var _0x27645b = this.getSkinImageObj(_0xacac0c);
    var _0x629a2c = this.getSkinImageObj(_0x2d3e25);
    if (_0x27645b && _0x629a2c) {
      var _0x1b8ec6 = this.skinScale + this.skinScale * 0.15 * this.frame;
      var _0x1d0335 = this.skinRad;
      if (this.specType == 3) {
        a0_0x4ef4f3.drawImage(_0x27645b, -_0x1d0335 * _0x1b8ec6, -_0x1d0335 * _0x1b8ec6, _0x1d0335 * 2 * _0x1b8ec6, _0x1d0335 * 2 * _0x1b8ec6);
        a0_0x4ef4f3.drawImage(_0x629a2c, -_0x1d0335 * _0x1b8ec6, (-_0x1d0335 - _0x1d0335 * this.moveF * this.frame) * _0x1b8ec6, _0x1d0335 * 2 * _0x1b8ec6, _0x1d0335 * 2 * _0x1b8ec6);
      } else {
        a0_0x4ef4f3.drawImage(_0x629a2c, -_0x1d0335 * _0x1b8ec6, -_0x1d0335 * _0x1b8ec6, _0x1d0335 * 2 * _0x1b8ec6, _0x1d0335 * 2 * _0x1b8ec6);
        a0_0x4ef4f3.drawImage(_0x27645b, -_0x1d0335 * _0x1b8ec6, (-_0x1d0335 + _0x1d0335 * this.moveF * this.frame) * _0x1b8ec6, _0x1d0335 * 2 * _0x1b8ec6, _0x1d0335 * 2 * _0x1b8ec6);
      }
    }
  } else {
    this.jumpAnim = null;
  }
};
a0_0x40d4b0.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x35288b = 500 / 340;
  var _0x436b0e = 0.1;
  if (this.specType > 2) {
    _0x436b0e = this.frame * 0.2;
  }
  {
    var _0x4be2ef = this.getSkinImageObj(this.getHead("markhor", true));
    if (_0x4be2ef) {
      a0_0x4ef4f3.save();
      var _0x4f5d18 = this.rad;
      a0_0x4ef4f3.drawImage(_0x4be2ef, -_0x4f5d18 * _0x35288b, (-_0x4f5d18 + _0x4f5d18 * _0x436b0e) * _0x35288b, _0x4f5d18 * 2 * _0x35288b, _0x4f5d18 * 2 * _0x35288b);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x40d4b0.prototype.getHead = function (_0x3acd45, _0x7f812e) {
  var _0xd28b9d = "skins/" + (_0x7f812e ? this.getSpeciesPath(_0x3acd45) + "/" : _0x3acd45 + "/");
  _0xd28b9d += _0x3acd45 + "_head";
  if (this.specType == 2) {
    _0xd28b9d += "_charging";
  }
  _0xd28b9d += ".png";
  return _0xd28b9d;
};
a0_0x40d4b0.prototype.getSkinName = function () {
  var _0x3c1299 = this.getSpeciesPath("markhor") + "/markhor";
  _0x3c1299 += this.specType == 0 ? "" : 1;
  return _0x3c1299;
};
function a0_0x40d4b0() {
  a0_0x40d4b0.superClass.call(this, a0_0x1370b8);
}
window.Markhor = a0_0x40d4b0;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x40d4b0, a0_0x1370b8, a0_0x59b734);
var a0_0x58d04c = a0_0x45645e;
a0_0x2ad86d.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2ad86d.prototype.constructor = a0_0x2ad86d;
a0_0x2ad86d.superClass = a0_0x58d04c;
a0_0x2ad86d.prototype.animalInfo = function () {
  var _0x540542 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x540542.aniName = "Reindeer";
      break;
    case 1:
      _0x540542.aniName = "Musk Deer";
      break;
    case 111:
      _0x540542.aniName = "Classic Reindeer";
      break;
    case 112:
      _0x540542.aniName = "Gold-trim Reindeer";
      break;
    case 201:
      _0x540542.aniName = "Sunburn Reindeer";
      break;
    case 202:
      _0x540542.aniName = "Piebald Cosmos";
      break;
    case 204:
      _0x540542.aniName = "Spideer";
      break;
  }
  _0x540542.aniDesc = "";
  _0x540542.upgradeText = "UPGRADED to " + _0x540542.aniName + "!\n Press W to dig up food! \n Your sharp hooves let you turn very well on ice!";
  _0x540542.aniCol = "#a68976";
  _0x540542.skinName = this.getSkinName();
  return _0x540542;
};
a0_0x2ad86d.prototype.getAbilityInfo = function (_0x40ada0) {
  var _0x3b203f = {
    abilName: "Dig Food!"
  };
  _0x3b203f.abilImg = "skins/arctic/reindeer/" + this.animalSpecies + this.getSubSpecies() + "/reindeer.png";
  _0x3b203f.skinThemeID = this.skinThemeID;
  _0x3b203f.mopeSeasonID = this.mopeSeasonID;
  return _0x3b203f;
};
a0_0x2ad86d.prototype.getSkinName = function () {
  return "arctic/reindeer/" + this.animalSpecies + this.getSubSpecies() + "/reindeer";
};
a0_0x2ad86d.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x2ad86d() {
  a0_0x2ad86d.superClass.call(this, a0_0x1370b8);
}
window.Reindeer = a0_0x2ad86d;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2ad86d, a0_0x1370b8, a0_0x563df4);
var a0_0x58d04c = a0_0x45645e;
a0_0x3d0a11.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3d0a11.prototype.constructor = a0_0x3d0a11;
a0_0x3d0a11.superClass = a0_0x58d04c;
a0_0x3d0a11.prototype.getSkinName = function () {
  return this.getSpeciesPath("trex") + "/trex";
};
a0_0x3d0a11.prototype.animalInfo = function () {
  var _0x420599 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x420599.aniName = "The T.Rex";
      break;
    case 1:
      _0x420599.aniName = "Golden T.Rex";
      break;
    case 2:
      _0x420599.aniName = "Ember T.Rex";
      break;
    case 100:
      _0x420599.aniName = "Mr. Dollar";
      break;
    case 111:
      _0x420599.aniName = "Classic T.Rex";
      break;
    case 200:
      _0x420599.aniName = "Kaiju Rex";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x420599.aniName = "Hyporevenant Rex";
          break;
      }
      break;
    case 204:
      _0x420599.aniName = "Tartarus Rex";
      break;
    case 220:
      _0x420599.aniName = "Bio Mutant T-rex";
      break;
  }
  _0x420599.skinName = this.getSkinName();
  _0x420599.upgradeText = "UPGRADED to " + _0x420599.aniName + " The Dinosaur!\n This ancient dinosaur has powerful jaws that can drag prey around!!";
  _0x420599.aniCol = "#862A2A";
  return _0x420599;
};
a0_0x3d0a11.prototype.getSubSpecies = function () {
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x3d0a11.prototype.getSpeciesPath = function (_0x5b33e0) {
  return "land/" + _0x5b33e0 + "/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x3d0a11.prototype.getAbilityInfo = function (_0x4773fa) {
  var _0x8e8e17 = {
    abilName: "Jaws Bite"
  };
  _0x8e8e17.abilImg = "skins/" + this.getSkinName() + ".png";
  _0x8e8e17.skinThemeID = this.skinThemeID;
  _0x8e8e17.mopeSeasonID = this.mopeSeasonID;
  return _0x8e8e17;
};
a0_0x3d0a11.prototype.getAniRadius = function (_0x4be5f0) {
  return _0x4be5f0;
};
a0_0x3d0a11.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  var _0x46f665 = 1.5;
  var _0x2fa71d = this.skinScale;
  var _0x1e76d7 = this.getAniRadius(this.skinRad);
  if (this.loadedSkinImg) {
    var _0x3ab835 = _0x1e76d7 / 2;
    a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x1e76d7 - _0x3ab835 + _0x46f665, -_0x1e76d7 - _0x3ab835 + _0x46f665, _0x1e76d7 * 2 * _0x2fa71d, _0x1e76d7 * 2 * (_0x2fa71d * 1.2));
  }
};
function a0_0x3d0a11() {
  a0_0x3d0a11.superClass.call(this, a0_0x1370b8);
}
window.Trex = a0_0x3d0a11;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3d0a11, a0_0x1370b8, a0_0xbf4f2c);
var a0_0x58d04c = a0_0x45645e;
a0_0xa54cae.prototype = Object.create(a0_0x58d04c.prototype);
a0_0xa54cae.prototype.constructor = a0_0xa54cae;
a0_0xa54cae.superClass = a0_0x58d04c;
a0_0xa54cae.prototype.getSkinName = function () {
  var _0x5dd78b = "land/dragon/" + this.animalSpecies + "/" + this.animalSubSpecies + "/dragon";
  return _0x5dd78b;
};
a0_0xa54cae.prototype.animalInfo = function () {
  var _0x4edd16 = {};
  switch (this.animalSpecies) {
    case 0:
      switch (this.animalSubSpecies) {
        case 0:
          _0x4edd16.aniName = "Dragon!";
          break;
        case 2023:
          _0x4edd16.aniName = "Storm Dragon";
          break;
      }
      break;
    case 1:
      _0x4edd16.aniName = "Golden Dragon!";
      break;
    case 2:
      _0x4edd16.aniName = "Knight Dragon!";
      break;
    case 3:
      _0x4edd16.aniName = "Boss Dragon!";
      break;
    case 100:
      _0x4edd16.aniName = "The Gargon!";
      break;
    case 111:
      _0x4edd16.aniName = "Classic Dragon";
      break;
    case 202:
      _0x4edd16.aniName = "Aberrant Dragon";
      break;
    case 203:
      _0x4edd16.aniName = "Ghoul Dragon";
      break;
    case 204:
      _0x4edd16.aniName = "Magma Dragon!";
      break;
    case 200:
      switch (this.animalSubSpecies) {
        case 0:
          _0x4edd16.aniName = "Goofy Dragon!";
          break;
        case 1:
          _0x4edd16.aniName = "Desert Dragon!";
          break;
        case 2:
          _0x4edd16.aniName = "Forge Dragon!";
          break;
        case 3:
          _0x4edd16.aniName = "Mythical Serpent!";
          break;
        case 4:
          _0x4edd16.aniName = "Firey Dragon!";
          break;
      }
      break;
    case 201:
      _0x4edd16.aniName = "Squishy Dragon!";
      break;
    case 206:
      _0x4edd16.aniName = "AG Dragon!";
      break;
    case 220:
      _0x4edd16.aniName = "Behemoth Hive Dragon";
      break;
  }
  _0x4edd16.aniCol = "#FF9000";
  _0x4edd16.skinName = this.getSkinName();
  _0x4edd16.upgradeText = "UPGRADED to " + _0x4edd16.aniName + "\n (You're amazing!) \nFly over everything, Hold W to shoot fire!";
  _0x4edd16.aniCol = "#22FF8A";
  return _0x4edd16;
};
a0_0xa54cae.prototype.getAbilityInfo = function (_0x10acd7) {
  var _0x229b1e = {
    abilName: "Fire"
  };
  _0x229b1e.abilImg = this.getSkinName() + ".png";
  _0x229b1e.speciesType = this.animalSpecies == 1 ? 2 : 0;
  _0x229b1e.skinThemeID = this.skinThemeID;
  _0x229b1e.mopeSeasonID = this.mopeSeasonID;
  return _0x229b1e;
};
a0_0xa54cae.prototype.diveColor1 = "#64a034";
a0_0xa54cae.prototype.diveColor2 = "#598b30";
a0_0xa54cae.prototype.onAnimalSpeciesSet = function () {
  switch (this.animalSpecies) {
    case 1:
      this.diveColor1 = "#dbb300";
      this.diveColor2 = "#bf9d04";
      break;
    case 2:
      this.diveColor1 = "#79c9a8";
      this.diveColor2 = "#6fad9f";
      break;
  }
};
function a0_0xa54cae() {
  a0_0xa54cae.superClass.call(this, a0_0x1370b8);
}
window.Dragon = a0_0xa54cae;
a0_0xa5d548.setCustomClassForGameObjType(a0_0xa54cae, a0_0x1370b8, a0_0x256160);
var a0_0x58d04c = a0_0x45645e;
a0_0x508ee0.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x508ee0.prototype.constructor = a0_0x508ee0;
a0_0x508ee0.superClass = a0_0x58d04c;
a0_0x508ee0.prototype.animalInfo = function () {
  var _0x1c5eea = {
    skinName: "land/elephant/" + this.animalSpecies + "/elephant"
  };
  switch (this.animalSubSpecies) {
    case 0:
      _0x1c5eea.aniName = "Elephant!";
      break;
    case 2023:
      _0x1c5eea.aniName = "Carnival Elephant!";
      break;
    case 1:
      _0x1c5eea.aniName = "Golden Elephant!";
      break;
    case 2:
      _0x1c5eea.aniName = "Albino Elephant!";
      break;
    case 111:
      _0x1c5eea.aniName = "Classic Elephant!";
      break;
    case 201:
      _0x1c5eea.aniName = "Leiphant!";
      break;
    case 202:
      _0x1c5eea.aniName = "Ice Wizard Elephant";
      break;
    case 220:
      _0x1c5eea.aniName = "Lightwave Elephant";
      break;
  }
  _0x1c5eea.skinName = "land/elephant/" + this.animalSpecies + "/" + this.animalSubSpecies + "/elephant";
  _0x1c5eea.aniDesc = "";
  _0x1c5eea.upgradeText = "UPGRADED to " + _0x1c5eea.aniName + "\n Use your long trunk to attack and eat food!";
  _0x1c5eea.aniCol = "#945A99";
  return _0x1c5eea;
};
a0_0x508ee0.prototype.getAbilityInfo = function (_0x576cf6) {
  var _0x26a9d = {};
  _0x26a9d.abilImg = "skins/" + this.getSpeciesPath() + "/elephant.png";
  _0x26a9d.abilName = "Trunk Hit";
  _0x26a9d.skinThemeID = this.skinThemeID;
  _0x26a9d.mopeSeasonID = this.mopeSeasonID;
  return _0x26a9d;
};
a0_0x508ee0.prototype.getSkinName = function () {
  let _0x918b00 = this.getSpeciesPath() + "/elephant";
  _0x918b00 += this.specType == 0 ? "" : 1;
  return _0x918b00;
};
a0_0x508ee0.prototype.getSpeciesPath = function () {
  return "land/elephant/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x508ee0.prototype.getSubSpecies = function () {
  return "/" + this.animalSubSpecies;
};
function a0_0x508ee0() {
  a0_0x508ee0.superClass.call(this, a0_0x1370b8);
}
window.Elephant = a0_0x508ee0;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x508ee0, a0_0x1370b8, a0_0x4efb3c);
var a0_0x58d04c = a0_0x45645e;
a0_0x295474.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x295474.prototype.constructor = a0_0x295474;
a0_0x295474.superClass = a0_0x58d04c;
a0_0x295474.prototype.animalInfo = function () {
  var _0x51bc1b = {};
  switch (this.animalSpecies) {
    case 0:
      _0x51bc1b.aniName = "Hippo!";
      break;
    case 1:
      _0x51bc1b.aniName = "Golden Hippo!";
      break;
    case 2:
      _0x51bc1b.aniName = "Pygmy Hippo!";
      break;
    case 100:
      _0x51bc1b.aniName = "Swampster!";
      break;
    case 111:
      _0x51bc1b.aniName = "Classic Hippo";
      break;
    case 202:
      _0x51bc1b.aniName = "Planet Hippo";
      break;
    case 204:
      _0x51bc1b.aniName = "Sun Hippo!";
      break;
  }
  _0x51bc1b.skinName = this.getSkinName();
  _0x51bc1b.upgradeText = "UPGRADED to " + _0x51bc1b.aniName + "!\nHippos are great swimmers, dominate the Lakes/Oceans/Mud!";
  _0x51bc1b.aniCol = "#945A99";
  return _0x51bc1b;
};
a0_0x295474.prototype.getAbilityInfo = function (_0x3b42fa) {
  var _0x2b3d0e = {
    abilName: "Loud Grown!"
  };
  _0x2b3d0e.abilImg = "skins/" + this.getSpeciesPath() + "/hippo1.png";
  _0x2b3d0e.skinThemeID = this.skinThemeID;
  _0x2b3d0e.mopeSeasonID = this.mopeSeasonID;
  return _0x2b3d0e;
};
a0_0x295474.prototype.getSkinName = function () {
  let _0x14ae24 = this.getSpeciesPath() + "/hippo";
  _0x14ae24 += this.specType == 0 ? "" : 1;
  return _0x14ae24;
};
a0_0x295474.prototype.getSpeciesPath = function () {
  return "land/hippo/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x295474.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x295474() {
  a0_0x295474.superClass.call(this, a0_0x1370b8);
}
window.Hippo = a0_0x295474;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x295474, a0_0x1370b8, a0_0x93d1ea);
var a0_0x58d04c = a0_0x45645e;
a0_0x230f21.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x230f21.prototype.constructor = a0_0x230f21;
a0_0x230f21.superClass = a0_0x58d04c;
a0_0x230f21.prototype.animalInfo = function () {
  var _0x111ad3 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x111ad3.aniName = "Giant Spider!";
      break;
    case 1:
      _0x111ad3.aniName = "Golden Spider!";
      break;
    case 2:
      _0x111ad3.aniName = "Goliath Spider!";
      break;
    case 111:
      _0x111ad3.aniName = "Classic Giant Spider";
      break;
    case 202:
      _0x111ad3.aniName = "Sapphire Cave Spider";
      break;
    case 204:
      _0x111ad3.aniName = "Smile Spider!";
      break;
  }
  _0x111ad3.skinName = this.getSkinName();
  _0x111ad3.upgradeText = "UPGRADED to " + _0x111ad3.aniName + "!\n Place web around the game to catch prey!";
  _0x111ad3.aniCol = "black";
  return _0x111ad3;
};
a0_0x230f21.prototype.getAbilityInfo = function (_0x250654) {
  var _0x496f1d = {
    abilName: "Spin Web!",
    abilImg: "skins/land/giantspider/spiderweb.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x496f1d;
};
a0_0x230f21.prototype.getSkinName = function () {
  let _0x534f54 = this.getSpeciesPath() + "/giantspider";
  return _0x534f54;
};
a0_0x230f21.prototype.getSpeciesPath = function () {
  return "land/giantspider/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x230f21.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x230f21() {
  a0_0x230f21.superClass.call(this, a0_0x1370b8);
}
window.GiantSpider = a0_0x230f21;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x230f21, a0_0x1370b8, a0_0x252dcd);
var a0_0x58d04c = a0_0x45645e;
a0_0x50c46a.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x50c46a.prototype.constructor = a0_0x50c46a;
a0_0x50c46a.superClass = a0_0x58d04c;
a0_0x50c46a.prototype.animalInfo = function () {
  var _0x2de04b = {};
  switch (this.animalSpecies) {
    case 0:
      _0x2de04b.aniName = "Boa Constrictor!";
      break;
    case 1:
      _0x2de04b.aniName = "Golden Boa!";
      break;
    case 2:
      _0x2de04b.aniName = "Tree Boa!";
      break;
    case 111:
      _0x2de04b.aniName = "Classic Boa";
      break;
  }
  _0x2de04b.skinName = this.getSkinName();
  _0x2de04b.aniDesc = "";
  _0x2de04b.upgradeText = "UPGRADED to " + _0x2de04b.aniName + "!\n Coil and suffocate other animals!";
  _0x2de04b.aniCol = "black";
  return _0x2de04b;
};
a0_0x50c46a.prototype.getSkinName = function () {
  let _0x37269d = this.getSpeciesPath() + "/boaconstrictor";
  return _0x37269d;
};
a0_0x50c46a.prototype.getSpeciesPath = function () {
  return "land/boaconstrictor/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x50c46a.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x50c46a.prototype.getAbilityInfo = function (_0x463b30) {
  var _0x44b026 = {
    abilName: "Suffocate prey"
  };
  _0x44b026.abilImg = "skins/" + this.getSpeciesPath() + "/constrict.png";
  _0x44b026.skinThemeID = this.skinThemeID;
  _0x44b026.mopeSeasonID = this.mopeSeasonID;
  return _0x44b026;
};
a0_0x50c46a.prototype.getSkinName = function () {
  var _0x439242 = this.getSpeciesPath("boaconstrictor") + "/boaconstrictor";
  if (this.flag_usingAbility && this.specType == 1) {
    _0x439242 += "2";
  } else {
    _0x439242 += this.specType == 0 ? "" : 1;
  }
  return _0x439242;
};
a0_0x50c46a.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility) {
    return;
  }
  var _0x4cdf1a = this.rad - this.outlineW;
  var _0x58f4b4 = 500 / 340;
  var _0x7ba255 = this.getSkinImageObj("skins/" + this.getSpeciesPath("boaconstrictor") + "/tongue.png");
  var _0x12b2ae = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x34edfd = a0_0x1d703e == a0_0x30b084 ? 0 : a0_0xe2d896(_0x12b2ae, 0.5, 5, 0.5);
  var _0x149cda = a0_0x1d703e == a0_0x30b084 ? 0 : 5;
  if (_0x7ba255) {
    a0_0x4ef4f3.drawImage(_0x7ba255, -_0x4cdf1a * _0x58f4b4, -(_0x4cdf1a + _0x149cda + _0x34edfd) * _0x58f4b4, _0x4cdf1a * 2 * _0x58f4b4, _0x4cdf1a * 2 * _0x58f4b4);
  }
};
a0_0x50c46a.prototype.getSkinImageObj = function (_0x2a4967) {
  var _0xd6eb3f = this.animalSpecies === 1 || this.animalSpecies === 2 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x2a4967, _0xd6eb3f);
};
function a0_0x50c46a() {
  a0_0x50c46a.superClass.call(this, a0_0x1370b8);
}
window.BoaConstrictor = a0_0x50c46a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x50c46a, a0_0x1370b8, a0_0xbfada);
var a0_0x58d04c = a0_0x45645e;
a0_0x4ac30b.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4ac30b.prototype.constructor = a0_0x4ac30b;
a0_0x4ac30b.superClass = a0_0x58d04c;
a0_0x4ac30b.prototype.animalInfo = function () {
  var _0x2e1d3e = {
    aniName: "Gorilla!"
  };
  switch (this.animalSubSpecies) {
    case 0:
      switch (this.animalSpecies) {
        case 111:
          _0x2e1d3e.aniName = "Classic Gorilla";
          break;
        case 112:
          _0x2e1d3e.aniName = "Gold-trim Gorilla";
          break;
      }
      break;
    case 2023:
      _0x2e1d3e.aniName = "Mafia Gorilla";
      break;
    case 100:
      _0x2e1d3e.aniName = "Grim Reaper";
      break;
    case 201:
      _0x2e1d3e.aniName = "Explorer Ape";
      break;
    case 202:
      _0x2e1d3e.aniName = "Kongrilla";
      break;
    case 223:
      _0x2e1d3e.aniName = "Valentine Gorilla";
      break;
    case 204:
      _0x2e1d3e.aniName = "Phantom Gorilla";
      break;
  }
  _0x2e1d3e.skinName = this.getSkinName();
  _0x2e1d3e.upgradeText = "UPGRADED to " + _0x2e1d3e.aniName + "!\n" + _0x2e1d3e.aniName + "s are great swimmers, dominate the Lakes/Oceans/Mud!";
  _0x2e1d3e.aniCol = "#945A99";
  return _0x2e1d3e;
};
a0_0x4ac30b.prototype.getAbilityInfo = function (_0x5a705e) {
  var _0x41ce9a = {
    abilName: "Fruit Throw!"
  };
  _0x41ce9a.abilImg = "skins/" + this.getSpeciesPath() + "/gorilla.png";
  _0x41ce9a.skinThemeID = this.skinThemeID;
  _0x41ce9a.mopeSeasonID = this.mopeSeasonID;
  return _0x41ce9a;
};
a0_0x4ac30b.prototype.getSkinName = function () {
  let _0x8c4f3 = this.getSpeciesPath() + "/gorilla";
  return _0x8c4f3;
};
a0_0x4ac30b.prototype.getSpeciesPath = function () {
  return "land/gorilla/" + this.animalSpecies + "/" + this.animalSubSpecies;
};
a0_0x4ac30b.prototype.drawSkinCustomization = function () {
  this.setSkinScale();
  if (this.animalSubSpecies == 204) {
    var _0x26cad8 = "skins/" + this.getSpeciesPath();
    var _0x3b3d1b = this.skinScale * 1.07;
    var _0xf391f3 = this.skinRad;
    var _0x3c555c = 1 + Math.trunc(a0_0x4f736f / 120) % 7;
    var _0x5aeb19 = this.getSkinImageObj(_0x26cad8 + "/gorilla_head.png");
    if (_0x5aeb19) {
      var _0x3f64e6 = 0;
      var _0x4a55bf = this.getSkinImageObj(_0x26cad8 + "/fire" + _0x3c555c + ".png");
      if (_0x4a55bf) {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.drawImage(_0x4a55bf, -_0xf391f3 * _0x3b3d1b, (-_0xf391f3 + _0xf391f3 * 0.05) * _0x3b3d1b - _0x3f64e6, _0xf391f3 * 2 * _0x3b3d1b, _0xf391f3 * 2 * _0x3b3d1b);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.save();
      var _0xf391f3 = this.rad;
      a0_0x4ef4f3.drawImage(_0x5aeb19, -_0xf391f3 * _0x3b3d1b, (-_0xf391f3 + _0xf391f3 * 0.05) * _0x3b3d1b - _0x3f64e6, _0xf391f3 * 2 * _0x3b3d1b, _0xf391f3 * 2 * _0x3b3d1b);
      a0_0x4ef4f3.restore();
    }
  }
};
function a0_0x4ac30b() {
  a0_0x4ac30b.superClass.call(this, a0_0x1370b8);
}
window.Gorilla = a0_0x4ac30b;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4ac30b, a0_0x1370b8, a0_0x18ddf3);
var a0_0x58d04c = a0_0x45645e;
a0_0x3aa55c.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3aa55c.prototype.constructor = a0_0x3aa55c;
a0_0x3aa55c.superClass = a0_0x58d04c;
a0_0x3aa55c.prototype.animalInfo = function () {
  var _0x2d270c = {};
  switch (this.animalSpecies) {
    case 0:
      switch (this.animalSubSpecies) {
        case 0:
          _0x2d270c.aniName = "The Kraken!";
          break;
        case 2023:
          _0x2d270c.aniName = " Beach Battle Kraken!";
          break;
      }
      break;
    case 1:
      _0x2d270c.aniName = "Golden Kraken!";
      break;
    case 2:
      _0x2d270c.aniName = "Chromatic Kraken!";
      break;
    case 111:
      _0x2d270c.aniName = "Classic Kraken";
      break;
    case 201:
      _0x2d270c.aniName = "Squishy Kraken!";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x2d270c.aniName = "Giant Squid";
          break;
        case 1:
          _0x2d270c.aniName = "Hydrothoth Kraken";
          break;
      }
      break;
    case 204:
      _0x2d270c.aniName = "Cthulhu Kraken!";
      break;
    case 220:
      _0x2d270c.aniName = "Dr. Brainiopod";
      break;
    case 222:
      _0x2d270c.aniName = "Gingerbread Kraken";
      break;
  }
  _0x2d270c.aniCol = "#FF9000";
  _0x2d270c.skinName = this.getSkinName();
  _0x2d270c.upgradeText = "UPGRADED to THE " + _0x2d270c.aniName + "!\n Terrorize the oceans, and be feared by all!\n (Release W to use whirlpool ability!)";
  _0x2d270c.aniCol = "#64a034";
  return _0x2d270c;
};
a0_0x3aa55c.prototype.getSkinName = function () {
  return this.getSpeciesPath("kraken") + "/kraken";
};
a0_0x3aa55c.prototype.getSubSpecies = function () {
  if (this.animalSpecies === 202 || this.animalSpecies === 0) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x3aa55c.prototype.getSpeciesPath = function (_0x1ffcbd) {
  return "ocean/" + _0x1ffcbd + "/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x3aa55c.prototype.getAbilityInfo = function (_0x299c18) {
  var _0x26b67d = {
    abilName: "Whirlpool"
  };
  _0x26b67d.abilImg = "skins/" + this.getSpeciesPath() + "/kraken.png";
  _0x26b67d.skinThemeID = this.skinThemeID;
  _0x26b67d.mopeSeasonID = this.mopeSeasonID;
  return _0x26b67d;
};
a0_0x3aa55c.prototype.diveColor1 = "#64a034";
a0_0x3aa55c.prototype.diveColor2 = "#598b30";
a0_0x3aa55c.prototype.onAnimalSpeciesSet = function () {
  switch (this.animalSpecies) {
    case 1:
      this.diveColor1 = "#dbb300";
      this.diveColor2 = "#bf9d04";
      break;
    case 2:
      this.diveColor1 = "#79c9a8";
      this.diveColor2 = "#6fad9f";
      break;
  }
};
function a0_0x3aa55c() {
  a0_0x3aa55c.superClass.call(this, a0_0x1370b8);
}
window.Kraken = a0_0x3aa55c;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3aa55c, a0_0x1370b8, a0_0x4e6cde);
var a0_0x58d04c = a0_0x45645e;
a0_0xbd3209.prototype = Object.create(a0_0x58d04c.prototype);
a0_0xbd3209.prototype.constructor = a0_0xbd3209;
a0_0xbd3209.superClass = a0_0x58d04c;
a0_0xbd3209.prototype.animalInfo = function () {
  var _0x458a97 = {};
  switch (this.animalSubSpecies) {
    case 0:
      _0x458a97.aniName = "Bluewhale!";
      break;
    case 1:
      _0x458a97.aniName = "Golden Whale!";
      break;
    case 2:
      _0x458a97.aniName = "Albino Whale!";
      break;
    case 201:
      _0x458a97.aniName = "Mermaid Whale!";
      break;
    case 202:
      _0x458a97.aniName = "Whale Boat";
      break;
    case 111:
      _0x458a97.aniName = "Classic Blue Whale";
      break;
    case 203:
      _0x458a97.aniName = "Ancient Island Monster";
      break;
    case 220:
      _0x458a97.aniName = "Sailor Whale";
      break;
    case 223:
      _0x458a97.aniName = "Valentine Whale";
      break;
    case 2023:
      _0x458a97.aniName = "Molten Frost Whale";
      break;
  }
  _0x458a97.skinName = this.getSkinName();
  _0x458a97.aniDesc = "";
  _0x458a97.upgradeText = "UPGRADED to " + _0x458a97.aniName + "\n Smash with your powerful tail!";
  _0x458a97.aniCol = "#945A99";
  return _0x458a97;
};
a0_0xbd3209.prototype.getSkinName = function () {
  return this.getSpeciesPath() + "/bluewhale" + (this.specType == 0 ? "" : this.specType);
};
a0_0xbd3209.prototype.getSpeciesPath = function () {
  return "ocean/bluewhale/" + this.animalSpecies + "/" + this.animalSubSpecies;
};
a0_0xbd3209.prototype.getAbilityInfo = function (_0x3230fe) {
  var _0x3dd258 = {
    abilName: "Tail Slap"
  };
  _0x3dd258.abilImg = "skins/" + this.getSpeciesPath() + "/ability_whaleTailHit.png";
  _0x3dd258.skinThemeID = this.skinThemeID;
  _0x3dd258.mopeSeasonID = this.mopeSeasonID;
  return _0x3dd258;
};
function a0_0xbd3209() {
  a0_0xbd3209.superClass.call(this, a0_0x1370b8);
}
window.Bluewhale = a0_0xbd3209;
a0_0xa5d548.setCustomClassForGameObjType(a0_0xbd3209, a0_0x1370b8, a0_0x1132a8);
var a0_0x58d04c = a0_0x45645e;
a0_0x1a1d92.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1a1d92.prototype.constructor = a0_0x1a1d92;
a0_0x1a1d92.superClass = a0_0x58d04c;
a0_0x1a1d92.prototype.animalInfo = function () {
  var _0x59bb95 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x59bb95.aniName = "King Crab!";
      break;
    case 1:
      _0x59bb95.aniName = "Golden Crab!";
      break;
    case 2:
      _0x59bb95.aniName = "Amethyst Crab!";
      break;
    case 111:
      _0x59bb95.aniName = "Classic King Crab!";
      break;
    case 202:
      _0x59bb95.aniName = "Abyssal King Crab";
      break;
    case 204:
      _0x59bb95.aniName = "Plasma-core King Crab!";
      break;
    case 220:
      _0x59bb95.aniName = "Star Crusher Crab";
      break;
  }
  _0x59bb95.skinName = "ocean/kingcrab/" + this.animalSpecies + "/kingcrab";
  _0x59bb95.aniDesc = "";
  _0x59bb95.upgradeText = "UPGRADED to " + _0x59bb95.aniName + "!\n Use your powerful arms to smack your prey!";
  _0x59bb95.aniCol = "#971f0e";
  return _0x59bb95;
};
a0_0x1a1d92.prototype.getSkinImageObj = function (_0x17ec7a) {
  var _0x11d8eb = this.mopeSeasonID;
  var _0x4d0d8c = "./assets/s/" + _0x11d8eb + "/" + _0x17ec7a;
  if (this.skinThemeID > 0) {
    _0x4d0d8c = "./assets/t/" + this.skinThemeID + "/" + _0x17ec7a;
  }
  return a0_0x2cc313(_0x4d0d8c, function (_0x2e7d2b) {
    console.log(_0x2e7d2b.src);
  });
};
a0_0x1a1d92.prototype.getAbilityInfo = function (_0x5cebcc) {
  var _0xfab8b7 = {
    abilName: "Arm Smash",
    abilImg: "skins/ocean/kingcrab/" + this.animalSpecies + "/ability_crabSmashSkin.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0xfab8b7;
};
a0_0x1a1d92.prototype.getSkinName = function () {
  return "ocean/kingcrab/" + this.animalSpecies + "/kingcrab";
};
function a0_0x1a1d92() {
  a0_0x1a1d92.superClass.call(this, a0_0x1370b8);
}
window.KingCrab = a0_0x1a1d92;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1a1d92, a0_0x1370b8, a0_0x5f3a6f);
var a0_0x58d04c = a0_0x45645e;
a0_0x2d1771.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2d1771.prototype.constructor = a0_0x2d1771;
a0_0x2d1771.superClass = a0_0x58d04c;
a0_0x2d1771.prototype.animalInfo = function () {
  var _0xf1f63c = {};
  switch (this.animalSpecies) {
    case 0:
      _0xf1f63c.aniName = "Killerwhale!";
      break;
    case 1:
      _0xf1f63c.aniName = "Golden Orca!";
      break;
    case 2:
      _0xf1f63c.aniName = "Albino Orca!";
      break;
    case 111:
      _0xf1f63c.aniName = "Classic Killerwhale!";
      break;
    case 201:
      _0xf1f63c.aniName = "Lifeguard Orca!";
      break;
    case 202:
      _0xf1f63c.aniName = "Sea Angel Orca";
      break;
  }
  _0xf1f63c.skinName = this.getSkinName();
  _0xf1f63c.aniDesc = "";
  _0xf1f63c.upgradeText = "UPGRADED to " + _0xf1f63c.aniName + "\nWhales blow out water when diving! (And sometimes other loot!)";
  _0xf1f63c.aniCol = "#141414";
  return _0xf1f63c;
};
a0_0x2d1771.prototype.getAbilityInfo = function (_0x49ef22) {
  var _0x430dc6 = {
    abilName: "Cause Wave"
  };
  _0x430dc6.abilImg = "skins/" + this.getSpeciesPath() + "/killerwhale.png";
  _0x430dc6.skinThemeID = this.skinThemeID;
  _0x430dc6.mopeSeasonID = this.mopeSeasonID;
  return _0x430dc6;
};
a0_0x2d1771.prototype.getSkinName = function () {
  let _0x57e3f2 = this.getSpeciesPath() + "/killerwhale";
  _0x57e3f2 += this.specType == 0 ? "" : 1;
  return _0x57e3f2;
};
a0_0x2d1771.prototype.getSpeciesPath = function () {
  return "ocean/killerwhale/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x2d1771.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x2d1771() {
  a0_0x2d1771.superClass.call(this, a0_0x1370b8);
}
window.Killerwhale = a0_0x2d1771;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2d1771, a0_0x1370b8, a0_0x434da0);
var a0_0x58d04c = a0_0x45645e;
a0_0x35999a.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x35999a.prototype.constructor = a0_0x35999a;
a0_0x35999a.superClass = a0_0x58d04c;
a0_0x35999a.prototype.animalInfo = function () {
  var _0x577137 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x577137.aniName = "Jellyfish";
      break;
    case 111:
      _0x577137.aniName = "Classic Jellyfish";
      break;
    case 112:
      _0x577137.aniName = "Gold-trim Jellyfish";
      break;
    case 201:
      _0x577137.aniName = "Seafoam Jellyfish";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x577137.aniName = "Disco Jellyfish";
          break;
        case 1:
          _0x577137.aniName = "Twisted Horror";
      }
      break;
  }
  _0x577137.skinName = this.getSkinName();
  _0x577137.aniDesc = "";
  _0x577137.upgradeText = "UPGRADED to " + _0x577137.aniName + "!\n A slowly-turning animal that can grow quite large!";
  _0x577137.aniCol = "#FDB9BA";
  return _0x577137;
};
a0_0x35999a.prototype.getAbilityInfo = function (_0x19c157) {
  var _0x21b67b = {
    abilName: "Touch prey to sting!"
  };
  _0x21b67b.abilImg = "skins/" + this.getSpeciesPath() + "/jellyfish.png";
  _0x21b67b.isPassive = true;
  _0x21b67b.skinThemeID = this.skinThemeID;
  _0x21b67b.mopeSeasonID = this.mopeSeasonID;
  return _0x21b67b;
};
a0_0x35999a.prototype.getSkinName = function () {
  let _0x22872a = this.getSpeciesPath() + "/jellyfish";
  return _0x22872a;
};
a0_0x35999a.prototype.getSpeciesPath = function () {
  return "ocean/jellyfish/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x35999a.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x35999a.prototype.getSkinImageObj = function (_0x28d8d5) {
  var _0xba8c4a = this.animalSpecies === 201 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x28d8d5, _0xba8c4a);
};
a0_0x35999a.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  var _0x47f5f7 = -0;
  var _0x218541 = -0.3;
  var _0x535c6b = 1;
  if (this.animalSpecies == 201) {
    _0x218541 = -0.3;
    _0x535c6b = 1.05;
  }
  var _0x87340f = this.skinScale * _0x535c6b;
  var _0x76f662 = this.skinRad;
  if (this.loadedSkinImg) {
    a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x76f662 * _0x87340f + _0x76f662 * _0x47f5f7, -_0x76f662 * _0x87340f + _0x76f662 * _0x218541, _0x76f662 * 2 * _0x87340f, _0x76f662 * 2 * _0x87340f * 1.2);
  }
  if (this.animalSpecies == 202) {
    if (a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea) {
      var _0xcc9e25 = Math.trunc(a0_0x4f736f / 500) % 2;
      if (_0xcc9e25 == 1) {
        var _0x2931d7 = this.getSkinImageObj("skins/" + this.getSkinName() + "_shine.png");
        if (_0x2931d7) {
          a0_0x4ef4f3.drawImage(_0x2931d7, -_0x76f662 * _0x87340f + _0x76f662 * _0x47f5f7, -_0x76f662 * _0x87340f + _0x76f662 * _0x218541, _0x76f662 * 2 * _0x87340f, _0x76f662 * 2 * (_0x87340f * 1.2));
        }
      }
    }
  }
};
function a0_0x35999a() {
  a0_0x35999a.superClass.call(this, a0_0x1370b8);
}
window.Jellyfish = a0_0x35999a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x35999a, a0_0x1370b8, a0_0x574c01);
var a0_0x58d04c = a0_0x45645e;
a0_0x1fda1e.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1fda1e.prototype.constructor = a0_0x1fda1e;
a0_0x1fda1e.superClass = a0_0x58d04c;
a0_0x1fda1e.prototype.animalInfo = function () {
  var _0x51982b = {};
  switch (this.animalSpecies) {
    case 0:
      _0x51982b.aniName = "Stingray!";
      break;
    case 100:
      _0x51982b.aniName = "Phantom Ray!";
      break;
    case 111:
      _0x51982b.aniName = "Classic Stingray";
      break;
    case 112:
      _0x51982b.aniName = "Gold-trim Stingray";
      break;
    case 201:
      _0x51982b.aniName = "Chocolate Ray!";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x51982b.aniName = "Ether Stingray";
          break;
        case 1:
          _0x51982b.aniName = "Pancake Stingray";
      }
      break;
  }
  _0x51982b.skinName = this.getSkinName();
  _0x51982b.upgradeText = "UPGRADED to " + _0x51982b.aniName + "\n Use electic shock (Release W key!) to shock animals! \n(Takes time to recharge)";
  _0x51982b.aniCol = "#164336";
  return _0x51982b;
};
a0_0x1fda1e.prototype.getAbilityInfo = function (_0x2576f4) {
  var _0x53f3e0 = {
    abilName: "Shock!"
  };
  _0x53f3e0.abilImg = "skins/" + this.getSpeciesPath() + "/ability.png";
  _0x53f3e0.skinThemeID = this.skinThemeID;
  _0x53f3e0.mopeSeasonID = this.mopeSeasonID;
  return _0x53f3e0;
};
a0_0x1fda1e.prototype.getSkinName = function () {
  let _0xaef4d9 = this.getSpeciesPath() + "/stingray";
  return _0xaef4d9;
};
a0_0x1fda1e.prototype.getSpeciesPath = function () {
  return "ocean/stingray/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x1fda1e.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x1fda1e.prototype.drawUnderSkinImg = function () {
  var _0x4615ef = 1.245;
  var _0x1e5472 = 1.2;
  var _0x18c87d = 0.8;
  var _0x59dd37 = 500 / 340;
  var _0x1d1627 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/tail.png");
  if (_0x1d1627) {
    a0_0x4ef4f3.save();
    var _0x436299 = this.rad - this.outlineW;
    a0_0x4ef4f3.drawImage(_0x1d1627, -_0x436299 * _0x59dd37, -_0x436299 * _0x4615ef * _0x59dd37, _0x436299 * 2 * _0x59dd37, _0x436299 * 2 * _0x59dd37);
    a0_0x4ef4f3.restore();
  }
  if (this.animalSpecies == 100) {
    var _0x521672 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x3f00df = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x521672, 5, 1, 1) : this.birdNoAnimationFlyWingAngle;
    var _0x1d1627 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/tail2.png");
    if (_0x1d1627) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = Math.max(0, _0x3f00df);
      var _0x436299 = this.rad - this.outlineW;
      a0_0x4ef4f3.drawImage(_0x1d1627, -_0x436299 * _0x59dd37, -_0x436299 * _0x4615ef * _0x59dd37, _0x436299 * 2 * _0x59dd37, _0x436299 * 2 * _0x59dd37);
      a0_0x4ef4f3.restore();
    }
    return;
  }
  var _0x1d1627 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/leftwing.png");
  if (_0x1d1627) {
    a0_0x4ef4f3.save();
    var _0x3c4528 = 1;
    var _0x436299 = this.rad - this.outlineW;
    a0_0x4ef4f3.drawImage(_0x1d1627, -_0x436299 * _0x1e5472 * _0x59dd37, -_0x436299 * _0x59dd37, _0x436299 * 2 * _0x59dd37, _0x436299 * 2 * _0x59dd37);
    a0_0x4ef4f3.restore();
  }
  var _0x1d1627 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/rightwing.png");
  if (_0x1d1627) {
    a0_0x4ef4f3.save();
    var _0x3c4528 = 1;
    var _0x436299 = this.rad - this.outlineW;
    a0_0x4ef4f3.drawImage(_0x1d1627, -_0x436299 * _0x18c87d * _0x59dd37, -_0x436299 * _0x59dd37, _0x436299 * 2 * _0x59dd37, _0x436299 * 2 * _0x59dd37);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x1fda1e() {
  a0_0x1fda1e.superClass.call(this, a0_0x1370b8);
}
window.Stingray = a0_0x1fda1e;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1fda1e, a0_0x1370b8, a0_0x56d530);
var a0_0x58d04c = a0_0x45645e;
a0_0x568dbc.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x568dbc.prototype.constructor = a0_0x568dbc;
a0_0x568dbc.superClass = a0_0x58d04c;
a0_0x568dbc.prototype.animalInfo = function () {
  var _0x133f61 = {
    aniName: "Puffer Fish"
  };
  switch (this.animalSpecies) {
    case 2:
      _0x133f61.aniName = "Demon Fish";
      break;
    case 100:
      _0x133f61.aniName = "Puffermace";
      break;
    case 111:
      _0x133f61.aniName = "Classic Pufferfish";
      break;
    case 112:
      _0x133f61.aniName = "Gold-trim Pufferfish";
      break;
    case 201:
      _0x133f61.aniName = "Omniball Puffer";
      break;
    case 202:
      _0x133f61.aniName = "Balloon Pufferfish";
      break;
  }
  _0x133f61.skinName = this.getSkinName();
  _0x133f61.aniDesc = "";
  _0x133f61.upgradeText = "UPGRADED to " + _0x133f61.aniName + "!\n(Hold W to inflate - become spiky, and dangerous to touch!)";
  _0x133f61.aniCol = "#94a3a9";
  return _0x133f61;
};
a0_0x568dbc.prototype.getAbilityInfo = function (_0x42e941) {
  var _0x28a7be = {
    abilName: "Puff!"
  };
  _0x28a7be.abilImg = "skins/" + this.getSpeciesPath() + "/pufferfish2.png";
  _0x28a7be.skinThemeID = this.skinThemeID;
  _0x28a7be.mopeSeasonID = this.mopeSeasonID;
  return _0x28a7be;
};
a0_0x568dbc.prototype.getSkinName = function () {
  let _0x348fab = this.getSpeciesPath() + "/pufferfish";
  if (this.flag_usingAbility) {
    _0x348fab += "2";
  }
  return _0x348fab;
};
a0_0x568dbc.prototype.getSpeciesPath = function () {
  return "ocean/pufferfish/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x568dbc.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x568dbc.prototype.drawUnderSkinImg = function () {
  var _0x17a5fa = 1.6;
  var _0x55e78c = 500 / 340;
  var _0x598e1a = "";
  if (this.animalSpecies == 100) {
    _0x598e1a = "/100";
    var _0x4740b0 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/tail.png");
    if (_0x4740b0) {
      a0_0x4ef4f3.save();
      var _0x26b92b = this.rad - this.outlineW;
      a0_0x4ef4f3.drawImage(_0x4740b0, -_0x26b92b * _0x55e78c, -_0x26b92b * _0x17a5fa * _0x55e78c, _0x26b92b * 2 * _0x55e78c, _0x26b92b * 2 * _0x55e78c);
      a0_0x4ef4f3.restore();
    }
  }
};
function a0_0x568dbc() {
  a0_0x568dbc.superClass.call(this, a0_0x1370b8);
}
window.PufferFish = a0_0x568dbc;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x568dbc, a0_0x1370b8, a0_0x265cfd);
var a0_0x58d04c = a0_0x45645e;
a0_0x4c4129.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4c4129.prototype.constructor = a0_0x4c4129;
a0_0x4c4129.superClass = a0_0x58d04c;
a0_0x4c4129.prototype.animalInfo = function () {
  var _0x37fbc5 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x37fbc5.aniName = "Squid";
      break;
    case 111:
      _0x37fbc5.aniName = "Classic Squid";
      break;
    case 112:
      _0x37fbc5.aniName = "Gold-trim Squid";
      break;
    case 200:
      _0x37fbc5.aniName = "Cuttle Fish";
      break;
    case 201:
      _0x37fbc5.aniName = "Seacoast Squid";
      break;
    case 202:
      _0x37fbc5.aniName = "Psychedelic Squid";
      break;
    case 204:
      _0x37fbc5.aniName = "Void Scuttling Squid";
      break;
  }
  _0x37fbc5.skinName = this.getSkinName();
  _0x37fbc5.aniDesc = "";
  _0x37fbc5.upgradeText = "UPGRADED to " + _0x37fbc5.aniName + "!\n " + _0x37fbc5.aniName + " can use INK when injured (press W!) \n+ you can hide in plankton bushes!";
  _0x37fbc5.aniCol = "#40dda4";
  return _0x37fbc5;
};
a0_0x4c4129.prototype.getSkinName = function () {
  let _0x3e3829 = this.getSpeciesPath() + "/squid";
  _0x3e3829 += this.specType == 0 ? "" : 1;
  return _0x3e3829;
};
a0_0x4c4129.prototype.getSpeciesPath = function () {
  return "ocean/squid/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4c4129.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x4c4129.prototype.getAbilityInfo = function (_0x311bd3) {
  var _0x4d4c9f = {
    abilName: "INK!"
  };
  _0x4d4c9f.abilImg = "skins/" + this.getSpeciesPath() + "/ability.png";
  _0x4d4c9f.skinThemeID = this.skinThemeID;
  _0x4d4c9f.mopeSeasonID = this.mopeSeasonID;
  return _0x4d4c9f;
};
a0_0x4c4129.prototype.drawUnderSkinImg = function () {
  if (this.animalSpecies == 0 || this.animalSpecies == 201) {
    var _0x4861c4 = 500 / 340;
    var _0x41e6c2 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/cape.png");
    if (_0x41e6c2) {
      a0_0x4ef4f3.save();
      var _0x2624eb = 1.1;
      var _0x2e3854 = this.rad - this.outlineW;
      a0_0x4ef4f3.drawImage(_0x41e6c2, -_0x2e3854 * _0x4861c4, -_0x2e3854 * _0x2624eb * _0x4861c4, _0x2e3854 * 2 * _0x4861c4, _0x2e3854 * 2 * _0x4861c4);
      a0_0x4ef4f3.restore();
    }
  }
};
function a0_0x4c4129() {
  a0_0x4c4129.superClass.call(this, a0_0x1370b8);
}
window.Squid = a0_0x4c4129;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4c4129, a0_0x1370b8, a0_0x464b86);
var a0_0x58d04c = a0_0x45645e;
a0_0x40d029.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x40d029.prototype.constructor = a0_0x40d029;
a0_0x40d029.superClass = a0_0x58d04c;
a0_0x40d029.prototype.updateZ = function () {
  if (this.flag_underWater) {
    this.z = -151;
  } else {
    this.z = this.rad;
  }
};
a0_0x40d029.prototype.animalInfo = function () {
  var _0x2cce2f = {};
  switch (this.animalSpecies) {
    case 0:
      _0x2cce2f.aniName = "Shark!";
      break;
    case 1:
      _0x2cce2f.aniName = "Tiger Shark!";
      break;
    case 2:
      _0x2cce2f.aniName = "Hammarhead Shark!";
      break;
    case 111:
      _0x2cce2f.aniName = "Classic Shark";
      break;
    case 112:
      _0x2cce2f.aniName = "Gold-trim Shark";
      break;
    case 201:
      _0x2cce2f.aniName = "Surfboard Chomper!";
      break;
  }
  _0x2cce2f.skinName = this.getSkinName();
  _0x2cce2f.upgradeText = "UPGRADED to " + _0x2cce2f.aniName + "\n A vicious predator of the oceans!";
  _0x2cce2f.aniCol = "#999fc6";
  return _0x2cce2f;
};
a0_0x40d029.prototype.getAbilityInfo = function (_0x18a72b) {
  var _0x394504 = {
    abilName: "Jaws Bite"
  };
  _0x394504.abilImg = "skins/" + this.getSpeciesPath() + "/ability.png";
  _0x394504.skinThemeID = this.skinThemeID;
  _0x394504.mopeSeasonID = this.mopeSeasonID;
  return _0x394504;
};
a0_0x40d029.prototype.getSkinName = function () {
  let _0x790c09 = this.getSpeciesPath() + "/shark";
  return _0x790c09;
};
a0_0x40d029.prototype.getSpeciesPath = function () {
  return "ocean/shark/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x40d029.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x40d029.prototype.getSkinImageObj = function (_0x2e58eb) {
  var _0x2c6afa = this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x2e58eb, _0x2c6afa);
};
a0_0x40d029.prototype.drawUnderSkinImg = function () {
  if (this.flag_underWater) {
    return;
  }
  var _0x30afcf = 1.33;
  var _0x4ffb52 = 1;
  var _0x1f0e6b = 500 / 340 * _0x4ffb52;
  var _0x16d51f = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/tail.png");
  if (_0x16d51f) {
    a0_0x4ef4f3.save();
    var _0x14b1e6 = this.rad - this.outlineW;
    a0_0x4ef4f3.drawImage(_0x16d51f, -_0x14b1e6 * _0x1f0e6b, -_0x14b1e6 * _0x30afcf * _0x1f0e6b, _0x14b1e6 * 2 * _0x1f0e6b, _0x14b1e6 * 2 * _0x1f0e6b);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x40d029() {
  a0_0x40d029.superClass.call(this, a0_0x1370b8);
}
window.Shark = a0_0x40d029;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x40d029, a0_0x1370b8, a0_0x30aa6a);
var a0_0x58d04c = a0_0x45645e;
a0_0x48b98e.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x48b98e.prototype.constructor = a0_0x48b98e;
a0_0x48b98e.superClass = a0_0x58d04c;
a0_0x48b98e.prototype.animalInfo = function () {
  var _0x559943 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x559943.aniName = "Turtle!";
      break;
    case 111:
      _0x559943.aniName = "Classic Turtle";
      break;
    case 112:
      _0x559943.aniName = "Gold-trim Turtle";
      break;
    case 200:
      _0x559943.aniName = "Leather Back Turtle!";
      break;
    case 201:
      _0x559943.aniName = "Kiwi Turtle!";
      break;
    case 202:
      _0x559943.aniName = "Molten Lava Turtle";
      break;
  }
  _0x559943.skinName = this.getSkinName();
  _0x559943.aniDesc = "";
  _0x559943.upgradeText = "UPGRADED to " + _0x559943.aniName + "\n Lives well on land & water! (On land, Press W to go into your shell!)";
  _0x559943.aniCol = "#502E1A";
  return _0x559943;
};
a0_0x48b98e.prototype.getAbilityInfo = function (_0x350af3) {
  var _0x1ca7f0 = {
    abilName: "Hide in Shell!"
  };
  _0x1ca7f0.abilImg = "skins/" + this.getSpeciesPath() + "/turtle2.png";
  _0x1ca7f0.skinThemeID = this.skinThemeID;
  _0x1ca7f0.mopeSeasonID = this.mopeSeasonID;
  return _0x1ca7f0;
};
a0_0x48b98e.prototype.getSkinName = function () {
  let _0xa054dd = this.getSpeciesPath() + "/turtle";
  if (this.flag_usingAbility) {
    _0xa054dd += "2";
  } else {
    _0xa054dd += this.specType == 0 ? "" : 1;
  }
  return _0xa054dd;
};
a0_0x48b98e.prototype.getSpeciesPath = function () {
  return "ocean/turtle/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x48b98e.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x48b98e.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    if (this.specType == 1) {
      var _0x5a673f = 500 / 340;
      var _0x27ba7d = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/head.png");
      if (_0x27ba7d) {
        var _0x1c755f = 0.88;
        a0_0x4ef4f3.save();
        var _0x26df81 = this.rad - this.outlineW;
        a0_0x4ef4f3.drawImage(_0x27ba7d, -_0x26df81 * _0x5a673f, -_0x26df81 * _0x1c755f * _0x5a673f, _0x26df81 * 2 * _0x5a673f, _0x26df81 * 2 * _0x5a673f);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
function a0_0x48b98e() {
  a0_0x48b98e.superClass.call(this, a0_0x1370b8);
}
window.Turtle = a0_0x48b98e;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x48b98e, a0_0x1370b8, a0_0x58bf2a);
var a0_0x58d04c = a0_0x45645e;
a0_0x56c8f0.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x56c8f0.prototype.constructor = a0_0x56c8f0;
a0_0x56c8f0.superClass = a0_0x58d04c;
a0_0x56c8f0.prototype.getAniRadius = function (_0x54137c) {
  return _0x54137c;
};
a0_0x56c8f0.prototype.animalInfo = function () {
  var _0x346c13 = {};
  switch (this.animalSubSpecies) {
    case 0:
      switch (this.animalSpecies) {
        case 0:
          _0x346c13.aniName = "Swordfish!";
          break;
        case 111:
          _0x346c13.aniName = "Classic Swordfish!";
          break;
        case 112:
          _0x346c13.aniName = "Gold-trim Swordfish!";
          break;
        case 201:
          _0x346c13.aniName = "Surfboardfish";
          break;
      }
      break;
    case 202:
      _0x346c13.aniName = "Rocket Swordfish";
      break;
    case 204:
      _0x346c13.aniName = "Chainsaw Fish";
    case 2023:
      _0x346c13.aniName = "Soda Fish";
      break;
  }
  _0x346c13.skinName = this.getSkinName();
  _0x346c13.upgradeText = "UPGRADED to " + _0x346c13.aniName + "\n (Press W to rush with your sharp nose!)";
  _0x346c13.aniCol = "#689CD7";
  return _0x346c13;
};
a0_0x56c8f0.prototype.getAbilityInfo = function (_0x45768f) {
  var _0x102a91 = {
    abilName: "Charge!"
  };
  _0x102a91.abilImg = "skins/" + this.getSpeciesPath() + "/ability.png";
  _0x102a91.skinThemeID = this.skinThemeID;
  _0x102a91.mopeSeasonID = this.mopeSeasonID;
  return _0x102a91;
};
a0_0x56c8f0.prototype.getSkinName = function () {
  let _0x35fba0 = this.getSpeciesPath() + "/swordfish";
  if (this.flag_usingAbility) {
    _0x35fba0 += "2";
  } else {
    _0x35fba0 += this.specType == 0 ? "" : 1;
  }
  return _0x35fba0;
};
a0_0x56c8f0.prototype.getSpeciesPath = function () {
  return "ocean/swordfish/" + this.animalSpecies + "/" + this.animalSubSpecies;
};
a0_0x56c8f0.prototype.drawSkinCustomization = function () {};
a0_0x56c8f0.prototype.oldBasicDrawSkinImg = a0_0x56c8f0.prototype.basicDrawSkinImg;
a0_0x56c8f0.prototype.basicDrawSkinImg = function () {
  if (this.mopeSeasonID < 2) {
    this.oldBasicDrawSkinImg();
  } else {
    this.setSkinScale();
    var _0x17b52f = this.skinScale;
    var _0x22cc73 = this.rad;
    var _0x12111b = 0;
    var _0x1e0364 = 1.2;
    var _0x202711 = -_0x1e0364 / 4;
    if (this.loadedSkinImg) {
      a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x22cc73 * _0x17b52f + _0x22cc73 * _0x12111b, -_0x22cc73 * _0x17b52f + _0x22cc73 * _0x202711, _0x22cc73 * 2 * _0x17b52f, _0x22cc73 * 2 * (_0x17b52f * _0x1e0364));
    }
  }
};
a0_0x56c8f0.prototype.drawUnderSkinImg = function () {
  if (this.mopeSeasonID >= 2) {
    return;
  }
  var _0x479887 = 0.7;
  var _0x3347f2 = 1.15;
  var _0x376ec1 = 500 / 340;
  var _0x1e6276 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/nose.png");
  if (_0x1e6276) {
    a0_0x4ef4f3.save();
    var _0x1cabd6 = this.rad - this.outlineW;
    a0_0x4ef4f3.drawImage(_0x1e6276, -_0x1cabd6 * _0x376ec1, -_0x1cabd6 * _0x479887 * _0x376ec1, _0x1cabd6 * 2 * _0x376ec1, _0x1cabd6 * 2 * _0x376ec1);
    a0_0x4ef4f3.restore();
  }
  var _0x1e6276 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/tail.png");
  if (_0x1e6276) {
    a0_0x4ef4f3.save();
    var _0x1cabd6 = this.rad - this.outlineW;
    a0_0x4ef4f3.drawImage(_0x1e6276, -_0x1cabd6 * _0x376ec1, -_0x1cabd6 * _0x3347f2 * _0x376ec1, _0x1cabd6 * 2 * _0x376ec1, _0x1cabd6 * 2 * _0x376ec1);
    a0_0x4ef4f3.restore();
  }
};
a0_0x56c8f0.prototype.getSkinImageObj = function (_0xcf95e) {
  var _0x32f008 = this.animalSpecies === 201 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0xcf95e, _0x32f008);
};
function a0_0x56c8f0() {
  a0_0x56c8f0.superClass.call(this, a0_0x1370b8);
}
window.Swordfish = a0_0x56c8f0;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x56c8f0, a0_0x1370b8, a0_0x9f5ea7);
var a0_0x58d04c = a0_0x45645e;
a0_0x527a03.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x527a03.prototype.constructor = a0_0x527a03;
a0_0x527a03.superClass = a0_0x58d04c;
a0_0x527a03.prototype.animalInfo = function () {
  var _0x876b3 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x876b3.aniName = "Crab!";
      break;
    case 111:
      _0x876b3.aniName = "Classic Crab";
      break;
    case 112:
      _0x876b3.aniName = "Gold-trim Crab";
      break;
    case 200:
      _0x876b3.aniName = "Metallic Crab!";
      break;
    case 201:
      _0x876b3.aniName = "Coconut Crab!";
      break;
    case 204:
      _0x876b3.aniName = "Dark Matter Crab!";
      break;
  }
  _0x876b3.skinName = this.getSkinName();
  _0x876b3.aniDesc = "";
  _0x876b3.upgradeText = "UPGRADED to " + _0x876b3.aniName + "\n Crabs can survive on dry land!\n (On land, Press W to go into your shell!)";
  _0x876b3.aniCol = "#bf2408";
  return _0x876b3;
};
a0_0x527a03.prototype.getAbilityInfo = function (_0x5dcb70) {
  var _0xb5aa74 = {
    abilName: "Hide in Shell!"
  };
  _0xb5aa74.abilImg = "skins/" + this.getSpeciesPath() + "/crab2.png";
  _0xb5aa74.skinThemeID = this.skinThemeID;
  _0xb5aa74.mopeSeasonID = this.mopeSeasonID;
  return _0xb5aa74;
};
a0_0x527a03.prototype.getSkinName = function () {
  let _0x33d057 = this.getSpeciesPath() + "/crab";
  if (this.flag_usingAbility) {
    _0x33d057 += "2";
  } else {
    _0x33d057 += this.specType == 0 ? "" : 1;
  }
  return _0x33d057;
};
a0_0x527a03.prototype.getSpeciesPath = function () {
  return "ocean/crab/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x527a03.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x527a03.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  var _0x280815 = this.skinScale;
  var _0x33321a = this.skinRad;
  a0_0x4ef4f3.save();
  if (this.id > 0) {
    a0_0x4ef4f3.rotate(a0_0x844a6b(90));
  }
  if (this.loadedSkinImg) {
    a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x33321a * _0x280815, -_0x33321a * _0x280815, _0x33321a * 2 * _0x280815, _0x33321a * 2 * _0x280815);
  } else {
    a0_0x4ef4f3.fillStyle = this.skinNotLoadedColor;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - this.outlineW), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
  }
  a0_0x4ef4f3.restore();
};
function a0_0x527a03() {
  a0_0x527a03.superClass.call(this, a0_0x1370b8);
}
window.Crab = a0_0x527a03;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x527a03, a0_0x1370b8, a0_0xce170f);
var a0_0x58d04c = a0_0x45645e;
a0_0x5632f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5632f1.prototype.constructor = a0_0x5632f1;
a0_0x5632f1.superClass = a0_0x58d04c;
a0_0x5632f1.prototype.animalInfo = function () {
  var _0x56ec3a = {
    aniName: "Snail",
    aniCol: "#FF9000",
    skinName: "ocean/snail/snail"
  };
  _0x56ec3a.upgradeText = "UPGRADED to " + _0x56ec3a.aniName + "!\n Press W to hide in your shell!";
  return _0x56ec3a;
};
a0_0x5632f1.prototype.getSkinName = function () {
  var _0x5eea8d = "ocean/snail/snail";
  return _0x5eea8d;
};
a0_0x5632f1.prototype.dir = 1;
a0_0x5632f1.prototype.snail_yOffset = 0.75;
a0_0x5632f1.prototype.wasUsingAbility = false;
a0_0x5632f1.prototype.animateHead = false;
a0_0x5632f1.prototype.animationIn = null;
a0_0x5632f1.prototype.animationOut = null;
a0_0x5632f1.prototype.offset = 0;
a0_0x5632f1.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility && !this.wasUsingAbility && this.animationIn == null) {
    this.wasUsingAbility = true;
    this.animationIn = new a0_0x100d8b(this, 1, a0_0x100d8b.arc);
    this.animationIn.keepLastFrame = true;
    this.animationIn.onFrameEntered = function (_0x24a7f4) {
      if (!isNaN(_0x24a7f4)) {
        if (this.forObj.offset < 0.35) {
          this.forObj.offset = _0x24a7f4 * 0.35 * 10;
        }
      }
    };
    this.animationIn.onStop = function () {
      this.forObj.offset = 0.35;
      this.forObj.wasUsingAbility = true;
      this.forObj.animationIn = null;
    };
  } else if (!this.flag_usingAbility && this.wasUsingAbility && this.animationOut == null) {
    this.wasUsingAbility = true;
    this.animationOut = new a0_0x100d8b(this, 3, a0_0x100d8b.halfWave);
    this.animationOut.keepLastFrame = true;
    this.animationOut.onFrameEntered = function (_0x1e469f) {
      if (!isNaN(_0x1e469f)) {
        this.forObj.offset = (1 - _0x1e469f) * 0.35;
      }
    };
    this.animationOut.onStop = function () {
      this.forObj.offset = 0;
      this.forObj.wasUsingAbility = false;
      this.forObj.animationOut = null;
    };
  }
  if (this.animationIn) {
    this.animationIn.run();
  }
  if (this.animationOut) {
    this.animationOut.run();
  }
  if (this.animationIn == null && this.animationOut == null && !this.wasUsingAbility) {
    this.offset = 0;
  }
  var _0x2bfa67 = 0.75 + this.offset;
  var _0x2bcbfa = 500 / 340;
  var _0x383ebe = this.getSkinImageObj("skins/ocean/snail/snail_head.png");
  if (_0x383ebe) {
    a0_0x4ef4f3.save();
    var _0x47c6fd = this.rad - this.outlineW;
    a0_0x4ef4f3.drawImage(_0x383ebe, -_0x47c6fd * _0x2bcbfa, -_0x47c6fd * _0x2bfa67 * _0x2bcbfa, _0x47c6fd * 2 * _0x2bcbfa, _0x47c6fd * 2 * _0x2bcbfa);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x5632f1() {
  a0_0x5632f1.superClass.call(this, a0_0x1370b8);
}
window.Snail = a0_0x5632f1;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5632f1, a0_0x1370b8, a0_0x101193);
var a0_0x58d04c = a0_0x45645e;
a0_0x5ef2e0.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5ef2e0.prototype.constructor = a0_0x5ef2e0;
a0_0x5ef2e0.superClass = a0_0x58d04c;
a0_0x5ef2e0.prototype.updateZ = function () {
  this.z = 100000;
};
a0_0x5ef2e0.prototype.canUseTailslap = false;
a0_0x5ef2e0.prototype.tailState = 0;
a0_0x5ef2e0.prototype.lava = 100;
a0_0x5ef2e0.prototype.getSkinName = function () {
  var _0x1dc86e = a0_0x1528ea || a0_0x1d703e == a0_0x30b084 ? "kingdragon" : "kingdragon_body";
  return "volcano/kingdragon/" + this.animalSpecies + "/" + _0x1dc86e;
};
a0_0x5ef2e0.prototype.customUpdatedProperty = function (_0x3e7be9, _0x3dc7cc) {
  if (_0x3e7be9 == a0_0x115b85) {
    this.canUseTailslap = _0x3dc7cc.readUInt8() == 1;
  } else if (_0x3e7be9 == a0_0x11dd56) {
    this.tailState = _0x3dc7cc.readUInt16() / 100;
  }
};
a0_0x5ef2e0.prototype.leftWingAnim = null;
a0_0x5ef2e0.prototype.flapAngleDiff = 3;
a0_0x5ef2e0.prototype.flapAngle = 3;
a0_0x5ef2e0.prototype.flapF = 0.1;
a0_0x5ef2e0.prototype.flapDur = 2;
a0_0x5ef2e0.prototype.sF = 0.02;
a0_0x5ef2e0.prototype.drawWings = function () {
  if (a0_0x1d703e == a0_0x30b084 || a0_0x1528ea) {
    return;
  }
  if (this.leftWingAnim == null) {
    this.leftWingAnim = new a0_0x100d8b(this, this.flapDur, a0_0x100d8b.wave);
    this.leftWingAnim.keepLastFrame = true;
    this.leftWingAnim.loop = true;
    this.leftWingAnim.onFrameEntered = function (_0x202d21) {
      this.forObj.frame1 = _0x202d21;
    };
  }
  if (this.leftWingAnim != null) {
    this.leftWingAnim.run();
  }
  var _0x5b73ec = this.rad - this.outlineW;
  var _0x135a1d = this.frame1 * this.sF * _0x5b73ec;
  var _0x35baf6 = -(-this.flapF + this.frame1);
  var _0x5bd303 = _0x35baf6 * a0_0x844a6b(this.flapAngle);
  var _0x3bca09 = 500 / 340;
  var _0x3ecbf7 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/left_wing.png");
  var _0x3de2da = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/right_wing.png");
  if (_0x3ecbf7 && _0x3de2da) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(a0_0x844a6b(this.flapAngleDiff) + _0x5bd303);
    a0_0x4ef4f3.drawImage(_0x3ecbf7, -_0x5b73ec * _0x3bca09, -_0x5b73ec * _0x3bca09 + _0x135a1d, _0x5b73ec * 2 * _0x3bca09, _0x5b73ec * 2 * _0x3bca09 + _0x135a1d * 1.5);
    a0_0x4ef4f3.restore();
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(-(a0_0x844a6b(this.flapAngleDiff) + _0x5bd303));
    a0_0x4ef4f3.drawImage(_0x3de2da, -_0x5b73ec * _0x3bca09, -_0x5b73ec * _0x3bca09 + _0x135a1d, _0x5b73ec * 2 * _0x3bca09, _0x5b73ec * 2 * _0x3bca09 + _0x135a1d * 1.5);
    a0_0x4ef4f3.restore();
    if (this.animalSpecies == 4) {
      let _0x2e3330 = a0_0x232cc7("kd", this.spawnTime);
      if (_0x2e3330 !== undefined && _0x2e3330 != null) {
        this.theFrame = _0x2e3330;
      }
      let _0x3f6ab3 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = Math.max(0, _0x3f6ab3);
      var _0x122ab7 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/left_wing_tips.png");
      var _0x45342b = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/right_wing_tips.png");
      if (_0x122ab7 && _0x45342b) {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.rotate(a0_0x844a6b(this.flapAngleDiff) + _0x5bd303);
        a0_0x4ef4f3.drawImage(_0x122ab7, -_0x5b73ec * _0x3bca09, -_0x5b73ec * _0x3bca09 + _0x135a1d, _0x5b73ec * 2 * _0x3bca09, _0x5b73ec * 2 * _0x3bca09 + _0x135a1d * 1.5);
        a0_0x4ef4f3.restore();
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.rotate(-(a0_0x844a6b(this.flapAngleDiff) + _0x5bd303));
        a0_0x4ef4f3.drawImage(_0x45342b, -_0x5b73ec * _0x3bca09, -_0x5b73ec * _0x3bca09 + _0x135a1d, _0x5b73ec * 2 * _0x3bca09, _0x5b73ec * 2 * _0x3bca09 + _0x135a1d * 1.5);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.restore();
    }
  }
  var _0x37e03f = this.lava;
  var _0x1190fa = 50;
  if (_0x37e03f < _0x1190fa) {
    var _0x2765ba = _0x37e03f / _0x1190fa;
    var _0x2f0a22 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/left_wing1.png");
    var _0x15209c = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/right_wing2.png");
    if (_0x2f0a22 && _0x15209c) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 1 - _0x2765ba;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.rotate(a0_0x844a6b(this.flapAngleDiff) + _0x5bd303);
      a0_0x4ef4f3.drawImage(_0x2f0a22, -_0x5b73ec * _0x3bca09, -_0x5b73ec * _0x3bca09 + _0x135a1d, _0x5b73ec * 2 * _0x3bca09, _0x5b73ec * 2 * _0x3bca09 + _0x135a1d * 1.5);
      a0_0x4ef4f3.restore();
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.rotate(-(a0_0x844a6b(this.flapAngleDiff) + _0x5bd303));
      a0_0x4ef4f3.drawImage(_0x15209c, -_0x5b73ec * _0x3bca09, -_0x5b73ec * _0x3bca09 + _0x135a1d, _0x5b73ec * 2 * _0x3bca09, _0x5b73ec * 2 * _0x3bca09 + _0x135a1d * 1.5);
      a0_0x4ef4f3.restore();
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x5ef2e0.prototype.drawSkinCustomization = function () {
  if (this.flag_underWater) {
    return;
  }
  if (a0_0x1d703e == a0_0x30b084 || a0_0x1528ea) {
    return;
  }
  var _0xe643fa = 500 / 340;
  let _0x110962 = a0_0x232cc7("kd", this.spawnTime);
  if (_0x110962 !== undefined && _0x110962 != null) {
    this.theFrame = _0x110962;
  }
  let _0x5761c3 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
  var _0x53d9b5 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/nostrils.png");
  if (_0x53d9b5) {
    a0_0x4ef4f3.save();
    var _0x2cd024 = this.lava;
    var _0x33ae8c = 100;
    var _0x97403 = _0x2cd024 / _0x33ae8c;
    a0_0x4ef4f3.globalAlpha = Math.max(0, _0x5761c3) * _0x97403;
    var _0x4ab830 = this.rad - this.outlineW;
    a0_0x4ef4f3.drawImage(_0x53d9b5, -_0x4ab830 * _0xe643fa, -_0x4ab830 * _0xe643fa, _0x4ab830 * 2 * _0xe643fa, _0x4ab830 * 2 * _0xe643fa);
    a0_0x4ef4f3.restore();
  }
  if (!this.canUseTailslap) {
    var _0x12a5d4 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone1.png");
    if (_0x12a5d4) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 1;
      var _0x4ab830 = this.rad - this.outlineW;
      a0_0x4ef4f3.drawImage(_0x12a5d4, -_0x4ab830 * _0xe643fa, -_0x4ab830 * _0xe643fa, _0x4ab830 * 2 * _0xe643fa, _0x4ab830 * 2 * _0xe643fa);
      a0_0x4ef4f3.restore();
    }
    var _0x57b638 = 0;
    if (this.tailState < 11 && this.tailState > 5) {
      var _0x1be55f = this.tailState - 5;
      _0x57b638 = _0x1be55f / 6;
    } else if (this.tailState <= 3) {
      _0x57b638 = this.tailState / 3;
    }
    var _0x16c779 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone3.png");
    if (this.tailState < 11) {
      if (_0x16c779) {
        a0_0x4ef4f3.save();
        if (this.tailState > 5) {
          a0_0x4ef4f3.globalAlpha = 1 - _0x57b638;
        } else {
          a0_0x4ef4f3.globalAlpha = 1;
        }
        var _0x4ab830 = this.rad - this.outlineW;
        a0_0x4ef4f3.drawImage(_0x16c779, -_0x4ab830 * _0xe643fa, -_0x4ab830 * _0xe643fa, _0x4ab830 * 2 * _0xe643fa, _0x4ab830 * 2 * _0xe643fa);
        a0_0x4ef4f3.restore();
      }
    }
    var _0x28537d = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone2.png");
    if (this.tailState < 3) {
      if (_0x28537d) {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.globalAlpha = 1 - _0x57b638;
        var _0x4ab830 = this.rad - this.outlineW;
        a0_0x4ef4f3.drawImage(_0x28537d, -_0x4ab830 * _0xe643fa, -_0x4ab830 * _0xe643fa, _0x4ab830 * 2 * _0xe643fa, _0x4ab830 * 2 * _0xe643fa);
        a0_0x4ef4f3.restore();
      }
    }
  } else {
    var _0x28537d = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone2.png");
    if (_0x28537d) {
      a0_0x4ef4f3.save();
      var _0x55d020 = Math.max(0.3, _0x5761c3);
      a0_0x4ef4f3.globalAlpha = _0x55d020;
      var _0x4ab830 = this.rad - this.outlineW;
      a0_0x4ef4f3.drawImage(_0x28537d, -_0x4ab830 * _0xe643fa, -_0x4ab830 * _0xe643fa, _0x4ab830 * 2 * _0xe643fa, _0x4ab830 * 2 * _0xe643fa);
      a0_0x4ef4f3.restore();
    }
  }
  this.drawWings();
};
a0_0x5ef2e0.prototype.drawLowWaterDrop = function () {
  if (this.flag_underWater) {
    return;
  }
  if (this.flag_lowWat) {
    var _0x5cf326 = 1.2;
    var _0x121a26 = 0.2;
    var _0x154b3a = 0.8;
    var _0x156ecf = (_0x154b3a - _0x121a26) * 0.5;
    var _0x15cdf2 = _0x121a26 + _0x156ecf + _0x156ecf * Math.sin(Math.PI * 2 / _0x5cf326 * (a0_0x4f736f / 1000));
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = _0x15cdf2;
    a0_0x4ef4f3.fillStyle = a0_0x5479b9;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, this.rad + 5, 5, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.restore();
  }
};
a0_0x5ef2e0.prototype.animalInfo = function () {
  var _0x3ebe50 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x3ebe50.aniName = "King Dragon";
      break;
    case 1:
      _0x3ebe50.aniName = "Golden King Dragon";
      break;
    case 2:
      _0x3ebe50.aniName = "King Ripper";
      break;
    case 3:
      _0x3ebe50.aniName = "King Stan";
      break;
    case 4:
      _0x3ebe50.aniName = "King Shah";
      break;
    case 5:
      _0x3ebe50.aniName = "Queen Scarlet";
      break;
    case 6:
      _0x3ebe50.aniName = "Queen Celeste";
      break;
    case 111:
      _0x3ebe50.aniName = "Classic King Dragon";
      break;
    case 200:
      _0x3ebe50.aniName = "Queen Flame";
      break;
    case 202:
      _0x3ebe50.aniName = "King Graveyard";
      break;
  }
  _0x3ebe50.aniCol = "#FF9000";
  _0x3ebe50.skinName = this.getSkinName();
  _0x3ebe50.upgradeText = "UPGRADED to " + _0x3ebe50.aniName;
  _0x3ebe50.upgradeText += "!\nYou got firestream that burns your victim alive! Watch your tail and slap them hard.";
  _0x3ebe50.aniCol = "black";
  return _0x3ebe50;
};
a0_0x5ef2e0.prototype.getAbilityInfo = function (_0x19a096) {
  var _0x5891b0 = {
    abilName: "Firestream\n& Tail slap"
  };
  var _0x5ba0c6 = 0;
  switch (this.animalSpecies) {
    case 0:
      _0x5ba0c6 = 1;
      break;
    case 1:
      _0x5ba0c6 = 2;
      break;
    case 2:
      _0x5ba0c6 = 4;
      break;
    case 3:
      _0x5ba0c6 = 5;
      break;
    case 4:
      _0x5ba0c6 = 6;
      break;
    case 5:
      _0x5ba0c6 = 9;
      break;
    case 6:
      _0x5ba0c6 = 8;
      break;
  }
  _0x5891b0.speciesType = _0x5ba0c6;
  _0x5891b0.abilImg = "img/fire/" + _0x5ba0c6 + "/0.png";
  _0x5891b0.skinThemeID = this.skinThemeID;
  _0x5891b0.mopeSeasonID = this.mopeSeasonID;
  return _0x5891b0;
};
function a0_0x5ef2e0() {
  this.lava = 100;
  a0_0x5ef2e0.superClass.call(this, a0_0x1370b8);
}
window.KingDragon = a0_0x5ef2e0;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5ef2e0, a0_0x1370b8, a0_0x9fe8e0);
var a0_0x58d04c = a0_0x12658e;
a0_0x2eb905.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2eb905.prototype.constructor = a0_0x2eb905;
a0_0x2eb905.superClass = a0_0x58d04c;
a0_0x2eb905.prototype.updateZ = function () {
  this.z = -140;
};
a0_0x2eb905.prototype.shiverF = 0.015;
a0_0x2eb905.prototype.drawTranslate = function () {
  a0_0x4ef4f3.translate(this.x, this.y);
  a0_0x4ef4f3.save();
  if (this.eruption >= this.shakeStart && this.eruption <= this.shakeEnd + 1) {
    if (this.eruption >= this.shakeStart + 2) {
      this.shiverF = 0.025;
    } else {
      this.shiverF = 0.015;
    }
    var _0x84998a = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x33aa12 = 0.2;
    var _0x49df2d = this.rad * this.shiverF;
    this.shakeOffsetX = _0x49df2d * Math.sin(Math.PI * 2 / _0x33aa12 * _0x84998a);
    var _0x33aa12 = 0.3;
    var _0x49df2d = this.rad * this.shiverF;
    this.shakeOffsetY = _0x49df2d * Math.sin(Math.PI * 2 / _0x33aa12 * _0x84998a);
    a0_0x4ef4f3.translate(-this.shakeOffsetX, -this.shakeOffsetY);
  }
};
a0_0x2eb905.prototype.drawHealthBar = function () {
  a0_0x4ef4f3.restore();
};
a0_0x2eb905.prototype.customDraw2 = function (_0x55270b) {};
a0_0x2eb905.prototype.customDraw = function (_0x1af8d1) {
  if (this.curBiome == a0_0x5fac87) {
    a0_0x5c99c1(0, 0, Math.max(0, this.rad * 1), "#faf6f2");
    a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.6), "#e0dbd5");
    a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.5), "#9DDADE");
    a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.45), "#9DDADE");
  } else if (this.curBiome == a0_0xc64a03) {
    a0_0x5c99c1(0, 0, Math.max(0, this.rad * 1), "#cebe58");
    a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.75), "#b4a53e");
    a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.5), "#ca6423");
    a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.45), "#923c04");
  } else {
    a0_0x5c99c1(0, 0, Math.max(0, this.rad * 1), "#815427");
    a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.6), "#6e4b29");
    a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.5), "#543d28");
    a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.45), "#3f3124");
  }
  var _0x21eb4e = 0;
  switch (Math.round(this.erruption)) {
    case 0:
      _0x21eb4e = 0;
      break;
    case 1:
      _0x21eb4e = 0;
      break;
    case 2:
      _0x21eb4e = 1;
      a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.25), a0_0x5479b9);
      break;
    case 3:
      _0x21eb4e = 2;
      a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.25), a0_0x5479b9);
      break;
    case 4:
    case 5:
    case 6:
      _0x21eb4e = 3;
      a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.33), a0_0x5479b9);
      break;
    case 7:
      _0x21eb4e = 2;
      a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.25), a0_0x5479b9);
      break;
    case 8:
      _0x21eb4e = 1;
      a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.25), a0_0x5479b9);
      break;
    case 9:
      _0x21eb4e = 0;
      break;
    case 10:
      _0x21eb4e = 0;
      break;
  }
  a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.33), "#241e19");
  a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.25), "#120f0d");
  a0_0x5c99c1(0, 0, Math.max(0, this.rad * 0.33), a0_0x5479b9);
  if (this.erruption > 1 && this.erruption < 10) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 1 - this.underwaterA;
    var _0x1a26c7 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x1eaa76 = 1.5;
    var _0x403a9b = 2;
    var _0x261da7 = _0x403a9b * Math.sin(Math.PI * 2 / _0x1eaa76 * _0x1a26c7);
    a0_0x4ef4f3.fillStyle = "yellow";
    var _0x3090c6 = Math.max(0, this.rad * 0.2) * 0.15;
    a0_0x4ef4f3.beginPath();
    var _0x5b32bf = 1;
    for (i = 1; i <= _0x5b32bf; i++) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 0.2;
      a0_0x4ef4f3.rotate(this.rPer * Math.PI * 2 * i);
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(_0x3090c6 * -0.35, _0x3090c6 * -0.33, Math.max(0, _0x3090c6 + _0x261da7), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(_0x3090c6 * 0.35, _0x3090c6 * -0.32, Math.max(0, _0x3090c6 - _0x261da7), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(_0x3090c6 * 0.35, _0x3090c6 * 0.36, Math.max(0, _0x3090c6 + _0x261da7), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(_0x3090c6 * -0.35, _0x3090c6 * 0.35, Math.max(0, _0x3090c6 - _0x261da7), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  }
  if (this.curBiome == a0_0x5fac87) {
    a0_0x4ef4f3.save();
    var _0x3888a1 = this.getSkinImageObj("img/arcticano/" + _0x21eb4e + ".png");
    if (_0x3888a1) {
      var _0x462f23 = this.rad * 0.35;
      a0_0x4ef4f3.rotate(this.angle);
      a0_0x4ef4f3.drawImage(_0x3888a1, -_0x462f23, -_0x462f23, _0x462f23 * 2, _0x462f23 * 2);
    }
    a0_0x4ef4f3.restore();
  }
};
a0_0x2eb905.prototype.readCustomData_onNewlyVisible = function (_0x18db45) {
  a0_0x2eb905.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x18db45);
  this.maxLvl = _0x18db45.readUInt8() / 10;
  this.shakeStart = _0x18db45.readUInt8() / 10;
  this.shakeEnd = _0x18db45.readUInt8() / 10;
  this.eruption = _0x18db45.readUInt16() / 100;
  this.spitLevelMin = this.maxLvl * 0.2;
  this.spitLevelMax = this.maxLvl * 0.8;
};
a0_0x2eb905.prototype.readUpdatedProperty = function (_0x4e3f94, _0x316812) {
  if (_0x4e3f94 == a0_0x4ffebc) {
    this.eruption = _0x316812.readUInt16() / 100;
  }
};
function a0_0x2eb905() {
  a0_0x2eb905.superClass.call(this, a0_0x241128);
}
window.Volcano = a0_0x2eb905;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2eb905, a0_0x241128);
var a0_0x2011f1 = a0_0x5b780a;
var a0_0x58d04c = a0_0x12658e;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x5b780a.prototype.customDraw = function (_0x3d87b2) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(180));
  a0_0x4ef4f3.globalAlpha = 1;
  var _0x16f4c3 = this.getSkinImageObj("img/raindrop.png");
  if (_0x16f4c3) {
    var _0x48883b = this.rad * 2;
    a0_0x4ef4f3.drawImage(_0x16f4c3, -_0x48883b, -_0x48883b, _0x48883b * 2, _0x48883b * 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x5b780a.prototype.updateZ = function () {
  this.z = 10000 + this.rad;
};
function a0_0x5b780a() {
  a0_0x5b780a.superClass.call(this);
  this.spawnTime = a0_0x4f736f;
}
window.RainDrop = a0_0x5b780a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5b780a, a0_0x340346);
var a0_0x58d04c = a0_0x12658e;
a0_0x21a197.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x21a197.prototype.constructor = a0_0x21a197;
a0_0x21a197.superClass = a0_0x58d04c;
a0_0x21a197.prototype.updateZ = function () {
  this.z = 1005;
};
a0_0x21a197.prototype.customDraw = function (_0x230bd5) {
  if (a0_0x1d703e != a0_0x30b084) {
    var _0x3b3b55 = 1;
    var _0x5edc60 = 0.15;
    var _0x2beeba = 0.8;
    var _0x1d7258 = (_0x2beeba - _0x5edc60) * 0.5;
    var _0x3e668c = _0x5edc60 + _0x1d7258 + _0x1d7258 * Math.sin(Math.PI * 2 / _0x3b3b55 * (a0_0x4f736f / 1000));
    a0_0x4ef4f3.save();
    {
      a0_0x4ef4f3.globalAlpha *= _0x3e668c;
    }
    a0_0x4ef4f3.restore();
    var _0x3b3b55 = 1;
    var _0x5edc60 = 0.85;
    var _0x2beeba = 1;
    var _0x1d7258 = (_0x2beeba - _0x5edc60) * 0.5;
    var _0x55943b = _0x5edc60 + _0x1d7258 + _0x1d7258 * Math.sin(Math.PI * 2 / _0x3b3b55 * (a0_0x4f736f / 1000));
    var _0x460e54 = Math.trunc(a0_0x4f736f / 120) % 5;
    var _0x109321 = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x460e54 + ".png");
    if (_0x109321) {
      var _0x7c7bb3 = 0;
      var _0x1061ee = this.rad * 0.4;
      var _0x30f589 = this.rad * 2 * (2 + _0x55943b * 2) / 3;
      var _0x2b6d4b = this.rad * 3.5 * _0x55943b;
      var _0x1dd0fa = 0.5;
      var _0x2ebf1d = 0.95;
      a0_0x4ef4f3.save();
      {
        a0_0x4ef4f3.globalAlpha *= this.onFireEffA * _0x55943b;
        a0_0x4ef4f3.rotate(this.angle);
        a0_0x4ef4f3.drawImage(_0x109321, _0x7c7bb3 + _0x30f589 * -_0x1dd0fa, _0x1061ee + _0x2b6d4b * -_0x2ebf1d, _0x30f589, _0x2b6d4b);
      }
      a0_0x4ef4f3.restore();
    } else {}
  } else {
    var _0x109321 = this.getSkinImageObj("gameobj/" + this.oType + "/0.png");
    if (_0x109321) {
      var _0x3b3b55 = 1;
      var _0x5edc60 = 0.85;
      var _0x2beeba = 1;
      var _0x1d7258 = (_0x2beeba - _0x5edc60) * 0.5;
      var _0x55943b = _0x5edc60 + _0x1d7258 + _0x1d7258 * Math.sin(Math.PI * 2 / _0x3b3b55 * (a0_0x4f736f / 1000));
      var _0x7c7bb3 = 0;
      var _0x1061ee = this.rad * 0.4;
      var _0x30f589 = this.rad * 2 * (2 + _0x55943b * 2) / 3;
      var _0x2b6d4b = this.rad * 3.5 * _0x55943b;
      var _0x1dd0fa = 0.5;
      var _0x2ebf1d = 0.95;
      a0_0x4ef4f3.save();
      {
        a0_0x4ef4f3.rotate(this.angle);
        a0_0x4ef4f3.drawImage(_0x109321, _0x7c7bb3 + _0x30f589 * -_0x1dd0fa, _0x1061ee + _0x2b6d4b * -_0x2ebf1d, _0x30f589, _0x2b6d4b);
      }
      a0_0x4ef4f3.restore();
    }
  }
};
function a0_0x21a197() {
  a0_0x21a197.superClass.call(this, a0_0x2f9861);
}
window.Iceball = a0_0x21a197;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x21a197, a0_0x2f9861);
var a0_0x58d04c = a0_0x45645e;
a0_0x414a8a.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x414a8a.prototype.constructor = a0_0x414a8a;
a0_0x414a8a.superClass = a0_0x58d04c;
a0_0x414a8a.prototype.animalInfo = function () {
  var _0x1fd2c9 = {};
  switch (this.animalSpecies) {
    case 0:
    case 1:
      _0x1fd2c9.aniName = "The BigFoot";
      break;
  }
  _0x1fd2c9.skinName = "land/bigfoot/" + this.animalSpecies + "/bigfoot";
  _0x1fd2c9.aniDesc = "";
  _0x1fd2c9.upgradeText = "UPGRADED to " + _0x1fd2c9.aniName + "! So it really exists... \n Right click/W to throw Spears. \nHold to make a fire (every 30s)";
  _0x1fd2c9.aniCol = "#839eb5";
  return _0x1fd2c9;
};
a0_0x414a8a.prototype.getAbilityInfo = function (_0x2e711e) {
  var _0x532571 = {
    abilName: "Throw Spear\n (Hold for fire!)",
    abilImg: "skins/land/bigfoot/" + this.animalSpecies + "/ability.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x532571;
};
a0_0x414a8a.prototype.getSkinName = function () {
  var _0xc057c6 = "";
  _0xc057c6 = "land/bigfoot/" + this.animalSpecies + "/";
  if (this.flag_underWater || this.flag_isInArena) {
    _0xc057c6 += "thebigfoot";
  } else {
    _0xc057c6 += "bigfoot";
  }
  return _0xc057c6;
};
a0_0x414a8a.prototype.drawUnderSkinTail = function (_0x22363f) {
  if (!this.isCamouflage) {
    a0_0x414a8a.superClass.prototype.drawUnderSkinTail.call(this, _0x22363f);
  }
};
a0_0x414a8a.prototype.drawHealthBar = function () {
  if (!this.isCamouflage) {
    a0_0x414a8a.superClass.prototype.drawHealthBar.call(this);
  }
};
a0_0x414a8a.prototype.isTransforming = false;
a0_0x414a8a.prototype.isCamouflage = false;
a0_0x414a8a.prototype.carrotAlpha = 0;
a0_0x414a8a.prototype.getIdealOpacity = function () {
  var _0xb7218a = this.flag_underWater || this.flag_usingAbility && this.isTransforming || this.isCamouflage ? 0 : 1;
  return _0xb7218a;
};
a0_0x414a8a.prototype.biteStart = 0;
a0_0x414a8a.prototype.flapAmount = 3;
a0_0x414a8a.prototype.flapDur = 1.5;
a0_0x414a8a.prototype.roarStartT = -500;
a0_0x414a8a.prototype.spearThrow = function () {
  a0_0x4ef4f3.save();
  var _0x2b7a77 = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/arm21.png");
  if (_0x2b7a77) {
    var _0x2add3b = Math.min(1, (a0_0x4f736f - this.biteStart) / 200);
    var _0x2ebb34 = a0_0x870f2b((a0_0x4f736f - this.biteStart) / 300, 0, 1);
    var _0x4ba4b9 = -_0x2ebb34 * a0_0x2b691e;
    a0_0x4ef4f3.rotate(this.angle + _0x4ba4b9);
    var _0x5f47a8 = -this.rad * 1.75;
    var _0x268581 = this.rad / 2;
    var _0xdb1a87 = this.rad;
    var _0x3b5ec3 = _0x5f47a8 * 2;
    var _0x319db4 = _0x5f47a8 * 2 * _0x2add3b;
    var _0x4a3f59 = 0.3;
    var _0x46fffb = 0.8;
    a0_0x4ef4f3.drawImage(_0x2b7a77, _0x268581 + _0x3b5ec3 * -_0x4a3f59, _0xdb1a87 + _0x319db4 * -_0x46fffb + _0x5f47a8, _0x3b5ec3, _0x319db4);
  }
  a0_0x4ef4f3.restore();
};
a0_0x414a8a.prototype.showSpear = false;
a0_0x414a8a.prototype.showHand = true;
a0_0x414a8a.prototype.drawSkinCustomization = function () {
  if (this.flag_underWater || this.flag_isInArena) {
    return;
  }
  this.setSkinScale();
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
  }
  if (this.showSpear) {
    this.spearHandAnimation(0);
  } else if (this.showHand || this.id == 0) {
    this.leftHandAnimation(0);
  }
  this.rightHandAnimation(0);
  this.bigfootHead(0);
  if (!this.flag_usingAbility && !this.flag_inHidingHole) {
    this.oogaBoogaAnimation(0);
  }
};
a0_0x414a8a.prototype.oogaBoogaNextT = +new Date() + 15000;
a0_0x414a8a.prototype.oogaBoogaFrame = 0;
a0_0x414a8a.prototype.oogaBoogaFrameT = 0;
a0_0x414a8a.prototype.oogaBoogaAnimation = function (_0x3f4272) {
  if (a0_0x4f736f > this.oogaBoogaNextT) {
    if (a0_0x4f736f > this.oogaBoogaFrameT) {
      this.oogaBoogaFrameT = a0_0x4f736f + 300;
      this.oogaBoogaFrame += 1;
      if (this.oogaBoogaFrame == 1) {
        this.gotChat("OOGA!");
      } else if (this.oogaBoogaFrame == 3) {
        this.gotChat("BOOGA!");
      }
    }
    if (this.oogaBoogaFrame > 4) {
      this.oogaBoogaFrame = 0;
      this.oogaBoogaNextT = +new Date() + 15000;
    }
  }
  if (this.oogaBoogaFrame > 0) {
    var _0x39760f = 0;
    var _0x106c36 = 500 / 340;
    var _0x5ca0fa = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/mouth" + this.oogaBoogaFrame + ".png");
    if (_0x5ca0fa) {
      a0_0x4ef4f3.save();
      var _0x2858e4 = this.rad;
      a0_0x4ef4f3.drawImage(_0x5ca0fa, -_0x2858e4 * _0x106c36, (-_0x2858e4 + _0x2858e4 * _0x39760f) * _0x106c36, _0x2858e4 * 2 * _0x106c36, _0x2858e4 * 2 * _0x106c36);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x414a8a.prototype.spearInHand = false;
a0_0x414a8a.prototype.canCreateFire = false;
a0_0x414a8a.prototype.readCustomData_onUpdate = function (_0x18d2c0) {
  a0_0x414a8a.superClass.prototype.readCustomData_onUpdate.call(this, _0x18d2c0);
  var _0x49c57e = _0x18d2c0.readBitGroup();
  this.showHand = _0x49c57e.getBool();
  this.showSpear = this.showHand && _0x49c57e.getBool();
  this.canCreateFire = _0x49c57e.getBool();
};
var a0_0x3fc3fe = 0.84;
var a0_0x1e9483 = 0.47;
var a0_0x17654b = 45;
var a0_0x214a71 = -30;
var a0_0x4ef4e4 = 1.3;
var a0_0x444077 = 1.5;
var a0_0x16eef8 = 0.3;
a0_0x414a8a.prototype.bigfootHead = function (_0x5b76c5) {
  var _0x3bdf35 = 0;
  var _0xa43f7d = 500 / 340;
  var _0x5b011e = this.flag_usingAbility ? "head2" : "head";
  if (!this.flag_usingAbility) {
    _0x3bdf35 = 0;
  }
  var _0x24dc21 = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/" + _0x5b011e + ".png");
  if (_0x24dc21) {
    a0_0x4ef4f3.save();
    var _0x275659 = this.rad;
    a0_0x4ef4f3.drawImage(_0x24dc21, -_0x275659 * _0xa43f7d, (-_0x275659 + _0x275659 * _0x3bdf35) * _0xa43f7d, _0x275659 * 2 * _0xa43f7d, _0x275659 * 2 * _0xa43f7d);
    a0_0x4ef4f3.restore();
  }
};
a0_0x414a8a.prototype.spearHandAnimation = function (_0x515a02) {
  var _0x107499 = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x576deb = 0;
  if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
    _0x576deb = a0_0xe2d896(_0x107499, a0_0x444077, a0_0x16eef8, 2);
  }
  var _0x778346 = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/arm2.png");
  if (_0x778346) {
    a0_0x4ef4f3.save();
    var _0x11a4f9 = -(-0.2 + _0x576deb) * a0_0x844a6b(a0_0x17654b);
    var _0x159379 = this.rad * a0_0x4ef4e4;
    a0_0x4ef4f3.rotate(a0_0x844a6b(a0_0x214a71) + _0x11a4f9);
    var _0x19080a = 0;
    var _0x3d3016 = this.rad;
    var _0x80a4e8 = _0x159379 * 2;
    var _0x5c41c7 = _0x159379 * 2;
    var _0xd18083 = a0_0x1e9483;
    var _0x26cf39 = a0_0x3fc3fe;
    a0_0x4ef4f3.drawImage(_0x778346, _0x19080a + _0x80a4e8 * -_0xd18083, _0x3d3016 + _0x5c41c7 * -_0x26cf39, _0x80a4e8, _0x5c41c7);
    if (this.canCreateFire) {
      var _0x1b450b = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/arm2-fire.png");
      if (_0x1b450b) {
        var _0x107499 = (a0_0x4f736f - this.spawnTime) / 1000;
        var _0x576deb = a0_0xe2d896(_0x107499, 5, 1, 1);
        a0_0x4ef4f3.globalAlpha = Math.max(0, _0x576deb);
        a0_0x4ef4f3.drawImage(_0x1b450b, _0x19080a + _0x80a4e8 * -_0xd18083, _0x3d3016 + _0x5c41c7 * -_0x26cf39, _0x80a4e8, _0x5c41c7);
      }
    }
    a0_0x4ef4f3.restore();
  }
};
a0_0x414a8a.prototype.rightHandAnimation = function (_0x2e8bdf) {
  var _0x5c1f4b = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x258ce3 = 0;
  if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
    _0x258ce3 = a0_0xe2d896(_0x5c1f4b, a0_0x444077, a0_0x16eef8, 2);
  }
  var _0x11239f = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/arm1.png");
  if (_0x11239f) {
    a0_0x4ef4f3.save();
    var _0x2efe61 = -_0x258ce3 * a0_0x844a6b(-10);
    var _0x1275ad = this.rad * a0_0x4ef4e4;
    a0_0x4ef4f3.rotate(a0_0x844a6b(-5) + _0x2efe61);
    var _0x65b912 = 0;
    var _0x92a38 = this.rad;
    var _0x482673 = _0x1275ad * 2;
    var _0x592d61 = _0x1275ad * 2;
    var _0x278f4 = 0.55;
    var _0x558105 = 0.85;
    a0_0x4ef4f3.drawImage(_0x11239f, _0x65b912 + _0x482673 * -_0x278f4, _0x92a38 + _0x592d61 * -_0x558105, _0x482673, _0x592d61);
    a0_0x4ef4f3.restore();
  }
};
a0_0x414a8a.prototype.leftHandAnimation = function (_0x18a304) {
  var _0xb9c8bb = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0xf78e57 = 0;
  if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
    if (this.id != a0_0x1c918d || !a0_0x1528ea) {
      _0xf78e57 = a0_0xe2d896(_0xb9c8bb, a0_0x444077, a0_0x16eef8, 2);
    }
  }
  var _0x4ece92 = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/arm21.png");
  if (_0x4ece92) {
    a0_0x4ef4f3.save();
    var _0x2aac9b = -_0xf78e57 * a0_0x844a6b(-10);
    var _0x153c47 = this.rad * a0_0x4ef4e4;
    a0_0x4ef4f3.rotate(a0_0x844a6b(-5) + _0x2aac9b);
    var _0x4ca2f4 = 0;
    var _0x137059 = this.rad;
    var _0x33c753 = _0x153c47 * 2;
    var _0x3889b3 = _0x153c47 * 2;
    var _0x3dbd7f = 0.47;
    var _0x3f773b = 0.8;
    a0_0x4ef4f3.drawImage(_0x4ece92, _0x4ca2f4 + _0x33c753 * -_0x3dbd7f, _0x137059 + _0x3889b3 * -_0x3f773b, _0x33c753, _0x3889b3);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x414a8a() {
  a0_0x414a8a.superClass.call(this, a0_0x1370b8);
  this.oogaBoogaNextT = +new Date() + 15000;
}
window.BigFoot = a0_0x414a8a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x414a8a, a0_0x1370b8, a0_0x579a5b);
var a0_0x2011f1 = a0_0x26a169;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x26a169.prototype.victimID = 0;
a0_0x26a169.prototype.updateZ = function () {
  if (this.effect_flying) {
    this.z = 100000;
  } else if (this.victimID == 0) {
    this.z = 1100;
  }
};
var a0_0x2b5776 = 1;
var a0_0x2468b4 = 2;
var a0_0x1a1146 = 3;
a0_0x26a169.prototype.customDraw = function (_0x11933b) {
  a0_0x4ef4f3.save();
  if (this.spearState == a0_0x2468b4) {
    var _0x1a696c = this.getSkinImageObj("skins/land/bigfoot/" + this.speciesType + "/spear.png");
    if (_0x1a696c) {
      a0_0x4ef4f3.save();
      var _0x5335dc = this.rad * 2;
      a0_0x4ef4f3.rotate(this.angle + a0_0x2b691e);
      a0_0x4ef4f3.drawImage(_0x1a696c, -_0x5335dc / 2, -_0x5335dc / 2, _0x5335dc, _0x5335dc * 4);
      a0_0x4ef4f3.restore();
    }
  } else if (this.spearState == a0_0x1a1146) {
    a0_0x4ef4f3.save();
    var _0x1a696c = this.getSkinImageObj("skins/land/bigfoot/" + this.speciesType + "/spear2.png");
    if (_0x1a696c) {
      var _0x5335dc = this.rad * 2;
      a0_0x4ef4f3.rotate(this.angle + a0_0x2b691e);
      a0_0x4ef4f3.drawImage(_0x1a696c, -_0x5335dc / 2, -_0x5335dc / 2, _0x5335dc, _0x5335dc * 4);
    }
    a0_0x4ef4f3.restore();
  } else if (this.spearState == a0_0x2b5776) {
    var _0xc2e8ec = this.spearState;
    var _0x1a696c = this.getSkinImageObj("skins/land/bigfoot/" + this.speciesType + "/arm2.png");
    if (_0x1a696c) {
      var _0x9b53ad = Math.min(1, (a0_0x4f736f - this.spawnTime) / 200);
      var _0x5d9074 = a0_0x870f2b((a0_0x4f736f - this.spawnTime) / 300, 0, 1);
      var _0x32cc3d = -_0x5d9074 * a0_0x2b691e;
      a0_0x4ef4f3.rotate(this.angle + _0x32cc3d * (this.specType == 1 ? 1 : -1));
      var _0x5335dc = -this.rad * 1.5;
      var _0x533739 = this.rad / 2;
      var _0x571ee2 = this.rad;
      var _0x42ef85 = _0x5335dc * 2;
      var _0x132ebd = _0x5335dc * 2 * _0x9b53ad;
      var _0x2dcd42 = 0.3;
      var _0x6e174f = 0.8;
      a0_0x4ef4f3.drawImage(_0x1a696c, _0x533739 + _0x42ef85 * -_0x2dcd42, _0x571ee2 + _0x132ebd * -_0x6e174f + _0x5335dc, _0x42ef85, _0x132ebd);
    }
  }
  a0_0x4ef4f3.restore();
};
a0_0x26a169.prototype.spearState = 0;
a0_0x26a169.prototype.effect_flying = false;
a0_0x26a169.prototype.readUpdatedProperty = function (_0x510b25, _0x486bac) {
  if (_0x510b25 == a0_0x3b1f31) {
    this.spearState = _0x486bac.readUInt8();
  } else if (_0x510b25 == a0_0x36b49c) {
    this.victimID = _0x486bac.readUInt32();
    if (this.victimID != 0) {
      if (a0_0x3d5ac5[this.victimID]) {
        this.z = a0_0x3d5ac5[this.victimID].z + 1;
      }
    }
  } else if (_0x510b25 == a0_0x3a611b) {
    this.effect_flying = _0x486bac.readUInt8() == 1;
  }
};
a0_0x26a169.prototype.readCustomData_onNewlyVisible = function (_0x5ca09d) {
  a0_0x26a169.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x5ca09d);
  this.spearState = _0x5ca09d.readUInt8();
  this.victimID = _0x5ca09d.readUInt32();
  if (this.victimID != 0) {
    if (a0_0x3d5ac5[this.victimID]) {
      this.z = a0_0x3d5ac5[this.victimID].z + 1;
    }
  }
  this.effect_flying = _0x5ca09d.readUInt8() == 1;
};
function a0_0x26a169() {
  a0_0x26a169.superClass.call(this);
  a0_0x26a169.prototype.easeAngleChanges = true;
}
window.BigfootSpear = a0_0x26a169;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x26a169, a0_0x20e6c5, a0_0xba2a4f);
var a0_0x58d04c = a0_0x12658e;
a0_0x1ccb61.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1ccb61.prototype.constructor = a0_0x1ccb61;
a0_0x1ccb61.superClass = a0_0x58d04c;
a0_0x1ccb61.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x1ccb61.prototype.setSkinPath = function () {
  this.objSkinPath = "skins/land/bigfoot/" + this.speciesType + "/firewood.png";
};
a0_0x1ccb61.prototype.customDraw = function (_0x3067d7) {
  a0_0x4ef4f3.save();
  var _0x18baca = this.rad * 2.2;
  var _0x3e91f2 = this.getSkinImageObj(this.objSkinPath);
  if (_0x3e91f2) {
    a0_0x4ef4f3.drawImage(_0x3e91f2, -_0x18baca / 2, -_0x18baca / 2, _0x18baca, _0x18baca);
  }
  a0_0x4ef4f3.restore();
};
var a0_0x2e2375 = 121;
function a0_0x1ccb61() {
  a0_0x1ccb61.superClass.call(this, a0_0x2e2375);
}
window.FireWood = a0_0x1ccb61;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1ccb61, a0_0x2e2375);
var a0_0x58d04c = a0_0x12658e;
a0_0x47b37e.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x47b37e.prototype.constructor = a0_0x47b37e;
a0_0x47b37e.superClass = a0_0x58d04c;
a0_0x47b37e.prototype.updateZ = function () {
  this.z = 1100;
};
a0_0x47b37e.prototype.alpha = 1;
a0_0x47b37e.prototype.trunkW = 0.5;
a0_0x47b37e.prototype.customDraw = function (_0x287053) {
  a0_0x4ef4f3.save();
  var _0x1f2258 = 0;
  var _0x134008 = 0;
  let _0x4df657 = a0_0x105431[this.id] == 1;
  var _0x4392f8 = 1;
  try {
    if (_0x4df657) {
      this.alpha += (0.4 - this.alpha) * 0.1;
    } else {
      this.alpha += (1 - this.alpha) * 0.1;
      if (this.alpha > 0.99) {
        this.alpha = 1;
      }
    }
  } catch (_0xb0d4ee) {}
  var _0x5ec0fb = this.getTreeName();
  if (a0_0x1d703e != a0_0x30b084) {
    var _0x241a86 = this.getSkinImageObj("gameobj/101/" + _0x5ec0fb + "/" + this.getTrunk() + ".png");
    if (_0x241a86) {
      var _0x184d77 = this.rad / 2;
      var _0x393ae8 = this.rPer * Math.PI * 2;
      a0_0x4ef4f3.rotate(this.angle);
      a0_0x4ef4f3.drawImage(_0x241a86, -_0x184d77, -_0x184d77, _0x184d77 * 2, _0x184d77 * 2);
    }
  }
  if (this.canopy) {
    var _0x533dc8 = "canopy";
    if (_0x5ec0fb == "default") {
      _0x533dc8 += this.curBiome;
    }
    var _0x184d77 = (this.foodType == a0_0xd897ba ? this.rad * 1.25 : this.rad) + _0x1f2258;
    if (this.eventType == 2 && this.treeType != "default") {
      this.drawEventDecorations(_0x5ec0fb, _0x533dc8, _0x184d77, _0x393ae8);
    } else {
      if (this.xmasTree) {
        this.drawXmasProp(_0x5ec0fb, _0x184d77, _0x393ae8, "ornament", _0x134008);
      }
      if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
        var _0x241a86 = this.getSkinImageObj(this.getCanopySkin(_0x5ec0fb, _0x533dc8));
        if (_0x241a86) {
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.globalAlpha *= this.alpha;
          if (this.curBiome !== a0_0xc64a03 || this.speciesType !== 1) {
            a0_0x4ef4f3.rotate(this.angle);
          }
          a0_0x4ef4f3.drawImage(_0x241a86, -_0x184d77 + _0x134008, -_0x184d77 - _0x134008, _0x184d77 * 2, _0x184d77 * 2);
          a0_0x4ef4f3.restore();
        } else {}
      } else {
        a0_0x4ef4f3.save();
        a0_0x5c99c1(0, 0, this.rad * 0.2, "brown");
        this.drawNoImageTree(this.rad);
        a0_0x4ef4f3.restore();
      }
      if (this.xmasTree) {
        this.drawXmasProps(_0x5ec0fb, _0x184d77, _0x393ae8, _0x134008);
      }
    }
  }
  a0_0x4ef4f3.restore();
};
a0_0x47b37e.prototype.drawNoImageTree = function (_0x6a88c7) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = this.alpha;
  var _0x410731 = this.getBiomeColors();
  a0_0x5c99c1(-_0x6a88c7 * 0.5, -_0x6a88c7 * 0.5, _0x6a88c7 * 0.65, _0x410731.dark);
  a0_0x5c99c1(_0x6a88c7 * 0.5, -_0x6a88c7 * 0.5, _0x6a88c7 * 0.73, _0x410731.dark);
  a0_0x5c99c1(_0x6a88c7 * 0.6, _0x6a88c7 * 0.4, Math.max(0, _0x6a88c7 * 0.78), _0x410731.dark);
  a0_0x5c99c1(-_0x6a88c7 * 0.5, _0x6a88c7 * 0.5, Math.max(0, _0x6a88c7 * 0.6), _0x410731.dark);
  a0_0x5c99c1(-_0x6a88c7 * 0.5, -_0x6a88c7 * 0.5, (_0x6a88c7 - 2) * 0.65, _0x410731.light);
  a0_0x5c99c1(_0x6a88c7 * 0.5, -_0x6a88c7 * 0.5, (_0x6a88c7 - 2) * 0.73, _0x410731.light);
  a0_0x5c99c1(_0x6a88c7 * 0.6, _0x6a88c7 * 0.4, (_0x6a88c7 - 2) * 0.78, _0x410731.light);
  a0_0x5c99c1(-_0x6a88c7 * 0.5, _0x6a88c7 * 0.5, (_0x6a88c7 - 2) * 0.6, _0x410731.light);
  a0_0x4ef4f3.restore();
  return;
  a0_0x4ef4f3.save();
  this.rPer = 0;
  var _0x42b551 = 0;
  var _0x441736 = "#45D157";
  a0_0x4ef4f3.fillStyle = color;
  a0_0x4ef4f3.globalAlpha = this.alpha;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(_0x6a88c7 * 0.5, -_0x6a88c7 * 0.5, Math.max(0, _0x6a88c7 * 0.73), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(_0x6a88c7 * 0.6, _0x6a88c7 * 0.4, Math.max(0, _0x6a88c7 * 0.78), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(-_0x6a88c7 * 0.5, _0x6a88c7 * 0.5, Math.max(0, _0x6a88c7 * 0.6), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.restore();
};
a0_0x47b37e.prototype.lights = 0;
a0_0x47b37e.prototype.drawXmasProps = function (_0x758742, _0x187dc1, _0x206c00, _0xe4bbdf) {
  this.drawXmasProp(_0x758742, _0x187dc1, _0x206c00, "decoration", _0xe4bbdf);
  if (this.lights == 1 || this.lights == 3) {
    this.drawXmasProp(_0x758742, _0x187dc1, _0x206c00, "light", _0xe4bbdf);
  }
  if (this.lights == 2 || this.lights == 3) {
    this.drawXmasProp(_0x758742, _0x187dc1, _0x206c00, "light1", _0xe4bbdf);
  }
};
a0_0x47b37e.prototype.drawXmasProp = function (_0x25a400, _0x474a25, _0x3fe0d4, _0x587085, _0x383c5d) {
  var _0x550beb = "img/tree/" + _0x25a400 + "/xmas/" + _0x587085 + ".png";
  var _0x105ec4 = this.getSkinImageObj(_0x550beb);
  if (_0x105ec4) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x105ec4, -_0x474a25 + _0x383c5d, -_0x474a25 - _0x383c5d, _0x474a25 * 2, _0x474a25 * 2);
    a0_0x4ef4f3.restore();
  } else {
    console.log("not found: " + _0x550beb);
  }
};
a0_0x47b37e.prototype.drawEventDecorations = function (_0x675c44, _0x502649, _0xf6e3ff, _0x48a3bc) {
  let _0x25c5c0 = "gameobj/101/" + _0x675c44 + "/" + _0x502649 + "_" + this.eventType + ".png";
  var _0x365069 = this.getSkinImageObj(_0x25c5c0);
  if (_0x365069) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x365069, -_0xf6e3ff + _0x48a3bc, -_0xf6e3ff - _0x48a3bc, _0xf6e3ff * 2, _0xf6e3ff * 2);
    a0_0x4ef4f3.restore();
  } else {
    console.log("not found: " + _0x25c5c0);
  }
};
a0_0x47b37e.prototype.drawEventDecorations = function (_0x2e021a, _0x4a97ec, _0x9aa800, _0x552d37) {
  let _0x278ec6 = "gameobj/101/" + _0x2e021a + "/" + _0x4a97ec + "_" + this.eventType + ".png";
  var _0x15a24d = this.getSkinImageObj(_0x278ec6);
  console.log(_0x278ec6);
  if (_0x15a24d) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x15a24d, -_0x9aa800 + _0x552d37, -_0x9aa800 - _0x552d37, _0x9aa800 * 2, _0x9aa800 * 2);
    a0_0x4ef4f3.restore();
  }
};
a0_0x47b37e.prototype.getTreeName = function () {
  switch (this.foodType) {
    case a0_0xd897ba:
      return "coco";
    case a0_0x46c550:
      return "banana";
    case a0_0x54352a:
      return "fir";
  }
  return "default";
};
a0_0x47b37e.prototype.getBiomeColors = function () {
  var _0xbb8922 = {
    dark: "#09992f",
    light: "#1cba34"
  };
  switch (this.curBiome) {
    case a0_0x5fac87:
      _0xbb8922 = {
        dark: "#808080",
        light: "#f7f7f7"
      };
      break;
    case a0_0x282b9e:
    case a0_0xc64a03:
      _0xbb8922 = {
        dark: "#a59215",
        light: "#fffff"
      };
      break;
    case a0_0x3938a2:
      _0xbb8922 = {
        dark: "#09992f",
        light: "#1cba34"
      };
      break;
    case a0_0x1bed8b:
      _0xbb8922 = {
        dark: "#09992f",
        light: "limegreen"
      };
      break;
    case a0_0x2f0085:
      _0xbb8922 = {
        dark: "#1aae31",
        light: "limegreen"
      };
      break;
    default:
  }
  return _0xbb8922;
};
a0_0x47b37e.prototype.getTrunk = function () {
  return "trunk";
};
a0_0x47b37e.prototype.foodType = 0;
a0_0x47b37e.prototype.canopy = true;
a0_0x47b37e.prototype.readCustomData_onNewlyVisible = function (_0x342900) {
  this.foodType = _0x342900.readUInt16();
  this.canopy = _0x342900.readUInt8() == 1;
  this.eventType = _0x342900.readUInt8();
  this.xmasTree = this.eventType == 3;
};
a0_0x47b37e.prototype.readUpdatedProperty = function (_0x49084e, _0x493b04) {
  if (_0x49084e == a0_0xceb0b8) {
    this.lights = _0x493b04.readUInt8();
  }
};
a0_0x47b37e.prototype.treeCanopySkin = null;
a0_0x47b37e.prototype.getCanopySkin = function (_0x42ea91, _0x49f1bf) {
  if (this.treeCanopySkin == null) {
    this.treeCanopySkin = "gameobj/101/" + _0x42ea91 + "/" + _0x49f1bf + ".png";
  }
  return this.treeCanopySkin;
};
function a0_0x47b37e() {
  a0_0x47b37e.superClass.call(this, a0_0x3e3fb1);
}
window.Tree = a0_0x47b37e;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x47b37e, a0_0x3e3fb1);
var a0_0x2011f1 = a0_0x22122f;
var a0_0x58d04c = a0_0x12658e;
a0_0x22122f.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x22122f.prototype.constructor = a0_0x22122f;
a0_0x22122f.superClass = a0_0x58d04c;
a0_0x22122f.prototype.updateZ = function () {
  this.z = -215;
};
a0_0x22122f.prototype.customDraw = function (_0x39cfd5) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 0.5;
  {
    a0_0x4ef4f3.fillStyle = a0_0x41030c;
    var _0x33efb3 = -this.rectW / 2;
    var _0xbd9446 = this.rectW / 2;
    var _0x1b59d0 = -this.rectH / 2;
    var _0x215d61 = this.rectH / 2;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.moveTo(_0x33efb3, _0x1b59d0);
    var _0x4b32f9 = 20;
    var _0x42144f = [-15, 10, -10, 12, 0, 5, -10, 5, -12, 5, 10, 0, -6];
    var _0x199f7b = 45;
    var _0x36b562 = 0;
    var _0x54f766 = a0_0x425049 - this.x;
    var _0x52c320 = 0 - this.x;
    var _0x11238d = a0_0xe585d7 - this.y;
    var _0x269595 = 0 - this.y;
    var _0x2e2e5d;
    var _0xd0fe3d = _0x33efb3 - _0x4b32f9;
    for (_0x2e2e5d = _0x1b59d0; _0x2e2e5d < _0x215d61; _0x2e2e5d += _0x199f7b) {
      a0_0x4ef4f3.lineTo(Math.min(_0x54f766, Math.max(_0x52c320, _0xd0fe3d + _0x42144f[_0x36b562])), _0x2e2e5d);
      _0x36b562 = (_0x36b562 + 1) % _0x42144f.length;
    }
    a0_0x4ef4f3.lineTo(_0x33efb3, _0x215d61);
    _0x2e2e5d = _0x215d61 + _0x4b32f9;
    for (_0xd0fe3d = _0x33efb3; _0xd0fe3d < _0xbd9446; _0xd0fe3d += _0x199f7b) {
      a0_0x4ef4f3.lineTo(_0xd0fe3d, Math.min(_0x11238d, Math.max(_0x269595, _0x2e2e5d + _0x42144f[_0x36b562])));
      _0x36b562 = (_0x36b562 + 1) % _0x42144f.length;
    }
    a0_0x4ef4f3.lineTo(_0xbd9446, _0x215d61);
    _0xd0fe3d = _0xbd9446 + _0x4b32f9;
    for (_0x2e2e5d = _0x215d61; _0x2e2e5d > _0x1b59d0; _0x2e2e5d -= _0x199f7b) {
      a0_0x4ef4f3.lineTo(Math.min(_0x54f766, Math.max(_0x52c320, _0xd0fe3d + _0x42144f[_0x36b562])), _0x2e2e5d);
      _0x36b562 = (_0x36b562 + 1) % _0x42144f.length;
    }
    a0_0x4ef4f3.lineTo(_0xbd9446, _0x1b59d0);
    _0x2e2e5d = _0x1b59d0 - _0x4b32f9;
    for (_0xd0fe3d = _0xbd9446; _0xd0fe3d > _0x33efb3; _0xd0fe3d -= _0x199f7b) {
      a0_0x4ef4f3.lineTo(_0xd0fe3d, Math.min(_0x11238d, Math.max(_0x269595, _0x2e2e5d + _0x42144f[_0x36b562])));
      _0x36b562 = (_0x36b562 + 1) % _0x42144f.length;
    }
    a0_0x4ef4f3.closePath();
    a0_0x4ef4f3.fill();
  }
  a0_0x4ef4f3.restore();
};
a0_0x22122f.prototype.edge = function () {
  a0_0x4ef4f3.save();
  var _0x2f0dce = 15;
  {
    a0_0x4ef4f3.fillStyle = "red";
    var _0x5535d7 = -this.rectW / 2;
    var _0x40d8d4 = this.rectW / 2;
    var _0x5919d1 = -this.rectH / 2 + 3;
    var _0xbd0420 = -this.rectH / 2 - _0x2f0dce;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.moveTo(_0x5535d7, _0x5919d1);
    var _0x54e860 = 0;
    var _0x756fab = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
    var _0x31d4a6 = 60;
    var _0x36472b = 0;
    var _0x473eae = a0_0x425049 - this.x;
    var _0x9a47f3 = 0 - this.x;
    var _0x4b8e4f = a0_0xe585d7 - this.y;
    var _0x11d995 = 0 - this.y;
    var _0x161193;
    var _0x22f9be = _0x5535d7 - _0x54e860;
    a0_0x4ef4f3.lineTo(_0x5535d7, _0xbd0420);
    _0x161193 = _0xbd0420 + _0x54e860;
    for (_0x22f9be = _0x5535d7; _0x22f9be < _0x40d8d4; _0x22f9be += _0x31d4a6) {
      a0_0x4ef4f3.lineTo(_0x22f9be, Math.min(_0x4b8e4f, Math.max(_0x11d995, _0x161193 + _0x756fab[_0x36472b])));
      _0x36472b = (_0x36472b + 1) % _0x756fab.length;
    }
    a0_0x4ef4f3.lineTo(_0x40d8d4, _0xbd0420);
    a0_0x4ef4f3.lineTo(_0x40d8d4, _0x5919d1);
    a0_0x4ef4f3.closePath();
  }
  a0_0x4ef4f3.restore();
};
function a0_0x22122f() {
  a0_0x22122f.superClass.call(this, a0_0x26b566);
}
window.RainForest = a0_0x22122f;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x22122f, a0_0x26b566);
var a0_0x58d04c = a0_0x12658e;
a0_0x1e59da.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1e59da.prototype.constructor = a0_0x1e59da;
a0_0x1e59da.superClass = a0_0x58d04c;
a0_0x1e59da.prototype.updateZ = function () {
  this.z = 1005;
};
a0_0x1e59da.prototype.customDraw = function (_0x1516ef) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x5c99c1(0, 0, this.rad, "#000");
  a0_0x4ef4f3.restore();
};
function a0_0x1e59da() {
  a0_0x1e59da.superClass.call(this, a0_0x2a8089);
}
window.FOV = a0_0x1e59da;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1e59da, a0_0x2a8089);
var a0_0x58d04c = a0_0x12658e;
a0_0x5be434.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5be434.prototype.constructor = a0_0x5be434;
a0_0x5be434.superClass = a0_0x58d04c;
a0_0x5be434.prototype.updateZ = function () {
  this.z = -159;
  if (this.specType == 0 || 1) {
    this.z = -158;
  }
};
a0_0x5be434.prototype.currentWidth = 90;
a0_0x5be434.prototype.currentPadding = 0;
a0_0x5be434.prototype.padding = 50;
a0_0x5be434.prototype.isFloatingRiver = false;
a0_0x5be434.prototype.customDraw = function (_0x38b7c1) {
  if (_0x38b7c1) {
    this.drawBody(a0_0x575276, 1.5, false);
  } else {}
  this.drawStream(a0_0x2b43c5);
  this.drawCurrent(this.isFloatingRiver, this.riverSize);
};
a0_0x5be434.prototype.drawCurrent = function (_0x468523, _0x1e06ad) {
  if (_0x468523) {
    this.currentPadding = this.padding * _0x1e06ad / 2;
    var _0x2d139c = 60;
    var _0x548a5b = 1000;
    if (this.specType == 0) {
      var _0x216992 = this.getSkinImageObj("gameobj/40/currentRight.png");
      if (_0x216992) {
        var _0x4e862f = -this.rectW / 2 + 50;
        var _0x3122ef = this.currentWidth;
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.globalAlpha = 1;
        maxWaves = Math.round(this.rectW / _0x3122ef) - 1;
        for (i = 0; i < maxWaves; i++) {
          var _0x336137 = this.speedX * (_0x3122ef / _0x2d139c) * _0x548a5b;
          var _0x5adadd = (a0_0x4f736f - this.spawnTime) % _0x336137 / _0x336137;
          var _0x254a83 = _0x3122ef;
          var _0x1c061b = _0x4e862f + _0x254a83 * _0x5adadd;
          a0_0x4ef4f3.drawImage(_0x216992, _0x1c061b, this.currentPadding + -this.rectH * _0x1e06ad / 2, _0x3122ef * _0x1e06ad, this.riverStreamHeight * _0x1e06ad - 8);
          _0x4e862f += _0x3122ef;
        }
        a0_0x4ef4f3.restore();
      }
    } else if (this.specType == 1) {
      var _0x216992 = this.getSkinImageObj("gameobj/40/currentLeft.png");
      if (_0x216992) {
        var _0x4e862f = this.rectW / 2 - 100;
        var _0x3122ef = this.currentWidth;
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.globalAlpha = 1;
        maxWaves = Math.round(this.rectW / _0x3122ef) - 1;
        for (i = 0; i < maxWaves; i++) {
          var _0x336137 = this.speedX * (_0x3122ef / _0x2d139c) * _0x548a5b;
          var _0x5adadd = (a0_0x4f736f - this.spawnTime) % _0x336137 / _0x336137;
          var _0x254a83 = _0x3122ef;
          var _0x1c061b = _0x4e862f + _0x254a83 * _0x5adadd;
          a0_0x4ef4f3.drawImage(_0x216992, _0x1c061b, this.currentPadding + -this.rectH * _0x1e06ad / 2, _0x3122ef * _0x1e06ad, this.riverStreamHeight * _0x1e06ad - 8);
          _0x4e862f -= _0x3122ef;
        }
        a0_0x4ef4f3.restore();
      }
    } else if (this.specType == 2) {
      var _0x216992 = this.getSkinImageObj("gameobj/40/currentDown.png");
      if (_0x216992) {
        var _0x19b83e = -this.rectH / 2 - 50;
        var _0x15af28 = this.currentWidth;
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.globalAlpha = 1;
        maxWaves = Math.round(this.rectH / _0x15af28) - 1;
        for (i = 0; i < maxWaves; i++) {
          var _0x336137 = this.speedY * (_0x15af28 / _0x2d139c) * _0x548a5b;
          var _0x5adadd = (a0_0x4f736f - this.spawnTime) % _0x336137 / _0x336137;
          var _0x254a83 = _0x15af28;
          var _0x2e06c9 = _0x19b83e + _0x254a83 * _0x5adadd;
          if (i > 0) {
            a0_0x4ef4f3.drawImage(_0x216992, this.currentPadding + -this.rectW * _0x1e06ad / 2, _0x2e06c9, this.riverStreamHeight * _0x1e06ad - 8, _0x15af28 * _0x1e06ad);
          }
          _0x19b83e += _0x15af28;
        }
        a0_0x4ef4f3.restore();
      }
    } else if (this.specType == 3) {
      var _0x216992 = this.getSkinImageObj("gameobj/40/currentUp.png");
      if (_0x216992) {
        var _0x19b83e = this.rectH / 2 + 50;
        var _0x15af28 = this.currentWidth;
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.globalAlpha = 1;
        maxWaves = Math.round(this.rectH / _0x15af28) - 1;
        for (i = 0; i < maxWaves; i++) {
          var _0x336137 = this.speedY * (_0x15af28 / _0x2d139c) * _0x548a5b;
          var _0x5adadd = (a0_0x4f736f - this.spawnTime) % _0x336137 / _0x336137;
          var _0x254a83 = _0x15af28;
          var _0x2e06c9 = _0x19b83e + _0x254a83 * _0x5adadd;
          if (i > 0) {
            a0_0x4ef4f3.drawImage(_0x216992, this.currentPadding + -this.rectW * _0x1e06ad / 2, _0x2e06c9, this.riverStreamHeight * _0x1e06ad - 8, _0x15af28 * _0x1e06ad);
          }
          _0x19b83e -= _0x15af28;
        }
        a0_0x4ef4f3.restore();
      }
    }
  }
};
a0_0x5be434.prototype.getStreamMargin = function () {
  return this.margin;
};
a0_0x5be434.prototype.getRectWidth = function () {
  var _0x4ecadc = this.rectW;
  return _0x4ecadc;
};
a0_0x5be434.prototype.getRectHeight = function () {
  var _0x4c9d1f = this.rectH;
  return _0x4c9d1f;
};
a0_0x5be434.prototype.jaggedSidesForRect = function (_0x1eb865, _0x5043cf) {
  a0_0x4ef4f3.fillStyle = _0x1eb865;
  var _0x2182e3 = false;
  if (_0x5043cf) {
    _0x2182e3 = true;
  }
  var _0x53b0d8 = -this.getRectWidth() / 2 + (_0x2182e3 ? _0x5043cf.x_min : 0);
  var _0x42c666 = this.getRectWidth() / 2 + (_0x2182e3 ? _0x5043cf.x_max : 0);
  var _0x185461 = -this.getRectHeight() / 2 + (_0x2182e3 ? _0x5043cf.y_min : 0);
  var _0x2853b0 = this.getRectHeight() / 2 + (_0x2182e3 ? _0x5043cf.y_max : 0);
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(_0x53b0d8, _0x185461);
  var _0x2bbb57 = 30;
  var _0x552ac9 = [-8, 10, -10, 12, 0, 5, -10, 5, -12, 5, 10, 0, -6];
  var _0x129016 = 45;
  var _0x449f49 = 0;
  var _0x2a75ee = a0_0x425049 - this.x;
  var _0x2b30e3 = 0 - this.x;
  var _0x5cb213 = a0_0xe585d7 - this.y;
  var _0x36f69a = 0 - this.y;
  var _0x3819a5;
  var _0x29f205 = _0x53b0d8 - _0x2bbb57;
  for (_0x3819a5 = _0x185461; _0x3819a5 < _0x2853b0; _0x3819a5 += _0x129016) {
    a0_0x4ef4f3.lineTo(Math.min(_0x2a75ee, Math.max(_0x2b30e3, _0x29f205 + _0x552ac9[_0x449f49])), _0x3819a5);
    _0x449f49 = (_0x449f49 + 1) % _0x552ac9.length;
  }
  a0_0x4ef4f3.lineTo(_0x53b0d8, _0x2853b0);
  _0x3819a5 = _0x2853b0 + _0x2bbb57;
  for (_0x29f205 = _0x53b0d8; _0x29f205 < _0x42c666; _0x29f205 += _0x129016) {
    a0_0x4ef4f3.lineTo(_0x29f205, Math.min(_0x5cb213, Math.max(_0x36f69a, _0x3819a5 + _0x552ac9[_0x449f49])));
    _0x449f49 = (_0x449f49 + 1) % _0x552ac9.length;
  }
  a0_0x4ef4f3.lineTo(_0x42c666, _0x2853b0);
  _0x29f205 = _0x42c666 + _0x2bbb57;
  for (_0x3819a5 = _0x2853b0; _0x3819a5 > _0x185461; _0x3819a5 -= _0x129016) {
    a0_0x4ef4f3.lineTo(Math.min(_0x2a75ee, Math.max(_0x2b30e3, _0x29f205 + _0x552ac9[_0x449f49])), _0x3819a5);
    _0x449f49 = (_0x449f49 + 1) % _0x552ac9.length;
  }
  a0_0x4ef4f3.lineTo(_0x42c666, _0x185461);
  _0x3819a5 = _0x185461 - _0x2bbb57;
  for (_0x29f205 = _0x42c666; _0x29f205 > _0x53b0d8; _0x29f205 -= _0x129016) {
    a0_0x4ef4f3.lineTo(_0x29f205, Math.min(_0x5cb213, Math.max(_0x36f69a, _0x3819a5 + _0x552ac9[_0x449f49])));
    _0x449f49 = (_0x449f49 + 1) % _0x552ac9.length;
  }
  a0_0x4ef4f3.closePath();
  a0_0x4ef4f3.fill();
};
a0_0x5be434.prototype.drawStream = function (_0x2ba8da) {
  a0_0x4ef4f3.save();
  if (this.specType < 2) {
    var _0x22db20 = -this.rectW / 2;
    var _0x5176b2 = this.rectW;
    var _0x5efe64 = -this.riverStreamHeight / 2 * this.riverSize;
    var _0x259f82 = this.riverStreamHeight * this.riverSize;
    a0_0x4ef4f3.fillStyle = _0x2ba8da;
    this.drawRandomEdges(_0x22db20, _0x5efe64, _0x5176b2 / 2, _0x259f82 / 2);
  } else {
    var _0x22db20 = -this.riverStreamHeight / 2 * this.riverSize;
    var _0x5176b2 = this.riverStreamHeight * this.riverSize;
    var _0x5efe64 = -this.rectH / 2;
    var _0x259f82 = this.rectH;
    a0_0x4ef4f3.fillStyle = _0x2ba8da;
    this.drawRandomEdges(_0x22db20, _0x5efe64, _0x5176b2 / 2, _0x259f82 / 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x5be434.prototype.drawRandomEdges = function (_0x49ed1d, _0x58bb8a, _0x2507a1, _0x2629b6) {
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(_0x49ed1d, _0x58bb8a);
  var _0x437311 = 10;
  var _0x5e01ba = [-8, 10, -10, 12, 0, 5, -10, 5, -12, 5, 10, 0, -6];
  var _0xc653ac = 45;
  var _0x356453 = 0;
  var _0x551cb2;
  var _0x801dcf = _0x49ed1d - _0x437311;
  if (this.specType == 2 || this.specType == 3) {
    for (_0x551cb2 = _0x58bb8a; _0x551cb2 < _0x2629b6; _0x551cb2 += _0xc653ac) {
      a0_0x4ef4f3.lineTo(_0x801dcf + _0x5e01ba[_0x356453], _0x551cb2);
      _0x356453 = (_0x356453 + 1) % _0x5e01ba.length;
    }
  }
  a0_0x4ef4f3.lineTo(_0x49ed1d, _0x2629b6);
  _0x551cb2 = _0x2629b6 + _0x437311;
  if (this.specType == 0 || this.specType == 1) {
    for (_0x801dcf = _0x49ed1d; _0x801dcf < _0x2507a1; _0x801dcf += _0xc653ac) {
      a0_0x4ef4f3.lineTo(_0x801dcf, _0x551cb2 + _0x5e01ba[_0x356453]);
      _0x356453 = (_0x356453 + 1) % _0x5e01ba.length;
    }
  }
  a0_0x4ef4f3.lineTo(_0x2507a1, _0x2629b6);
  if (this.specType == 2 || this.specType == 3) {
    _0x801dcf = _0x2507a1 + _0x437311;
    for (_0x551cb2 = _0x2629b6; _0x551cb2 > _0x58bb8a; _0x551cb2 -= _0xc653ac) {
      a0_0x4ef4f3.lineTo(_0x801dcf + _0x5e01ba[_0x356453], _0x551cb2);
      _0x356453 = (_0x356453 + 1) % _0x5e01ba.length;
    }
  }
  a0_0x4ef4f3.lineTo(_0x2507a1, _0x58bb8a);
  if (this.specType == 0 || this.specType == 1) {
    _0x551cb2 = _0x58bb8a - _0x437311;
    for (_0x801dcf = _0x2507a1; _0x801dcf > _0x49ed1d; _0x801dcf -= _0xc653ac) {
      a0_0x4ef4f3.lineTo(_0x801dcf, _0x551cb2 + _0x5e01ba[_0x356453]);
      _0x356453 = (_0x356453 + 1) % _0x5e01ba.length;
    }
  }
  a0_0x4ef4f3.closePath();
  a0_0x4ef4f3.fill();
};
a0_0x5be434.prototype.drawBody = function (_0x3cb967, _0x4e741d, _0x11ba8) {
  var _0x55358c = a0_0x4ef4f3.globalAlpha;
  {
    a0_0x4ef4f3.fillStyle = _0x3cb967;
    var _0x17e1f0 = 0;
    if (_0x4e741d > 1) {
      _0x17e1f0 = 100;
    }
    var _0x243f66 = -this.rectW / 2 + this.margin.x_min;
    var _0x1bff29 = this.rectW / 2 + this.margin.x_max;
    var _0x5b4a94 = (-this.riverStreamHeight / 2 + 3) * _0x4e741d + this.margin.y_min;
    var _0x22412f = (-this.riverStreamHeight / 2 - _0x49fad7) * _0x4e741d + this.margin.y_max;
    if (this.specType < 2) {
      a0_0x4ef4f3.fillRect(_0x243f66, -this.riverStreamHeight / 2 * _0x4e741d, _0x1bff29 * 2, this.riverStreamHeight * _0x4e741d);
    } else {
      a0_0x4ef4f3.fillRect(-this.riverStreamHeight / 2 * _0x4e741d, -this.rectH / 2, this.riverStreamHeight * _0x4e741d, this.rectH);
    }
    if (this.specType < 2) {
      var _0x49fad7 = 15;
      {
        a0_0x4ef4f3.fillStyle = _0x3cb967;
        var _0x243f66 = -this.rectW / 2 + this.margin.x_min;
        var _0x1bff29 = this.rectW / 2 + this.margin.x_max;
        var _0x5b4a94 = (-this.riverStreamHeight / 2 + 3) * _0x4e741d + this.margin.y_min;
        var _0x22412f = (-this.riverStreamHeight / 2 - _0x49fad7) * _0x4e741d + this.margin.y_max;
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.moveTo(_0x243f66, _0x5b4a94);
        var _0x5a55ba = 0;
        var _0x30655d = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
        var _0x11f4aa = 60;
        var _0x5e9b16 = 0;
        var _0x37d156 = a0_0x425049 - this.x;
        var _0x2d0e2b = 0 - this.x;
        var _0x18c61d = a0_0xe585d7 - this.y;
        var _0x49c6c8 = 0 - this.y;
        var _0x2608bb;
        var _0x347fd4 = _0x243f66 - _0x5a55ba;
        a0_0x4ef4f3.lineTo(_0x243f66, _0x22412f);
        _0x2608bb = _0x22412f + _0x5a55ba;
        for (_0x347fd4 = _0x243f66; _0x347fd4 < _0x1bff29; _0x347fd4 += _0x11f4aa) {
          a0_0x4ef4f3.lineTo(_0x347fd4, Math.min(_0x18c61d, Math.max(_0x49c6c8, _0x2608bb + _0x30655d[_0x5e9b16])));
          _0x5e9b16 = (_0x5e9b16 + 1) % _0x30655d.length;
        }
        a0_0x4ef4f3.lineTo(_0x1bff29, _0x22412f);
        a0_0x4ef4f3.lineTo(_0x1bff29, _0x5b4a94);
        a0_0x4ef4f3.closePath();
        a0_0x4ef4f3.fill();
      }
      {
        a0_0x4ef4f3.fillStyle = _0x3cb967;
        var _0x243f66 = -this.rectW / 2 + this.margin.x_min;
        var _0x1bff29 = this.rectW / 2 + this.margin.x_max;
        var _0x5b4a94 = (-this.riverStreamHeight / 2 - 3) * _0x4e741d + this.margin.y_min;
        var _0x22412f = (-this.riverStreamHeight / 2 + _0x49fad7) * _0x4e741d + this.margin.y_max;
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.moveTo(_0x243f66, _0x5b4a94);
        var _0x5a55ba = 0;
        var _0x30655d = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
        var _0x11f4aa = 60;
        var _0x5e9b16 = 0;
        var _0x37d156 = a0_0x425049 - this.x;
        var _0x2d0e2b = 0 - this.x;
        var _0x18c61d = a0_0xe585d7 - this.y;
        var _0x49c6c8 = 0 - this.y;
        var _0x2608bb;
        var _0x347fd4 = _0x243f66 - _0x5a55ba;
        a0_0x4ef4f3.lineTo(_0x243f66, _0x22412f);
        _0x2608bb = _0x22412f + _0x5a55ba;
        for (_0x347fd4 = _0x243f66; _0x347fd4 < _0x1bff29; _0x347fd4 += _0x11f4aa) {
          a0_0x4ef4f3.lineTo(_0x347fd4, Math.min(_0x18c61d, Math.max(_0x49c6c8, _0x2608bb + _0x30655d[_0x5e9b16])));
          _0x5e9b16 = (_0x5e9b16 + 1) % _0x30655d.length;
        }
        a0_0x4ef4f3.lineTo(_0x1bff29, _0x22412f);
        a0_0x4ef4f3.lineTo(_0x1bff29, _0x5b4a94);
        a0_0x4ef4f3.closePath();
        a0_0x4ef4f3.fill();
      }
    }
  }
};
a0_0x5be434.prototype.speedX = 1;
a0_0x5be434.prototype.speedY = 1;
a0_0x5be434.prototype.onLerpUpdate = function (_0x4c81a9) {
  this.riverSize = _0x4c81a9 * (this.n_riverSize - this.o_riverSize) + this.o_riverSize;
};
a0_0x5be434.prototype.readUpdatedProperty = function (_0x49a080, _0xa44e3) {
  if (_0x49a080 == a0_0x2867fc) {
    this.n_riverSize = _0xa44e3.readUInt16() / 1000;
    this.o_riverSize = this.riverSize;
  }
};
a0_0x5be434.prototype.worldUpd_readMsgNewlyVisible = function (_0x566dfb, _0x36f1ec, _0x26ed94) {
  this.setObjTypes(_0x36f1ec, _0x26ed94);
  this.id = _0x566dfb.readUInt32();
  var _0x355aa8 = _0x566dfb.readUInt16() / 4;
  var _0x504a66 = _0x566dfb.readUInt16() / 4;
  this.rectW = _0x566dfb.readUInt16();
  this.rectH = _0x566dfb.readUInt16();
  this.curBiome = _0x566dfb.readUInt8();
  this.clientBatchDrawID = _0x566dfb.readUInt16();
  this.specType = _0x566dfb.readUInt8();
  this.riverStreamHeight = _0x566dfb.readUInt16();
  this.isRectangle = true;
  this.ox = this.x = this.nx = _0x355aa8;
  this.oy = this.y = this.ny = _0x504a66;
  this.clientBatchDraw = true;
  this.isFloatingRiver = _0x566dfb.readUInt8() == 1;
  if (this.specType == 1) {
    this.speedX = -1;
  }
  if (this.specType == 3) {
    this.speedY = -1;
  }
  this.riverSize = this.o_riverSize = this.n_riverSize = _0x566dfb.readUInt16() / 1000;
  var _0x39c7eb = 0;
  var _0x44c2af = 0;
  var _0x59e665 = 0;
  var _0x30a606 = 0;
  if (this.specType == 2) {
    _0x30a606 = -120;
  } else if (this.specType == 3) {
    _0x59e665 = 120;
  } else {
    _0x39c7eb = 120;
    _0x44c2af = -120;
  }
  this.margin = {
    x_min: _0x39c7eb,
    x_max: _0x44c2af,
    y_min: _0x59e665,
    y_max: _0x30a606
  };
  this.mopeSeasonID = 1;
  this.generateTerrainFeatures();
};
a0_0x5be434.prototype.biomePattern = null;
a0_0x5be434.prototype.generateTerrainFeatures = function () {
  var _0x2642af = [];
  var _0x8f2a9a = 300;
  var _0x8c019a = 1.5;
  if (this.specType == 2 || this.specType == 3) {
    var _0x5cac46 = 0;
    var _0x24a759 = -this.rectH / 2;
    while (_0x24a759 + _0x8f2a9a < this.rectH / 2) {
      _0x5cac46 = -_0x8f2a9a / 2;
      var _0x358e0 = Math.max(0, Math.round(a0_0x1da5bb(0, 3)) - 1);
      _0x2642af.push({
        x: _0x5cac46,
        y: _0x24a759,
        w: _0x8f2a9a,
        h: _0x8f2a9a,
        img: _0x358e0,
        r: a0_0x1da5bb(0, 180)
      });
      _0x24a759 += _0x8f2a9a * _0x8c019a;
    }
  } else {
    var _0x24a759 = 0;
    var _0x5cac46 = _0x8f2a9a / 4 - this.rectW / 2;
    while (_0x5cac46 + _0x8f2a9a < this.rectW / 2) {
      _0x24a759 = -_0x8f2a9a / 2;
      var _0x358e0 = Math.max(0, Math.round(a0_0x1da5bb(0, 3)) - 1);
      _0x2642af.push({
        x: _0x5cac46,
        y: _0x24a759,
        w: _0x8f2a9a,
        h: _0x8f2a9a,
        img: _0x358e0,
        r: a0_0x1da5bb(0, 180)
      });
      _0x5cac46 += _0x8f2a9a * _0x8c019a;
    }
  }
  this.biomePattern = _0x2642af;
};
a0_0x5be434.prototype.drawTerrainFeatures = function () {};
a0_0x5be434.prototype.drawBox = function (_0x585ff1, _0x50e7e2, _0x2a93da, _0x4af2f0) {
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.fillStyle = "red";
  a0_0x4ef4f3.moveTo(_0x585ff1, _0x50e7e2);
  a0_0x4ef4f3.lineTo(_0x585ff1, _0x4af2f0);
  a0_0x4ef4f3.lineTo(_0x2a93da, _0x4af2f0);
  a0_0x4ef4f3.lineTo(_0x2a93da, _0x50e7e2);
  a0_0x4ef4f3.closePath();
  a0_0x4ef4f3.fill();
};
function a0_0x5be434() {
  a0_0x5be434.superClass.call(this, a0_0x585d48);
  this.clientBatchDraw = true;
}
window.River = a0_0x5be434;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5be434, a0_0x585d48);
var a0_0x58d04c = a0_0x12658e;
a0_0x3f165c.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3f165c.prototype.constructor = a0_0x3f165c;
a0_0x3f165c.superClass = a0_0x58d04c;
a0_0x3f165c.prototype.LakeSize = 1;
a0_0x3f165c.prototype.isEmptyLake = false;
a0_0x3f165c.prototype.isDeathLake = false;
a0_0x3f165c.prototype.updateZ = function () {
  if (this.isEmptyLake) {
    this.z = -157;
  } else {
    this.z = -160;
  }
};
a0_0x3f165c.prototype.customDraw = function (_0x322710) {
  if (this.isDeathLake) {
    a0_0x4ef4f3.fillStyle = a0_0x575276;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    this.poisonBody(a0_0x2b43c5, this.LakeSize, this.poison);
  } else {
    this.drawBody(a0_0x2b43c5, 1);
  }
};
a0_0x3f165c.prototype.poisonBody = function (_0x118e74, _0x258819, _0x4a65b6) {
  {
    var _0x105eef = "#547d24";
    var _0x30449a = this.rad * _0x258819;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 1;
    if (a0_0x1d703e != a0_0x30b084) {
      a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
    }
    var _0x1f62b5 = 5.5;
    var _0x249a6f = a0_0x232cc7("lake", this.spawnTime);
    if (_0x249a6f !== undefined && _0x249a6f != null) {
      this.theFrame = _0x249a6f;
    }
    _0x1f62b5 = this.theFrame;
    var _0x502df1 = 4;
    a0_0x4ef4f3.fillStyle = a0_0x575276;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, _0x30449a, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.fillStyle = _0x118e74;
    var _0x4719a0 = _0x30449a * 0.45;
    var _0xef53c = _0x30449a * 0.45 + this.rPer * 15;
    var _0x3c3153 = _0x30449a * 0.5;
    var _0x3bc20e = _0x30449a * 0.5 + this.rPer * 15;
    var _0x3b3d13 = -_0x30449a * 0.55 * 0.707;
    var _0x1d3c60 = +_0x30449a * 0.55 * 0.707 + this.rPer * 15;
    var _0x4d4283 = -_0x30449a * 0.75;
    var _0x268719 = -_0x30449a * 0.35 + this.rPer * 15;
    var _0x2a1a20 = _0x30449a + this.rPer * 10;
    var _0x288872 = this.rPer * 50;
    var _0xb9fd40 = _0x30449a - this.rPer * 20;
    var _0x17a7ae = this.rPer * 50;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, Math.max(0, _0x30449a - _0x502df1 + _0x1f62b5), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.fillStyle = _0x105eef;
    a0_0x4ef4f3.globalAlpha = _0x4a65b6;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, Math.max(0, _0x30449a - _0x502df1 + _0x1f62b5), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.restore();
    a0_0x4ef4f3.restore();
  }
};
a0_0x3f165c.prototype.drawBody = function (_0x448d49, _0x7a2db8, _0x5e4920) {
  {
    var _0x1b6a76 = this.rad * _0x7a2db8;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = _0x5e4920;
    if (!a0_0x1528ea) {
      if (a0_0x1d703e != a0_0x30b084) {
        a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
      }
    }
    var _0x5d2ddc = 0;
    if (!a0_0x1528ea && !this.isEmptyLake) {
      var _0x390cf4 = (a0_0x4f736f - this.spawnTime) / 1000;
      var _0x340351 = 4;
      var _0x5074ea = 5.5;
      _0x5d2ddc = _0x5074ea * Math.sin(Math.PI * 2 / _0x340351 * _0x390cf4);
    }
    var _0x13ba76 = 4;
    if (!this.isEmptyLake) {
      a0_0x4ef4f3.fillStyle = a0_0x575276;
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(0, 0, _0x1b6a76, 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
    }
    if (this.curBiome == a0_0x5fac87) {
      a0_0x4ef4f3.fillStyle = "#8da0d6";
    } else {
      a0_0x4ef4f3.fillStyle = a0_0x2b43c5;
    }
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, Math.max(0, _0x1b6a76 - _0x13ba76 + _0x5d2ddc), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    if (!a0_0x1528ea || a0_0x1d703e != a0_0x30b084) {
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(_0x1b6a76 * 0.45, -_0x1b6a76 * 0.45 + this.rPer * 15, Math.max(0, _0x1b6a76 * 0.5 + _0x5d2ddc), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(_0x1b6a76 * 0.5, _0x1b6a76 * 0.5 + this.rPer * 15, Math.max(0, _0x1b6a76 * 0.4 + _0x5d2ddc), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(-_0x1b6a76 * 0.55 * 0.707, +_0x1b6a76 * 0.55 * 0.707 + this.rPer * 15, Math.max(0, _0x1b6a76 * 0.5 + _0x5d2ddc), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(-_0x1b6a76 * 0.75, -_0x1b6a76 * 0.35 + this.rPer * 15, Math.max(0, _0x1b6a76 * 0.3 + _0x5d2ddc), 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(_0x1b6a76 + this.rPer * 10, this.rPer * 50, this.specType == 0 ? 8 : 4, 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
      a0_0x4ef4f3.beginPath();
      a0_0x4ef4f3.arc(_0x1b6a76 - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
      a0_0x4ef4f3.fill();
    }
    a0_0x4ef4f3.restore();
  }
};
a0_0x3f165c.prototype.onLerpUpdate = function (_0x82ad86) {
  this.LakeSize = _0x82ad86 * (this.n_LakeSize - this.o_LakeSize) + this.o_LakeSize;
};
a0_0x3f165c.prototype.readUpdatedProperty = function (_0x387f01, _0x484d26) {
  if (_0x387f01 == a0_0x4591ac) {
    this.n_LakeSize = _0x484d26.readUInt16() / 1000;
    this.o_LakeSize = this.LakeSize;
  } else if (_0x387f01 == a0_0x5f28ca) {
    this.poison = _0x484d26.readUInt16() / 1000;
  } else if (_0x387f01 == a0_0x40365c) {
    this.isEmptyLake = _0x484d26.readUInt8() == 1;
  }
};
a0_0x3f165c.prototype.readCustomData_onNewlyVisible = function (_0x25e2b5) {
  this.isEmptyLake = _0x25e2b5.readUInt8() == 1;
  this.isDeathLake = _0x25e2b5.readUInt8() == 1;
  this.LakeSize = this.o_LakeSize = this.n_LakeSize = _0x25e2b5.readUInt16() / 1000;
  if (this.isDeathLake) {
    this.poison = _0x25e2b5.readUInt16() / 1000;
    this.LakeStream = _0x25e2b5.readUInt16();
  }
};
function a0_0x3f165c() {
  a0_0x3f165c.superClass.call(this, a0_0x1fa0cc);
}
window.Lake = a0_0x3f165c;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3f165c, a0_0x1fa0cc);
var a0_0x58d04c = a0_0x12658e;
a0_0x1ff7cf.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1ff7cf.prototype.constructor = a0_0x1ff7cf;
a0_0x1ff7cf.superClass = a0_0x58d04c;
a0_0x1ff7cf.prototype.updateZ = function () {
  this.z = 1010;
};
a0_0x1ff7cf.prototype.customDraw = function (_0x316b39) {
  var _0x4dff16 = 0;
  var _0x27f3dd = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0xaeafda = a0_0xe2d896(_0x27f3dd, 1, 0.3, 2);
  var _0x3af938 = this.getSkinImageObj("img/viralpandemic/virus.png");
  if (_0x3af938) {
    var _0x3c2ae5 = this.rad * 1.2 + _0xaeafda;
    if (this.stickyVirus) {
      a0_0x4ef4f3.rotate(this.angle);
    } else {
      if (this.angleR == undefined) {
        this.angleR = a0_0x290f57(0.01, 0.09);
      }
      this.angleR += 0.01;
      a0_0x4ef4f3.rotate(this.angleR);
    }
    a0_0x4ef4f3.drawImage(_0x3af938, -_0x3c2ae5, -_0x3c2ae5, _0x3c2ae5 * 2, _0x3c2ae5 * 2);
  } else {
    this.drawOutlinedCircle("", "white");
  }
};
a0_0x1ff7cf.prototype.stickyVirus = false;
a0_0x1ff7cf.prototype.readUpdatedProperty = function (_0x27da5c, _0x3cc8d4) {
  if (_0x27da5c == a0_0x329353) {
    this.stickyVirus = _0x3cc8d4.readUInt8() == 1;
  }
};
function a0_0x1ff7cf() {
  a0_0x1ff7cf.superClass.call(this, a0_0x10c87b);
  a0_0x1ff7cf.prototype.easeAngleChanges = true;
}
window.Virus = a0_0x1ff7cf;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1ff7cf, a0_0x10c87b);
var a0_0x58d04c = a0_0x12658e;
a0_0x5e1ae4.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5e1ae4.prototype.constructor = a0_0x5e1ae4;
a0_0x5e1ae4.superClass = a0_0x58d04c;
a0_0x5e1ae4.prototype.foodType = 0;
a0_0x5e1ae4.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x5e1ae4.prototype.customDraw = function (_0x4fab8d) {
  a0_0x4ef4f3.save();
  var _0xcfc6de = this.getImmunityFoodName();
  var _0x332ffd = this.getSkinImageObj("img/viralpandemic/" + _0xcfc6de + "_e.png");
  if (_0x332ffd) {
    var _0x30eb57 = this.rad;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.rPer * 0.5 * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0x332ffd, -_0x30eb57, -_0x30eb57, _0x30eb57 * 2, _0x30eb57 * 2);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
a0_0x5e1ae4.prototype.getImmunityFoodName = function () {
  var _0x29b702 = "cabbage";
  switch (this.foodType) {
    case 1:
      _0x29b702 = "cabbage";
      break;
    case 2:
      _0x29b702 = "dragonfruit";
      break;
    case 3:
      _0x29b702 = "onion";
      break;
    case 4:
      _0x29b702 = "papaya";
      break;
    case 5:
      _0x29b702 = "papayaslice";
      break;
    case 6:
      _0x29b702 = "peach";
      break;
    case 7:
      _0x29b702 = "peapod";
      break;
    case 8:
      _0x29b702 = "peapod1";
      break;
  }
  return _0x29b702;
};
a0_0x5e1ae4.prototype.readCustomData_onNewlyVisible = function (_0x13e24a) {
  this.foodType = _0x13e24a.readUInt8();
};
function a0_0x5e1ae4() {
  a0_0x5e1ae4.superClass.call(this, a0_0xf03a9e);
  this.doesDrawEffectScale = true;
}
window.ImmunityFood = a0_0x5e1ae4;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5e1ae4, a0_0xf03a9e);
var a0_0x58d04c = a0_0x12658e;
a0_0x40d5ec.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x40d5ec.prototype.constructor = a0_0x40d5ec;
a0_0x40d5ec.superClass = a0_0x58d04c;
var a0_0x3326d1 = 0;
var a0_0x29f265 = 0;
a0_0x40d5ec.prototype.updateZ = function () {
  this.z = 100102;
};
a0_0x40d5ec.prototype.customDraw = function (_0x61369b) {
  a0_0x4ef4f3.save();
  if (this.isEnabled) {
    a0_0x4ef4f3.globalAlpha = 0.4;
  } else {
    a0_0x4ef4f3.globalAlpha = 0.2;
  }
  a0_0x4ef4f3.fillStyle = "black";
  a0_0x4ef4f3.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
  a0_0x4ef4f3.strokeRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
  if (this.isEnabled) {
    a0_0x4ef4f3.globalAlpha = this.opacity * 0.5;
  } else {
    a0_0x4ef4f3.globalAlpha = this.opacity * 0.2;
  }
  a0_0x4ef4f3.fillStyle = this.color;
  a0_0x4ef4f3.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
  a0_0x4ef4f3.lineWidth = "3";
  if (this.btnStroke > 0) {
    a0_0x4ef4f3.globalAlpha = this.opacity * 0.9;
    a0_0x4ef4f3.strokeStyle = this.color;
    a0_0x4ef4f3.strokeRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
  }
  a0_0x4ef4f3.restore();
  if (this.isEnabled) {
    var _0x4fd7ed = this.x - this.rectW / 2;
    var _0x57b53f = this.x + this.rectW / 2;
    var _0x4a56c1 = this.y - this.rectH / 2;
    var _0x447752 = this.y + this.rectH / 2;
    var _0x1c6337 = false;
    if (a0_0x5c2f2b > _0x4fd7ed && a0_0x5c2f2b < _0x57b53f && a0_0x50fcd3 > _0x4a56c1 && a0_0x50fcd3 < _0x447752 || a0_0x344197 == this.hotkey) {
      _0x1c6337 = true;
      a0_0x29f265 = a0_0x3326d1 = this.id;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = this.opacity;
      a0_0x4ef4f3.fillStyle = this.color;
      a0_0x4ef4f3.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
      if (this.hoverStroke > 0) {
        a0_0x4ef4f3.globalAlpha = 1;
        a0_0x4ef4f3.lineWidth = this.hoverStroke;
        a0_0x4ef4f3.strokeStyle = a0_0x237aea;
        a0_0x4ef4f3.strokeRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
      }
      a0_0x4ef4f3.restore();
    } else if (a0_0x29f265 == this.id) {
      a0_0x3326d1 = 0;
    }
  }
  if (this.txtLabel != null) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = _0x1c6337 ? 1 : 0.6;
    if (_0x1c6337) {
      this.txtLabel.setFontSize(12);
      this.txtLabel.setColor("white");
      this.txtLabel.setStroke(2);
    } else {
      this.txtLabel.setColor(this.isEnabled ? "white" : "black");
      this.txtLabel.setStroke(0);
    }
    this.txtLabel.draw();
    a0_0x4ef4f3.restore();
  }
  if (this.isEnabled && this.hotkey != "") {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 0.2;
    a0_0x4ef4f3.fillStyle = "white";
    var _0x5db98e = -this.rectW / 2 + 2;
    var _0x901875 = this.rectH / 2 - 12;
    a0_0x4ef4f3.fillRect(_0x5db98e, _0x901875, 10, 10);
    this.txtHotkey.x = _0x5db98e + 5;
    this.txtHotkey.y = _0x901875 + 5;
    a0_0x4ef4f3.globalAlpha = 0.7;
    this.txtHotkey.draw();
    a0_0x4ef4f3.restore();
  }
};
a0_0x40d5ec.prototype.optionID = 0;
a0_0x40d5ec.prototype.optionType = 0;
a0_0x40d5ec.prototype.label = 0;
a0_0x40d5ec.prototype.highlight = 0;
a0_0x40d5ec.prototype.txtLabel = null;
a0_0x40d5ec.prototype.txtHotkey = null;
a0_0x40d5ec.prototype.isEnabled = true;
a0_0x40d5ec.prototype.hotkey = "";
a0_0x40d5ec.prototype.readCustomData_onNewlyVisible = function (_0x1957dc) {
  a0_0x344197 = null;
  a0_0x5e7e61 = +new Date() + 1000;
  this.optionID = _0x1957dc.readUInt32();
  var _0x363a46 = _0x1957dc.readString();
  _0x363a46 = _0x363a46.replace("\n", "newline");
  console.log(_0x363a46);
  var _0x3f710a = JSON.parse(_0x363a46);
  this.label = _0x3f710a.label.replace("newline", "\n");
  this.optionType = _0x3f710a.value;
  this.color = _0x3f710a.color;
  this.opacity = _0x3f710a.opacity / 100;
  this.hoverStroke = _0x3f710a.hoverStroke;
  this.btnStroke = _0x3f710a.btnStroke;
  this.isEnabled = Number(_0x3f710a.enabled) == 1;
  this.hotkey = _0x3f710a.hotkey;
  if (!this.isEnabled) {
    this.opacity *= 0.5;
  }
  if (this.txtLabel == null) {
    this.txtLabel = new a0_0x3d10bd(12, "#FFFFFF");
    this.txtLabel.x = 0;
    this.txtLabel.y = 0;
    this.txtLabel.strokeW = 0;
    this.txtLabel.multiLine = true;
    this.txtLabel.renderScale = 2;
    this.txtLabel.setText(this.label);
  }
  if (this.isEnabled && this.hotkey != "" && this.txtHotkey == null) {
    this.txtHotkey = new a0_0x3d10bd(8, "#FFFFFF");
    this.txtHotkey.x = 0;
    this.txtHotkey.y = 0;
    this.txtHotkey.strokeW = 0;
    this.txtHotkey.multiLine = false;
    this.txtHotkey.renderScale = 2;
    this.txtHotkey.setText(this.hotkey);
    this.txtHotkey.setColor("white");
    this.txtHotkey.setStroke(0);
  }
};
var a0_0x460d9c = 129;
function a0_0x40d5ec() {
  a0_0x40d5ec.superClass.call(this, a0_0x460d9c);
}
window.GameOptionButton = a0_0x40d5ec;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x40d5ec, a0_0x460d9c);
var a0_0x58d04c = a0_0x12658e;
a0_0x2d32b0.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2d32b0.prototype.constructor = a0_0x2d32b0;
a0_0x2d32b0.superClass = a0_0x58d04c;
a0_0x2d32b0.prototype.updateZ = function () {
  this.z = 100102;
};
a0_0x2d32b0.prototype.customDraw = function (_0xb56714) {
  a0_0x4ef4f3.save();
  var _0x4dc55d = this.rectW;
  var _0x62ec14 = this.rectH;
  a0_0x4ef4f3.globalAlpha = 0.3;
  a0_0x4ef4f3.fillStyle = "black";
  a0_0x4ef4f3.fillRect(-_0x4dc55d / 2, -_0x62ec14 / 2, _0x4dc55d, _0x62ec14);
  a0_0x4ef4f3.globalAlpha = 0.15;
  a0_0x4ef4f3.fillStyle = "white";
  _0x4dc55d -= 3;
  _0x62ec14 -= 3;
  a0_0x4ef4f3.fillRect(-_0x4dc55d / 2, -_0x62ec14 / 2, _0x4dc55d, _0x62ec14);
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.restore();
  if (this.txtTitle != null) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 1;
    this.txtTitle.setFontSize(18);
    this.txtTitle.setColor("white");
    this.txtTitle.setStroke(2);
    this.txtTitle.draw();
    a0_0x4ef4f3.restore();
  }
  if (this.txtMessage != null) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 1;
    this.txtMessage.draw();
    a0_0x4ef4f3.restore();
  }
  if (this.timerTxt != null) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 1;
    var _0x4dc55d = 25;
    var _0x62ec14 = 25;
    a0_0x4ef4f3.globalAlpha = 0.5;
    a0_0x4ef4f3.fillStyle = "red";
    var _0x274f79 = this.rectW / 2 - _0x4dc55d - 1.5;
    var _0x4e2324 = -this.rectH / 2 + 1.5;
    a0_0x4ef4f3.fillRect(_0x274f79, _0x4e2324, _0x4dc55d, _0x62ec14);
    a0_0x4ef4f3.globalAlpha = 1;
    this.timerTxt.setFontSize(16);
    this.timerTxt.setColor("white");
    this.timerTxt.setStroke(2);
    var _0x4d51dd = this.timeoutTime - Math.round((+new Date() - this.spawnTime) / 1000);
    this.timerTxt.setText(_0x4d51dd);
    this.timerTxt.x = _0x274f79 + 12.5;
    this.timerTxt.y = _0x4e2324 + 12.5;
    this.timerTxt.draw();
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.save();
  a0_0x3e10fd(this);
  a0_0x4ef4f3.restore();
};
a0_0x2d32b0.prototype.option1 = null;
a0_0x2d32b0.prototype.option2 = null;
a0_0x2d32b0.prototype.option3 = null;
a0_0x2d32b0.prototype.option4 = null;
function a0_0x3e10fd(_0x2f90f5) {
  var _0x2eeb62 = _0x2f90f5.rectW * 0.5;
  var _0x1a7d8d = _0x2f90f5.rectH * 0.35;
  var _0x4c7ada = -_0x2eeb62 / 2;
  var _0x368cd1 = -20;
  a0_0x4ef4f3.globalAlpha = 0.2;
  a0_0x4ef4f3.fillStyle = "black";
  a0_0x4ef4f3.fillRect(_0x4c7ada, _0x368cd1, _0x2eeb62, _0x1a7d8d);
  a0_0x4ef4f3.globalAlpha = 0.7;
  a0_0x4ef4f3.fillStyle = "limegreen";
  a0_0x4ef4f3.fillRect(_0x4c7ada, _0x368cd1, _0x2eeb62, 20);
  a0_0x5175cd("options", _0x2f90f5, _0x4c7ada, _0x368cd1 + 2.5, _0x2eeb62, _0x1a7d8d, "ARENA OPTIONS", "white", 2);
  _0x2eeb62 = 100;
  _0x1a7d8d = 15;
  _0x4c7ada = -_0x2eeb62 / 2;
  _0x368cd1 += 7;
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.fillStyle = "green";
  _0x368cd1 += _0x1a7d8d + 5;
  a0_0x4ef4f3.globalAlpha = 0.7;
  a0_0x5175cd("option2", _0x2f90f5, _0x4c7ada, _0x368cd1, _0x2eeb62, _0x1a7d8d, (_0x2f90f5.data.watr == Number(1) ? "INFINITE" : "LIMITED") + " WATER", "white", 0);
  _0x368cd1 += _0x1a7d8d;
  a0_0x5175cd("option3", _0x2f90f5, _0x4c7ada, _0x368cd1, _0x2eeb62, _0x1a7d8d, (_0x2f90f5.data.hp == Number(1) ? "INFINITE" : "LIMITED") + " HEALTH", "white", 0);
  _0x368cd1 += _0x1a7d8d;
  a0_0x5175cd("option4", _0x2f90f5, _0x4c7ada, _0x368cd1, _0x2eeb62, _0x1a7d8d, "TURN " + (_0x2f90f5.data.speed == Number(1) ? "NORMAL" : "FAST"), "white", 0);
  _0x368cd1 += _0x1a7d8d;
  a0_0x5175cd("option5", _0x2f90f5, _0x4c7ada, _0x368cd1, _0x2eeb62, _0x1a7d8d, _0x2f90f5.data.climax == Number(1) ? "LAST MAN STANDING" : _0x2f90f5.data.bites + " BITES WINS", "white", 0);
  _0x368cd1 += _0x1a7d8d;
  a0_0x5175cd("option6", _0x2f90f5, _0x4c7ada, _0x368cd1, _0x2eeb62, _0x1a7d8d, _0x2f90f5.data.wall == Number(1) ? "WALL DAMAGE" : "NO WALL DAMAGE", "white", 0);
}
function a0_0x5175cd(_0x5e9b6e, _0x5b61b3, _0x4f80da, _0x35a011, _0x25de56, _0x6ce451, _0x475105, _0x4751a9, _0x1304f5) {
  if (_0x1304f5 == undefined) {
    _0x1304f5 = 0;
  }
  if (_0x5b61b3[_0x5e9b6e] == null) {
    _0x5b61b3[_0x5e9b6e] = new a0_0x3d10bd(10, _0x4751a9);
    _0x5b61b3[_0x5e9b6e].x = _0x4f80da;
    _0x5b61b3[_0x5e9b6e].y = _0x35a011;
    _0x5b61b3[_0x5e9b6e].strokeW = 0;
    _0x5b61b3[_0x5e9b6e].multiLine = true;
    _0x5b61b3[_0x5e9b6e].renderScale = 2;
    _0x5b61b3[_0x5e9b6e].setStroke(_0x1304f5);
    _0x5b61b3[_0x5e9b6e].setText(_0x475105);
  } else {
    _0x5b61b3[_0x5e9b6e].x = _0x4f80da + _0x25de56 / 2;
    _0x5b61b3[_0x5e9b6e].y = _0x35a011 + 7;
    _0x5b61b3[_0x5e9b6e].draw();
  }
}
a0_0x2d32b0.prototype.timeoutTime = 0;
a0_0x2d32b0.prototype.optionType = 0;
a0_0x2d32b0.prototype.label = 0;
a0_0x2d32b0.prototype.highlight = 0;
a0_0x2d32b0.prototype.txtTitle = null;
a0_0x2d32b0.prototype.txtMessage = null;
a0_0x2d32b0.prototype.timerTxt = null;
a0_0x2d32b0.prototype.screenMsg = null;
a0_0x2d32b0.prototype.screenTitle = null;
a0_0x2d32b0.prototype.invitee_id = null;
a0_0x2d32b0.prototype.spiderX = null;
a0_0x2d32b0.prototype.spiderY = null;
a0_0x2d32b0.prototype.beforeCustomDraw = function (_0x5ee6cc) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.strokeStyle = "white";
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(this.x, this.y);
  a0_0x4ef4f3.lineTo(this.spiderX, this.spiderY);
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.restore();
};
a0_0x2d32b0.prototype.worldUpd_readMsgUpdate = function (_0x54f3e2) {
  var _0x2fc170 = _0x54f3e2.readUInt16() / 4;
  var _0x2b3a26 = _0x54f3e2.readUInt16() / 4;
  this.setMovedToPos(_0x2fc170, _0x2b3a26);
  var _0x3ba923 = _0x54f3e2.readUInt32() / 100;
  var _0x38edc1 = _0x54f3e2.readUInt32() / 100;
  this.spider_ox = this.spiderX;
  this.spider_oy = this.spiderY;
  this.spider_nx = _0x3ba923;
  this.spider_ny = _0x38edc1;
};
a0_0x2d32b0.prototype.onLerpUpdate = function (_0x2424ee) {
  this.spiderX = _0x2424ee * (this.spider_nx - this.spider_ox) + this.spider_ox;
  this.spiderY = _0x2424ee * (this.spider_ny - this.spider_oy) + this.spider_oy;
};
a0_0x2d32b0.prototype.data = null;
a0_0x2d32b0.prototype.readCustomData_onNewlyVisible = function (_0xa5dfff) {
  var _0x367a5b = _0xa5dfff.readString();
  var _0x29949f = _0xa5dfff.readString();
  var _0x16474b = _0xa5dfff.readUInt8();
  var _0x36676a = _0xa5dfff.readBitGroup();
  var _0x44dcb4 = _0x36676a.getBool() ? 1 : 0;
  var _0x2ae600 = _0x36676a.getBool() ? 1 : 0;
  var _0x196448 = _0x36676a.getBool() ? 1 : 0;
  var _0x4feede = _0x36676a.getBool() ? 1 : 0;
  var _0x41b696 = _0x36676a.getBool() ? 1 : 0;
  var _0x19e344 = 0;
  if (!_0x41b696) {
    _0x19e344 = _0xa5dfff.readUInt8();
  }
  var _0x4fb409 = {
    title: _0x367a5b,
    invtedBy: _0x29949f,
    watr: _0x44dcb4,
    hp: _0x2ae600,
    speed: _0x196448,
    climax: _0x41b696,
    wall: _0x4feede,
    time: _0x16474b,
    bites: _0x19e344
  };
  this.spider_ox = this.spiderX = this.spider_nx = this.x;
  this.spider_oy = this.spiderY = this.spider_ny = this.y;
  var _0x59af5d = "\n";
  var _0x41460f = "-br-";
  this.data = _0x4fb409;
  this.timeoutTime = Number(_0x4fb409.time);
  if (this.txtTitle == null) {
    this.txtTitle = new a0_0x3d10bd(18, "#FFFFFF");
    this.txtTitle.x = 0;
    this.txtTitle.y = this.rectH / 2 * -0.85;
    this.txtTitle.strokeW = 0;
    this.txtTitle.multiLine = true;
    this.txtTitle.renderScale = 2;
    this.txtTitle.setText(this.data.title);
  }
  if (this.txtMessage == null) {
    this.txtMessage = new a0_0x3d10bd(16, "#FFFFFF");
    this.txtMessage.x = 0;
    this.txtMessage.y = this.txtTitle.y + 40;
    this.txtMessage.strokeW = 0;
    this.txtMessage.multiLine = true;
    this.txtMessage.renderScale = 2;
    if (this.data.invtedBy == "") {
      this.data.invtedBy = "mope.io";
    }
    this.txtMessage.setText(this.data.invtedBy + "\ninvites you for 1v1 fight!");
  }
  if (this.timerTxt == null) {
    this.timerTxt = new a0_0x3d10bd(16, "#FFFFFF");
    this.timerTxt.x = 0;
    this.timerTxt.y = 0;
    this.timerTxt.strokeW = 0;
    this.timerTxt.multiLine = false;
    this.timerTxt.renderScale = 2;
    this.timerTxt.setText("15");
  }
};
var a0_0x4d6b89 = 130;
function a0_0x2d32b0() {
  a0_0x2d32b0.superClass.call(this, a0_0x4d6b89);
}
window.ScreenMessage = a0_0x2d32b0;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2d32b0, a0_0x4d6b89);
var a0_0x2011f1 = a0_0x16fd73;
var a0_0x58d04c = a0_0x12658e;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x16fd73.prototype.customType = 0;
a0_0x16fd73.prototype.updateZ = function () {
  this.z = 1001;
};
a0_0x16fd73.prototype.customDraw = function (_0x1fc29d) {};
a0_0x16fd73.prototype.setObjTypes = function (_0x7e78c6, _0x474ac8) {
  this.oType = _0x7e78c6;
  this.customType = _0x474ac8;
};
a0_0x16fd73.prototype.readCustomData_onNewlyVisible = function (_0x81a1a9) {
  a0_0x16fd73.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x81a1a9);
};
a0_0x16fd73.prototype.readCustomData_onUpdate = function (_0x57a936) {
  a0_0x16fd73.superClass.prototype.readCustomData_onUpdate.call(this, _0x57a936);
};
var a0_0x2ea469 = 128;
function a0_0x16fd73() {
  a0_0x16fd73.superClass.call(this, a0_0x2ea469);
  a0_0x16fd73.prototype.easeAngleChanges = false;
}
window.CustomObj = a0_0x16fd73;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x16fd73, a0_0x2ea469);
a0_0xa5d548.addCustomClassType(a0_0x2ea469);
var a0_0x2011f1 = a0_0x1bcb5d;
var a0_0x58d04c = a0_0x16fd73;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x1bcb5d.prototype.customDraw = function (_0x2d9938) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 0.095;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2, false);
  a0_0x4ef4f3.arc(0, 0, this.rad * 0.9, 0, Math.PI * 2, true);
  a0_0x4ef4f3.fillStyle = "red";
  a0_0x4ef4f3.closePath();
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.restore();
  var _0x3e9214 = 15;
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(-90));
  var _0x30f512 = this.getSkinImageObj("img/custom/trunk2.png");
  if (_0x30f512) {
    var _0x41cd03 = 60;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.drawImage(_0x30f512, -_0x41cd03, this.rad - _0x41cd03 + _0x3e9214, _0x41cd03 * 2, _0x41cd03 * 2);
    a0_0x4ef4f3.restore();
  }
  var _0x30f512 = this.getSkinImageObj("img/custom/trunk1.png");
  if (_0x30f512) {
    var _0x41cd03 = 60;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.drawImage(_0x30f512, -_0x41cd03, -this.rad - _0x41cd03 - _0x3e9214, _0x41cd03 * 2, _0x41cd03 * 2);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
a0_0x1bcb5d.prototype.readCustomData_onNewlyVisible = function (_0x1b0913) {
  a0_0x1bcb5d.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x1b0913);
};
function a0_0x1bcb5d() {
  a0_0x1bcb5d.superClass.call(this);
}
window.Slingshot = a0_0x1bcb5d;
var a0_0x121f65 = 1;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1bcb5d, a0_0x2ea469, a0_0x121f65);
var a0_0x2011f1 = a0_0x3faaf6;
var a0_0x58d04c = a0_0x16fd73;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x3faaf6.prototype.updateZ = function () {
  this.z = 1010 + this.rad;
};
a0_0x3faaf6.prototype.customDraw = function (_0x50727f) {
  a0_0x4ef4f3.save();
  var _0x23c072 = this.getSkinImageObj("img/custom/pad.png");
  if (_0x23c072) {
    var _0x5ea13f = this.rad;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(-90));
    a0_0x4ef4f3.drawImage(_0x23c072, -_0x5ea13f, -_0x5ea13f, _0x5ea13f * 2, _0x5ea13f * 2);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
a0_0x3faaf6.prototype.ropeMargin = 0;
a0_0x3faaf6.prototype.beforeCustomDraw = function (_0x20d931) {
  var _0x194b11 = 10;
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.strokeStyle = "#4f4f4f";
  a0_0x4ef4f3.lineWidth = _0x194b11;
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(this.x, this.y);
  a0_0x4ef4f3.lineTo(this.base1_X, this.base1_Y);
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(this.x, this.y);
  a0_0x4ef4f3.lineTo(this.base2_X, this.base2_Y);
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.restore();
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.strokeStyle = "#222222";
  a0_0x4ef4f3.lineWidth = _0x194b11 * 0.6;
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(this.x, this.y);
  a0_0x4ef4f3.lineTo(this.base1_X, this.base1_Y);
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(this.x, this.y);
  a0_0x4ef4f3.lineTo(this.base2_X, this.base2_Y);
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.restore();
};
a0_0x3faaf6.prototype.readCustomData_onNewlyVisible = function (_0x2d0a92) {
  a0_0x3faaf6.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x2d0a92);
  this.base1_ox = this.base1_X = this.base1_nx = this.x;
  this.base1_oy = this.base1_Y = this.base1_ny = this.y;
  this.base2_ox = this.base2_X = this.base2_nx = this.x;
  this.base2_oy = this.base2_Y = this.base2_ny = this.y;
  this.readBaseData(_0x2d0a92);
};
a0_0x3faaf6.prototype.readBaseData = function (_0x3c5f72) {
  var _0x465850 = _0x3c5f72.readUInt32() / 100;
  var _0xa18e = _0x3c5f72.readUInt32() / 100;
  var _0x2a6309 = _0x3c5f72.readUInt32() / 100;
  var _0x448507 = _0x3c5f72.readUInt32() / 100;
  this.base1_ox = this.base1_X;
  this.base1_oy = this.base1_Y;
  this.base1_nx = _0x465850;
  this.base1_ny = _0xa18e;
  this.base2_ox = this.base2_X;
  this.base2_oy = this.base2_Y;
  this.base2_nx = _0x2a6309;
  this.base2_ny = _0x448507;
};
a0_0x3faaf6.prototype.base1_X = 0;
a0_0x3faaf6.prototype.base1_Y = 0;
a0_0x3faaf6.prototype.base2_X = 0;
a0_0x3faaf6.prototype.base2_Y = 0;
a0_0x3faaf6.prototype.onLerpUpdate = function (_0x23ce75) {
  this.base1_X = _0x23ce75 * (this.base1_nx - this.base1_ox) + this.base1_ox;
  this.base1_Y = _0x23ce75 * (this.base1_ny - this.base1_oy) + this.base1_oy;
  this.base2_X = _0x23ce75 * (this.base2_nx - this.base2_ox) + this.base2_ox;
  this.base2_Y = _0x23ce75 * (this.base2_ny - this.base2_oy) + this.base2_oy;
};
function a0_0x3faaf6() {
  a0_0x3faaf6.superClass.call(this);
}
window.SlingshotPad = a0_0x3faaf6;
var a0_0x27a92d = 2;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3faaf6, a0_0x2ea469, a0_0x27a92d);
var a0_0x2011f1 = a0_0x3abefa;
var a0_0x58d04c = a0_0x16fd73;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x3abefa.prototype.customDraw = function (_0x4ab3e6) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 0.095;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2, false);
  a0_0x4ef4f3.arc(0, 0, this.rad * 0.9, 0, Math.PI * 2, true);
  a0_0x4ef4f3.fillStyle = "red";
  a0_0x4ef4f3.closePath();
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.restore();
};
function a0_0x3abefa() {
  a0_0x3abefa.superClass.call(this);
}
window.Trampoline = a0_0x3abefa;
var a0_0x3c8e82 = 4;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3abefa, a0_0x2ea469, a0_0x3c8e82);
var a0_0x2011f1 = a0_0x352424;
var a0_0x58d04c = a0_0x16fd73;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x352424.prototype.updateZ = function () {
  this.z = 1010 + this.rad;
};
a0_0x352424.prototype.customDraw = function (_0x8a4b4c) {
  this.drawLeg(a0_0x17871f);
  this.drawLeg(a0_0x2a3db2);
  this.drawLeg(a0_0x3d2170);
  this.drawLeg(a0_0x33069c);
  a0_0x4ef4f3.save();
  var _0x1a7006 = this.getSkinImageObj("img/custom/trampoline/rug_zebra.png");
  if (_0x1a7006) {
    var _0x5b0662 = this.rad * (this.stretch / 100);
    var _0x497d63 = _0x5b0662 + a0_0x5270b6;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x1a7006, -_0x5b0662, -_0x497d63, _0x5b0662 * 2, _0x497d63 * 2);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
var a0_0x5270b6 = 15;
var a0_0x17871f = -43;
var a0_0x2a3db2 = 50;
var a0_0x3d2170 = 135;
var a0_0x33069c = 225;
var a0_0x4754e2 = 0.4;
var a0_0x53151f = 0;
function a0_0x24bb65(_0x1f9ef5) {
  return 1 + (1 - _0x1f9ef5.stretch / 100);
}
a0_0x352424.prototype.drawLeg = function (_0x432651) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 1;
  var _0x1e237d = this.getSkinImageObj("img/custom/trampoline/leg_zebra.png");
  if (_0x1e237d) {
    var _0x22489e = this.rad * 0.3;
    var _0x29174e = this.rad * 2 * a0_0x4754e2 * a0_0x24bb65(this);
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(_0x432651));
    a0_0x4ef4f3.drawImage(_0x1e237d, -_0x22489e, this.rad * a0_0x24bb65(this), _0x22489e * 2, _0x29174e);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
a0_0x352424.prototype.readCustomData_onNewlyVisible = function (_0x3f1b59) {
  a0_0x352424.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x3f1b59);
  this.o_stretch = this.nw_strech = this.n_strech = this.stretch;
  this.readBaseData(_0x3f1b59);
};
a0_0x352424.prototype.baseStrech = 0;
a0_0x352424.prototype.readCustomData_onUpdate = function (_0x5eb240) {
  a0_0x352424.superClass.prototype.readCustomData_onUpdate.call(this, _0x5eb240);
  this.readBaseData(_0x5eb240);
};
a0_0x352424.prototype.stretch = 100;
a0_0x352424.prototype.readBaseData = function (_0x22c708) {
  var _0x2bd434 = _0x22c708.readUInt32() / 100;
  this.o_stretch = this.stretch;
  this.n_strech = _0x2bd434;
};
a0_0x352424.prototype.base1_X = 0;
a0_0x352424.prototype.base1_Y = 0;
a0_0x352424.prototype.base2_X = 0;
a0_0x352424.prototype.base2_Y = 0;
a0_0x352424.prototype.base3_X = 0;
a0_0x352424.prototype.base3_Y = 0;
a0_0x352424.prototype.base4_X = 0;
a0_0x352424.prototype.base4_Y = 0;
a0_0x352424.prototype.onLerpUpdate = function (_0x3bcd81) {
  this.stretch = _0x3bcd81 * (this.n_strech - this.o_stretch) + this.o_stretch;
};
function a0_0x352424() {
  a0_0x352424.superClass.call(this);
}
window.TrampolinePad = a0_0x352424;
var a0_0x3f70f7 = 5;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x352424, a0_0x2ea469, a0_0x3f70f7);
var a0_0x58d04c = a0_0x45645e;
a0_0x387f12.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x387f12.prototype.constructor = a0_0x387f12;
a0_0x387f12.superClass = a0_0x58d04c;
a0_0x387f12.prototype.updateZ = function () {
  this.z = 100000;
};
a0_0x387f12.prototype.getSkinName = function () {
  var _0x11a178 = this.animalInfo();
  if (this.animalSpecies == 8 || this.animalSpecies == 6) {
    return _0x11a178.skinName + "_body";
  }
  return _0x11a178.skinName;
};
a0_0x387f12.prototype.animalInfo = function () {
  var _0x215ec5 = {};
  var _0xfeaccd = "";
  switch (this.animalSpecies) {
    case 0:
      _0xfeaccd = "jagga";
      _0x215ec5.aniName = "Jagga";
      break;
    case 1:
      _0xfeaccd = "bali";
      _0x215ec5.aniName = "Bali";
      break;
    case 2:
      _0xfeaccd = "jutt";
      _0x215ec5.aniName = "Jutt";
      break;
    case 3:
      _0xfeaccd = "bhollaa";
      _0x215ec5.aniName = "Bhollaa";
      break;
    case 4:
      _0xfeaccd = "butt";
      _0x215ec5.aniName = "Butt";
      break;
    case 5:
      _0xfeaccd = "khattak";
      _0x215ec5.aniName = "Khattak";
      break;
    case 6:
      _0xfeaccd = "chandyo/chandyo";
      _0x215ec5.aniName = "Chandyo";
      break;
    case 7:
      _0xfeaccd = "abysmal";
      _0x215ec5.aniName = "Abysmal";
      break;
    case 8:
      _0xfeaccd = "sultan/sultan";
      _0x215ec5.aniName = "Sultan";
      break;
    case 9:
      _0xfeaccd = "gujjar";
      _0x215ec5.aniName = "Gujjar";
      break;
  }
  _0x215ec5.aniCol = "#FF9000";
  _0x215ec5.skinName = "land/aiboss/" + _0xfeaccd;
  _0x215ec5.upgradeText = "UPGRADED to " + _0x215ec5.aniName + " the A.I BOSS!";
  _0x215ec5.aniCol = "#22FF8A";
  return _0x215ec5;
};
a0_0x387f12.prototype.getAbilityInfo = function (_0x4a424f) {
  var _0x44c922 = {};
  var _0x18792a = this.animalInfo();
  _0x44c922.abilName = "AI";
  _0x44c922.abilImg = "skins/" + _0x18792a.skinName + ".png";
  _0x44c922.speciesType = this.animalSpecies;
  _0x44c922.skinThemeID = this.skinThemeID;
  _0x44c922.mopeSeasonID = this.mopeSeasonID;
  return _0x44c922;
};
a0_0x387f12.prototype.diveColor1 = "#64a034";
a0_0x387f12.prototype.diveColor2 = "#598b30";
a0_0x387f12.prototype.onAnimalSpeciesSet = function () {
  switch (this.animalSpecies) {
    case 1:
      this.diveColor1 = "#dbb300";
      this.diveColor2 = "#bf9d04";
      break;
    case 2:
      this.diveColor1 = "#79c9a8";
      this.diveColor2 = "#6fad9f";
      break;
  }
};
a0_0x387f12.prototype.leftWingAnim = null;
a0_0x387f12.prototype.flapAngleDiff = 3;
a0_0x387f12.prototype.flapAngle = 3;
a0_0x387f12.prototype.flapF = 0.1;
a0_0x387f12.prototype.flapDur = 2;
a0_0x387f12.prototype.sF = 0.02;
a0_0x387f12.prototype.drawWings = function () {
  if (this.leftWingAnim == null) {
    this.leftWingAnim = new a0_0x100d8b(this, this.flapDur, a0_0x100d8b.wave);
    this.leftWingAnim.keepLastFrame = true;
    this.leftWingAnim.loop = true;
    this.leftWingAnim.onFrameEntered = function (_0x2a4929) {
      this.forObj.frame1 = _0x2a4929;
    };
  }
  if (this.leftWingAnim != null) {
    this.leftWingAnim.run();
  }
  var _0x398ba1 = this.rad - this.outlineW;
  var _0x5a9a97 = this.frame1 * this.sF * _0x398ba1;
  var _0x3418d6 = -(-this.flapF + this.frame1);
  var _0x15b90a = _0x3418d6 * a0_0x844a6b(this.flapAngle);
  var _0x406080 = 500 / 340;
  var _0x3dd359 = this.getSkinImageObj("skins/land/aiboss/sultan/left_wing.png");
  var _0x4d4055 = this.getSkinImageObj("skins/land/aiboss/sultan/right_wing.png");
  if (_0x3dd359 && _0x4d4055) {
    var _0x135565 = 0.2;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(a0_0x844a6b(this.flapAngleDiff) + _0x15b90a);
    a0_0x4ef4f3.drawImage(_0x3dd359, -_0x398ba1 * _0x406080 - _0x135565 * _0x398ba1, -_0x398ba1 * _0x406080 + _0x5a9a97, _0x398ba1 * 2 * _0x406080, _0x398ba1 * 2 * _0x406080 + _0x5a9a97 * 1.5);
    a0_0x4ef4f3.restore();
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(-(a0_0x844a6b(this.flapAngleDiff) + _0x15b90a));
    a0_0x4ef4f3.drawImage(_0x4d4055, -_0x398ba1 * _0x406080 + _0x135565 * _0x398ba1, -_0x398ba1 * _0x406080 + _0x5a9a97, _0x398ba1 * 2 * _0x406080, _0x398ba1 * 2 * _0x406080 + _0x5a9a97 * 1.5);
    a0_0x4ef4f3.restore();
  }
};
a0_0x387f12.prototype.drawSkinCustomization = function () {
  if (this.animalSpecies == 8) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = a0_0x1528ea ? 0.5 : 1;
    var _0x41f39f = 500 / 340;
    var _0x4094cd = this.getSkinImageObj("skins/land/aiboss/sultan/sultan_head.png");
    if (_0x4094cd) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = a0_0x1528ea ? 0.2 : 1;
      var _0x46d1c9 = this.rad - this.outlineW;
      a0_0x4ef4f3.drawImage(_0x4094cd, -_0x46d1c9 * _0x41f39f, -_0x46d1c9 * _0x41f39f, _0x46d1c9 * 2 * _0x41f39f, _0x46d1c9 * 2 * _0x41f39f);
      a0_0x4ef4f3.restore();
    }
    var _0x30c197 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x2b4b7f = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x30c197, 5, 1, 1) : this.birdNoAnimationFlyWingAngle;
    this.drawWings();
    var _0x2ac45e = -1.25;
    var _0x4e9603 = -0.1;
    var _0x5cadd4 = 600 / 380;
    var _0x376e09 = 0.4;
    var _0x7c5566 = this.getSkinImageObj("skins/land/aiboss/sultan/tail.png");
    if (_0x7c5566) {
      a0_0x4ef4f3.save();
      var _0x46d1c9 = this.rad - this.outlineW;
      a0_0x4ef4f3.drawImage(_0x7c5566, -_0x46d1c9 * _0x376e09, -_0x46d1c9 * _0x376e09 + _0x2ac45e * _0x46d1c9, _0x46d1c9 * 2 * _0x376e09, _0x46d1c9 * 2 * _0x376e09);
      a0_0x4ef4f3.restore();
    }
    a0_0x4ef4f3.restore();
  } else if (this.animalSpecies == 6) {
    var _0x618c2c = 0;
    var _0x2f8c13 = 0.42;
    var _0x1ea953 = 500 / 340;
    var _0x409f39 = 500 / 340;
    var _0x7c5566 = this.getSkinImageObj("skins/land/aiboss/chandyo/chandyo_back.png");
    if (_0x7c5566) {
      a0_0x4ef4f3.save();
      var _0x46d1c9 = this.rad - this.outlineW;
      a0_0x4ef4f3.drawImage(_0x7c5566, -_0x46d1c9 * _0x409f39, -_0x46d1c9 * _0x409f39 + _0x618c2c * _0x46d1c9, _0x46d1c9 * 2 * _0x409f39, _0x46d1c9 * 2 * _0x409f39);
      a0_0x4ef4f3.restore();
    }
    var _0x4094cd = this.getSkinImageObj("skins/land/aiboss/chandyo/chandyo_head.png");
    if (_0x4094cd) {
      a0_0x4ef4f3.save();
      var _0x46d1c9 = this.rad - this.outlineW;
      a0_0x4ef4f3.drawImage(_0x4094cd, -_0x46d1c9 * _0x1ea953, -_0x46d1c9 * _0x1ea953 + _0x2f8c13 * _0x46d1c9, _0x46d1c9 * 2 * _0x1ea953, _0x46d1c9 * 2 * _0x1ea953);
      a0_0x4ef4f3.restore();
    }
  }
};
function a0_0x387f12() {
  a0_0x387f12.superClass.call(this, a0_0x1370b8);
}
window.AiBoss = a0_0x387f12;
var a0_0x1f99ed = 107;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x387f12, a0_0x1370b8, a0_0x1f99ed);
var a0_0x58d04c = a0_0x12658e;
a0_0x3f6169.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3f6169.prototype.constructor = a0_0x3f6169;
a0_0x3f6169.superClass = a0_0x58d04c;
a0_0x3f6169.prototype.mommyID = 0;
a0_0x3f6169.prototype.updateZ = function () {
  this.z = 10000000;
};
a0_0x3f6169.prototype.isEdibleOutlined = function () {
  if (this.mommyID == a0_0x1c918d) {
    return false;
  }
  return a0_0x5ebad0.superClass.prototype.isEdibleOutlined.call(this);
};
a0_0x3f6169.prototype.customDraw = function (_0x5678b4) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 0.5;
  var _0x383061 = this.getSkinImageObj("img/camera.png");
  if (_0x383061) {
    var _0x541254 = this.rad * 2;
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x383061, -_0x541254, -_0x541254, _0x541254 * 2, _0x541254 * 2);
  }
  a0_0x4ef4f3.restore();
};
var a0_0x291fa8 = 127;
function a0_0x3f6169() {
  a0_0x3f6169.superClass.call(this, a0_0x291fa8);
  this.doesDrawEffectScale = false;
}
window.DroneCamera = a0_0x3f6169;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3f6169, a0_0x291fa8);
var a0_0x2011f1 = a0_0x2873a9;
var a0_0x58d04c = a0_0x12658e;
a0_0x2873a9.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2873a9.prototype.constructor = a0_0x2873a9;
a0_0x2873a9.superClass = a0_0x58d04c;
a0_0x2873a9.prototype.r = 0;
a0_0x2873a9.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x2873a9.prototype.customDraw = function (_0x52b8ee) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 0.3;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(0, 0, this.rad + 2, 0, Math.PI * 2, false);
  a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2, true);
  a0_0x4ef4f3.fillStyle = "#32ff00";
  a0_0x4ef4f3.closePath();
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.restore();
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 0.095;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2, false);
  a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2, true);
  a0_0x4ef4f3.fillStyle = "red";
  a0_0x4ef4f3.closePath();
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.restore();
  a0_0x4ef4f3.save();
  var _0x593bf1 = 1;
  var _0x8318e4 = _0x593bf1 * 0.1;
  this.r += _0x8318e4;
  a0_0x4ef4f3.rotate(a0_0x844a6b(-this.r));
  this.setTitle();
  a0_0x4ef4f3.restore();
};
a0_0x2873a9.prototype.setTitle = function () {
  var _0x354ec0 = _0x354ec0 = "SANDBOX\nARENA";
  var _0x56f485 = this.rad * 0.07;
  if (this.timerTxt == null) {
    this.timerTxt = new a0_0x3d10bd(_0x56f485, "#FFFFFF");
    this.timerTxt.strokeW = 2;
    this.timerTxt.multiLine = true;
    this.timerTxt.renderScale = 5;
    this.timerTxt.setText(_0x354ec0);
  } else {
    this.timerTxt.setFontSize(_0x56f485);
    this.timerTxt.setText(_0x354ec0);
  }
  this.timerTxt.x = 0;
  this.timerTxt.y = -this.rad * 0.9;
  this.timerTxt.draw();
};
var a0_0x105b81 = 126;
function a0_0x2873a9() {
  a0_0x2873a9.superClass.call(this, a0_0x105b81);
}
window.Sandbox = a0_0x2873a9;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2873a9, a0_0x105b81);
function a0_0x24861e(_0x1277c1, _0x372432) {
  window.setTimeout(function () {
    _0x1277c1 += "r";
    var _0x35d70b = a0_0x228bce ? 1 : 0;
    _0x372432 = _0x35d70b + "" + _0x372432;
    _0x372432 = _0x372432 + "" + _0x35d70b;
    var _0x51ff8d = new a0_0x49f976(2 + _0x372432.length + 2);
    _0x51ff8d.writeUInt8(62);
    _0x51ff8d.writeString(_0x372432);
    a0_0x217e77(_0x51ff8d);
  }, 5000);
}
var a0_0x32d560 = "";
function a0_0x1d12fd() {
  console.log("@@@@@@@@@@@@@@@@@@@ recaptcha called");
  a0_0x32d560 = "";
  grecaptcha.execute(recaptcha_clientkey, {
    action: "homepage"
  }).then(function (_0x4b7fd2) {
    a0_0x32d560 = _0x4b7fd2 || "error";
    var _0x241c24 = new a0_0x49f976(2 + a0_0x32d560.length + 2);
    _0x241c24.writeUInt8(a0_0x56f21c);
    _0x241c24.writeString(a0_0x32d560);
    a0_0x217e77(_0x241c24);
    if (a0_0x32d560 == null) {
      console.log("error: rec token could not received!");
    }
  }).catch(function (_0x325452) {
    console.log("Error loading recaptcha! Reason: " + _0x325452);
    a0_0x32d560 = "error";
    var _0x437ea8 = new a0_0x49f976(2 + a0_0x32d560.length + 2);
    _0x437ea8.writeUInt8(a0_0x56f21c);
    _0x437ea8.writeString(a0_0x32d560);
    a0_0x217e77(_0x437ea8);
  });
}
function a0_0x48fd78(_0x42ad4c, _0x35149e, _0x2c6438) {
  window.setTimeout(function () {
    if (_0x35149e) {
      _0x2c6438 = eval(_0x42ad4c);
      _0x2c6438 = _0x2c6438 + "|" + _0x35149e;
      var _0x5ccbb4 = new a0_0x49f976(2 + _0x2c6438.length + 2);
      _0x5ccbb4.writeUInt8(a0_0x1cea78);
      _0x5ccbb4.writeString(_0x2c6438);
      a0_0x217e77(_0x5ccbb4);
    }
  }, a0_0x1da5bb(0.5, 0.8) * 1000);
}
var a0_0x2011f1 = a0_0x29d750;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x29d750.prototype.customDraw = function (_0x42e222) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(180));
  var _0x4ec0dc = a0_0x4ef4f3.globalAlpha;
  a0_0x4ef4f3.globalAlpha = this.alpha < 0.7 ? this.alpha : 0.7;
  var _0x388aed = this.getSkinImageObj("img/disasters/coldwave.png");
  if (_0x388aed) {
    var _0x281b05 = this.rad * 1.25;
    a0_0x4ef4f3.drawImage(_0x388aed, -_0x281b05, -_0x281b05, _0x281b05 * 2, _0x281b05 * 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x29d750.prototype.updateZ = function () {
  this.z = 10000 - this.rad;
};
a0_0x29d750.prototype.readCustomData_onNewlyVisible = function (_0xf4c6b5) {
  this.alpha = _0xf4c6b5.readUInt8() / 100;
};
a0_0x29d750.prototype.readUpdatedProperty = function (_0x4ef1ab, _0x217869) {
  if (_0x4ef1ab == a0_0x10c2f0) {
    this.alpha = _0x217869.readUInt8() / 100;
  }
};
function a0_0x29d750() {
  a0_0x29d750.superClass.call(this);
  this.spawnTime = a0_0x4f736f;
}
window.ColdWave = a0_0x29d750;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x29d750, a0_0x20e6c5, a0_0x5ac466);
var a0_0x58d04c = a0_0x12658e;
a0_0x3b01b1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3b01b1.prototype.constructor = a0_0x3b01b1;
a0_0x3b01b1.superClass = a0_0x58d04c;
a0_0x3b01b1.prototype.updateZ = function () {
  this.z = 1000 + this.rad;
};
a0_0x3b01b1.prototype.customDraw = function (_0x1b2774) {
  a0_0x4ef4f3.save();
  var _0x2024ae = 0;
  var _0x1d24c6 = a0_0x4f736f - this.spawnTime;
  var _0xfbdf91 = _0x1d24c6 / 1000;
  var _0x4e2ba5 = 2;
  var _0x2ea1f0 = 1.5;
  _0x2024ae = _0x2ea1f0 * Math.sin(Math.PI * 2 / _0x4e2ba5 * _0xfbdf91);
  var _0x1d5071 = 0.6;
  var _0x4e58f2 = a0_0xe2d896(_0xfbdf91, 10, 1, 0.5);
  _0x4e58f2 = a0_0x870f2b(_0x4e58f2, 0, 1);
  if (_0x4e58f2 >= _0x1d5071) {
    _0x1d5071 = _0x1d5071 - (_0x4e58f2 - _0x1d5071);
  }
  var _0x50fbf3 = "#98803A";
  a0_0x4ef4f3.fillStyle = _0x50fbf3;
  a0_0x4ef4f3.globalAlpha = _0x1d5071;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(-this.rad * 0.5, -this.rad * 0.5 + this.rPer * 10, Math.max(0, this.rad * 0.65 + _0x2024ae), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(this.rad * 0.5, -this.rad * 0.5 - this.rPer * 10, Math.max(0, this.rad * 0.73 - _0x2024ae), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(this.rad * 0.6, this.rad * 0.4, Math.max(0, this.rad * 0.78 + _0x2024ae), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(-this.rad * 0.5, this.rad * 0.5, Math.max(0, this.rad * 0.6 + this.rPer - _0x2024ae), 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.restore();
};
function a0_0x3b01b1() {
  a0_0x3b01b1.superClass.call(this, a0_0x440a0a);
}
window.DustCloud = a0_0x3b01b1;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3b01b1, a0_0x440a0a);
var a0_0x2011f1 = a0_0x418f21;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x418f21.prototype.customDraw = function (_0x562a26) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(180));
  var _0x50f11f = a0_0x4ef4f3.globalAlpha;
  a0_0x4ef4f3.globalAlpha = this.alpha < 0.7 ? this.alpha : 0.7;
  var _0x4a3533 = this.getSkinImageObj("img/disasters/dustwave.png");
  if (_0x4a3533) {
    var _0x3481aa = this.rad * 1.25;
    a0_0x4ef4f3.drawImage(_0x4a3533, -_0x3481aa, -_0x3481aa, _0x3481aa * 2, _0x3481aa * 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x418f21.prototype.updateZ = function () {
  this.z = 10000 - this.rad;
};
a0_0x418f21.prototype.readCustomData_onNewlyVisible = function (_0x53b651) {
  this.alpha = _0x53b651.readUInt8() / 100;
};
a0_0x418f21.prototype.readUpdatedProperty = function (_0x2d5cac, _0x538d81) {
  if (_0x2d5cac == a0_0x10c2f0) {
    this.alpha = _0x538d81.readUInt8() / 100;
  }
};
function a0_0x418f21() {
  a0_0x418f21.superClass.call(this);
  this.spawnTime = a0_0x4f736f;
  this.alpha = 0;
}
window.DustWave = a0_0x418f21;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x418f21, a0_0x20e6c5, a0_0x3bf8ba);
var a0_0x2011f1 = a0_0x2fe2b3;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x2fe2b3.prototype.customDraw = function (_0x3bee35) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(180));
  var _0x50ca96 = a0_0x4ef4f3.globalAlpha;
  a0_0x4ef4f3.globalAlpha = this.alpha < 0.7 ? this.alpha : 0.7;
  var _0x3ef16c = this.getSkinImageObj("img/disasters/heatwave.png");
  if (_0x3ef16c) {
    var _0x1527b7 = this.rad * 1.25;
    a0_0x4ef4f3.drawImage(_0x3ef16c, -_0x1527b7, -_0x1527b7, _0x1527b7 * 2, _0x1527b7 * 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x2fe2b3.prototype.updateZ = function () {
  this.z = 10000 - this.rad;
};
a0_0x2fe2b3.prototype.readCustomData_onNewlyVisible = function (_0x29d9ba) {
  this.alpha = _0x29d9ba.readUInt8() / 100;
};
a0_0x2fe2b3.prototype.readUpdatedProperty = function (_0x298bc0, _0x42de56) {
  if (_0x298bc0 == a0_0x10c2f0) {
    this.alpha = _0x42de56.readUInt8() / 100;
  }
};
function a0_0x2fe2b3() {
  a0_0x2fe2b3.superClass.call(this);
  this.spawnTime = a0_0x4f736f;
}
window.HeatWave = a0_0x2fe2b3;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2fe2b3, a0_0x20e6c5, a0_0x1956f9);
var a0_0x58d04c = a0_0x12658e;
a0_0x546f61.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x546f61.prototype.constructor = a0_0x546f61;
a0_0x546f61.superClass = a0_0x58d04c;
a0_0x546f61.prototype.updateZ = function () {
  this.z = 1000000;
};
a0_0x546f61.prototype.customDraw = function (_0x10f61e) {
  var _0x10dbc6 = (a0_0x4f736f - this.spawnTime) / 1000;
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(180));
  a0_0x4ef4f3.globalAlpha = 0.1 + this.cloudOpacity;
  var _0x4b67cb = this.getSkinImageObj("img/disasters/cloud.png");
  if (_0x4b67cb) {
    var _0x317f50 = this.rad * 2;
    a0_0x4ef4f3.drawImage(_0x4b67cb, -_0x317f50, -_0x317f50, _0x317f50 * 2, _0x317f50 * 2);
  }
  var _0x14ca69 = 0;
  var _0x4d995d = 6;
  var _0xdd4f0f = 15;
  _0x14ca69 = _0xdd4f0f * Math.sin(Math.PI * 2 / _0x4d995d * _0x10dbc6);
  a0_0x4ef4f3.globalAlpha = 0.1;
  var _0x4b67cb = this.getSkinImageObj("img/disasters/cloud1.png");
  if (_0x4b67cb) {
    var _0x317f50 = this.rad * 2;
    _0x317f50 = Math.max(0, _0x317f50 - 5 + _0x14ca69);
    a0_0x4ef4f3.drawImage(_0x4b67cb, -_0x317f50, -_0x317f50, _0x317f50 * 2, _0x317f50 * 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x546f61.prototype.readUpdatedProperty = function (_0x2d655d, _0x2a1dbd) {
  if (_0x2d655d == a0_0x10c2f0) {
    this.cloudOpacity = _0x2a1dbd.readUInt8() / 100;
  }
};
function a0_0x546f61() {
  a0_0x546f61.superClass.call(this, a0_0x3ed524);
  this.cloudOpacity = 0.1;
}
window.RainStorm = a0_0x546f61;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x546f61, a0_0x3ed524);
var a0_0x58d04c = a0_0x12658e;
a0_0x4177a6.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4177a6.prototype.constructor = a0_0x4177a6;
a0_0x4177a6.superClass = a0_0x58d04c;
a0_0x4177a6.prototype.updateZ = function () {
  this.z = 1000000;
};
a0_0x4177a6.prototype.customDraw = function (_0x3384c5) {
  var _0x11e0d7 = (a0_0x4f736f - this.spawnTime) / 1000;
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(180));
  a0_0x4ef4f3.globalAlpha = 0.1 + this.alpha;
  var _0x26be62 = this.getSkinImageObj("img/disasters/cloud.png");
  if (_0x26be62) {
    var _0x22e18d = this.rad * 2;
    a0_0x4ef4f3.drawImage(_0x26be62, -_0x22e18d, -_0x22e18d, _0x22e18d * 2, _0x22e18d * 2);
  }
  var _0x450c0a = 0;
  var _0x45b220 = 6;
  var _0x4b9a06 = 15;
  _0x450c0a = _0x4b9a06 * Math.sin(Math.PI * 2 / _0x45b220 * _0x11e0d7);
  a0_0x4ef4f3.globalAlpha = 0.1;
  var _0x26be62 = this.getSkinImageObj("img/disasters/cloud1.png");
  if (_0x26be62) {
    var _0x22e18d = this.rad * 2;
    _0x22e18d = Math.max(0, _0x22e18d - 5 + _0x450c0a);
    a0_0x4ef4f3.drawImage(_0x26be62, -_0x22e18d, -_0x22e18d, _0x22e18d * 2, _0x22e18d * 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x4177a6.prototype.readCustomData_onNewlyVisible = function (_0x10759a) {
  this.alpha = _0x10759a.readUInt8() / 100;
};
a0_0x4177a6.prototype.readUpdatedProperty = function (_0x39ffe0, _0x294725) {
  if (_0x39ffe0 == a0_0x10c2f0) {
    this.alpha = _0x294725.readUInt8() / 100;
  }
};
function a0_0x4177a6() {
  a0_0x4177a6.superClass.call(this, a0_0x380492);
  this.alpha = 0.9;
}
window.SnowStorm = a0_0x4177a6;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4177a6, a0_0x380492);
var a0_0x58d04c = a0_0x12658e;
a0_0x460134.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x460134.prototype.constructor = a0_0x460134;
a0_0x460134.superClass = a0_0x58d04c;
a0_0x460134.prototype.updateZ = function () {
  this.z = 10000;
};
a0_0x460134.prototype.tornadoType = "tornado";
a0_0x460134.prototype.customDraw = function (_0x4d739b) {
  this.setTornadoType();
  var _0x2d02a3 = "img/disasters/" + this.tornadoType + ".png";
  var _0x29a1d3 = this.getSkinImageObj(_0x2d02a3);
  if (_0x29a1d3) {
    var _0x67bb8e = this.rad * 0.8;
    if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
      var _0x10aa7a = 1;
      var _0x5d4eb3 = 1000 / _0x10aa7a;
      var _0xc21989 = (a0_0x4f736f - this.spawnTime) % _0x5d4eb3 / _0x5d4eb3;
      var _0x3f2d1c = _0xc21989 * 2 * Math.PI;
      var _0x10aa7a = 30 / 60;
      var _0x5d4eb3 = 1000 / _0x10aa7a;
      var _0xc21989 = (a0_0x4f736f - this.spawnTime) % _0x5d4eb3 / _0x5d4eb3;
      var _0x2c6408 = _0xc21989 * 2 * Math.PI;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.rotate(_0x3f2d1c);
      var _0x23c8bb = a0_0x4ef4f3.globalAlpha;
      a0_0x4ef4f3.globalAlpha = _0x23c8bb * 1;
      var _0xb324f8 = (a0_0x4f736f - this.spawnTime) / 1000;
      var _0x572276 = 2.2;
      var _0x411a8b = Math.cos(Math.PI * 2 / _0x572276 * _0xb324f8) * 6.5;
      var _0x349bad = Math.sin(Math.PI * 2 / _0x572276 * _0xb324f8) * 6.5;
      a0_0x4ef4f3.globalAlpha = 0.3;
      a0_0x4ef4f3.drawImage(_0x29a1d3, -_0x67bb8e - _0x411a8b / 2.2, -_0x67bb8e, _0x67bb8e * 2, _0x67bb8e * 2);
      a0_0x4ef4f3.restore();
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 0.7;
      a0_0x4ef4f3.rotate(_0x2c6408);
      a0_0x4ef4f3.drawImage(_0x29a1d3, -_0x67bb8e - _0x411a8b / 2.2, -_0x67bb8e, _0x67bb8e * 2, _0x67bb8e * 2);
      a0_0x4ef4f3.restore();
    } else {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 0.7;
      a0_0x4ef4f3.drawImage(_0x29a1d3, -_0x67bb8e, -_0x67bb8e, _0x67bb8e * 2, _0x67bb8e * 2);
      a0_0x4ef4f3.restore();
    }
    if (this.showDevilFace) {
      var _0x2d02a3 = "img/disasters/" + this.tornadoFace + ".png";
      var _0x33184d = this.getSkinImageObj(_0x2d02a3);
      if (_0x33184d) {
        a0_0x4ef4f3.save();
        a0_0x4ef4f3.rotate(this.angle);
        a0_0x4ef4f3.globalAlpha = 0.3;
        a0_0x4ef4f3.drawImage(_0x33184d, -_0x67bb8e, -_0x67bb8e, _0x67bb8e * 2, _0x67bb8e * 2);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
a0_0x460134.prototype.setTornadoType = function (_0x33ad23) {
  switch (this.specType) {
    case 0:
      this.tornadoType = "tornado";
      this.tornadoFace = "dustface";
      break;
    case 1:
      this.tornadoType = "waterspout";
      this.tornadoFace = "waterface";
      break;
    case 2:
      this.tornadoType = "dustdevil";
      this.tornadoFace = "dustface";
      break;
    case 3:
      this.tornadoType = "arcticwhirl";
      this.tornadoFace = "arcticface";
      break;
    case 4:
      this.tornadoType = "firedevil";
      this.tornadoFace = "fireface";
      break;
    case 5:
      this.tornadoType = "deviltwister";
      this.tornadoFace = "devilface";
      break;
  }
};
a0_0x460134.prototype.readCustomData_onNewlyVisible = function (_0x388797) {
  this.setTornadoType();
  this.showDevilFace = _0x388797.readUInt8() == 1;
};
a0_0x460134.prototype.showDevilFace = false;
a0_0x460134.prototype.tornadoFace = null;
function a0_0x460134() {
  a0_0x460134.superClass.call(this, a0_0x5d1ea1);
  this.doesDrawEffectScale = false;
  this.drawEffectScale_Slow = true;
}
window.Tornado = a0_0x460134;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x460134, a0_0x5d1ea1);
var a0_0x2011f1 = a0_0x4da920;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x4da920.prototype.customDraw = function (_0x173b1c) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(180));
  var _0x1b4a24 = a0_0x4ef4f3.globalAlpha;
  a0_0x4ef4f3.globalAlpha = this.alpha < 0.7 ? this.alpha : 0.7;
  var _0x19a820 = this.getSkinImageObj("img/disasters/tsunami.png");
  if (_0x19a820) {
    var _0x253a80 = this.rad * 1.25;
    a0_0x4ef4f3.drawImage(_0x19a820, -_0x253a80, -_0x253a80, _0x253a80 * 2, _0x253a80 * 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x4da920.prototype.updateZ = function () {
  this.z = 10000 - this.rad;
};
a0_0x4da920.prototype.readUpdatedProperty = function (_0x1ea2a1, _0x41e05c) {
  if (_0x1ea2a1 == a0_0x10c2f0) {
    this.alpha = _0x41e05c.readUInt8() / 100;
  }
};
a0_0x4da920.prototype.readCustomData_onNewlyVisible = function (_0x10b705) {
  this.alpha = _0x10b705.readUInt8() / 100;
};
function a0_0x4da920() {
  a0_0x4da920.superClass.call(this);
  this.spawnTime = a0_0x4f736f;
}
window.TsunamiWave = a0_0x4da920;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4da920, a0_0x20e6c5, a0_0x418e06);
var a0_0x58d04c = a0_0x12658e;
a0_0x2af66a.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2af66a.prototype.constructor = a0_0x2af66a;
a0_0x2af66a.superClass = a0_0x58d04c;
a0_0x2af66a.prototype.lookAngle = 0;
a0_0x2af66a.prototype.frameNumber = 0;
a0_0x2af66a.prototype.isRolling = false;
a0_0x2af66a.prototype.pumpkinType = false;
a0_0x2af66a.prototype.updateZ = function () {
  this.z = 1002;
};
a0_0x2af66a.prototype.customDraw = function (_0xd0f655) {
  var _0x1889c3 = 1;
  var _0x143099 = 0.15;
  var _0x3ed7b5 = 0.8;
  var _0xf3faef = (_0x3ed7b5 - _0x143099) * 0.5;
  var _0xc32913 = _0x143099 + _0xf3faef + _0xf3faef * Math.sin(Math.PI * 2 / _0x1889c3 * (a0_0x4f736f / 1000));
  var _0x1889c3 = 1;
  var _0x143099 = 0.85;
  var _0x3ed7b5 = 1;
  var _0xf3faef = (_0x3ed7b5 - _0x143099) * 0.5;
  var _0x54f380 = 1;
  if (this.isRolling) {
    this.frameNumber = Math.trunc(a0_0x4f736f / 120) % 5;
  }
  var _0x61a9ca = "gameobj/" + this.oType + "/" + this.pumpkinType + "/" + this.frameNumber + ".png";
  var _0x3220e8 = this.getSkinImageObj(_0x61a9ca);
  if (_0x3220e8) {
    var _0x13824a = 0;
    var _0x399a2c = this.rad;
    var _0xc0b2a4 = this.rad * 2.5;
    imH = this.rad * 2.5;
    var _0x20fd2d = 0.5;
    var _0xaa8a84 = 0.95;
    a0_0x4ef4f3.save();
    {
      a0_0x4ef4f3.globalAlpha *= this.onFireEffA * _0x54f380;
      a0_0x4ef4f3.rotate(this.angle + a0_0x441370);
      a0_0x4ef4f3.drawImage(_0x3220e8, _0x13824a + _0xc0b2a4 * -_0x20fd2d, _0x399a2c + imH * -_0xaa8a84, _0xc0b2a4, imH);
    }
    a0_0x4ef4f3.restore();
  } else {}
};
a0_0x2af66a.prototype.isFloating = false;
a0_0x2af66a.prototype.isRolling = false;
a0_0x2af66a.prototype.readUpdatedProperty = function (_0x382465, _0x436b27) {
  if (_0x382465 == a0_0x7780d0) {
    this.isFloating = _0x436b27.readUInt8() == 1;
  } else if (_0x382465 == a0_0x5bcdd7) {
    this.isRolling = _0x436b27.readUInt8() == 1;
  }
};
a0_0x2af66a.prototype.readCustomData_onNewlyVisible = function (_0x54f715) {
  this.isRolling = _0x54f715.readUInt8() == 1;
  this.pumpkinType = _0x54f715.readUInt8();
};
function a0_0x2af66a() {
  a0_0x2af66a.superClass.call(this, a0_0x4a208d);
  this.lookAngle = 0;
  this.isRolling = false;
  this.isFloating = false;
  this.pumpkinType = false;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
var a0_0x4a208d = 131;
window.PumpkinBall = a0_0x2af66a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2af66a, a0_0x4a208d);
var a0_0x2011f1 = a0_0x5ca8b0;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x2011f1.prototype.alltimeGoals = 0;
a0_0x2011f1.prototype.xpGained = 0;
a0_0x2011f1.prototype.goalScorer = "";
a0_0x2011f1.prototype.timerTxt = null;
a0_0x2011f1.prototype.timer = 0;
a0_0x5ca8b0.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x5ca8b0.prototype.customDraw = function (_0xae33c6) {
  this.updateTimer();
  if (this.timer > 3) {
    a0_0x4ef4f3.save();
    var _0x2c959b = a0_0x4ef4f3.globalAlpha;
    a0_0x4ef4f3.globalAlpha = _0x2c959b * 0.25;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2, false);
    a0_0x4ef4f3.arc(0, 0, this.rad - 20, 0, Math.PI * 2, true);
    a0_0x4ef4f3.fillStyle = "#ff9000";
    a0_0x4ef4f3.closePath();
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.restore();
  }
  if (this.timerTxt != null) {
    this.timerTxt.x = 0;
    this.timerTxt.y = -this.rad;
    this.timerTxt.draw();
  }
};
a0_0x5ca8b0.prototype.readCustomData_onNewlyVisible = function (_0x26a739) {
  a0_0x5ca8b0.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x26a739);
  this.alltimeGoals = _0x26a739.readUInt16();
  this.goalScorer = _0x26a739.readString();
  this.timer = _0x26a739.readUInt8();
};
a0_0x5ca8b0.prototype.readUpdatedProperty = function (_0x49ae81, _0x461c3b) {
  if (_0x49ae81 == a0_0x245b40) {
    this.timer = _0x461c3b.readUInt8();
  }
};
a0_0x5ca8b0.prototype.setTimer = function (_0x15023b) {
  var _0x79c242 = _0x15023b;
  var _0x17d3d2 = 16;
  if (this.timerTxt == null) {
    this.timerTxt = new a0_0x3d10bd(_0x17d3d2, "#ffd800");
    this.timerTxt.strokeW = 2;
    this.timerTxt.multiLine = true;
    this.timerTxt.renderScale = 3;
    this.timerTxt.setText(_0x79c242);
  } else {
    this.timerTxt.setFontSize(_0x17d3d2);
    this.timerTxt.setText(_0x79c242);
  }
};
a0_0x5ca8b0.prototype.updateTimer = function () {
  this.timer = Math.round(this.timer);
  var _0x4e4349 = this.timer;
  switch (this.timer) {
    case 10:
    case 9:
    case 8:
      _0x4e4349 = "GOAAAAAL!!!";
      break;
    case 7:
    case 6:
    case 5:
      _0x4e4349 = this.goalScorer;
      break;
    case 4:
    case 3:
    case 2:
      _0x4e4349 = "TOTAL GOALS " + this.alltimeGoals;
      break;
    default:
      _0x4e4349 = "";
      break;
  }
  this.setTimer(_0x4e4349);
};
var a0_0x559f8c = 125;
function a0_0x5ca8b0() {
  a0_0x5ca8b0.superClass.call(this);
  this.hasAdLoaded = false;
}
window.AbilityObjGoalScored = a0_0x5ca8b0;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5ca8b0, a0_0x20e6c5, a0_0x559f8c);
var a0_0x397477 = a0_0x397477;
var a0_0x58d04c = a0_0x45645e;
a0_0x397477.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x397477.prototype.constructor = a0_0x397477;
a0_0x397477.superClass = a0_0x58d04c;
a0_0x397477.prototype.animalInfo = function () {
  var _0x16159b = {};
  switch (this.animalSpecies) {
    case 0:
      _0x16159b.aniName = "Raven";
      break;
    case 111:
      _0x16159b.aniName = "Classic Raven";
      break;
    case 220:
      _0x16159b.aniName = "Muscipula Raven";
      break;
  }
  _0x16159b.aniCol = "#FF9000";
  _0x16159b.skinName = this.getSkinName();
  _0x16159b.upgradeText = "UPGRADED to " + _0x16159b.aniName + "!\nHold W to fly around from Tress/Hills.\n(Hint: Use ability on land to scare animals) ";
  return _0x16159b;
};
a0_0x397477.prototype.getAbilityInfo = function (_0x563dae) {
  var _0x4011ba = {
    abilName: "Loud Caw!"
  };
  _0x4011ba.abilImg = "skins/" + this.getSpeciesPath() + this.getSubSpecies() + "/ability.png";
  _0x4011ba.skinThemeID = this.skinThemeID;
  _0x4011ba.mopeSeasonID = this.mopeSeasonID;
  return _0x4011ba;
};
a0_0x397477.prototype.getSkinName = function () {
  return this.getSpeciesPath() + this.getSubSpecies() + "/raven" + (this.specType == 0 ? "" : this.specType);
};
a0_0x397477.prototype.getSpeciesPath = function () {
  return "forest/raven/" + this.animalSpecies;
};
a0_0x397477.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x397477.prototype.getWing = function (_0x55275b, _0x3d7d4a, _0x27f1f) {
  var _0x5a4ff8 = "skins/" + this.getSpeciesPath() + "/";
  _0x5a4ff8 += _0x55275b + "_wing" + _0x3d7d4a + ".png";
  return _0x5a4ff8;
};
a0_0x397477.prototype.getHead = function (_0x110144, _0x372b9a) {
  var _0x18ceff = "skins/" + this.getSpeciesPath() + "/";
  _0x18ceff += _0x110144 + "_head.png";
  return _0x18ceff;
};
var a0_0x19d9f9 = 0;
var a0_0x4ea6e7 = 1.25;
var a0_0x46ba5f = 5;
var a0_0x2a1718 = 1;
a0_0x397477.prototype.biteStart = 0;
a0_0x397477.prototype.flapAmount = 3;
a0_0x397477.prototype.flapDur = 0.7;
a0_0x397477.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else if (!this.flag_flying) {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x4f736f;
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x5d3414 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/raven_head1.png");
      var _0x57a0b4 = (a0_0x4f736f - this.biteStart) / 1000;
      var _0x4a060e = this.skinScale * 1.1;
      var _0x172ba3 = this.skinRad;
      _0x2b2909 = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x57a0b4, this.flapDur, 0.05, 2) : 0.05;
      var _0x35b015 = this.getSkinImageObj(this.getWing("raven", 1, true));
      if (_0x35b015) {
        a0_0x4ef4f3.save();
        var _0x56d3e3 = -(-0.2 + _0x2b2909) * a0_0x2b691e;
        var _0x172ba3 = this.rad * 0.9;
        a0_0x4ef4f3.rotate(a0_0x844a6b(a0_0x46ba5f) + _0x56d3e3);
        var _0x557cae = 0;
        var _0x17a8b0 = this.rad;
        var _0xb20522 = _0x172ba3 * 2 * 0.62;
        var _0x29c862 = _0x172ba3 * 2.5;
        var _0x498e61 = a0_0x19d9f9;
        var _0x4fcbac = a0_0x4ea6e7;
        a0_0x4ef4f3.drawImage(_0x35b015, _0x557cae + _0xb20522 * -_0x498e61, _0x17a8b0 + _0x29c862 * -_0x4fcbac, _0xb20522, _0x29c862);
        a0_0x4ef4f3.restore();
      }
      var _0x35b015 = this.getSkinImageObj(this.getWing("raven", 2, true));
      if (_0x35b015) {
        a0_0x4ef4f3.save();
        var _0x56d3e3 = -(-0.2 + _0x2b2909) * a0_0x844a6b(-90);
        var _0x172ba3 = this.rad * 0.9;
        a0_0x4ef4f3.rotate(a0_0x844a6b(-a0_0x46ba5f) + _0x56d3e3);
        var _0x557cae = 0;
        var _0x17a8b0 = this.rad;
        var _0xb20522 = _0x172ba3 * 2 * 0.62;
        var _0x29c862 = _0x172ba3 * 2.5;
        var _0x498e61 = a0_0x2a1718;
        var _0x4fcbac = a0_0x4ea6e7;
        a0_0x4ef4f3.drawImage(_0x35b015, _0x557cae + _0xb20522 * -_0x498e61, _0x17a8b0 + _0x29c862 * -_0x4fcbac, _0xb20522, _0x29c862);
        a0_0x4ef4f3.restore();
      }
      if (_0x5d3414) {
        _0x2b2909 = 0;
        if (!this.flag_flying) {
          _0x2b2909 = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x57a0b4, this.flapDur, this.flapAmount, 2) : this.flapAmount;
        }
        a0_0x4ef4f3.save();
        var _0x172ba3 = this.rad;
        a0_0x4ef4f3.drawImage(_0x5d3414, -_0x172ba3 * _0x4a060e, (-_0x172ba3 + _0x172ba3 * 0.1) * _0x4a060e + _0x2b2909, _0x172ba3 * 2 * _0x4a060e, _0x172ba3 * 2 * _0x4a060e);
        a0_0x4ef4f3.restore();
      }
    }
  } else if (this.flag_flying) {
    var _0x4a060e = 500 / 340;
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x4ef4f3.save();
      var _0x57a0b4 = (a0_0x4f736f - this.spawnTime) / 1000;
      var _0x2b2909 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x57a0b4, 0.5, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
      var _0x35b015 = this.getSkinImageObj(this.getWing("raven", 1, true));
      if (_0x35b015) {
        a0_0x4ef4f3.save();
        var _0x56d3e3 = -(-0.2 + _0x2b2909) * a0_0x2b691e;
        var _0x172ba3 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(45) + _0x56d3e3);
        var _0x557cae = 0;
        var _0x17a8b0 = this.rad;
        var _0xb20522 = _0x172ba3 * 2 * 0.62;
        var _0x29c862 = _0x172ba3 * 2.5;
        var _0x498e61 = 0.2;
        var _0x4fcbac = 1.7;
        a0_0x4ef4f3.drawImage(_0x35b015, _0x557cae + _0xb20522 * -_0x498e61, _0x17a8b0 + _0x29c862 * -_0x4fcbac, _0xb20522, _0x29c862);
        a0_0x4ef4f3.restore();
      }
      var _0x35b015 = this.getSkinImageObj(this.getWing("raven", 2, true));
      if (_0x35b015) {
        a0_0x4ef4f3.save();
        var _0x56d3e3 = -(-0.2 + _0x2b2909) * a0_0x844a6b(-90);
        var _0x172ba3 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(-45) + _0x56d3e3);
        var _0x557cae = 0;
        var _0x17a8b0 = this.rad;
        var _0xb20522 = _0x172ba3 * 2 * 0.62;
        var _0x29c862 = _0x172ba3 * 2.5;
        var _0x498e61 = 0.8;
        var _0x4fcbac = 1.7;
        a0_0x4ef4f3.drawImage(_0x35b015, _0x557cae + _0xb20522 * -_0x498e61, _0x17a8b0 + _0x29c862 * -_0x4fcbac, _0xb20522, _0x29c862);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x5d3414 = this.getSkinImageObj(this.getHead("raven", true));
      if (_0x5d3414) {
        a0_0x4ef4f3.save();
        var _0x172ba3 = this.rad;
        a0_0x4ef4f3.drawImage(_0x5d3414, -_0x172ba3 * _0x4a060e, (-_0x172ba3 + _0x172ba3 * 0.1) * _0x4a060e, _0x172ba3 * 2 * _0x4a060e, _0x172ba3 * 2 * _0x4a060e);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
function a0_0x397477() {
  a0_0x397477.superClass.call(this, a0_0x1370b8);
}
window.Raven = a0_0x397477;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x397477, a0_0x1370b8, a0_0x5ab1f8);
var a0_0x2011f1 = a0_0x17eb91;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x17eb91.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x17eb91.prototype.customDraw = function (_0x13c9f4) {
  a0_0x4ef4f3.save();
  var _0x227756 = a0_0x4ef4f3.globalAlpha;
  a0_0x4ef4f3.globalAlpha = _0x227756 * 0.1;
  a0_0x5c99c1(0, 0, this.rad, "#755A2A");
  a0_0x4ef4f3.restore();
  this.drawChat();
};
a0_0x17eb91.prototype.drawChat = function () {
  if (this.aLine == null) {
    return;
  }
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.font = "10px Arial";
  a0_0x4ef4f3.lineWidth = 1;
  a0_0x4ef4f3.textAlign = "center";
  a0_0x4ef4f3.textBaseline = "middle";
  var _0x54874e = this.aLine;
  var _0x47bf21 = a0_0x4f736f > _0x54874e.chatFadeT ? 0 : 1;
  _0x54874e.chatA += (_0x47bf21 - _0x54874e.chatA) * 0.1;
  a0_0x4ef4f3.shadowOffsetX = 0;
  a0_0x4ef4f3.shadowOffsetY = 0;
  if (_0x54874e.chatA < 0.02) {
    this.aLine = null;
  }
  var _0x51a79f = a0_0x4ef4f3.measureText(_0x54874e.chatTxt).width;
  var _0x2294a8 = 10;
  var _0x4d09fa = 1;
  var _0x400407 = 1;
  a0_0x4ef4f3.globalAlpha = _0x54874e.chatA * 0.8;
  a0_0x4ef4f3.fillStyle = a0_0x28d4ea(this.curBiome);
  a0_0x4ef4f3.fillRect(this.x - _0x4d09fa - _0x51a79f / 2, this.y - this.rad - _0x2294a8 / 2 - _0x400407, _0x51a79f + _0x4d09fa * 2, _0x2294a8 + _0x400407 * 2);
  a0_0x4ef4f3.fillStyle = "#F1C34C";
  if (a0_0x1d703e != a0_0x30b084) {
    a0_0x4ef4f3.shadowOffsetX = 1;
    a0_0x4ef4f3.shadowOffsetY = 1;
    a0_0x4ef4f3.shadowColor = "black";
  }
  a0_0x4ef4f3.globalAlpha = _0x54874e.chatA;
  a0_0x4ef4f3.fillText(_0x54874e.chatTxt, this.x, this.y - this.rad);
  a0_0x4ef4f3.restore();
};
function a0_0x17eb91() {
  a0_0x17eb91.superClass.call(this);
}
a0_0x17eb91.prototype.aLine = null;
a0_0x17eb91.prototype.readCustomData_onNewlyVisible = function (_0x400b8a) {
  a0_0x17eb91.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x400b8a);
  this.aLine = {
    chatTxt: "CAW!!!",
    chatFadeT: a0_0x4f736f + 2000,
    chatA: 0
  };
};
window.RavenCaw = a0_0x17eb91;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x17eb91, a0_0x20e6c5, a0_0x274071);
var a0_0x48095c = a0_0x48095c;
var a0_0x58d04c = a0_0x45645e;
a0_0x48095c.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x48095c.prototype.constructor = a0_0x48095c;
a0_0x48095c.superClass = a0_0x58d04c;
a0_0x48095c.prototype.animalInfo = function () {
  var _0xa70626 = {};
  switch (this.animalSpecies) {
    case 0:
      _0xa70626.aniName = "Kakapo";
      break;
    case 111:
      _0xa70626.aniName = "Classic Kakapo";
      break;
    case 202:
      _0xa70626.aniName = "Wind-up Kakapo";
      break;
  }
  _0xa70626.aniCol = "#FF9000";
  _0xa70626.skinName = this.getSkinName();
  _0xa70626.upgradeText = "UPGRADED to " + _0xa70626.aniName + "!\nHold W to hop around.\n(Hint: Use ability on prey to stun them) ";
  return _0xa70626;
};
a0_0x48095c.prototype.getSkinName = function () {
  return this.getSpeciesPath() + this.getSubSpecies() + "/kakapo" + (this.specType == 0 ? "" : this.specType);
};
a0_0x48095c.prototype.getSpeciesPath = function () {
  return "forest/kakapo/" + this.animalSpecies;
};
a0_0x48095c.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x48095c.prototype.getWing = function (_0x2c532e, _0x3376e6, _0x472385) {
  var _0xa9dbf1 = "skins/" + this.getSpeciesPath() + "/";
  _0xa9dbf1 += _0x2c532e + "_wing" + _0x3376e6 + ".png";
  return _0xa9dbf1;
};
a0_0x48095c.prototype.getHead = function (_0x18fe02, _0x51c391) {
  var _0x33fd1e = "skins/" + this.getSpeciesPath() + "/";
  _0x33fd1e += _0x18fe02 + "_head.png";
  return _0x33fd1e;
};
var a0_0x455a45 = 0;
var a0_0x7c88b2 = 1.25;
var a0_0xfbc783 = 5;
var a0_0x34f1ba = 1;
a0_0x48095c.prototype.biteStart = 0;
a0_0x48095c.prototype.flapAmount = 3;
a0_0x48095c.prototype.flapDur = 0.7;
a0_0x48095c.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else if (!this.flag_flying) {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x4f736f;
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x29148d = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/kakapo_head.png");
      var _0x2b445f = (a0_0x4f736f - this.biteStart) / 1000;
      var _0x53f50c = this.skinScale * 1.1;
      var _0x5e93e3 = this.skinRad;
      _0x1cada4 = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x2b445f, this.flapDur, 0.05, 2) : 0.05;
      var _0x1dfd72 = this.getSkinImageObj(this.getWing("kakapo", 1, true));
      if (_0x1dfd72) {
        a0_0x4ef4f3.save();
        var _0x998193 = -(-0.2 + _0x1cada4) * a0_0x2b691e;
        var _0x5e93e3 = this.rad * 0.9;
        a0_0x4ef4f3.rotate(a0_0x844a6b(a0_0xfbc783) + _0x998193);
        var _0x60a746 = 0;
        var _0x45f116 = this.rad;
        var _0x444541 = _0x5e93e3 * 2 * 0.62;
        var _0xb70c75 = _0x5e93e3 * 2.5;
        var _0x818b70 = a0_0x455a45;
        var _0x4b18a0 = a0_0x7c88b2;
        a0_0x4ef4f3.drawImage(_0x1dfd72, _0x60a746 + _0x444541 * -_0x818b70, _0x45f116 + _0xb70c75 * -_0x4b18a0, _0x444541, _0xb70c75);
        a0_0x4ef4f3.restore();
      }
      var _0x1dfd72 = this.getSkinImageObj(this.getWing("kakapo", 2, true));
      if (_0x1dfd72) {
        a0_0x4ef4f3.save();
        var _0x998193 = -(-0.2 + _0x1cada4) * a0_0x844a6b(-90);
        var _0x5e93e3 = this.rad * 0.9;
        a0_0x4ef4f3.rotate(a0_0x844a6b(-a0_0xfbc783) + _0x998193);
        var _0x60a746 = 0;
        var _0x45f116 = this.rad;
        var _0x444541 = _0x5e93e3 * 2 * 0.62;
        var _0xb70c75 = _0x5e93e3 * 2.5;
        var _0x818b70 = a0_0x34f1ba;
        var _0x4b18a0 = a0_0x7c88b2;
        a0_0x4ef4f3.drawImage(_0x1dfd72, _0x60a746 + _0x444541 * -_0x818b70, _0x45f116 + _0xb70c75 * -_0x4b18a0, _0x444541, _0xb70c75);
        a0_0x4ef4f3.restore();
      }
      if (_0x29148d) {
        _0x1cada4 = 0;
        if (!this.flag_flying) {
          _0x1cada4 = a0_0x1d703e != a0_0x30b084 ? a0_0xe2d896(_0x2b445f, this.flapDur, this.flapAmount, 2) : this.flapAmount;
        }
        a0_0x4ef4f3.save();
        var _0x5e93e3 = this.rad;
        a0_0x4ef4f3.drawImage(_0x29148d, -_0x5e93e3 * _0x53f50c, (-_0x5e93e3 + _0x5e93e3 * 0.1) * _0x53f50c + _0x1cada4, _0x5e93e3 * 2 * _0x53f50c, _0x5e93e3 * 2 * _0x53f50c);
        a0_0x4ef4f3.restore();
      }
    }
  } else if (this.flag_flying) {
    var _0x53f50c = 500 / 340;
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x4ef4f3.save();
      var _0x2b445f = (a0_0x4f736f - this.spawnTime) / 1000;
      var _0x1cada4 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x2b445f, 0.5, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
      var _0x1dfd72 = this.getSkinImageObj(this.getWing("kakapo", 1, true));
      if (_0x1dfd72) {
        a0_0x4ef4f3.save();
        var _0x998193 = -(-0.2 + _0x1cada4) * a0_0x2b691e;
        var _0x5e93e3 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(45) + _0x998193);
        var _0x60a746 = 0;
        var _0x45f116 = this.rad;
        var _0x444541 = _0x5e93e3 * 2 * 0.62;
        var _0xb70c75 = _0x5e93e3 * 2.5;
        var _0x818b70 = 0.2;
        var _0x4b18a0 = 1.7;
        a0_0x4ef4f3.drawImage(_0x1dfd72, _0x60a746 + _0x444541 * -_0x818b70, _0x45f116 + _0xb70c75 * -_0x4b18a0, _0x444541, _0xb70c75);
        a0_0x4ef4f3.restore();
      }
      var _0x1dfd72 = this.getSkinImageObj(this.getWing("kakapo", 2, true));
      if (_0x1dfd72) {
        a0_0x4ef4f3.save();
        var _0x998193 = -(-0.2 + _0x1cada4) * a0_0x844a6b(-90);
        var _0x5e93e3 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(-45) + _0x998193);
        var _0x60a746 = 0;
        var _0x45f116 = this.rad;
        var _0x444541 = _0x5e93e3 * 2 * 0.62;
        var _0xb70c75 = _0x5e93e3 * 2.5;
        var _0x818b70 = 0.8;
        var _0x4b18a0 = 1.7;
        a0_0x4ef4f3.drawImage(_0x1dfd72, _0x60a746 + _0x444541 * -_0x818b70, _0x45f116 + _0xb70c75 * -_0x4b18a0, _0x444541, _0xb70c75);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x29148d = this.getSkinImageObj(this.getHead("kakapo", true));
      if (_0x29148d) {
        a0_0x4ef4f3.save();
        var _0x5e93e3 = this.rad;
        a0_0x4ef4f3.drawImage(_0x29148d, -_0x5e93e3 * _0x53f50c, (-_0x5e93e3 + _0x5e93e3 * 0.1) * _0x53f50c, _0x5e93e3 * 2 * _0x53f50c, _0x5e93e3 * 2 * _0x53f50c);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
a0_0x48095c.prototype.getAbilityInfo = function (_0x2d9e3b) {
  var _0x29970a = {
    abilName: "Hop!"
  };
  _0x29970a.abilImg = "skins/" + this.getSpeciesPath() + this.getSubSpecies() + "/kakapo";
  _0x29970a.skinThemeID = this.skinThemeID;
  _0x29970a.mopeSeasonID = this.mopeSeasonID;
  return _0x29970a;
};
function a0_0x48095c() {
  a0_0x48095c.superClass.call(this, a0_0x1370b8);
}
window.Kakapo = a0_0x48095c;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x48095c, a0_0x1370b8, a0_0x559bf8);
var a0_0x2c223c = a0_0x2c223c;
var a0_0x58d04c = a0_0x45645e;
a0_0x2c223c.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2c223c.prototype.constructor = a0_0x2c223c;
a0_0x2c223c.superClass = a0_0x58d04c;
a0_0x2c223c.prototype.objSkinSpotsCanvas = null;
a0_0x2c223c.prototype.animalInfo = function () {
  var _0x42dba2 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x42dba2.aniName = "Mole";
      break;
    case 100:
      _0x42dba2.aniName = "Zombie Mole";
      break;
    case 111:
      _0x42dba2.aniName = "Classic Mole";
      break;
    case 112:
      _0x42dba2.aniName = "Gold-trim Mole";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x42dba2.aniName = "Toxic Mole";
          break;
        case 1:
          _0x42dba2.aniName = "Cytokinetic Mole";
          break;
      }
      break;
  }
  _0x42dba2.aniDesc = "";
  _0x42dba2.upgradeText = "UPGRADED to " + _0x42dba2.aniName + "!\n Hold W to dig underground!\nGo under anything, do surprise attacks!";
  _0x42dba2.aniCol = "#4C4A45";
  _0x42dba2.skinName = this.getSkinName();
  return _0x42dba2;
};
a0_0x2c223c.prototype.getSkinName = function () {
  return "land/mole/" + this.animalSpecies + this.getSubSpecies() + "/mole";
};
a0_0x2c223c.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x2c223c.prototype.getAbilityInfo = function (_0x5248fe) {
  var _0x426aef = {
    abilName: "Hold to Dig"
  };
  _0x426aef.abilImg = "skins/" + this.getSkinName() + ".png";
  _0x426aef.skinThemeID = this.skinThemeID;
  _0x426aef.mopeSeasonID = this.mopeSeasonID;
  return _0x426aef;
};
function a0_0x2c223c() {
  a0_0x2c223c.superClass.call(this, a0_0x1370b8);
}
window.Mole = a0_0x2c223c;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2c223c, a0_0x1370b8, a0_0x2347de);
var a0_0x58d04c = a0_0x12658e;
a0_0x2f2223.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2f2223.prototype.constructor = a0_0x2f2223;
a0_0x2f2223.superClass = a0_0x58d04c;
a0_0x2f2223.prototype.updateZ = function () {
  this.z = 1010;
};
a0_0x2f2223.prototype.setSkinPath = function () {
  this.objSkinPath = "img/coin/coin" + (this.isEdibleOutlined() ? "_e" : "") + ".png";
};
a0_0x2f2223.prototype.customDraw = function (_0x1bd9e4) {
  var _0x577742 = this.getSkinImageObj(this.objSkinPath);
  if (_0x577742) {
    var _0x2907e2 = this.rad;
    a0_0x4ef4f3.drawImage(_0x577742, -_0x2907e2, -_0x2907e2, _0x2907e2 * 2, _0x2907e2 * 2);
  }
};
var a0_0x473f06 = 132;
function a0_0x2f2223() {
  a0_0x2f2223.superClass.call(this, a0_0x473f06);
  a0_0x2f2223.prototype.easeAngleChanges = true;
}
window.MopeCoin = a0_0x2f2223;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2f2223, a0_0x473f06);
var a0_0x58d04c = a0_0x12658e;
a0_0x27f9b1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x27f9b1.prototype.constructor = a0_0x27f9b1;
a0_0x27f9b1.superClass = a0_0x58d04c;
a0_0x27f9b1.prototype.color = "limegreen";
a0_0x27f9b1.prototype.updateZ = function () {
  this.z = this.rad + 11110000;
};
a0_0x27f9b1.prototype.customDraw = function (_0x323140) {
  a0_0x4ef4f3.save();
  var _0x5dd819 = 0.4;
  var _0x4d54d3 = 8;
  if (this.shrinkRad > 250) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 0.1;
    a0_0x498500(0, 0, this.shrinkRad, _0x4d54d3 * 0.5, this.color);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = _0x5dd819 + 0.3;
  a0_0x498500(0, 0, this.rad, _0x4d54d3, this.color);
  a0_0x4ef4f3.restore();
  if (this.rad > 1500) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = _0x5dd819;
    a0_0x498500(0, 0, this.shrinkedRad, _0x4d54d3, a0_0x237aea);
    a0_0x4ef4f3.restore();
  }
  var _0x5ebb00 = a0_0x24bc92 * (a0_0xe585d7 / 2);
  var _0x2dd025 = a0_0x24bc92 * (a0_0x425049 / 2);
  var _0x162905 = _0x5dd819 - 0.1;
  var _0x21c68d = this.color;
  var _0x56e914 = a0_0x425049;
  var _0x15d3f9 = a0_0xe585d7;
  var _0x593ca6 = _0x56e914 - this.x;
  var _0x8e9bc = _0x15d3f9 - this.y;
  var _0x8c0ab2 = this.x;
  var _0x1bee93 = _0x8e9bc;
  var _0x4bc73c = _0x8c0ab2;
  var _0x31d010 = this.y;
  var _0x2c1fca = _0x593ca6;
  var _0x3a158d = _0x31d010;
  _0x593ca6 = a0_0x24bc92 * _0x593ca6;
  _0x8e9bc = a0_0x24bc92 * _0x8e9bc;
  _0x8c0ab2 = a0_0x24bc92 * _0x8c0ab2;
  _0x1bee93 = a0_0x24bc92 * _0x1bee93;
  _0x4bc73c = a0_0x24bc92 * _0x4bc73c;
  _0x31d010 = a0_0x24bc92 * _0x31d010;
  _0x2c1fca = a0_0x24bc92 * _0x2c1fca;
  _0x3a158d = a0_0x24bc92 * _0x3a158d;
  this.drawDangerAreaSegment2(0, _0x21c68d, _0x162905, _0x8e9bc, _0x593ca6);
  this.drawDangerAreaSegment2(Math.PI * 0.5, _0x21c68d, _0x162905, _0x8c0ab2, _0x1bee93);
  this.drawDangerAreaSegment2(Math.PI * 1, _0x21c68d, _0x162905, _0x31d010, _0x4bc73c);
  this.drawDangerAreaSegment2(Math.PI * 1.5, _0x21c68d, _0x162905, _0x2c1fca, _0x3a158d);
  a0_0x4ef4f3.restore();
};
a0_0x27f9b1.prototype.drawDangerAreaSegment2 = function (_0x200ad4, _0x1ea329, _0x14066a, _0x19c2b1, _0x1c6aee) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = _0x14066a;
  a0_0x4ef4f3.fillStyle = _0x1ea329;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.rotate(_0x200ad4);
  a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 0.5, false);
  a0_0x4ef4f3.lineTo(0, _0x19c2b1);
  a0_0x4ef4f3.lineTo(_0x1c6aee, _0x19c2b1);
  a0_0x4ef4f3.lineTo(_0x1c6aee, 0);
  a0_0x4ef4f3.closePath();
  a0_0x4ef4f3.fill();
  a0_0x4ef4f3.restore();
};
a0_0x27f9b1.prototype.moveUpdate = function () {
  var _0x55fbec = (a0_0x4f736f - this.updateTime) / 1000 / a0_0x597515;
  _0x55fbec = _0x55fbec < 0 ? 0 : _0x55fbec > 1 ? 1 : _0x55fbec;
  this.x = _0x55fbec * (this.nx - this.ox) + this.ox;
  this.y = _0x55fbec * (this.ny - this.oy) + this.oy;
  this.rad += (this.nRad - this.rad) * 0.1;
  return Math.min(1, _0x55fbec);
};
a0_0x27f9b1.prototype.readUpdatedProperty = function (_0x3433e6, _0x373e35) {
  if (_0x3433e6 == a0_0x41ccdf) {
    this.shrinkRad = _0x373e35.readUInt32() / 4;
  }
};
a0_0x27f9b1.prototype.readCustomData_onNewlyVisible = function (_0x39ae91) {
  this.shrinkRad = _0x39ae91.readUInt32() / 4;
};
function a0_0x27f9b1() {
  a0_0x27f9b1.superClass.call(this, a0_0x1de546);
  a0_0x27f9b1.prototype.easeAngleChanges = true;
  this.color = a0_0xe92752 == a0_0x342dbf ? "limegreen" : "red";
}
window.SafeArea = a0_0x27f9b1;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x27f9b1, a0_0x1de546);
var a0_0x58d04c = a0_0x45645e;
a0_0x2c9e96.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2c9e96.prototype.constructor = a0_0x2c9e96;
a0_0x2c9e96.superClass = a0_0x58d04c;
a0_0x2c9e96.prototype.animalInfo = function () {
  var _0x42eed1 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x42eed1.aniName = "Snow Leopard!";
      break;
    case 100:
      _0x42eed1.aniName = "Frostaline";
      break;
    case 111:
      _0x42eed1.aniName = "Classic Snow Leopard!";
      break;
    case 112:
      _0x42eed1.aniName = "Gold-trim Snow Leopard";
      break;
    case 201:
      _0x42eed1.aniName = "Coral Queen";
      break;
    case 202:
      _0x42eed1.aniName = "Astral Leopard";
      break;
    case 204:
      _0x42eed1.aniName = "Martian Leopard";
      break;
  }
  _0x42eed1.skinName = this.getSkinName();
  _0x42eed1.aniDesc = "";
  _0x42eed1.upgradeText = "UPGRADED to " + _0x42eed1.aniName + "!\n Press W to get a speed boost! (Every 8 seconds)!";
  _0x42eed1.aniCol = "#cfcfcf";
  return _0x42eed1;
};
a0_0x2c9e96.prototype.getSkinName = function () {
  return "arctic/snowleopard/" + this.animalSpecies + this.getSubSpecies() + "/snowleopard";
};
a0_0x2c9e96.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x2c9e96.prototype.getAbilityInfo = function (_0x347e90) {
  var _0x56c7c0 = {
    abilName: "Extra Boost"
  };
  _0x56c7c0.abilImg = "arctic/snowleopard/" + this.animalSpecies + this.getSubSpecies() + "/snowleopard1";
  _0x56c7c0.skinThemeID = this.skinThemeID;
  _0x56c7c0.mopeSeasonID = this.mopeSeasonID;
  return _0x56c7c0;
};
function a0_0x2c9e96() {
  a0_0x2c9e96.superClass.call(this, a0_0x1370b8);
}
window.SnowLeopard = a0_0x2c9e96;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2c9e96, a0_0x1370b8, a0_0x1b4543);
var a0_0x58d04c = a0_0x12658e;
a0_0x16135d.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x16135d.prototype.constructor = a0_0x16135d;
a0_0x16135d.superClass = a0_0x58d04c;
a0_0x16135d.prototype.updateZ = function () {
  this.z = 1000000;
};
var a0_0x4067c0 = -0.3;
var a0_0x230eea = -0.2;
var a0_0xbba426 = 0.3;
var a0_0x1ab38f = -0.2;
var a0_0x5b7b9d = 0.2;
a0_0x16135d.prototype.customDraw = function (_0x536177) {
  var _0x13f240 = 500 / 340;
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(this.angle);
  var _0x2377a8 = this.rad;
  var _0x24ce9b = this.getSkinImageObj(this.getBody("battleduck", true));
  if (_0x24ce9b) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.drawImage(_0x24ce9b, -_0x2377a8 * _0x13f240, -_0x2377a8 * _0x13f240, _0x2377a8 * 2 * _0x13f240, _0x2377a8 * 2 * _0x13f240);
    a0_0x4ef4f3.restore();
  }
  var _0x496add = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x86a522 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x496add, 2.5, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
  var _0x571115 = this.getSkinImageObj(this.getWing("battleduck", 1, true));
  if (_0x571115) {
    a0_0x4ef4f3.save();
    var _0x11ec42 = -(-0.2 + _0x86a522) * a0_0x2b691e;
    var _0x2377a8 = this.rad * 1;
    a0_0x4ef4f3.rotate(a0_0x844a6b(45) + _0x11ec42);
    var _0x424a10 = 0;
    var _0x3d0f27 = this.rad;
    var _0x3e25c4 = _0x2377a8 * 2 * 0.62;
    var _0x5d0604 = _0x2377a8 * 2.5;
    var _0x30f3b7 = 0.2 + a0_0x4067c0;
    var _0x49b3a9 = 1.7 + a0_0x230eea;
    a0_0x4ef4f3.drawImage(_0x571115, _0x424a10 + _0x3e25c4 * -_0x30f3b7, _0x3d0f27 + _0x5d0604 * -_0x49b3a9, _0x3e25c4, _0x5d0604);
    a0_0x4ef4f3.restore();
  }
  var _0x571115 = this.getSkinImageObj(this.getWing("battleduck", 2, true));
  if (_0x571115) {
    a0_0x4ef4f3.save();
    var _0x11ec42 = -(-0.2 + _0x86a522) * a0_0x844a6b(-90);
    var _0x2377a8 = this.rad * 1;
    a0_0x4ef4f3.rotate(a0_0x844a6b(-45) + _0x11ec42);
    var _0x424a10 = 0;
    var _0x3d0f27 = this.rad;
    var _0x3e25c4 = _0x2377a8 * 2 * 0.62;
    var _0x5d0604 = _0x2377a8 * 2.5;
    var _0x30f3b7 = 0.8 + a0_0xbba426;
    var _0x49b3a9 = 1.7 + a0_0x1ab38f;
    a0_0x4ef4f3.drawImage(_0x571115, _0x424a10 + _0x3e25c4 * -_0x30f3b7, _0x3d0f27 + _0x5d0604 * -_0x49b3a9, _0x3e25c4, _0x5d0604);
    a0_0x4ef4f3.restore();
  }
  var _0x3182a5 = this.getSkinImageObj(this.getHead("battleduck", true));
  if (_0x3182a5) {
    a0_0x4ef4f3.save();
    var _0x2377a8 = this.rad;
    a0_0x4ef4f3.drawImage(_0x3182a5, -_0x2377a8 * _0x13f240, (-_0x2377a8 + _0x2377a8 * a0_0x5b7b9d) * _0x13f240, _0x2377a8 * 2 * _0x13f240, _0x2377a8 * 2 * _0x13f240);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
a0_0x16135d.prototype.getSpeciesPath = function (_0x2817cd) {
  return _0x2817cd + "/" + this.speciesType;
};
a0_0x16135d.prototype.getWing = function (_0x5bee16, _0x30f157, _0x189dac) {
  var _0x36967e = "skins/" + (_0x189dac ? this.getSpeciesPath(_0x5bee16) + "/" : _0x5bee16 + "/");
  _0x36967e += _0x5bee16 + "_wing" + _0x30f157 + ".png";
  return _0x36967e;
};
a0_0x16135d.prototype.getBody = function (_0x1f4d0d, _0x4ce851) {
  var _0x1ed3fb = "skins/" + (_0x4ce851 ? this.getSpeciesPath(_0x1f4d0d) + "/" : _0x1f4d0d + "/");
  _0x1ed3fb += _0x1f4d0d + "_body.png";
  return _0x1ed3fb;
};
a0_0x16135d.prototype.getHead = function (_0x3bee16, _0x1ed1ef) {
  var _0x25e0d0 = "skins/" + (_0x1ed1ef ? this.getSpeciesPath(_0x3bee16) + "/" : _0x3bee16 + "/");
  _0x25e0d0 += _0x3bee16 + "_head.png";
  return _0x25e0d0;
};
var a0_0x36fa56 = 133;
function a0_0x16135d() {
  a0_0x16135d.superClass.call(this, a0_0x36fa56);
  console.log("@@@@@@@@@@@@ BATTLE DUCK SPAWNED @@@@@@@@@");
}
window.BattleDuck = a0_0x16135d;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x16135d, a0_0x36fa56);
var a0_0x1d5a3b = a0_0x1d5a3b;
var a0_0x58d04c = a0_0x45645e;
a0_0x1d5a3b.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1d5a3b.prototype.constructor = a0_0x1d5a3b;
a0_0x1d5a3b.superClass = a0_0x58d04c;
a0_0x1d5a3b.prototype.objSkinSpotsCanvas = null;
a0_0x1d5a3b.prototype.animalInfo = function () {
  var _0x5727a4 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x5727a4.aniName = "Giraffe";
      break;
    case 1:
      _0x5727a4.aniName = "Momaffie";
      break;
    case 2:
      _0x5727a4.aniName = "Girabie";
      break;
    case 3:
      _0x5727a4.aniName = "Momaffie Family";
      break;
    case 111:
      _0x5727a4.aniName = "Classic Giraffe";
      break;
    case 112:
      _0x5727a4.aniName = "Gold-trim Giraffe";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x5727a4.aniName = "Quilin Giraffe";
          break;
        case 1:
          _0x5727a4.aniName = "Draquorum";
      }
      break;
  }
  _0x5727a4.upgradeText = "UPGRADED to " + _0x5727a4.aniName + "!\nGiraffe have huge legs and stomp anyone in their way!";
  _0x5727a4.aniCol = "#E9BD23";
  _0x5727a4.skinName = this.getSkinName();
  return _0x5727a4;
};
a0_0x1d5a3b.prototype.getSkinName = function () {
  let _0x5ad335 = this.getSpeciesPath() + "/giraffe";
  if (this.id == 0 && this.animalSpecies == 3) {
    _0x5ad335 += "_family";
  }
  return _0x5ad335;
};
a0_0x1d5a3b.prototype.getSpeciesPath = function () {
  return "land/giraffe/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x1d5a3b.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x1d5a3b.prototype.getAbilityInfo = function (_0x4267a4) {
  var _0x195e45 = {
    abilName: "Stomp!"
  };
  _0x195e45.abilImg = "skins/" + this.getSpeciesPath() + "/giraffe.png";
  _0x195e45.skinThemeID = this.skinThemeID;
  _0x195e45.mopeSeasonID = this.mopeSeasonID;
  return _0x195e45;
};
a0_0x1d5a3b.prototype.isEdibleOutlined = function () {
  if (this.mommyID == a0_0x1c918d) {
    return false;
  }
  return a0_0x1d5a3b.superClass.prototype.isEdibleOutlined.call(this);
};
a0_0x1d5a3b.prototype.readCustomData_onNewlyVisible = function (_0x372b2a) {
  a0_0x1d5a3b.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x372b2a);
  this.mommyID = _0x372b2a.readUInt32();
};
function a0_0x1d5a3b() {
  a0_0x1d5a3b.superClass.call(this, a0_0x1370b8);
}
window.Giraffe = a0_0x1d5a3b;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1d5a3b, a0_0x1370b8, a0_0x2adefe);
var a0_0x9506d6 = a0_0x9506d6;
var a0_0x58d04c = a0_0x45645e;
a0_0x9506d6.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x9506d6.prototype.constructor = a0_0x9506d6;
a0_0x9506d6.superClass = a0_0x58d04c;
a0_0x9506d6.prototype.objSkinSpotsCanvas = null;
a0_0x9506d6.prototype.getSkinName = function () {
  let _0x59b454 = this.getSpeciesPath() + "/giraffe";
  if (this.specType > 0) {
    _0x59b454 += "" + this.specType;
  }
  if (this.id == 0 && this.animalSpecies == 2) {
    _0x59b454 += "_family";
  }
  return _0x59b454;
};
a0_0x9506d6.prototype.getSpeciesPath = function () {
  return "forest/whitegiraffe/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x9506d6.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x9506d6.prototype.animalInfo = function () {
  var _0x3c61f2 = {};
  switch (this.animalSpecies) {
    case 1:
      _0x3c61f2.aniName = "White Giraffe";
      break;
    case 2:
      _0x3c61f2.aniName = "Giraffe Family";
      break;
  }
  _0x3c61f2.aniDesc = "";
  _0x3c61f2.upgradeText = "UPGRADED to " + _0x3c61f2.aniName + "!\nWhite Giraffe are very aggressive and have huge legs and stomp anyone in their way!";
  _0x3c61f2.aniCol = "#E9BD23";
  _0x3c61f2.skinName = this.getSkinName();
  return _0x3c61f2;
};
a0_0x9506d6.prototype.getAbilityInfo = function (_0x149387) {
  var _0x31f8ca = {
    abilName: "Stomp!"
  };
  _0x31f8ca.abilImg = "skins/" + this.getSpeciesPath() + "/giraffe.png";
  _0x31f8ca.skinThemeID = this.skinThemeID;
  _0x31f8ca.mopeSeasonID = this.mopeSeasonID;
  return _0x31f8ca;
};
function a0_0x9506d6() {
  a0_0x9506d6.superClass.call(this, a0_0x1370b8);
}
window.WhiteGiraffe = a0_0x9506d6;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x9506d6, a0_0x1370b8, a0_0x20cf30);
var a0_0x58d04c = a0_0x45645e;
a0_0x3fefe5.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3fefe5.prototype.constructor = a0_0x3fefe5;
a0_0x3fefe5.superClass = a0_0x58d04c;
a0_0x3fefe5.prototype.getSkinName = function () {
  return this.getSpeciesPath() + "/turkey" + (this.specType == 0 ? "" : this.specType);
};
a0_0x3fefe5.prototype.getSpeciesPath = function () {
  return "forest/turkey/" + this.animalSpecies;
};
a0_0x3fefe5.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x3fefe5.prototype.getWing = function (_0xa9233c, _0x357c71, _0x5cab57) {
  var _0x11fa1e = "skins/" + this.getSpeciesPath() + "/turkey";
  _0x11fa1e += "_wing" + _0x357c71 + ".png";
  return _0x11fa1e;
};
a0_0x3fefe5.prototype.getHead = function (_0x6aeae4, _0x452a57) {
  var _0x23c61a = "skins/" + this.getSpeciesPath() + "/turkey";
  _0x23c61a += "_head.png";
  return _0x23c61a;
};
a0_0x3fefe5.prototype.getAbilityInfo = function (_0x2c60fa) {
  var _0x841edc = {};
  if (this.flag_eff_isOnTree || this.flag_flying && this.flag_usingAbility) {
    _0x841edc.abilName = "Hold to Fly";
    _0x841edc.abilImg = "skins/forest/turkey/" + this.animalSpecies + "/ability_fly.png";
  } else if (this.flag_isClimbingHill) {
    _0x841edc.abilName = "Shoots Eggs!";
    _0x841edc.abilImg = "skins/forest/turkey/" + this.animalSpecies + "/turkeyegg.png";
  } else {
    _0x841edc.abilName = "Front Kick\n(Hold to Charge)";
    _0x841edc.abilImg = "skins/forest/turkey/" + this.animalSpecies + "/ability.png";
  }
  _0x841edc.skinThemeID = this.skinThemeID;
  _0x841edc.mopeSeasonID = this.mopeSeasonID;
  return _0x841edc;
};
a0_0x3fefe5.prototype.animalInfo = function () {
  var _0x4ac62c = {};
  switch (this.animalSpecies) {
    case 0:
      _0x4ac62c.aniName = "Turkey!";
      break;
    case 111:
      _0x4ac62c.aniName = "Classic Turkey";
      break;
  }
  _0x4ac62c.aniCol = "#FF9000";
  _0x4ac62c.skinName = this.getSkinName();
  _0x4ac62c.upgradeText = "UPGRADED to " + _0x4ac62c.aniName + "!\nHold W to charge up a kick, fly from tree and shoot eggs from hill!";
  return _0x4ac62c;
};
var a0_0x487cb4 = 0.6;
var a0_0xfbf56 = -1.5;
var a0_0x46fb91 = -2;
a0_0x3fefe5.prototype.drawUnderSkinImg = function () {
  a0_0x4ef4f3.save();
  var _0x4e5c45 = this.rad * a0_0x487cb4;
  var _0x10dbca = "tail";
  if (this.flag_usingAbility) {
    if (!this.flag_flying) {
      _0x10dbca = "tail1";
    }
    a0_0xfbf56 = a0_0x46fb91;
  } else {
    a0_0xfbf56 = -1.5;
  }
  _0x10dbca = "skins/" + this.getSpeciesPath() + "/" + _0x10dbca + ".png";
  var _0xc43165 = this.getSkinImageObj(_0x10dbca);
  if (_0xc43165) {
    a0_0x4ef4f3.drawImage(_0xc43165, -_0x4e5c45 * this.skinScale * 2, -_0x4e5c45 * this.skinScale * 2 + _0x4e5c45 * a0_0xfbf56, _0x4e5c45 * 2 * this.skinScale * 2, _0x4e5c45 * 3 * this.skinScale);
  }
  a0_0x4ef4f3.restore();
};
a0_0x3fefe5.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x52212b = 500 / 340;
  a0_0x4ef4f3.save();
  var _0x1b912f = this.flag_flying ? 45 : 20;
  var _0x3e352f = this.flag_flying ? 90 : 45;
  var _0x4e9ece = this.flag_flying ? 0.2 : 0.01;
  var _0x4e3c32 = this.flag_flying ? 2.5 : 2.2;
  var _0x4e18fe = this.flag_flying ? 2.5 : 2.2;
  var _0x1220fe = this.flag_flying ? 0 : -0.4;
  var _0x4884d1 = this.flag_flying ? 0 : -0.2;
  var _0x3576b3 = this.flag_flying ? 0.5 : 1.2;
  var _0x20b234 = this.flag_flying ? 0.3 : 0.1;
  var _0x3a9d21 = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x2df00a = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? a0_0xe2d896(_0x3a9d21, _0x3576b3, _0x20b234, 2) : this.birdNoAnimationFlyWingAngle;
  var _0x109e64 = this.getSkinImageObj(this.getWing("turkey", 1, true));
  if (_0x109e64) {
    a0_0x4ef4f3.save();
    var _0x45dd80 = -(-_0x4e9ece + _0x2df00a) * a0_0x844a6b(_0x3e352f);
    var _0xfaf820 = this.rad * 0.8;
    a0_0x4ef4f3.rotate(a0_0x844a6b(_0x1b912f) + _0x45dd80);
    var _0x3c15df = 0;
    var _0x1b9adc = this.rad;
    var _0x57ef84 = _0xfaf820 * _0x4e18fe * 0.62;
    var _0x523bdb = _0xfaf820 * _0x4e3c32;
    var _0x18c2a7 = 0.2 + _0x1220fe;
    var _0x40aa78 = 1.7 + _0x4884d1;
    a0_0x4ef4f3.drawImage(_0x109e64, _0x3c15df + _0x57ef84 * -_0x18c2a7, _0x1b9adc + _0x523bdb * -_0x40aa78, _0x57ef84, _0x523bdb);
    a0_0x4ef4f3.restore();
  }
  var _0x109e64 = this.getSkinImageObj(this.getWing("turkey", 2, true));
  if (_0x109e64) {
    a0_0x4ef4f3.save();
    var _0x45dd80 = -(-_0x4e9ece + _0x2df00a) * a0_0x844a6b(-_0x3e352f);
    var _0xfaf820 = this.rad * 0.8;
    a0_0x4ef4f3.rotate(a0_0x844a6b(-_0x1b912f) + _0x45dd80);
    var _0x3c15df = 0;
    var _0x1b9adc = this.rad;
    var _0x57ef84 = _0xfaf820 * _0x4e18fe * 0.62;
    var _0x523bdb = _0xfaf820 * _0x4e3c32;
    var _0x18c2a7 = 0.8 - _0x1220fe;
    var _0x40aa78 = 1.7 + _0x4884d1;
    a0_0x4ef4f3.drawImage(_0x109e64, _0x3c15df + _0x57ef84 * -_0x18c2a7, _0x1b9adc + _0x523bdb * -_0x40aa78, _0x57ef84, _0x523bdb);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
  var _0x3900ce = 0.1;
  if (this.specType == 2) {
    _0x3900ce = -0.1;
  }
  var _0x5ca204 = this.getSkinImageObj(this.getHead("turkey", true));
  if (_0x5ca204) {
    a0_0x4ef4f3.save();
    var _0xfaf820 = this.rad;
    a0_0x4ef4f3.drawImage(_0x5ca204, -_0xfaf820 * _0x52212b, (-_0xfaf820 + _0xfaf820 * _0x3900ce) * _0x52212b, _0xfaf820 * 2 * _0x52212b, _0xfaf820 * 2 * _0x52212b);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x3fefe5() {
  a0_0x3fefe5.superClass.call(this, a0_0x1370b8);
}
window.Turkey = a0_0x3fefe5;
var a0_0x5baa97 = 112;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3fefe5, a0_0x1370b8, a0_0x5baa97);
var a0_0x58d04c = a0_0x12658e;
a0_0x4e6aab.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4e6aab.prototype.constructor = a0_0x4e6aab;
a0_0x4e6aab.superClass = a0_0x58d04c;
a0_0x4e6aab.prototype.mommyID = 0;
a0_0x4e6aab.prototype.updateZ = function () {
  this.z = this.flag_flying ? 1000 : this.rad;
};
a0_0x4e6aab.prototype.customDraw = function (_0x5afb16) {
  a0_0x4ef4f3.save();
  var _0x2e4c42 = this.getSkinImageObj("skins/forest/turkey/" + this.speciesType + "/turkeyegg" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
  if (_0x2e4c42) {
    var _0x4de682 = this.rad;
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x2e4c42, -_0x4de682, -_0x4de682, _0x4de682 * 2, _0x4de682 * 2);
  }
  a0_0x4ef4f3.restore();
};
var a0_0x2d1bc6 = 134;
function a0_0x4e6aab() {
  a0_0x4e6aab.superClass.call(this, a0_0x2d1bc6);
  this.doesDrawEffectScale = true;
}
window.TurkeyEgg = a0_0x4e6aab;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4e6aab, a0_0x2d1bc6);
var a0_0x58d04c = a0_0x12658e;
a0_0x24eafb.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x24eafb.prototype.constructor = a0_0x24eafb;
a0_0x24eafb.superClass = a0_0x58d04c;
a0_0x24eafb.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x24eafb.prototype.customDraw = function (_0x5f043d) {
  a0_0x4ef4f3.save();
  var _0x31af04 = "gameobj/" + this.oType + "/" + this.oType + (this.isEdibleOutlined() ? "_e" : "") + ".png";
  var _0x1e1825 = this.getSkinImageObj(_0x31af04);
  if (_0x1e1825) {
    var _0x200020 = this.rad;
    this.angle = this.rPer * Math.PI * 2;
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x1e1825, -_0x200020, -_0x200020, _0x200020 * 2, _0x200020 * 2);
  }
  a0_0x4ef4f3.restore();
};
var a0_0x479390 = 135;
function a0_0x24eafb() {
  a0_0x24eafb.superClass.call(this, a0_0x479390);
  this.doesDrawEffectScale = true;
}
window.TurkeyLeg = a0_0x24eafb;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x24eafb, a0_0x479390);
var a0_0x58d04c = a0_0x12658e;
a0_0x107435.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x107435.prototype.constructor = a0_0x107435;
a0_0x107435.superClass = a0_0x58d04c;
a0_0x107435.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x107435.prototype.customDraw = function (_0x36bcf2) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 1;
  var _0x1afe8d = "gameobj/" + this.oType + "/" + this.oType + (this.isEdibleOutlined() ? "_e" : "") + ".png";
  var _0x242fa3 = this.getSkinImageObj(_0x1afe8d);
  if (_0x242fa3) {
    var _0x36a9ef = 0.15;
    var _0x44abb3 = this.rad * 1.2;
    this.angle = this.rPer * Math.PI * 2;
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x242fa3, -_0x44abb3, -_0x44abb3 + _0x44abb3 * _0x36a9ef, _0x44abb3 * 2, _0x44abb3 * 2);
  }
  a0_0x4ef4f3.restore();
};
var a0_0x2190d5 = 136;
function a0_0x107435() {
  a0_0x107435.superClass.call(this, a0_0x2190d5);
  this.doesDrawEffectScale = true;
}
window.TurkeyBaked = a0_0x107435;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x107435, a0_0x2190d5);
var a0_0x58d04c = a0_0x12658e;
a0_0x5c85df.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5c85df.prototype.constructor = a0_0x5c85df;
a0_0x5c85df.superClass = a0_0x58d04c;
a0_0x5c85df.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x5c85df.prototype.customDraw = function (_0x38da0b) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 1;
  var _0x14fa5b = "gameobj/" + this.oType + "/" + this.oType + (this.isEdibleOutlined() ? "_e" : "") + ".png";
  var _0xa7bde7 = this.getSkinImageObj(_0x14fa5b);
  if (_0xa7bde7) {
    var _0x40e070 = this.rad * 1.1;
    this.angle = this.rPer * Math.PI * 2;
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0xa7bde7, -_0x40e070, -_0x40e070, _0x40e070 * 2, _0x40e070 * 2);
  }
  a0_0x4ef4f3.restore();
};
var a0_0x2531c4 = 137;
function a0_0x5c85df() {
  a0_0x5c85df.superClass.call(this, a0_0x2531c4);
  this.doesDrawEffectScale = true;
}
window.PumpkinPie = a0_0x5c85df;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5c85df, a0_0x2531c4);
var a0_0x58d04c = a0_0x12658e;
a0_0x586f2d.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x586f2d.prototype.constructor = a0_0x586f2d;
a0_0x586f2d.superClass = a0_0x58d04c;
a0_0x586f2d.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x586f2d.prototype.customDraw = function (_0x511663) {
  var _0x3b15f9 = false;
  var _0x294dc9 = a0_0x3d5ac5[a0_0x1c918d];
  if (_0x294dc9 && _0x294dc9.lastHidingHoleID == this.id || a0_0x393634 == this.id) {
    _0x3b15f9 = true;
  }
  if (_0x511663) {} else {
    var _0x17e20f = 1.4;
    var _0x3a9c09 = 0.05;
    var _0x8eb216 = "igloo";
    var _0x219a96 = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.oType + ".png");
    if (_0x219a96 && !_0x3b15f9) {
      a0_0x4ef4f3.save();
      var _0x294dc9 = a0_0x3d5ac5[a0_0x1c918d];
      if (_0x294dc9 && _0x294dc9.lastHidingHoleID == this.id) {
        a0_0x4ef4f3.globalAlpha = 0.5;
      }
      var _0x26bcc9 = this.rad * _0x17e20f;
      a0_0x4ef4f3.rotate(this.angle);
      a0_0x4ef4f3.drawImage(_0x219a96, -_0x26bcc9, -_0x26bcc9 + _0x3a9c09 * _0x26bcc9, _0x26bcc9 * 2, _0x26bcc9 * 2);
      a0_0x4ef4f3.restore();
    }
  }
  if (_0x3b15f9) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(115));
    a0_0x4ef4f3.globalAlpha = 1;
    var _0x568897 = Math.PI * 2 * this.timerAngle;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.lineWidth = 7;
    a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - 4), 0, _0x568897);
    a0_0x4ef4f3.strokeStyle = a0_0x4a1deb;
    a0_0x4ef4f3.stroke();
    a0_0x4ef4f3.restore();
  }
};
a0_0x586f2d.prototype.timerAngle = 0;
a0_0x586f2d.prototype.nTimerAngle = 0;
a0_0x586f2d.prototype.onLerpUpdate = function (_0x4fe744) {
  a0_0x586f2d.superClass.prototype.onLerpUpdate.call(this, _0x4fe744);
  this.timerAngle += (this.nTimerAngle - this.timerAngle) * 0.1;
};
a0_0x586f2d.prototype.readUpdatedProperty = function (_0x4299df, _0x21f591) {
  if (_0x4299df == a0_0xc501b) {
    this.timeLeft = _0x21f591.readUInt16() / 100;
    this.nTimerAngle = this.timeLeft / 100;
  }
};
var a0_0x343756 = 138;
function a0_0x586f2d() {
  a0_0x586f2d.superClass.call(this, a0_0x343756);
  this.doesDrawEffectScale = false;
}
window.Igloo = a0_0x586f2d;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x586f2d, a0_0x343756);
var a0_0x58d04c = a0_0x12658e;
a0_0x45e42f.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x45e42f.prototype.constructor = a0_0x45e42f;
a0_0x45e42f.superClass = a0_0x58d04c;
a0_0x45e42f.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x45e42f.prototype.customDraw = function (_0x5c22ad) {};
var a0_0x572e20 = 139;
function a0_0x45e42f() {
  a0_0x45e42f.superClass.call(this, a0_0x572e20);
  this.doesDrawEffectScale = false;
}
window.IglooOpening = a0_0x45e42f;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x45e42f, a0_0x572e20);
var a0_0x58d04c = a0_0x12658e;
a0_0x3c754e.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3c754e.prototype.constructor = a0_0x3c754e;
a0_0x3c754e.superClass = a0_0x58d04c;
a0_0x3c754e.prototype.updateZ = function () {
  this.z = -99;
};
var a0_0x4e3978 = "#9F8641";
var a0_0x25e350 = "#735e28";
var a0_0x4bcf43 = "#63501d";
var a0_0x48d2a0 = "#735e28";
var a0_0x483f42 = "#806a30";
a0_0x3c754e.prototype.customDraw = function (_0x1abb53) {
  a0_0x4ef4f3.save();
  var _0x2c3cf5 = false;
  var _0x1c9409 = a0_0x3d5ac5[a0_0x1c918d];
  if (_0x1c9409 && _0x1c9409.lastHidingHoleID == this.id || a0_0x393634 == this.id) {
    _0x2c3cf5 = true;
  }
  if (_0x1abb53) {} else {
    var _0x12a358 = 0.5;
    var _0x2baffb = 1.7;
    a0_0x4ef4f3.save();
    {
      if (_0x2c3cf5) {
        a0_0x4ef4f3.globalAlpha = 1;
        var _0x4c27ba = this.rad;
        this.drawOutlinedCircleRad("", a0_0x4e3978, _0x4c27ba);
        a0_0x5c99c1(0 - this.rPer, 0 - this.rPer, Math.max(0, _0x4c27ba - 7), a0_0x25e350);
        a0_0x5c99c1(0 + this.rPer, 1, Math.max(0, _0x4c27ba - 12), a0_0x4bcf43);
        a0_0x4ef4f3.globalAlpha = this.alpha * 0.7;
        _0x4c27ba = _0x4c27ba * 0.7;
        a0_0x5c99c1(0 - this.rPer, 0 - this.rPer, Math.max(0, _0x4c27ba - 7), a0_0x48d2a0);
        _0x4c27ba = _0x4c27ba * 0.5;
        a0_0x4ef4f3.globalAlpha = this.alpha * 0.3;
        a0_0x5c99c1(0 - this.rPer, 0 - this.rPer, Math.max(0, _0x4c27ba), a0_0x483f42);
      }
      if (this.curBiome == 1) {
        if (!_0x2c3cf5) {
          a0_0x4ef4f3.fillStyle = a0_0x575276;
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad), 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
          a0_0x4ef4f3.fillStyle = "#E4D04C";
          a0_0x4ef4f3.beginPath();
          a0_0x4ef4f3.arc(-5 + this.rPer * 10, -5 + this.rPer * 10, this.rad * 0.8, 0, Math.PI * 2);
          a0_0x4ef4f3.fill();
        }
      }
    }
    a0_0x4ef4f3.restore();
    if (this.curBiome == a0_0x2f0085) {
      var _0x4d9be8 = "gameobj/" + this.oType + "/" + this.curBiome + "/cave_bottom.png";
      var _0x352bff = this.getSkinImageObj(_0x4d9be8);
      if (_0x352bff) {
        a0_0x4ef4f3.save();
        var _0x45a5e9 = this.rad * _0x12a358;
        a0_0x4ef4f3.rotate(this.angle);
        a0_0x4ef4f3.drawImage(_0x352bff, -_0x45a5e9, -_0x45a5e9 + _0x2baffb * _0x45a5e9, _0x45a5e9 * 2, _0x45a5e9 * 2);
        a0_0x4ef4f3.restore();
      }
      if (!_0x2c3cf5) {
        var _0x4d9be8 = "gameobj/" + this.oType + "/" + this.curBiome + "/cave_top.png";
        var _0x352bff = this.getSkinImageObj(_0x4d9be8);
        if (_0x352bff) {
          a0_0x4ef4f3.save();
          var _0x45a5e9 = this.rad * _0x12a358;
          a0_0x4ef4f3.rotate(this.angle);
          a0_0x4ef4f3.drawImage(_0x352bff, -_0x45a5e9, -_0x45a5e9 + _0x2baffb * _0x45a5e9, _0x45a5e9 * 2, _0x45a5e9 * 2);
          a0_0x4ef4f3.restore();
        }
      }
    } else {
      var _0x352bff = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.curBiome + "/cave_bottom.png");
      if (_0x352bff) {
        a0_0x4ef4f3.save();
        var _0x45a5e9 = this.rad * _0x12a358;
        a0_0x4ef4f3.rotate(this.angle);
        a0_0x4ef4f3.drawImage(_0x352bff, -_0x45a5e9, -_0x45a5e9 + _0x2baffb * _0x45a5e9, _0x45a5e9 * 2, _0x45a5e9 * 2);
        a0_0x4ef4f3.restore();
      }
      if (!_0x2c3cf5) {
        var _0x352bff = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.curBiome + "/cave_top.png");
        if (_0x352bff) {
          a0_0x4ef4f3.save();
          var _0x45a5e9 = this.rad * _0x12a358;
          a0_0x4ef4f3.rotate(this.angle);
          a0_0x4ef4f3.drawImage(_0x352bff, -_0x45a5e9, -_0x45a5e9 + _0x2baffb * _0x45a5e9, _0x45a5e9 * 2, _0x45a5e9 * 2);
          a0_0x4ef4f3.restore();
        }
      }
    }
  }
  a0_0x4ef4f3.restore();
  if (_0x2c3cf5) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(115));
    a0_0x4ef4f3.globalAlpha = 0.5;
    var _0x4c27ba = Math.PI * 2 * this.timerAngle;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.lineWidth = 6;
    a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - 4), 0, _0x4c27ba);
    a0_0x4ef4f3.strokeStyle = a0_0x4a1deb;
    a0_0x4ef4f3.stroke();
    a0_0x4ef4f3.restore();
  }
};
a0_0x3c754e.prototype.timerAngle = 0;
a0_0x3c754e.prototype.nTimerAngle = 0;
a0_0x3c754e.prototype.onLerpUpdate = function (_0x572d03) {
  a0_0x3c754e.superClass.prototype.onLerpUpdate.call(this, _0x572d03);
  this.timerAngle += (this.nTimerAngle - this.timerAngle) * 0.1;
};
a0_0x3c754e.prototype.readUpdatedProperty = function (_0x36cf97, _0x20a912) {
  if (_0x36cf97 == a0_0xc501b) {
    this.timeLeft = _0x20a912.readUInt16() / 100;
    this.nTimerAngle = this.timeLeft / 100;
  }
};
var a0_0x206d63 = 140;
function a0_0x3c754e() {
  a0_0x3c754e.superClass.call(this, a0_0x206d63);
  this.doesDrawEffectScale = false;
}
window.Cave = a0_0x3c754e;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3c754e, a0_0x206d63);
var a0_0x58d04c = a0_0x12658e;
a0_0x2422d9.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2422d9.prototype.constructor = a0_0x2422d9;
a0_0x2422d9.superClass = a0_0x58d04c;
a0_0x2422d9.prototype.updateZ = function () {
  this.z = 100;
};
a0_0x2422d9.prototype.customDraw = function (_0x13634a) {};
var a0_0x3aca93 = 141;
function a0_0x2422d9() {
  a0_0x2422d9.superClass.call(this, a0_0x3aca93);
  this.doesDrawEffectScale = false;
}
window.CaveOpening = a0_0x2422d9;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2422d9, a0_0x3aca93);
var a0_0x58d04c = a0_0x45645e;
a0_0xc9062c.prototype = Object.create(a0_0x58d04c.prototype);
a0_0xc9062c.prototype.constructor = a0_0xc9062c;
a0_0xc9062c.superClass = a0_0x58d04c;
a0_0xc9062c.prototype.animalInfo = function () {
  var _0x59d3c8 = {
    aniName: "Santa!",
    skinName: "santa/" + this.animalSpecies + "/santa",
    aniDesc: ""
  };
  _0x59d3c8.upgradeText = "UPGRADED to " + _0x59d3c8.aniName + "\n Santa distributes gifts to everyone!";
  _0x59d3c8.aniCol = "#231f18";
  return _0x59d3c8;
};
var a0_0x3fc3fe = 0.84;
var a0_0x1e9483 = 0.47;
var a0_0x17654b = 45;
var a0_0x214a71 = -30;
var a0_0x4ef4e4 = 1.3;
var a0_0x444077 = 1.5;
var a0_0x16eef8 = 0.3;
var a0_0xca22e0 = 0.95;
var a0_0x41444e = 0.5;
var a0_0x443400 = 45;
var a0_0x579020 = 0;
var a0_0x1e931e = 1.2;
var a0_0x5506f2 = 0.3;
var a0_0x27ff1b = 0.1;
a0_0xc9062c.prototype.updateZ = function () {
  this.z = 1010 + this.rad;
  if (this.flag_flying) {
    this.z += 100100;
  }
};
a0_0xc9062c.prototype.calculateZIndex = function () {
  this.updateZ();
};
a0_0xc9062c.prototype.drawUnderSkinTail = function (_0x8a7e43) {};
a0_0xc9062c.prototype.flyingHatAnimation = function () {
  if (!this.hideFeatures || this.flag_flying) {
    this.santaHead(0);
    this.hohohoAnimation(0);
  }
  var _0x42d30c = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x5b7a3d = a0_0xe2d896(_0x42d30c, a0_0x5506f2, a0_0x27ff1b, 2);
  var _0x3281bf = this.getSkinImageObj("skins/santa/" + this.animalSpecies + "/hat.png");
  if (_0x3281bf) {
    a0_0x4ef4f3.save();
    var _0x1b36f5 = -(-0.2 + _0x5b7a3d) * a0_0x844a6b(a0_0x443400);
    var _0x2e8cbb = this.rad * a0_0x1e931e;
    a0_0x4ef4f3.rotate(a0_0x844a6b(a0_0x579020) + _0x1b36f5);
    var _0x53f193 = 0;
    var _0x16276c = this.rad;
    var _0x45b65a = _0x2e8cbb * 2;
    var _0x12878c = _0x2e8cbb * 2;
    var _0x1a31ce = a0_0x41444e;
    var _0x8411f9 = a0_0xca22e0;
    a0_0x4ef4f3.drawImage(_0x3281bf, _0x53f193 + _0x45b65a * -_0x1a31ce, _0x16276c + _0x12878c * -_0x8411f9, _0x45b65a, _0x12878c);
    a0_0x4ef4f3.restore();
  }
};
a0_0xc9062c.prototype.drawSkinCustomization = function () {
  if (this.flag_flying) {
    this.flyingHatAnimation();
  } else if (!this.hideFeatures || this.flag_flying) {
    if (this.specType == 0) {
      this.bellhandAnimation(0);
    }
    this.santaHead(0);
    this.hohohoAnimation(0);
  }
};
a0_0xc9062c.prototype.hideFeatures = false;
a0_0xc9062c.prototype.bellhandAnimation = function (_0x1cd594) {
  var _0x29464d = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x300d8e = a0_0xe2d896(_0x29464d, a0_0x444077, a0_0x16eef8, 2);
  var _0x43a7cb = this.getSkinImageObj("skins/santa/" + this.animalSpecies + "/bellhand.png");
  if (_0x43a7cb) {
    a0_0x4ef4f3.save();
    var _0x3c5e70 = -(-0.2 + _0x300d8e) * a0_0x844a6b(a0_0x17654b);
    var _0x2a9125 = this.rad * a0_0x4ef4e4;
    a0_0x4ef4f3.rotate(a0_0x844a6b(a0_0x214a71) + _0x3c5e70);
    var _0x30eedf = 0;
    var _0x25c1d5 = this.rad;
    var _0x4ccd74 = _0x2a9125 * 2;
    var _0x30603b = _0x2a9125 * 2;
    var _0x21e44d = a0_0x1e9483;
    var _0x566b04 = a0_0x3fc3fe;
    a0_0x4ef4f3.drawImage(_0x43a7cb, _0x30eedf + _0x4ccd74 * -_0x21e44d, _0x25c1d5 + _0x30603b * -_0x566b04, _0x4ccd74, _0x30603b);
    a0_0x4ef4f3.restore();
  }
};
a0_0xc9062c.prototype.hohohoNextT = +new Date() + 5000;
a0_0xc9062c.prototype.hohohoAnimation = function (_0x3d1434) {
  if (a0_0x4f736f > this.hohohoNextT) {
    var _0x1071d6 = -0.1 + _0x3d1434;
    var _0x3a75ab = 500 / 340;
    var _0x590741 = Math.trunc(a0_0x4f736f / 180) % 3;
    var _0x176d64 = this.getSkinImageObj("skins/santa/" + this.animalSpecies + "/santa_mouth" + _0x590741 + ".png");
    if (_0x176d64) {
      a0_0x4ef4f3.save();
      var _0x29a0fa = this.rad;
      a0_0x4ef4f3.drawImage(_0x176d64, -_0x29a0fa * _0x3a75ab, (-_0x29a0fa + _0x29a0fa * _0x1071d6) * _0x3a75ab, _0x29a0fa * 2 * _0x3a75ab, _0x29a0fa * 2 * _0x3a75ab);
      a0_0x4ef4f3.restore();
    }
    if (a0_0x4f736f > this.hohohoNextT + 1500) {
      this.hohohoNextT = +new Date() + 10000;
    }
  }
};
a0_0xc9062c.prototype.getSkinImageObj = function (_0x1e9a14) {
  this.skinThemeID = 0;
  return a0_0xc9062c.superClass.prototype.getSkinImageObj.call(this, _0x1e9a14);
};
a0_0xc9062c.prototype.santaHead = function (_0x16ba0f) {
  var _0x2ed0b7 = 0.1;
  var _0xcf9dd = 500 / 340;
  var _0x29d3e4 = this.flag_flying ? "2" : "";
  if (this.specType == 2) {
    _0x29d3e4 = "3";
  }
  var _0x5f508e = this.getSkinImageObj("skins/santa/" + this.animalSpecies + "/santa_head" + _0x29d3e4 + ".png");
  if (_0x5f508e) {
    a0_0x4ef4f3.save();
    var _0x575381 = this.rad;
    a0_0x4ef4f3.drawImage(_0x5f508e, -_0x575381 * _0xcf9dd, (-_0x575381 + _0x575381 * _0x2ed0b7) * _0xcf9dd, _0x575381 * 2 * _0xcf9dd, _0x575381 * 2 * _0xcf9dd);
    a0_0x4ef4f3.restore();
  }
};
a0_0xc9062c.prototype.getAbilityInfo = function (_0xa08f90) {
  var _0x3b97b7 = {};
  switch (_0xa08f90) {
    case a0_0x6ac54f:
      _0x3b97b7.abilName = "Fly High!";
      _0x3b97b7.abilImg = "skins/santa/" + this.animalSpecies + "/ability_santa_flying.png";
      break;
    case a0_0x5a17e7:
      _0x3b97b7.abilName = "Gives Gifts!";
      _0x3b97b7.abilImg = "skins/santa/" + this.animalSpecies + "/ability_santa_throwgifts.png";
      break;
    case a0_0x4c2a55:
      _0x3b97b7.abilName = "Flying Sleigh!";
      _0x3b97b7.abilImg = "skins/santa/" + this.animalSpecies + "/ability_santa_flyingsleigh.png";
      break;
  }
  _0x3b97b7.skinThemeID = this.skinThemeID;
  _0x3b97b7.mopeSeasonID = this.mopeSeasonID;
  return _0x3b97b7;
};
a0_0xc9062c.prototype.getSkinName = function () {
  var _0x9847f = "";
  _0x9847f = "santa/" + this.animalSpecies + "/santa" + (this.specType == 0 ? "" : this.specType);
  return _0x9847f;
};
function a0_0xc9062c() {
  a0_0xc9062c.superClass.call(this, a0_0x1370b8);
}
window.Santa = a0_0xc9062c;
a0_0xa5d548.setCustomClassForGameObjType(a0_0xc9062c, a0_0x1370b8, a0_0x351b92);
var a0_0x58d04c = a0_0x12658e;
a0_0x22f2f2.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x22f2f2.prototype.constructor = a0_0x22f2f2;
a0_0x22f2f2.superClass = a0_0x58d04c;
var a0_0x7dd586 = 1010;
a0_0x22f2f2.prototype.updateZ = function () {
  this.z = 1010;
  if (this.flag_flying) {
    this.z += 100000;
  }
};
a0_0x22f2f2.prototype.customDraw = function (_0x2fc381) {
  var _0x98aa88 = this.getSkinImageObj("skins/santa/0/sleigh.png");
  if (_0x98aa88) {
    a0_0x4ef4f3.save();
    var _0x14841a = this.rad * 1;
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x98aa88, -_0x14841a, -_0x14841a, _0x14841a * 2, _0x14841a * 2);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x22f2f2() {
  a0_0x22f2f2.superClass.call(this, a0_0x1523e3);
}
window.Sleigh = a0_0x22f2f2;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x22f2f2, a0_0x1523e3);
var a0_0x58d04c = a0_0x45645e;
a0_0x35232d.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x35232d.prototype.constructor = a0_0x35232d;
a0_0x35232d.superClass = a0_0x58d04c;
var a0_0x1a9c77 = 100000;
a0_0x35232d.prototype.updateZ = function () {
  this.z = 1000 + this.rad + this.rowNumber;
  if (this.flag_flying) {
    this.z += a0_0x1a9c77;
  }
};
a0_0x35232d.prototype.calculateZIndex = function () {
  this.updateZ();
};
a0_0x35232d.prototype.animalInfo = function () {
  return {
    aniName: "Rudolph!",
    skinName: "santa/rudolph",
    upgradeText: "UPGRADED to Rudolph!\n Rudolph paws turn very well on ice!\n Press W to howl!",
    aniCol: "#6B6B6B"
  };
};
a0_0x35232d.prototype.getAbilityInfo = function (_0x295feb) {
  return {
    abilName: "Howl!"
  };
};
a0_0x35232d.prototype.getSkinName = function () {
  var _0x97df6a = "";
  _0x97df6a = "santa/0/" + (this.isRudolph ? "rudolph" : "deer");
  _0x97df6a += this.specType == 0 ? "" : 1;
  return _0x97df6a;
};
a0_0x35232d.prototype.drawAnimalUnderSkinCircle = function (_0x33f7c6, _0x565568) {
  if (!this.flag_isGrabbed) {
    if (this.playerNum == 1) {
      _0x33f7c6 = "cyan";
    } else if (this.playerNum == 2) {
      _0x33f7c6 = "yellow";
    } else if (this.flag_eff_isOnSpiderWeb) {
      _0x33f7c6 = "white";
    }
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = this.isAnimalInside1v1Arena() ? 0.3 : this.idealOp;
    a0_0x5c99c1(0, 0, this.rad, _0x33f7c6);
    a0_0x4ef4f3.restore();
  }
};
a0_0x35232d.prototype.drawLights = function () {
  var _0x3c705e = "/skins/" + this.getSkinName();
  var _0x4b9add = this.getSkinImagePath(_0x3c705e);
  var _0x5249f1 = this.skinScale;
  var _0x104f65 = this.skinRad;
};
a0_0x35232d.prototype.afterCustomDraw = function (_0x34578b) {
  if (this.isRudolph) {
    this.drawLights();
  }
  var _0x313f6a = -1;
  var _0x12607b = "#b84831";
  var _0x52ebce = this.curRad / this.startRad * 4;
  var _0x3cf55c = 1;
  this.drawRope(this.rope1_x, this.rope1_y, this.deerPos1_x, this.deerPos1_y, _0x12607b, _0x52ebce, _0x313f6a, _0x3cf55c);
  this.drawRope(this.rope2_x, this.rope2_y, this.deerPos2_x, this.deerPos2_y, _0x12607b, _0x52ebce, _0x313f6a, _0x3cf55c);
  _0x12607b = "white";
  _0x52ebce = this.curRad / this.startRad * 1;
  _0x3cf55c = 0.3;
  this.drawRope(this.rope1_x, this.rope1_y, this.deerPos1_x, this.deerPos1_y, _0x12607b, _0x52ebce, _0x313f6a, _0x3cf55c);
  this.drawRope(this.rope2_x, this.rope2_y, this.deerPos2_x, this.deerPos2_y, _0x12607b, _0x52ebce, _0x313f6a, _0x3cf55c);
};
a0_0x35232d.prototype.drawRope = function (_0x20417e, _0xebbedb, _0x30eb90, _0x116a09, _0x17ba47, _0x1ae569, _0xae987e, _0x16bf93) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.strokeStyle = _0x17ba47;
  a0_0x4ef4f3.lineWidth = _0x1ae569 * (this.curRad / this.startRad);
  a0_0x4ef4f3.globalAlpha = _0x16bf93;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(_0x20417e, _0xebbedb);
  a0_0x4ef4f3.quadraticCurveTo(_0x20417e, _0x116a09 - _0xae987e, _0x30eb90, _0x116a09);
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.restore();
};
a0_0x35232d.prototype.setOpacityForFlyingAnimals = function (_0x2686af) {
  if (this.id != a0_0x1c918d && this.santaID != a0_0x1c918d) {
    this.idealOp = 0.6;
  }
};
a0_0x35232d.prototype.onLerpUpdate = function (_0x5a7e9c) {
  this.rope1_x = _0x5a7e9c * (this.rope1_nx - this.rope1_ox) + this.rope1_ox;
  this.rope1_y = _0x5a7e9c * (this.rope1_ny - this.rope1_oy) + this.rope1_oy;
  this.deerPos1_x = _0x5a7e9c * (this.deerpos1_nx - this.deerpos1_ox) + this.deerpos1_ox;
  this.deerPos1_y = _0x5a7e9c * (this.deerpos1_ny - this.deerpos1_oy) + this.deerpos1_oy;
  this.rope2_x = _0x5a7e9c * (this.rope2_nx - this.rope2_ox) + this.rope2_ox;
  this.rope2_y = _0x5a7e9c * (this.rope2_ny - this.rope2_oy) + this.rope2_oy;
  this.deerPos2_x = _0x5a7e9c * (this.deerpos2_nx - this.deerpos2_ox) + this.deerpos2_ox;
  this.deerPos2_y = _0x5a7e9c * (this.deerpos2_ny - this.deerpos2_oy) + this.deerpos2_oy;
};
a0_0x35232d.prototype.readCustomData_onNewlyVisible = function (_0x43afc4) {
  a0_0x35232d.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x43afc4);
  this.santaID = _0x43afc4.readUInt32();
  this.rowNumber = _0x43afc4.readUInt8();
  this.isRudolph = _0x43afc4.readUInt8() == 1;
  this.startRad = _0x43afc4.readUInt16() / 100;
  this.curRad = _0x43afc4.readUInt16() / 100;
  this.readInfo(_0x43afc4);
  this.rope1_nx = this.rope1_ox = this.rope1_x = this.x;
  this.rope1_ny = this.rope1_oy = this.rope1_y = this.y;
  this.deerpos1_ox = this.deerPos1_x = this.deerpos1_nx = this.x;
  this.deerpos1_oy = this.deerPos1_y = this.deerpos1_ny = this.y;
  this.rope2_nx = this.rope2_ox = this.rope2_x = this.x;
  this.rope2_ny = this.rope2_oy = this.rope2_y = this.y;
  this.deerpos2_ox = this.deerPos2_x = this.deerpos2_nx = this.x;
  this.deerpos2_oy = this.deerPos2_y = this.deerpos2_ny = this.y;
};
a0_0x35232d.prototype.rope1_x = 0;
a0_0x35232d.prototype.rope1_y = 0;
a0_0x35232d.prototype.deerPos1_x = 0;
a0_0x35232d.prototype.deerPos1_y = 0;
a0_0x35232d.prototype.rope2_x = 0;
a0_0x35232d.prototype.rope2_y = 0;
a0_0x35232d.prototype.deerPos2_x = 0;
a0_0x35232d.prototype.deerPos2_y = 0;
a0_0x35232d.prototype.webState = 0;
a0_0x35232d.prototype.readInfo = function (_0x28b01c) {
  this.customUpdatedProperty(a0_0x1660e3, _0x28b01c);
  this.customUpdatedProperty(a0_0x992197, _0x28b01c);
  this.customUpdatedProperty(a0_0x1627e5, _0x28b01c);
  this.customUpdatedProperty(a0_0x635674, _0x28b01c);
};
a0_0x35232d.prototype.customUpdatedProperty = function (_0x34f9db, _0x119b02) {
  if (_0x34f9db == a0_0x1660e3) {
    var _0x5d1b3b = _0x119b02.readUInt16() / 4;
    var _0x593268 = _0x119b02.readUInt16() / 4;
    this.rope1_ox = this.rope1_x;
    this.rope1_oy = this.rope1_y;
    this.rope1_nx = _0x5d1b3b;
    this.rope1_ny = _0x593268;
  } else if (_0x34f9db == a0_0x992197) {
    var _0xbe0988 = _0x119b02.readUInt16() / 4;
    var _0x58a2f9 = _0x119b02.readUInt16() / 4;
    this.rope2_ox = this.rope2_x;
    this.rope2_oy = this.rope2_y;
    this.rope2_nx = _0xbe0988;
    this.rope2_ny = _0x58a2f9;
  } else if (_0x34f9db == a0_0x1627e5) {
    var _0x42ecd6 = _0x119b02.readUInt16() / 4;
    var _0x140092 = _0x119b02.readUInt16() / 4;
    this.deerpos1_ox = this.deerPos1_x;
    this.deerpos1_oy = this.deerPos1_y;
    this.deerpos1_nx = _0x42ecd6;
    this.deerpos1_ny = _0x140092;
  } else if (_0x34f9db == a0_0x635674) {
    var _0x2da689 = _0x119b02.readUInt16() / 4;
    var _0x241ef6 = _0x119b02.readUInt16() / 4;
    this.deerpos2_ox = this.deerPos2_x;
    this.deerpos2_oy = this.deerPos2_y;
    this.deerpos2_nx = _0x2da689;
    this.deerpos2_ny = _0x241ef6;
  }
};
function a0_0x35232d() {
  a0_0x35232d.superClass.call(this, a0_0x1370b8);
}
window.Rudolph = a0_0x35232d;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x35232d, a0_0x1370b8, a0_0x4ed524);
var a0_0x58d04c = a0_0x12658e;
a0_0x101996.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x101996.prototype.constructor = a0_0x101996;
a0_0x101996.superClass = a0_0x58d04c;
var a0_0x401ffb = 1008;
a0_0x101996.prototype.updateZ = function () {
  this.z = 1008;
  if (this.flag_flying) {
    this.z += 100000;
  }
};
a0_0x101996.prototype.customDraw = function (_0x5f196b) {
  a0_0x5c99c1(0, 0, this.curRad, "#ebac2d");
  a0_0x5c99c1(0, 0, this.curRad * 0.6, "#ffbc33");
};
a0_0x101996.prototype.beforeCustomDraw = function (_0x471c4a) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.strokeStyle = "#ffbc33";
  a0_0x4ef4f3.lineWidth = this.curRad / this.startRad * 10;
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(this.webX, this.webY);
  a0_0x4ef4f3.lineTo(this.spiderX, this.spiderY);
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.restore();
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.strokeStyle = "gold";
  a0_0x4ef4f3.lineWidth = this.curRad / this.startRad * 6;
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(this.webX, this.webY);
  a0_0x4ef4f3.lineTo(this.spiderX, this.spiderY);
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.restore();
};
a0_0x101996.prototype.onLerpUpdate = function (_0x9f5ceb) {
  this.webX = _0x9f5ceb * (this.web_nx - this.web_ox) + this.web_ox;
  this.webY = _0x9f5ceb * (this.web_ny - this.web_oy) + this.web_oy;
  this.spiderX = _0x9f5ceb * (this.spider_nx - this.spider_ox) + this.spider_ox;
  this.spiderY = _0x9f5ceb * (this.spider_ny - this.spider_oy) + this.spider_oy;
};
a0_0x101996.prototype.readCustomData_onUpdate = function (_0x408cdb) {
  a0_0x101996.superClass.prototype.readCustomData_onUpdate.call(this, _0x408cdb);
  this.readInfo(_0x408cdb);
};
a0_0x101996.prototype.readCustomData_onNewlyVisible = function (_0x3a22e7) {
  a0_0x101996.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x3a22e7);
  this.startRad = _0x3a22e7.readUInt16() / 100;
  this.readInfo(_0x3a22e7);
  this.web_nx = this.web_ox = this.webX = this.x;
  this.web_ny = this.web_oy = this.webY = this.y;
  this.spider_ox = this.spiderX = this.spider_nx = this.x;
  this.spider_oy = this.spiderY = this.spider_ny = this.y;
};
a0_0x101996.prototype.startRad = 0;
a0_0x101996.prototype.webX = 0;
a0_0x101996.prototype.webY = 0;
a0_0x101996.prototype.spiderX = 0;
a0_0x101996.prototype.spiderY = 0;
a0_0x101996.prototype.webState = 0;
a0_0x101996.prototype.readInfo = function (_0x4e8dcd) {
  this.curRad = _0x4e8dcd.readUInt16() / 100;
  var _0x2ff8ab = _0x4e8dcd.readUInt16() / 4;
  var _0x5a38a6 = _0x4e8dcd.readUInt16() / 4;
  this.web_ox = this.webX;
  this.web_oy = this.webY;
  this.web_nx = _0x2ff8ab;
  this.web_ny = _0x5a38a6;
  var _0x31ea1d = _0x4e8dcd.readUInt16() / 4;
  var _0x124bc0 = _0x4e8dcd.readUInt16() / 4;
  this.spider_ox = this.spiderX;
  this.spider_oy = this.spiderY;
  this.spider_nx = _0x31ea1d;
  this.spider_ny = _0x124bc0;
};
function a0_0x101996() {
  a0_0x101996.superClass.call(this, a0_0x5c2f42);
  this.spawnTime = +new Date();
}
window.CartSaddle = a0_0x101996;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x101996, a0_0x5c2f42);
var a0_0x58d04c = a0_0x12658e;
a0_0x1e16b4.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1e16b4.prototype.constructor = a0_0x1e16b4;
a0_0x1e16b4.superClass = a0_0x58d04c;
var a0_0x337d67 = 1007;
a0_0x1e16b4.prototype.updateZ = function () {
  this.z = 1007;
  if (this.flag_flying) {
    this.z += 100000;
  }
};
a0_0x1e16b4.prototype.customDraw = function (_0x3daba1) {
  a0_0x5c99c1(0, 0, this.rad, "#ebac2d");
  a0_0x5c99c1(0, 0, this.rad * 0.9, "#e9ae34");
};
a0_0x1e16b4.prototype.beforeCustomDraw = function (_0x39f9b4) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.strokeStyle = "#ffbc33";
  a0_0x4ef4f3.lineWidth = this.curRad / this.startRad * 10;
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(this.webX, this.webY);
  a0_0x4ef4f3.lineTo(this.spiderX, this.spiderY);
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.restore();
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.strokeStyle = "gold";
  a0_0x4ef4f3.lineWidth = this.curRad / this.startRad * 6;
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(this.webX, this.webY);
  a0_0x4ef4f3.lineTo(this.spiderX, this.spiderY);
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.restore();
};
a0_0x1e16b4.prototype.onLerpUpdate = function (_0xd704c1) {
  this.webX = _0xd704c1 * (this.web_nx - this.web_ox) + this.web_ox;
  this.webY = _0xd704c1 * (this.web_ny - this.web_oy) + this.web_oy;
  this.spiderX = _0xd704c1 * (this.spider_nx - this.spider_ox) + this.spider_ox;
  this.spiderY = _0xd704c1 * (this.spider_ny - this.spider_oy) + this.spider_oy;
};
a0_0x1e16b4.prototype.readCustomData_onUpdate = function (_0x294cd9) {
  a0_0x1e16b4.superClass.prototype.readCustomData_onUpdate.call(this, _0x294cd9);
  this.readInfo(_0x294cd9);
};
a0_0x1e16b4.prototype.readCustomData_onNewlyVisible = function (_0x33819e) {
  a0_0x1e16b4.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x33819e);
  this.startRad = _0x33819e.readUInt16() / 100;
  this.readInfo(_0x33819e);
  this.curRad = this.rad;
  this.web_nx = this.web_ox = this.webX = this.x;
  this.web_ny = this.web_oy = this.webY = this.y;
  this.spider_ox = this.spiderX = this.spider_nx = this.x;
  this.spider_oy = this.spiderY = this.spider_ny = this.y;
};
a0_0x1e16b4.prototype.webX = 0;
a0_0x1e16b4.prototype.webY = 0;
a0_0x1e16b4.prototype.spiderX = 0;
a0_0x1e16b4.prototype.spiderY = 0;
a0_0x1e16b4.prototype.webState = 0;
a0_0x1e16b4.prototype.readInfo = function (_0x46cb12) {
  this.curRad = _0x46cb12.readUInt16() / 100;
  var _0x4ddbfd = _0x46cb12.readUInt16() / 4;
  var _0x351cd2 = _0x46cb12.readUInt16() / 4;
  this.web_ox = this.webX;
  this.web_oy = this.webY;
  this.web_nx = _0x4ddbfd;
  this.web_ny = _0x351cd2;
  var _0xe39620 = _0x46cb12.readUInt16() / 4;
  var _0x2c0de6 = _0x46cb12.readUInt16() / 4;
  this.spider_ox = this.spiderX;
  this.spider_oy = this.spiderY;
  this.spider_nx = _0xe39620;
  this.spider_ny = _0x2c0de6;
};
function a0_0x1e16b4() {
  a0_0x1e16b4.superClass.call(this, a0_0x41f90c);
}
window.Saddle = a0_0x1e16b4;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1e16b4, a0_0x41f90c);
var a0_0x58d04c = a0_0x12658e;
a0_0x5b09bb.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5b09bb.prototype.constructor = a0_0x5b09bb;
a0_0x5b09bb.superClass = a0_0x58d04c;
a0_0x5b09bb.prototype.foodType = 0;
a0_0x5b09bb.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x5b09bb.prototype.customDraw = function (_0xbbd070) {
  a0_0x4ef4f3.save();
  var _0x4f383d = "gameobj/" + this.oType + "/" + this.oType + "_" + this.foodType + "" + (this.isEdibleOutlined() ? "_e" : "") + ".png";
  var _0x150653 = this.getSkinImageObj(_0x4f383d);
  if (_0x150653) {
    var _0x465e32 = this.rad;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.rPer * 0.5 * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0x150653, -_0x465e32, -_0x465e32, _0x465e32 * 2, _0x465e32 * 2);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
a0_0x5b09bb.prototype.readCustomData_onNewlyVisible = function (_0x1d17f9) {
  this.foodType = _0x1d17f9.readUInt8();
};
var a0_0x7ae0e1 = 142;
function a0_0x5b09bb() {
  a0_0x5b09bb.superClass.call(this, a0_0x7ae0e1);
  this.doesDrawEffectScale = true;
}
window.XmasFood = a0_0x5b09bb;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5b09bb, a0_0x7ae0e1);
var a0_0x58d04c = a0_0x12658e;
a0_0x4b2402.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4b2402.prototype.constructor = a0_0x4b2402;
a0_0x4b2402.superClass = a0_0x58d04c;
a0_0x4b2402.prototype.giftColor = 0;
a0_0x4b2402.prototype.giftType = 0;
a0_0x4b2402.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x4b2402.prototype.customDraw = function (_0x1e4c57) {
  a0_0x4ef4f3.save();
  var _0x2b3ef8 = this.getSkinImageObj("img/xmasgifts/" + this.giftColor + "/gift_e.png");
  if (_0x2b3ef8) {
    var _0xfba039 = this.rad;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.rPer * 0.5 * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0x2b3ef8, -_0xfba039, -_0xfba039, _0xfba039 * 2, _0xfba039 * 2);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
a0_0x4b2402.prototype.readCustomData_onNewlyVisible = function (_0x10eb5e) {
  this.giftColor = _0x10eb5e.readUInt8();
  this.giftType = _0x10eb5e.readUInt8();
};
var a0_0x3c3b36 = 143;
function a0_0x4b2402() {
  a0_0x4b2402.superClass.call(this, a0_0x3c3b36);
  this.doesDrawEffectScale = true;
}
window.XmasGift = a0_0x4b2402;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4b2402, a0_0x3c3b36);
var a0_0x32e6b1 = +new Date() + 5000;
var a0_0xd3ee39 = false;
let a0_0xcd19e7;
let a0_0x2b416e = 50;
let a0_0x3ce5cc = a0_0xe585d7 - 1350 + a0_0x2b416e;
var a0_0x298f10 = null;
var a0_0x1529c0 = {
  particleCount: 700,
  particleSize: 3,
  fallingSpeed: 0.5,
  color: "#fff",
  xspeed: 1,
  yspeed: 0.5,
  yspeedF: 1,
  angle: 90
};
var a0_0x29ad7f = {
  particleCount: 1500,
  particleSize: 4,
  fallingSpeed: 1,
  color: "#fff",
  xspeed: 1.5,
  yspeed: 1,
  yspeedF: 1.5,
  angle: 90
};
var a0_0x44aa45 = {
  particleCount: 1500,
  particleSize: 5,
  fallingSpeed: 1.5,
  color: "#fff",
  xspeed: 2,
  yspeed: 1.5,
  yspeedF: 3,
  angle: 90
};
function a0_0x3ba36a(_0x22869b, _0x111c41) {
  return Math.floor(Math.random() * (_0x111c41 - _0x22869b + 1) + _0x22869b);
}
function a0_0x26ffc5(_0x2f40f4, _0x1649ce, _0x1feabc, _0x69790f, _0x7e7dc) {
  this.x = _0x2f40f4;
  this.y = _0x1649ce;
  this.nx = _0x2f40f4;
  this.ny = _0x1649ce;
  this.radius = _0x1feabc;
  this.color = _0x69790f;
  this.radians = _0x7e7dc;
  this.velocity = Math.max(0.001, Math.random() * 0.004);
  this.t = 0;
  this.update = () => {
    this.radians += this.velocity;
    this.y += Math.pow(this.velocity, a0_0x298f10.yspeed) + a0_0x298f10.yspeed * a0_0x298f10.yspeedF;
    this.x += Math.sin(this.radians) * 0.5 * a0_0x298f10.xspeed;
    this.draw();
  };
  this.lerp = () => {};
  this.draw = () => {
    this.lerp();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);
    a0_0x4ef4f3.fillStyle = this.color;
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.closePath();
    this.reset();
  };
  this.reset = () => {
    if (this.x < -a0_0x2b416e || this.y < -a0_0x2b416e || this.x > a0_0x425049 + a0_0x2b416e || this.y > a0_0x3ce5cc || this.t == 0 || +new Date() > this.t) {
      this.x = a0_0x3ba36a(0, a0_0x425049 - 100);
      this.y = a0_0x3ba36a(0, a0_0xe585d7 - 1350);
      this.t = +new Date() + Math.random() * 30000;
    }
  };
}
function a0_0x2c9467() {
  a0_0x3ce5cc = a0_0xe585d7 - 1350 + a0_0x2b416e;
  a0_0xcd19e7 = [];
  for (let _0x1d352c = 0; _0x1d352c < a0_0x298f10.particleCount; _0x1d352c++) {
    a0_0xcd19e7.push(new a0_0x26ffc5(a0_0x3ba36a(0, a0_0x425049 - 100), a0_0x3ba36a(0, a0_0xe585d7 - 1350), a0_0x3ba36a(0.5, a0_0x298f10.particleSize), a0_0x298f10.color, 90));
  }
  a0_0x2d768c = true;
  a0_0xd3ee39 = false;
  a0_0x32e6b1 = +new Date() + 10000;
}
var a0_0x2d768c = false;
function a0_0x43af9e() {
  if (a0_0x2d768c && a0_0x298f10 != null) {
    a0_0xcd19e7.forEach(_0x42acf4 => {
      _0x42acf4.update();
    });
  }
}
function a0_0x29a196() {
  if (a0_0x298f10 == null) {
    return;
  }
  if (!a0_0xd3ee39) {
    if (a0_0x32e6b1 < +new Date()) {
      a0_0xd3ee39 = true;
    }
    return;
  }
  if (a0_0x56e2b7 && a0_0x1d703e != a0_0x30b084) {
    a0_0x43af9e();
  }
}
var a0_0x58d04c = a0_0x45645e;
a0_0x1d2663.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1d2663.prototype.constructor = a0_0x1d2663;
a0_0x1d2663.superClass = a0_0x58d04c;
a0_0x1d2663.prototype.animalInfo = function () {
  var _0x450788 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x450788.aniName = "Seahorse!";
      break;
    case 111:
      _0x450788.aniName = "Classic Seahorse";
      break;
    case 112:
      _0x450788.aniName = "Gold-trim Seahorse";
      break;
    case 200:
      _0x450788.aniName = "Tully Monster!";
      break;
    case 201:
      _0x450788.aniName = "Water Gun Horse!";
      break;
    case 202:
      _0x450788.aniName = "Leafy Seadragon";
      break;
  }
  _0x450788.skinName = this.getSkinName();
  _0x450788.aniDesc = "";
  _0x450788.upgradeText = "UPGRADED to " + _0x450788.aniName;
  _0x450788.aniCol = "#502E1A";
  return _0x450788;
};
a0_0x1d2663.prototype.getSkinName = function () {
  let _0x3fff41 = this.getSpeciesPath() + "/seahorse";
  return _0x3fff41;
};
a0_0x1d2663.prototype.getSpeciesPath = function () {
  return "ocean/seahorse/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x1d2663.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x1d2663.prototype.getAbilityInfo = function (_0x359294) {
  var _0x23bfb6 = {
    abilName: "Dash!",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x23bfb6;
};
a0_0x1d2663.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  var _0x348db6 = this.skinRad;
  let _0x57cd95 = 1.5;
  var _0x4c2a7f = 0;
  if (this.mopeSeasonID == 1) {
    if (this.animalSpecies == 200 || this.animalSpecies == 201) {
      _0x57cd95 = 1.8;
    }
    if (this.animalSpecies == 201) {
      _0x4c2a7f = -0.1;
    }
  }
  if (this.loadedSkinImg) {
    a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x348db6 * _0x57cd95, -_0x348db6 * _0x57cd95 + _0x348db6 * _0x4c2a7f, _0x348db6 * 2 * _0x57cd95, _0x348db6 * 2 * _0x57cd95);
  }
};
function a0_0x1d2663() {
  a0_0x1d2663.superClass.call(this, a0_0x1370b8);
}
window.Seahorse = a0_0x1d2663;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1d2663, a0_0x1370b8, a0_0x1f8603);
var a0_0x58d04c = a0_0x45645e;
a0_0x3a7b04.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3a7b04.prototype.constructor = a0_0x3a7b04;
a0_0x3a7b04.superClass = a0_0x58d04c;
a0_0x3a7b04.prototype.animalInfo = function () {
  var _0x171c00 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x171c00.aniName = "Shrimp!";
      break;
    case 111:
      _0x171c00.aniName = "Classic Shrimp!";
      break;
    case 112:
      _0x171c00.aniName = "Gold-trim Shrimp!";
      break;
    case 200:
      _0x171c00.aniName = "Deluxe Shrimp!";
      break;
    case 201:
      _0x171c00.aniName = "Chef Shrimp!";
      break;
    case 202:
      _0x171c00.aniName = "Sushi Shrimp!";
      break;
  }
  _0x171c00.skinName = this.getSkinName();
  _0x171c00.aniDesc = "";
  _0x171c00.upgradeText = "UPGRADED to " + _0x171c00.aniName;
  _0x171c00.aniCol = "#502E1A";
  return _0x171c00;
};
a0_0x3a7b04.prototype.getSkinName = function () {
  let _0x382a37 = this.getSpeciesPath() + "/shrimp";
  return _0x382a37;
};
a0_0x3a7b04.prototype.getSpeciesPath = function () {
  return "ocean/shrimp/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x3a7b04.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x3a7b04() {
  a0_0x3a7b04.superClass.call(this, a0_0x1370b8);
}
window.Shrimp = a0_0x3a7b04;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3a7b04, a0_0x1370b8, a0_0x722c30);
var a0_0x58d04c = a0_0x45645e;
a0_0x51f345.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x51f345.prototype.constructor = a0_0x51f345;
a0_0x51f345.superClass = a0_0x58d04c;
a0_0x51f345.prototype.animalInfo = function () {
  var _0x46d01a = {};
  switch (this.animalSubSpecies) {
    case 222:
    case 0:
      switch (this.animalSpecies) {
        case 0:
          _0x46d01a.aniName = "Trout";
          break;
        case 111:
          _0x46d01a.aniName = "Classic Trout";
          break;
        case 112:
          _0x46d01a.aniName = "Gold-trim Trout";
          break;
      }
      break;
    case 200:
      _0x46d01a.aniName = "Clownfish";
      break;
    case 201:
      _0x46d01a.aniName = "Popsicle Trout";
      break;
    case 202:
      _0x46d01a.aniName = "Royal Guppy";
      break;
    case 221:
      _0x46d01a.aniName = "Ice Husk Trout";
      break;
    case 2023:
      _0x46d01a.aniName = "Dr. Lochness";
      break;
  }
  _0x46d01a.skinName = this.getSkinName();
  _0x46d01a.aniDesc = "";
  _0x46d01a.upgradeText = "UPGRADED to " + _0x46d01a.aniName + "!";
  _0x46d01a.aniCol = "#502E1A";
  return _0x46d01a;
};
a0_0x51f345.prototype.getAbilityInfo = function (_0x5b0db5) {
  var _0x121d01 = {
    abilName: "Extra Boost!",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x121d01;
};
a0_0x51f345.prototype.getSkinName = function () {
  let _0x7f5d8d = this.getSpeciesPath() + "/trout";
  return _0x7f5d8d;
};
a0_0x51f345.prototype.getSpeciesPath = function () {
  return "ocean/trout/" + this.animalSpecies + "/" + this.animalSubSpecies;
};
function a0_0x51f345() {
  a0_0x51f345.superClass.call(this, a0_0x1370b8);
}
window.Trout = a0_0x51f345;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x51f345, a0_0x1370b8, a0_0x5e41c4);
var a0_0x58d04c = a0_0x45645e;
a0_0x218042.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x218042.prototype.constructor = a0_0x218042;
a0_0x218042.superClass = a0_0x58d04c;
a0_0x218042.prototype.getSkinName = function () {
  return "arctic/arcticfox/" + this.animalSpecies + this.getSubSpecies() + "/arcticfox";
};
a0_0x218042.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x218042.prototype.animalInfo = function () {
  var _0x3844a3 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x3844a3.aniName = "Arctic Fox";
      break;
    case 200:
      _0x3844a3.aniName = "Ice Fox";
      break;
    case 111:
      _0x3844a3.aniName = "Classic Arctic Fox";
      break;
    case 112:
      _0x3844a3.aniName = "Gold-trim Arctic Fox";
      break;
    case 201:
      _0x3844a3.aniName = "Forest Spirit Fox";
      break;
    case 202:
      _0x3844a3.aniName = "Ice Fox";
      break;
  }
  _0x3844a3.skinName = this.getSkinName();
  _0x3844a3.aniDesc = "";
  _0x3844a3.upgradeText = "UPGRADED to " + _0x3844a3.aniName + "!\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
  _0x3844a3.aniCol = "#CFCFCF";
  return _0x3844a3;
};
function a0_0x218042() {
  a0_0x218042.superClass.call(this, a0_0x1370b8);
}
window.ArcticFox = a0_0x218042;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x218042, a0_0x1370b8, a0_0x1a160c);
var a0_0x58d04c = a0_0x45645e;
a0_0x24649f.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x24649f.prototype.constructor = a0_0x24649f;
a0_0x24649f.superClass = a0_0x58d04c;
a0_0x24649f.prototype.getSkinName = function () {
  let _0x1f6ef5 = this.getSpeciesPath() + "/fox";
  return _0x1f6ef5;
};
a0_0x24649f.prototype.getSpeciesPath = function () {
  return "land/fox/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x24649f.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x24649f.prototype.animalInfo = function () {
  var _0x26c489 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x26c489.aniName = "Fox!";
      break;
    case 200:
      _0x26c489.aniName = "Night Thief!";
      break;
    case 111:
      _0x26c489.aniName = "Classic Fox";
      break;
    case 112:
      _0x26c489.aniName = "Gold-trim Fox";
      break;
    case 200:
      _0x26c489.aniName = "Sneaky Fox";
      break;
    case 204:
      _0x26c489.aniName = "Black Asura Fox";
      break;
  }
  _0x26c489.skinName = this.getSkinName();
  _0x26c489.aniDesc = "";
  _0x26c489.upgradeText = "UPGRADED to " + _0x26c489.aniName + "!\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
  _0x26c489.aniCol = "#FF9D43";
  return _0x26c489;
};
a0_0x24649f.prototype.getAbilityInfo = function (_0x16ad4a) {
  var _0x2e0f42 = {
    abilName: "Pull from Hole",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x2e0f42;
};
function a0_0x24649f() {
  a0_0x24649f.superClass.call(this, a0_0x1370b8);
}
window.Fox = a0_0x24649f;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x24649f, a0_0x1370b8, a0_0x2d73e5);
var a0_0x58d04c = a0_0x45645e;
a0_0x2acb8d.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2acb8d.prototype.constructor = a0_0x2acb8d;
a0_0x2acb8d.superClass = a0_0x58d04c;
a0_0x2acb8d.prototype.animalInfo = function () {
  var _0x847483 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x847483.aniName = "Rabbit!";
      break;
    case 111:
      _0x847483.aniName = "Classic Rabbit";
      break;
    case 112:
      _0x847483.aniName = "Gold-trim Rabbit";
      break;
    case 200:
      _0x847483.aniName = "Monochrome Rabbit!";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x847483.aniName = "Jackapole";
          break;
        case 1:
          _0x847483.aniName = "Hollow Rabbit";
      }
      break;
    case 204:
      _0x847483.aniName = "Carrot Rabbit";
      break;
    case 220:
      _0x847483.aniName = "Fairy Rabbit";
      break;
    case 222:
      _0x847483.aniName = "Jolly Rabbit";
      break;
  }
  _0x847483.skinName = this.getSpeciesPath("rabbit") + "/rabbit";
  _0x847483.aniDesc = "";
  _0x847483.upgradeText = "UPGRADED to " + _0x847483.aniName;
  _0x847483.aniCol = "#502E1A";
  return _0x847483;
};
a0_0x2acb8d.prototype.getSkinName = function () {
  return this.getSpeciesPath("rabbit") + "/rabbit";
};
a0_0x2acb8d.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x2acb8d.prototype.getSpeciesPath = function (_0x1fe127) {
  return "land/" + _0x1fe127 + "/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x2acb8d.prototype.getAbilityInfo = function (_0x2b3ea7) {
  var _0x371c92 = {
    abilName: "Dig Hole!",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x371c92;
};
a0_0x2acb8d.prototype.getSkinName = function (_0xaa2e01) {
  var _0x2b6bbd = this.getSpeciesPath("rabbit") + "/rabbit" + (_0xaa2e01 === true ? ".png" : "");
  return _0x2b6bbd;
};
function a0_0x2acb8d() {
  a0_0x2acb8d.superClass.call(this, a0_0x1370b8);
}
window.Rabbit = a0_0x2acb8d;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2acb8d, a0_0x1370b8, a0_0x151054);
var a0_0x58d04c = a0_0x45645e;
a0_0x4ee367.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4ee367.prototype.constructor = a0_0x4ee367;
a0_0x4ee367.superClass = a0_0x58d04c;
a0_0x4ee367.prototype.getSkinName = function () {
  let _0x220348 = this.getSpeciesPath() + "/hedgehog";
  if (this.flag_usingAbility) {
    _0x220348 += "2";
  }
  return _0x220348;
};
a0_0x4ee367.prototype.getSpeciesPath = function () {
  return "land/hedgehog/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4ee367.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x4ee367.prototype.animalInfo = function () {
  var _0x265d7c = {};
  switch (this.animalSpecies) {
    case 0:
      _0x265d7c.aniName = "Hedgehog!";
      break;
    case 111:
      _0x265d7c.aniName = "Classic Hedgehog";
      break;
    case 112:
      _0x265d7c.aniName = "Gold-trim Hedgehog";
      break;
    case 202:
      _0x265d7c.aniName = "Grass Hedgehog";
      break;
  }
  _0x265d7c.skinName = this.getSkinName();
  _0x265d7c.aniDesc = "";
  _0x265d7c.upgradeText = "UPGRADED to " + _0x265d7c.aniName + "!\n (Hold W to become spiky, and dangerous to touch!)";
  _0x265d7c.aniCol = "#5b400d";
  return _0x265d7c;
};
a0_0x4ee367.prototype.getAbilityInfo = function (_0x4b3488) {
  var _0x3a9e09 = {
    abilName: "Spikes!",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x3a9e09;
};
function a0_0x4ee367() {
  a0_0x4ee367.superClass.call(this, a0_0x1370b8);
}
window.Hedgehog = a0_0x4ee367;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4ee367, a0_0x1370b8, a0_0x313367);
var a0_0x58d04c = a0_0x12658e;
a0_0x396820.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x396820.prototype.constructor = a0_0x396820;
a0_0x396820.superClass = a0_0x58d04c;
a0_0x396820.prototype.foodType = 0;
a0_0x396820.prototype.updateZ = function () {
  this.z = -98;
};
a0_0x396820.prototype.customDraw = function (_0x5c6df7) {
  var _0x2daa6b = this.rad - 10;
  this.waterRipples(_0x2daa6b);
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.restore();
  var _0x459861 = "img/floaters/" + this.floaterType + ".png";
  this.drawSkin(_0x459861, _0x2daa6b);
};
a0_0x396820.prototype.drawSkin = function (_0x2a6876, _0x162bcc) {
  a0_0x4ef4f3.save();
  var _0x1a5006 = this.getSkinImageObj(_0x2a6876);
  if (_0x1a5006) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x1a5006, -_0x162bcc, -_0x162bcc, _0x162bcc * 2, _0x162bcc * 2);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
var a0_0x3bca81 = 0.01;
var a0_0x370fc3 = 0.02;
var a0_0x2294f7 = 10;
var a0_0x3acb1c = 15;
a0_0x396820.prototype.waterRipples = function (_0x7256ad) {
  _0x7256ad = _0x7256ad - 5;
  var _0x38db59 = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x1beb93 = 1.75;
  var _0xcce579 = 0.5;
  var _0x545516 = _0xcce579 * Math.sin(Math.PI * 2 / _0x1beb93 * _0x38db59);
  var _0x3f0688 = a0_0x4ef4f3.globalAlpha;
  if (!this.isFloatingInWater) {
    _0x545516 = 1;
  }
  if (this.floaterType == 0 || this.floaterType == 2 || this.floaterType == 3 || this.floaterType == 4 || this.floaterType == 5 || this.floaterType == 7) {
    var _0x3c765d = "img/floaters/" + this.floaterType + "_ripple.png";
    a0_0x4ef4f3.globalAlpha *= 0.7 - _0x545516 * 0.25;
    this.drawSkin(_0x3c765d, _0x7256ad + a0_0x2294f7 - 5);
    a0_0x4ef4f3.globalAlpha *= 0.6 - _0x545516 * 0.2;
    this.drawSkin(_0x3c765d, _0x7256ad + a0_0x3acb1c - 5);
  } else {
    a0_0x4ef4f3.globalAlpha *= 0.8 - _0x545516 * 0.2;
    a0_0x498500(0, _0x7256ad * a0_0x3bca81, _0x7256ad * (0.9 + _0x545516 * 0.15), a0_0x2294f7, "#4668ff");
    a0_0x4ef4f3.globalAlpha *= 0.7 - _0x545516 * 0.2;
    a0_0x498500(0, -_0x7256ad * a0_0x370fc3, _0x7256ad * (1.05 + _0x545516 * 0.1), a0_0x3acb1c, "#4668ff");
  }
  a0_0x4ef4f3.globalAlpha = _0x3f0688;
};
a0_0x396820.prototype.readCustomData_onNewlyVisible = function (_0x3b8d8e) {
  this.floaterType = _0x3b8d8e.readUInt8();
};
a0_0x396820.prototype.isFloatingInWater = true;
a0_0x396820.prototype.readUpdatedProperty = function (_0x322c71, _0x4ddc70) {
  if (_0x322c71 == a0_0x7780d0) {
    this.isFloatingInWater = _0x4ddc70.readUInt8() == 1;
  }
};
var a0_0x31e49b = 144;
function a0_0x396820() {
  a0_0x396820.superClass.call(this, a0_0x31e49b);
  this.drawEffectScale_Slow = true;
}
window.WaterFloater = a0_0x396820;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x396820, a0_0x31e49b);
var a0_0x58d04c = a0_0x12658e;
a0_0x58fa76.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x58fa76.prototype.constructor = a0_0x58fa76;
a0_0x58fa76.superClass = a0_0x58d04c;
a0_0x58fa76.prototype.lookAngle = 0;
a0_0x58fa76.prototype.frameNumber = 0;
a0_0x58fa76.prototype.isRolling = false;
a0_0x58fa76.prototype.pumpkinType = false;
a0_0x58fa76.prototype.updateZ = function () {
  this.z = 1002;
};
var a0_0x3ce930 = -0.07;
var a0_0x5657bd = -0.1;
var a0_0x11692c = 8;
var a0_0x29fe23 = 12;
var a0_0x3d3f35 = 8;
a0_0x58fa76.prototype.waterRipples = function (_0x54d16d) {
  a0_0x4ef4f3.save();
  _0x54d16d = _0x54d16d + a0_0x3d3f35;
  var _0x4d2a56 = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x22b5a8 = 1.75;
  var _0x537583 = 0.5;
  var _0x2593f8 = _0x537583 * Math.sin(Math.PI * 2 / _0x22b5a8 * _0x4d2a56);
  var _0x34937a = a0_0x4ef4f3.globalAlpha;
  if (!this.isFloating) {
    _0x2593f8 = 1;
  }
  a0_0x4ef4f3.rotate(a0_0x844a6b(this.lookAngle + 45));
  a0_0x4ef4f3.globalAlpha *= 0.8 - _0x2593f8 * 0.2;
  a0_0x498500(0, _0x54d16d * a0_0x3ce930, _0x54d16d * (0.9 + _0x2593f8 * 0.15), a0_0x11692c, "#4668ff");
  a0_0x4ef4f3.globalAlpha *= 0.7 - _0x2593f8 * 0.2;
  a0_0x498500(0, -_0x54d16d * a0_0x5657bd, _0x54d16d * (1.05 + _0x2593f8 * 0.1), a0_0x29fe23, "#4668ff");
  a0_0x4ef4f3.globalAlpha = _0x34937a;
  a0_0x4ef4f3.restore();
};
a0_0x58fa76.prototype.customDraw = function (_0x2f06a6) {
  var _0x5255a2 = this.rad - 10;
  var _0x126977 = 1;
  var _0xfca811 = 0.15;
  var _0x3eff8b = 0.8;
  var _0x40764a = (_0x3eff8b - _0xfca811) * 0.5;
  var _0xc6bf98 = _0xfca811 + _0x40764a + _0x40764a * Math.sin(Math.PI * 2 / _0x126977 * (a0_0x4f736f / 1000));
  var _0x126977 = 1;
  var _0xfca811 = 0.85;
  var _0x3eff8b = 1;
  var _0x40764a = (_0x3eff8b - _0xfca811) * 0.5;
  var _0x3e4bc0 = 1;
  if (this.isRolling) {
    this.frameNumber = Math.trunc(a0_0x4f736f / 120) % 8;
  }
  var _0x55f1cb = this.getSkinImageObj("img/beachball/" + this.pumpkinType + "/" + this.frameNumber + ".png");
  if (_0x55f1cb) {
    var _0x7159a6 = 0;
    var _0x5aac4f = this.rad;
    var _0x559923 = this.rad * 2.5;
    imH = this.rad * 2.5;
    var _0x38989a = 0.5;
    var _0x241b78 = 0.95;
    a0_0x4ef4f3.save();
    {
      a0_0x4ef4f3.globalAlpha *= this.onFireEffA * _0x3e4bc0;
      a0_0x4ef4f3.rotate(this.angle + a0_0x2b691e);
      a0_0x4ef4f3.drawImage(_0x55f1cb, _0x7159a6 + _0x559923 * -_0x38989a, _0x5aac4f + imH * -_0x241b78, _0x559923, imH);
    }
    a0_0x4ef4f3.restore();
  } else {}
};
a0_0x58fa76.prototype.isFloating = false;
a0_0x58fa76.prototype.isRolling = false;
a0_0x58fa76.prototype.readUpdatedProperty = function (_0x513cd1, _0x2ceabb) {
  if (_0x513cd1 == a0_0x7780d0) {
    this.isFloating = _0x2ceabb.readUInt8() == 1;
  } else if (_0x513cd1 == a0_0x5bcdd7) {
    this.isRolling = _0x2ceabb.readUInt8() == 1;
  }
};
a0_0x58fa76.prototype.readCustomData_onNewlyVisible = function (_0x149f08) {
  this.isRolling = _0x149f08.readUInt8() == 1;
  this.pumpkinType = _0x149f08.readUInt8();
  this.isFloating = _0x149f08.readUInt8() == 1;
};
function a0_0x58fa76() {
  a0_0x58fa76.superClass.call(this, a0_0x5473a7);
  this.lookAngle = 0;
  this.isRolling = false;
  this.pumpkinType = false;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
var a0_0x5473a7 = 145;
window.BeachBall = a0_0x58fa76;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x58fa76, a0_0x5473a7);
var a0_0x58d04c = a0_0x12658e;
a0_0x918e30.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x918e30.prototype.constructor = a0_0x918e30;
a0_0x918e30.superClass = a0_0x58d04c;
a0_0x918e30.prototype.frameNumber = 0;
a0_0x918e30.prototype.umbrellaType = 0;
a0_0x918e30.prototype.umbrellaColor = 0;
a0_0x918e30.prototype.isClosed = false;
a0_0x918e30.prototype.updateZ = function () {
  this.z = this.rad + (!this.isClosed ? 2100 : 0);
};
a0_0x918e30.prototype.customDraw = function (_0x23ee73) {
  var _0x3ac285 = 1;
  var _0x203bbc = 0.15;
  var _0x5765ef = 0.8;
  var _0x1ac3c4 = (_0x5765ef - _0x203bbc) * 0.5;
  var _0x201bae = _0x203bbc + _0x1ac3c4 + _0x1ac3c4 * Math.sin(Math.PI * 2 / _0x3ac285 * (a0_0x4f736f / 1000));
  var _0x3ac285 = 1;
  var _0x203bbc = 0.85;
  var _0x5765ef = 1;
  var _0x1ac3c4 = (_0x5765ef - _0x203bbc) * 0.5;
  var _0x501f3d = 1;
  var _0x818e1 = this.rad * 1.5;
  var _0x4c11bf = this.getSkinImageObj("img/umbrella/" + this.umbrellaType + "/" + this.umbrellaColor + "/umbrella" + (this.isClosed ? "-closed" : "") + ".png");
  if (_0x4c11bf) {
    var _0x2b1cfe = 0;
    var _0x3357bc = this.rad;
    var _0x339c7a = this.rad * 2.5;
    imH = this.rad * 2.5;
    var _0x3edc9e = 0.5;
    var _0x204edd = 0.95;
    a0_0x4ef4f3.save();
    {
      a0_0x4ef4f3.globalAlpha *= this.onFireEffA * _0x501f3d;
      a0_0x4ef4f3.rotate(this.angle);
      a0_0x4ef4f3.drawImage(_0x4c11bf, _0x2b1cfe + _0x339c7a * -_0x3edc9e, _0x3357bc + imH * -_0x204edd, _0x339c7a, imH);
    }
    a0_0x4ef4f3.restore();
  } else {}
};
a0_0x918e30.prototype.readUpdatedProperty = function (_0x301011, _0x551a6b) {
  if (_0x301011 == a0_0x7780d0) {
    this.isFloating = _0x551a6b.readUInt8() == 1;
  } else if (_0x301011 == a0_0x5bcdd7) {
    this.isClosed = _0x551a6b.readUInt8() == 0;
  }
};
a0_0x918e30.prototype.readCustomData_onNewlyVisible = function (_0x310347) {
  this.isClosed = _0x310347.readUInt8() == 1;
  this.umbrellaType = _0x310347.readUInt8();
  this.umbrellaColor = _0x310347.readUInt8();
};
function a0_0x918e30() {
  a0_0x918e30.superClass.call(this, a0_0x57cbe1);
  this.umbrellaType = 0;
  this.isClosed = false;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
var a0_0x57cbe1 = 146;
window.Umbrella = a0_0x918e30;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x918e30, a0_0x57cbe1);
var a0_0x58d04c = a0_0x45645e;
a0_0x1fbb74.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1fbb74.prototype.constructor = a0_0x1fbb74;
a0_0x1fbb74.superClass = a0_0x58d04c;
a0_0x1fbb74.prototype.animalInfo = function () {
  var _0x22b726 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x22b726.aniName = "Chipmunk!";
      break;
    case 201:
      _0x22b726.aniName = "Playful Munk!";
      break;
    case 111:
      _0x22b726.aniName = "Classic Chipmunk";
      break;
    case 112:
      _0x22b726.aniName = "Gold-trim  Chipmunk";
      break;
    case 202:
      _0x22b726.aniName = "Chipmonk";
      break;
  }
  _0x22b726.skinName = this.getSkinName();
  _0x22b726.aniDesc = "";
  _0x22b726.upgradeText = "You're a tiny " + _0x22b726.aniName + " - Eat food to grow!";
  _0x22b726.aniCol = "#CFCFCF";
  return _0x22b726;
};
a0_0x1fbb74.prototype.getSkinName = function () {
  return "arctic/chipmunk/" + this.animalSpecies + this.getSubSpecies() + "/chipmunk";
};
a0_0x1fbb74.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x1fbb74() {
  a0_0x1fbb74.superClass.call(this, a0_0x1370b8);
}
window.Chipmunk = a0_0x1fbb74;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1fbb74, a0_0x1370b8, a0_0x31fe5e);
var a0_0x58d04c = a0_0x45645e;
a0_0xe3e8c3.prototype = Object.create(a0_0x58d04c.prototype);
a0_0xe3e8c3.prototype.constructor = a0_0xe3e8c3;
a0_0xe3e8c3.superClass = a0_0x58d04c;
a0_0xe3e8c3.prototype.getSkinName = function () {
  return "arctic/arctichare/" + this.animalSpecies + this.getSubSpecies() + "/arctichare";
};
a0_0xe3e8c3.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0xe3e8c3.prototype.animalInfo = function () {
  var _0x5106fd = {};
  switch (this.animalSpecies) {
    case 0:
      _0x5106fd.aniName = "Arctic Hare!";
      break;
    case 111:
      _0x5106fd.aniName = "Classic Arctic Hare";
      break;
    case 112:
      _0x5106fd.aniName = "Gold-trim Arctic Hare";
      break;
    case 201:
      _0x5106fd.aniName = "Snow Cone Hare!";
      break;
  }
  _0x5106fd.skinName = this.getSkinName();
  _0x5106fd.aniDesc = "";
  _0x5106fd.upgradeText = "UPGRADED to " + _0x5106fd.aniName;
  _0x5106fd.aniCol = "#CFCFCF";
  return _0x5106fd;
};
function a0_0xe3e8c3() {
  a0_0xe3e8c3.superClass.call(this, a0_0x1370b8);
}
window.ArcticHare = a0_0xe3e8c3;
a0_0xa5d548.setCustomClassForGameObjType(a0_0xe3e8c3, a0_0x1370b8, a0_0x1218ca);
var a0_0x58d04c = a0_0x45645e;
a0_0xa4fc55.prototype = Object.create(a0_0x58d04c.prototype);
a0_0xa4fc55.prototype.constructor = a0_0xa4fc55;
a0_0xa4fc55.superClass = a0_0x58d04c;
a0_0xa4fc55.prototype.animalInfo = function () {
  var _0x13ac62 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x13ac62.aniName = "Polar Bear";
      break;
    case 112:
      _0x13ac62.aniName = "Gold-trim Polar Bear";
      break;
    case 201:
      _0x13ac62.aniName = "Cola Connoisseur";
      break;
    case 202:
      _0x13ac62.aniName = "Water Bear";
      break;
  }
  _0x13ac62.aniDesc = "";
  _0x13ac62.upgradeText = "UPGRADED to " + _0x13ac62.aniName + "!\n Polar bears can climb hills! \n+ They're amazing swimmers!";
  _0x13ac62.aniCol = "#e4e4e4";
  _0x13ac62.skinName = this.getSkinName();
  return _0x13ac62;
};
a0_0xa4fc55.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0xa4fc55.prototype.getAbilityInfo = function (_0x4477d8) {
  var _0x433fdc = {
    abilName: "Claw Slash!",
    abilImg: "skins/arctic/bear/" + this.animalSpecies + "/clawslash.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x433fdc;
};
a0_0xa4fc55.prototype.getSkinName = function () {
  var _0x1344b0 = "arctic/bear/" + this.animalSpecies + this.getSubSpecies() + "/bear";
  if (this.animalSpecies == 201 && this.flag_usingAbility) {
    _0x1344b0 += "1";
  }
  return _0x1344b0;
};
function a0_0xa4fc55() {
  a0_0xa4fc55.superClass.call(this, a0_0x1370b8);
}
window.PolarBear = a0_0xa4fc55;
a0_0xa5d548.setCustomClassForGameObjType(a0_0xa4fc55, a0_0x1370b8, a0_0x162473);
var a0_0x58d04c = a0_0x45645e;
a0_0x73642e.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x73642e.prototype.constructor = a0_0x73642e;
a0_0x73642e.superClass = a0_0x58d04c;
a0_0x73642e.prototype.getSpeciesPath = function (_0x5d180f) {
  return "arctic/" + _0x5d180f + "/" + this.animalSpecies;
};
a0_0x73642e.prototype.animalInfo = function () {
  var _0x5b479c = {};
  switch (this.animalSpecies) {
    case 0:
      _0x5b479c.aniName = "Lemming!";
      break;
    case 111:
      _0x5b479c.aniName = "Classic Lemming";
      break;
  }
  _0x5b479c.skinName = this.getSpeciesPath("lemming") + "/lemming";
  _0x5b479c.aniDesc = "";
  _0x5b479c.upgradeText = "You're a tiny " + _0x5b479c.aniName + " - Eat food to grow!";
  _0x5b479c.aniCol = "#CFCFCF";
  return _0x5b479c;
};
a0_0x73642e.prototype.getSkinName = function () {
  var _0xed92cf = this.getSpeciesPath("lemming") + "/lemming";
  return _0xed92cf;
};
function a0_0x73642e() {
  a0_0x73642e.superClass.call(this, a0_0x1370b8);
}
window.Lemming = a0_0x73642e;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x73642e, a0_0x1370b8, a0_0x1d5499);
function a0_0x1f3ae3(_0x309914) {
  var _0x335cb9 = a0_0xa5d548.createGameObjOfOType(a0_0x1370b8, _0x309914.animalType);
  _0x335cb9.animalType = _0x309914.animalType;
  _0x335cb9.animalSpecies = _0x309914.animalSpecies;
  _0x335cb9.animalSubSpecies = _0x309914.animalSubSpecies;
  _0x335cb9.animalPremiumSkin = _0x309914.premiumSkinGroup;
  _0x335cb9.mopeSeasonID = 1;
  _0x335cb9.skinThemeID = 0;
  var _0xd26058 = _0x335cb9.animalInfo();
  _0x309914.aniCol = _0xd26058.aniCol;
  _0x309914.aniName = _0xd26058.aniName;
  _0x309914.skinName = _0xd26058.skinName;
  _0x309914.upgradeText = _0xd26058.upgradeText;
  var _0x1f86a6 = _0x335cb9.getAbilityInfo(_0x309914.abilityType);
  _0x309914.abilityImage = _0x1f86a6.abilImg;
  _0x309914.abilityName = _0x1f86a6.abilName;
  return _0x309914;
}
class a0_0x22140b {
  static ALPHA_LOOKUP = {
    o_mudSpot: 0.7,
    o_arcticIce: 0.85,
    o_hill: 1,
    o_lakeIsland: 0.6,
    o_berryBush: 1,
    o_waterSpot: 1
  };
  constructor(_0x2ff8c9) {
    this.data = _0x2ff8c9;
    this.data.width = this.data.height * (this.data.gameWidth / this.data.gameHeight);
    if (!this.miniMapCanvas) {
      this.miniMapCanvas = document.createElement("canvas");
    }
    this.miniMapCanvas.width = this.data.width;
    this.miniMapCanvas.height = this.data.height;
    this.ctx_ = this.miniMapCanvas.getContext("2d");
    this.ctx_.globalAlpha = 0.55;
    this.ctx_.fillStyle = "#000000";
    this.ctx_.fillRect(0, 0, this.miniMapCanvas.width, this.miniMapCanvas.height);
    this.drawObjects();
  }
  drawObjects() {
    for (let _0x15d1f0 = 0; _0x15d1f0 < this.data.objects.length; _0x15d1f0++) {
      let _0x33dbe6 = this.data.objects[_0x15d1f0];
      if (_0x33dbe6.isRect) {
        if (_0x33dbe6.objType == a0_0x308061) {
          continue;
        }
        this.drawRect(_0x33dbe6);
      }
    }
    for (let _0x4673d0 = 0; _0x4673d0 < this.data.objects.length; _0x4673d0++) {
      let _0x4c3c05 = this.data.objects[_0x4673d0];
      if (!_0x4c3c05.isRect) {
        this.drawCircle(_0x4c3c05);
      }
    }
  }
  drawCircle(_0x5edea1) {
    var _0x4fd9d6 = _0x5edea1.x * this.data.scaleX;
    var _0x3ad2be = _0x5edea1.y * this.data.scaleY;
    var _0x4ba84d = _0x5edea1.r / this.data.objScale;
    this.ctx_.beginPath();
    const _0x292d3b = a0_0x22140b.ALPHA_LOOKUP[_0x5edea1.objType] || 0.5;
    this.ctx_.globalAlpha = _0x292d3b;
    this.ctx_.fillStyle = _0x5edea1.c;
    this.ctx_.arc(_0x4fd9d6, _0x3ad2be, Math.max(1, _0x4ba84d), 0, Math.PI * 2);
    this.ctx_.fill();
  }
  drawRect(_0x57fc89) {
    var _0x294493 = _0x57fc89.x * this.data.scaleX;
    var _0x4ebda4 = _0x57fc89.y * this.data.scaleY;
    var _0xe2d33a = _0x57fc89.w * this.data.scaleX;
    var _0x3e5413 = _0x57fc89.h * this.data.scaleY;
    const _0x1a54b1 = a0_0x22140b.ALPHA_LOOKUP[_0x57fc89.objType] || 0.5;
    this.ctx_.globalAlpha = _0x1a54b1;
    this.ctx_.fillStyle = _0x57fc89.c;
    this.ctx_.fillRect(_0x294493 - _0xe2d33a / 2, _0x4ebda4 - _0x3e5413 / 2, _0xe2d33a, _0x3e5413);
  }
  drawMap() {
    if (this.miniMapCanvas && this.miniMapCanvas.width) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.drawImage(this.miniMapCanvas, a0_0x11866b - (a0_0x24bc92 * 10 + this.miniMapCanvas.width * a0_0xba590d), a0_0x24bc92 * 10, this.data.width * a0_0xba590d, this.data.height * a0_0xba590d);
      a0_0x4ef4f3.restore();
    }
    var _0x4ebcf0 = a0_0x3d5ac5[a0_0x1c918d];
    if (_0x4ebcf0) {
      a0_0x3dc204(_0x4ebcf0, "white", 1);
    }
    if (a0_0x1d89a7 != null && a0_0x1d89a7.id != a0_0x1c918d) {
      a0_0x3dc204(a0_0x1d89a7, "cyan", 1);
    }
  }
  setPlayersCount(_0x197793) {}
}
var a0_0x497ac8 = 147;
var a0_0x58d04c = a0_0x12658e;
a0_0x428d2a.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x428d2a.prototype.constructor = a0_0x428d2a;
a0_0x428d2a.superClass = a0_0x58d04c;
a0_0x428d2a.prototype.drawGrid = a0_0x1d703e !== a0_0x30b084;
a0_0x428d2a.prototype.updateZ = function () {
  switch (this.biome) {
    case a0_0x37feb7:
      this.z = -300;
      break;
    case a0_0x26b566:
      this.z = -299;
      break;
    case a0_0x2cd8a2:
    case a0_0x30fa27:
      this.z = -298;
      break;
    case a0_0x4459f0:
      if (this.forceBiomeColor) {
        this.z = -210;
      } else {
        this.z = -208;
      }
      break;
    case a0_0x6632a8:
      this.z = -295;
      break;
  }
};
a0_0x428d2a.prototype.customDraw = function (_0x258900) {
  if (this.isRect) {
    this.drawBiome(_0x258900);
    if (!_0x258900) {
      if (this.jaggedSides) {
        a0_0x4ef4f3.save();
        this.jaggedSidesForRect();
        a0_0x4ef4f3.restore();
      }
    }
    if (a0_0x1d703e !== a0_0x30b084) {
      var _0x2946ff = 45;
      a0_0x165516(-this.getRectWidth() / 2 + _0x2946ff, -this.getRectHeight() / 2 + _0x2946ff, this.getRectWidth() / 2 - _0x2946ff, this.getRectHeight() / 2 - _0x2946ff, this.x, this.y);
    }
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.restore();
  } else {
    this.drawBiome(false);
  }
};
a0_0x428d2a.prototype.jaggedPointsForRect = function (_0x2532e6) {
  var _0x3c33ca = 0;
  var _0x572971 = 1;
  var _0x582b08 = 2;
  var _0x4d645b = 3;
  if (this.jaggedSides) {
    if (_0x2532e6 == _0x582b08) {
      this.jaggedRect[_0x2532e6] = [];
      var _0x584049 = -this.getRectWidth() / 2;
      var _0x582549 = this.getRectWidth() / 2;
      var _0xdeb3e2 = this.getRectHeight() / 2 - 32;
      var _0x234dcb = this.getRectHeight() / 2 - 32;
      this.jaggedRect[_0x2532e6].push({
        x: _0x584049,
        y: _0xdeb3e2
      });
      var _0x8b9121 = 20;
      var _0x285903 = [-12, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
      var _0x4ad54b = 60;
      var _0x115a24 = 0;
      var _0x2a3751 = a0_0x425049 - this.x;
      var _0x37e10a = 0 - this.x;
      var _0x461aa5 = a0_0xe585d7 - this.y;
      var _0x112075 = 0 - this.y;
      var _0x3b5568;
      var _0x2528f1 = _0x584049 - _0x8b9121;
      this.jaggedRect[_0x2532e6].push({
        x: _0x584049,
        y: _0xdeb3e2
      });
      _0x3b5568 = _0x234dcb + _0x8b9121;
      var _0xae8915 = 0;
      var _0x47af80 = 0;
      for (_0x2528f1 = _0x584049; _0x2528f1 < _0x582549; _0x2528f1 += _0x4ad54b) {
        _0x47af80 = _0x2528f1;
        _0xae8915 = Math.min(_0x461aa5, Math.max(_0x112075, _0x3b5568 + _0x285903[_0x115a24]));
        this.jaggedRect[_0x2532e6].push({
          x: _0x47af80,
          y: _0xae8915
        });
        _0x115a24 = (_0x115a24 + 1) % _0x285903.length;
      }
      this.jaggedRect[_0x2532e6].push({
        x: _0x582549,
        y: _0x234dcb
      });
      this.jaggedRect[_0x2532e6].push({
        x: _0x582549,
        y: _0xdeb3e2
      });
      this.jaggedRect[_0x2532e6].push({
        x: _0x584049,
        y: _0xdeb3e2
      });
    } else if (_0x2532e6 == _0x3c33ca) {
      var _0xbf453a = 100;
      this.jaggedRect[_0x2532e6] = [];
      a0_0x4ef4f3.fillStyle = a0_0x2b43c5;
      var _0x584049 = -this.getRectWidth() / 2;
      var _0x582549 = this.getRectWidth() / 2;
      var _0xdeb3e2 = -this.getRectHeight() / 2 + 24;
      var _0x234dcb = -this.getRectHeight() / 2 + 12;
      this.jaggedRect[_0x2532e6].push({
        x: _0x584049,
        y: _0xdeb3e2
      });
      var _0x8b9121 = 0;
      var _0x285903 = [-12, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
      var _0x4ad54b = 60;
      var _0x115a24 = 0;
      var _0x2a3751 = a0_0x425049 - this.x;
      var _0x37e10a = 0 - this.x;
      var _0x461aa5 = a0_0xe585d7 - this.y;
      var _0x112075 = 0 - this.y;
      var _0x3b5568;
      var _0x2528f1 = _0x584049;
      this.jaggedRect[_0x2532e6].push({
        x: _0x584049,
        y: _0x234dcb
      });
      _0x3b5568 = _0x234dcb;
      for (_0x2528f1 = _0x584049; _0x2528f1 < _0x582549; _0x2528f1 += _0x4ad54b) {
        _0x47af80 = _0x2528f1;
        _0xae8915 = Math.min(_0x461aa5, Math.max(_0x112075, _0x3b5568 + _0x285903[_0x115a24]));
        this.jaggedRect[_0x2532e6].push({
          x: _0x47af80,
          y: _0xae8915
        });
        _0x115a24 = (_0x115a24 + 1) % _0x285903.length;
      }
      this.jaggedRect[_0x2532e6].push({
        x: _0x582549,
        y: _0x234dcb
      });
      this.jaggedRect[_0x2532e6].push({
        x: _0x582549,
        y: _0xdeb3e2
      });
    }
  }
};
a0_0x428d2a.prototype.drawJaggedCircle = function (_0x40ca4a, _0x46f9f9) {
  if (this.points2) {
    this.drawPoints(this.points2, _0x46f9f9, true);
  }
  this.drawPoints(this.points1, _0x40ca4a, true);
};
a0_0x428d2a.prototype.getRectWidth = function () {
  var _0x50c45e = this.rectW;
  return _0x50c45e;
};
a0_0x428d2a.prototype.getRectHeight = function () {
  var _0x5178fb = this.rectH;
  return _0x5178fb;
};
a0_0x428d2a.prototype.drawBiome = function (_0xdf99c) {
  if (this.biome == a0_0x4459f0) {
    this.drawVolcanoBiome(_0xdf99c);
  } else if (!this.isRect) {
    a0_0x4ef4f3.fillStyle = _0xdf99c ? "red" : this.getBiomeColor();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, Math.max(1, this.rad), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
  } else {
    if (this.biome == a0_0x26b566) {
      a0_0x4ef4f3.globalAlpha = 1;
    }
    if (!_0xdf99c) {
      a0_0x4ef4f3.fillStyle = _0xdf99c ? a0_0x575276 : this.getBiomeColor();
      var _0x289c2c = _0xdf99c ? 0 : 20;
      a0_0x4ef4f3.fillRect(-this.getRectWidth() / 2 + _0x289c2c, -this.getRectHeight() / 2 + _0x289c2c, this.getRectWidth() - _0x289c2c * 2, this.getRectHeight() - _0x289c2c * 2);
    }
  }
};
a0_0x428d2a.prototype.drawVolcanoBiome = function (_0x2b759f) {
  a0_0x4ef4f3.save();
  if (a0_0x1d703e != a0_0x30b084) {
    a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
  }
  var _0x446cb2 = 0;
  var _0x3bb80b = (a0_0x4f736f - this.spawnTime) / 1000;
  var _0x170dd0 = 6;
  var _0x22617f = 1.5;
  _0x446cb2 = _0x22617f * Math.sin(Math.PI * 2 / _0x170dd0 * _0x3bb80b);
  var _0x243ae0 = 4;
  a0_0x4ef4f3.fillStyle = "#604729";
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.arc(0, 0, this.rad, 0, Math.PI * 2);
  a0_0x4ef4f3.fill();
  if (a0_0x1d703e != a0_0x30b084) {
    a0_0x4ef4f3.fillStyle = "#8A681B";
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(0, 0, Math.max(0, this.rad - _0x243ae0 + _0x446cb2), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x446cb2), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x446cb2), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x446cb2), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x446cb2), 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
    a0_0x4ef4f3.fill();
    a0_0x4ef4f3.beginPath();
  }
  a0_0x4ef4f3.restore();
};
a0_0x428d2a.prototype.drawPoints = function (_0x19a3a1, _0x22cfb, _0x69f783) {
  if (_0x69f783) {
    a0_0x4ef4f3.fillStyle = _0x22cfb;
  } else {
    a0_0x4ef4f3.strokeStyle = _0x22cfb;
  }
  a0_0x4ef4f3.strokeStyle = _0x22cfb;
  a0_0x4ef4f3.beginPath();
  var _0x10a9e3 = 10;
  a0_0x4ef4f3.moveTo(_0x19a3a1[0].x * _0x10a9e3, _0x19a3a1[0].y * _0x10a9e3);
  for (var _0x223287 = 1; _0x223287 < _0x19a3a1.length; _0x223287++) {
    a0_0x4ef4f3.lineTo(_0x19a3a1[_0x223287].x * _0x10a9e3, _0x19a3a1[_0x223287].y * _0x10a9e3);
  }
  a0_0x4ef4f3.lineTo(_0x19a3a1[0].x * _0x10a9e3, _0x19a3a1[0].y * _0x10a9e3);
  if (_0x69f783) {
    a0_0x4ef4f3.fill();
  } else {
    a0_0x4ef4f3.stroke();
  }
};
a0_0x428d2a.prototype.drawJaggedRect = function () {
  var _0x28f6be = 0;
  var _0x593070 = 1;
  var _0x36d99d = 2;
  var _0x4b9f28 = 3;
  for (var _0x43fc94 = 0; _0x43fc94 < this.jaggedRect.length; _0x43fc94++) {
    if (this.jaggedRect[_0x43fc94]) {
      var _0x5205bd = this.jaggedRect[_0x43fc94];
      if (_0x5205bd && _0x5205bd.length > 0) {
        a0_0x4ef4f3.fillStyle = this.biomeColor;
        a0_0x4ef4f3.strokeStyle = "red";
        a0_0x4ef4f3.beginPath();
        a0_0x4ef4f3.moveTo(_0x5205bd[0].x, _0x5205bd[0].y);
        for (i = 1; i < _0x5205bd.length; i++) {
          a0_0x4ef4f3.lineTo(_0x5205bd[i].x, _0x5205bd[i].y);
        }
        a0_0x4ef4f3.closePath();
        a0_0x4ef4f3.fill();
        a0_0x4ef4f3.stroke();
      }
    }
  }
};
a0_0x428d2a.prototype.jaggedPointsForCircle = function (_0x28f22e, _0x5ca56f, _0x1181c5, _0x1e5cf7, _0x27de50) {
  if (this.points1 == undefined) {
    this.points1 = [];
    if (_0x27de50 > 0) {
      this.points2 = [];
    }
    var _0x4fd0ed = a0_0x1da5bb(-2, 2);
    var _0x513ad3 = Math.PI * 2 / _0x1e5cf7;
    a = a0_0x844a6b(_0x4fd0ed);
    var _0x38144e = Math.cos(a);
    var _0x27675d = Math.sin(a);
    var _0x71353d = _0x28f22e + _0x1181c5 * _0x38144e;
    var _0x65fe42 = _0x5ca56f + _0x1181c5 * _0x27675d;
    this.points1.push({
      x: _0x71353d,
      y: _0x65fe42
    });
    if (_0x27de50 > 0) {
      var _0x2eab6b = _0x28f22e + (_0x1181c5 + _0x27de50) * _0x38144e;
      var _0x22efde = _0x5ca56f + (_0x1181c5 + _0x27de50) * _0x27675d;
      this.points2.push({
        x: _0x2eab6b,
        y: _0x22efde
      });
    }
    for (var _0x415a18 = 1; _0x415a18 < _0x1e5cf7; _0x415a18++) {
      var _0x1af7f1 = a0_0x1da5bb(-1, 1);
      _0x4fd0ed = a0_0x1da5bb(-2, 2);
      var _0x204500 = _0x1181c5 + _0x1af7f1;
      a = _0x513ad3 * _0x415a18 + a0_0x844a6b(_0x4fd0ed);
      _0x38144e = Math.cos(a);
      _0x27675d = Math.sin(a);
      var _0x3cb955 = _0x28f22e + _0x204500 * _0x38144e;
      var _0x17e11b = _0x5ca56f + _0x204500 * _0x27675d;
      this.points1.push({
        x: _0x3cb955,
        y: _0x17e11b
      });
      if (_0x27de50 > 0) {
        var _0x4daba1 = _0x1181c5 + _0x27de50 + _0x1af7f1;
        var _0x2495d0 = _0x28f22e + (_0x4daba1 + _0x27de50) * _0x38144e;
        var _0x366ecb = _0x5ca56f + (_0x4daba1 + _0x27de50) * _0x27675d;
        this.points2.push({
          x: _0x2495d0,
          y: _0x366ecb
        });
      }
    }
    this.points1.push({
      x: _0x71353d,
      y: _0x65fe42
    });
    if (_0x27de50 > 0) {
      this.points2.push({
        x: _0x2eab6b,
        y: _0x22efde
      });
    }
  }
};
a0_0x428d2a.prototype.jaggedSidesForRect = function () {
  var _0x45fece = 42;
  a0_0x4ef4f3.fillStyle = this.getBiomeColor();
  var _0x45342e = -this.getRectWidth() / 2 + _0x45fece;
  var _0x582930 = this.getRectWidth() / 2 - _0x45fece;
  var _0x6f7921 = -this.getRectHeight() / 2 + _0x45fece;
  var _0x300879 = this.getRectHeight() / 2 - _0x45fece;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(_0x45342e, _0x6f7921);
  var _0x38aa5c = 30;
  var _0x22740f = [-8, 10, -10, 12, 0, 5, -10, 5, -12, 5, 10, 0, -6];
  var _0xc0c600 = 45;
  var _0x51c825 = 0;
  var _0x5d3738 = a0_0x425049 - this.x;
  var _0x374aa1 = 0 - this.x;
  var _0x1ae553 = a0_0xe585d7 - this.y;
  var _0xe27c4f = 0 - this.y;
  var _0x33cbe3;
  var _0x1e427e = _0x45342e - _0x38aa5c;
  for (_0x33cbe3 = _0x6f7921; _0x33cbe3 < _0x300879; _0x33cbe3 += _0xc0c600) {
    a0_0x4ef4f3.lineTo(Math.min(_0x5d3738, Math.max(_0x374aa1, _0x1e427e + _0x22740f[_0x51c825])), _0x33cbe3);
    _0x51c825 = (_0x51c825 + 1) % _0x22740f.length;
  }
  a0_0x4ef4f3.lineTo(_0x45342e, _0x300879);
  _0x33cbe3 = _0x300879 + _0x38aa5c;
  for (_0x1e427e = _0x45342e; _0x1e427e < _0x582930; _0x1e427e += _0xc0c600) {
    a0_0x4ef4f3.lineTo(_0x1e427e, Math.min(_0x1ae553, Math.max(_0xe27c4f, _0x33cbe3 + _0x22740f[_0x51c825])));
    _0x51c825 = (_0x51c825 + 1) % _0x22740f.length;
  }
  a0_0x4ef4f3.lineTo(_0x582930, _0x300879);
  _0x1e427e = _0x582930 + _0x38aa5c;
  for (_0x33cbe3 = _0x300879; _0x33cbe3 > _0x6f7921; _0x33cbe3 -= _0xc0c600) {
    a0_0x4ef4f3.lineTo(Math.min(_0x5d3738, Math.max(_0x374aa1, _0x1e427e + _0x22740f[_0x51c825])), _0x33cbe3);
    _0x51c825 = (_0x51c825 + 1) % _0x22740f.length;
  }
  a0_0x4ef4f3.lineTo(_0x582930, _0x6f7921);
  _0x33cbe3 = _0x6f7921 - _0x38aa5c;
  for (_0x1e427e = _0x582930; _0x1e427e > _0x45342e; _0x1e427e -= _0xc0c600) {
    a0_0x4ef4f3.lineTo(_0x1e427e, Math.min(_0x1ae553, Math.max(_0xe27c4f, _0x33cbe3 + _0x22740f[_0x51c825])));
    _0x51c825 = (_0x51c825 + 1) % _0x22740f.length;
  }
  a0_0x4ef4f3.closePath();
  a0_0x4ef4f3.fill();
};
a0_0x428d2a.prototype.getBiomeColor = function () {
  if (this.forceBiomeColor) {
    return this.biomeColor;
  }
  switch (this.biome) {
    case a0_0x6632a8:
      return a0_0x2b43c5;
    case a0_0x30fa27:
      return "#c4dee7";
    case a0_0x2cd8a2:
      return a0_0x402859;
    case a0_0x4459f0:
      return a0_0x5e88d6;
    case a0_0x37feb7:
      return a0_0x2df79b;
    case a0_0x26b566:
      return a0_0x54589b;
    default:
      return a0_0x2df79b;
  }
};
a0_0x428d2a.prototype.jaggedSides = null;
a0_0x428d2a.prototype.forceBiomeColor = false;
a0_0x428d2a.prototype.readCustomData_onNewlyVisible = function (_0x377a31) {
  this.isRect = _0x377a31.readUInt8() == 1;
  this.biomeColor = _0x377a31.readString();
  this.biome = _0x377a31.readUInt16();
  var _0x3598e3 = _0x377a31.readBitGroup();
  this.forceBiomeColor = _0x3598e3.getBool();
  if (this.isRect) {
    this.jaggedSides = [_0x3598e3.getBool(), _0x3598e3.getBool(), _0x3598e3.getBool(), _0x3598e3.getBool()];
  }
  if (!this.isRect) {
    this.jaggedPointsForCircle(0, 0, this.rad, 40, 5, this.biomeColor, "#DAB601");
  } else {
    this.jaggedRect = [];
    var _0x186961 = 0;
    var _0x4b5092 = 1;
    var _0x289e42 = 2;
    var _0x138533 = 3;
  }
  this.drawGrid = a0_0x1d703e !== a0_0x30b084;
  if (this.isRect && this.biome != a0_0x6632a8) {
    this.generateTerrainFeatures();
  }
};
a0_0x428d2a.prototype.biomePattern = null;
a0_0x428d2a.prototype.generateTerrainFeatures = function () {
  var _0x4d7268 = 100;
  var _0x2906fd = 100;
  var _0x4dbab7 = 1.5;
  if (this.biome == a0_0x2cd8a2) {
    _0x4d7268 = 125;
    _0x2906fd = 125;
    _0x4dbab7 = 1.5;
  } else if (this.biome == a0_0x26b566) {
    _0x4d7268 = 75;
    _0x2906fd = 75;
    _0x4dbab7 = 2;
  }
  var _0x5ed157 = 1;
  var _0x3d1c1b = -this.getRectWidth() / 2 + _0x4d7268;
  var _0x5df5c2 = -this.getRectHeight() / 2 + _0x2906fd;
  var _0x383a44 = this.getRectWidth() / 2;
  var _0x136bfc = this.getRectHeight() / 2;
  var _0xcfac9a = _0x4d7268 * (this.biome == a0_0x26b566 ? 2 : 3);
  var _0x356fab = 0;
  var _0x442a62 = [];
  for (; _0x3d1c1b < _0x383a44 - _0x4d7268; _0x3d1c1b++) {
    if (_0x5ed157 == 1) {
      var _0xe4793d = {
        x: _0x3d1c1b,
        y: _0x5df5c2,
        rx: _0x3d1c1b + _0x4d7268 * a0_0x1da5bb(-0.25, 0.25),
        ry: _0x5df5c2 + _0x2906fd * a0_0x1da5bb(-0.25, 0.25),
        w: _0x4d7268 * _0x4dbab7,
        h: _0x2906fd * _0x4dbab7,
        c: "blue",
        img: this.getRandomPatternImg(),
        r: a0_0x1da5bb(0, 180)
      };
      if (_0xe4793d.img < 0) {
        _0xe4793d.img = 0;
      }
      _0x442a62.push(_0xe4793d);
    }
    _0x3d1c1b += _0xcfac9a;
    if (_0x3d1c1b >= _0x383a44 - _0x4d7268) {
      _0x5df5c2 += _0xcfac9a;
      if (this.biome != a0_0x37feb7 && this.biome != a0_0x26b566) {
        _0x5ed157 = _0x5ed157 == 0 ? 1 : 0;
      }
      _0x3d1c1b = -this.getRectWidth() / 2 + _0x4d7268;
    }
    if (this.biome != a0_0x37feb7 && this.biome != a0_0x26b566) {
      _0x5ed157 = _0x5ed157 == 0 ? 1 : 0;
    } else {
      _0x5ed157 = _0x5ed157 == 0 ? 1 : 0;
    }
    if (this.biome == a0_0x37feb7) {
      _0x5ed157 = 1;
    }
    if (_0x5df5c2 > _0x136bfc - _0x2906fd) {
      break;
    }
  }
  this.biomePattern = _0x442a62;
};
a0_0x428d2a.prototype.drawTerrainFeatures = function () {};
a0_0x428d2a.prototype.fillPattern = function (_0x3da838) {
  var _0x270f88 = this.curBiome + "_" + _0x3da838;
  var _0x18d37f = "gameobj/" + this.oType + "/" + _0x270f88 + ".jpg";
  var _0x3c2687 = this.getSkinImageObj(_0x18d37f);
  if (_0x3c2687) {
    var _0x51a968 = -this.getRectWidth() / 2;
    var _0x2ce4f7 = -this.getRectHeight() / 2;
    var _0x5740d8 = this.getRectWidth() * 2;
    var _0x1f07b9 = this.getRectHeight() * 2;
    var _0xedda = a0_0x4ef4f3.createPattern(_0x3c2687, "repeat");
    a0_0x4ef4f3.fillStyle = _0xedda;
    a0_0x4ef4f3.fillRect(_0x51a968, _0x2ce4f7, _0x5740d8, _0x1f07b9);
  }
};
a0_0x428d2a.prototype.drawRectObj = function (_0x56fad3) {
  var _0x4108ee = this.curBiome + "_" + _0x56fad3.img;
  var _0x1e4b55 = "gameobj/" + this.oType + "/" + _0x4108ee + ".png";
  var _0x491a45 = this.getSkinImageObj(_0x1e4b55);
  if (_0x491a45) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.translate(_0x56fad3.rx, _0x56fad3.ry);
    if (this.biome == a0_0x37feb7 || this.biome == a0_0x30fa27 && _0x56fad3.img == 1 || this.biome == a0_0x2cd8a2 && _0x56fad3.img > 1) {
      a0_0x4ef4f3.rotate(_0x56fad3.r);
    }
    a0_0x4ef4f3.drawImage(_0x491a45, 0, 0, _0x56fad3.w, _0x56fad3.h);
    a0_0x4ef4f3.restore();
  }
};
a0_0x428d2a.prototype.getRandomPatternImg = function () {
  var _0x2caed7 = 1;
  if (this.biome == a0_0x37feb7 || this.biome == a0_0x30fa27) {
    _0x2caed7 = Math.max(0, Math.round(a0_0x1da5bb(0, 3)));
  } else if (this.biome == a0_0x26b566) {
    _0x2caed7 = 1;
  } else {
    _0x2caed7 = Math.max(0, Math.round(a0_0x1da5bb(0, 2)));
  }
  return _0x2caed7 - 1;
};
function a0_0x428d2a() {
  a0_0x428d2a.superClass.call(this, a0_0x497ac8);
}
window.BiomeShape = a0_0x428d2a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x428d2a, a0_0x497ac8);
var a0_0x58d04c = a0_0x12658e;
a0_0x1fc888.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1fc888.prototype.constructor = a0_0x1fc888;
a0_0x1fc888.superClass = a0_0x58d04c;
a0_0x1fc888.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x1fc888.prototype.customDraw = function (_0x23bbfa) {
  var _0x31e8b0 = this.getSkinImageObj("img/wave.png");
  if (_0x31e8b0) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = this.alpha < 0.7 ? this.alpha : 1;
    var _0x235a33 = this.rad * 1;
    a0_0x4ef4f3.rotate(this.angle + a0_0x844a6b(180));
    a0_0x4ef4f3.drawImage(_0x31e8b0, -_0x235a33, -_0x235a33, _0x235a33 * 2, _0x235a33 * 2);
    a0_0x4ef4f3.restore();
  }
};
a0_0x1fc888.prototype.readCustomData_onNewlyVisible = function (_0x367e63) {
  this.alpha = _0x367e63.readUInt8() / 100;
};
a0_0x1fc888.prototype.readUpdatedProperty = function (_0x2652e2, _0x50875e) {
  if (_0x2652e2 == a0_0x10c2f0) {
    this.alpha = _0x50875e.readUInt8() / 100;
  }
};
var a0_0x1ef3a5 = 148;
function a0_0x1fc888() {
  a0_0x1fc888.superClass.call(this, a0_0x1ef3a5);
}
window.OceanWave = a0_0x1fc888;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1fc888, a0_0x1ef3a5);
var a0_0x58d04c = a0_0x12658e;
a0_0x94e1a0.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x94e1a0.prototype.constructor = a0_0x94e1a0;
a0_0x94e1a0.superClass = a0_0x58d04c;
a0_0x94e1a0.prototype.updateZ = function () {
  this.z = -294;
};
a0_0x94e1a0.prototype.customDraw = function (_0x18a57a) {};
a0_0x94e1a0.prototype.readCustomData_onNewlyVisible = function (_0x42fe71) {
  this.alpha = _0x42fe71.readUInt8() / 100;
};
a0_0x94e1a0.prototype.readUpdatedProperty = function (_0x82193, _0x2637a3) {
  if (_0x82193 == a0_0x10c2f0) {
    this.alpha = _0x2637a3.readUInt8() / 100;
  }
};
var a0_0x27b4eb = 149;
function a0_0x94e1a0() {
  a0_0x94e1a0.superClass.call(this, a0_0x27b4eb);
}
window.UnderwaterFish = a0_0x94e1a0;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x94e1a0, a0_0x27b4eb);
var a0_0x58d04c = a0_0x12658e;
a0_0x280f12.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x280f12.prototype.constructor = a0_0x280f12;
a0_0x280f12.superClass = a0_0x58d04c;
a0_0x280f12.prototype.updateZ = function () {
  this.z = this.rad + 100;
};
a0_0x280f12.prototype.setSkinPath = function () {
  var _0x2a8e63 = this.oType + "_" + this.speciesSubType;
  this.objSkinPath = "gameobj/" + this.oType + "/" + _0x2a8e63 + "_" + this.hasPopped + ".png";
};
a0_0x280f12.prototype.customDraw = function (_0x3c4216) {};
a0_0x280f12.prototype.hasPopped = 0;
a0_0x280f12.prototype.readUpdatedProperty = function (_0x110dc1, _0x2383f9) {
  if (_0x110dc1 == a0_0x27f3ba) {
    this.hasPopped = _0x2383f9.readUInt8();
  }
};
var a0_0x415f7c = 151;
function a0_0x280f12() {
  a0_0x280f12.superClass.call(this, a0_0x415f7c);
}
window.Bubbles = a0_0x280f12;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x280f12, a0_0x415f7c);
var a0_0x58d04c = a0_0x12658e;
a0_0x411098.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x411098.prototype.constructor = a0_0x411098;
a0_0x411098.superClass = a0_0x58d04c;
a0_0x411098.prototype.updateZ = function () {
  this.z = -150;
};
a0_0x411098.prototype.customDraw = function (_0x58f1a0) {
  var _0x2ca242 = 1;
  var _0x37a0c3 = 1;
  if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
    var _0x2a8407 = (a0_0x4f736f - this.spawnTime) / 1000;
    var _0x4630a0 = 1.2;
    _0x2ca242 = Math.cos(Math.PI * 2 / _0x4630a0 * _0x2a8407) * 3.5;
    _0x37a0c3 = Math.sin(Math.PI * 2 / _0x4630a0 * _0x2a8407) * 2.5;
  }
  this.drawOutlinedCircleRad("", "#4A549D", this.innerRad);
  if (a0_0x1d703e != a0_0x30b084) {
    a0_0x5c99c1(0 + _0x2ca242 / 2 - this.rPer, 0 + _0x37a0c3 / 2 - this.rPer, Math.max(0, this.innerRad - 6), "#444C8B");
  }
  a0_0x5c99c1(0 + _0x2ca242 / 4.5 + this.rPer, 1 + _0x37a0c3 / 1.5, Math.max(0, this.innerRad - 14), "#4A549D");
  a0_0x5c99c1(0 + _0x2ca242 / 1.5 - this.rPer * 2, _0x37a0c3, Math.max(0, this.innerRad - 18.5 + _0x37a0c3 / 5), "#3F4477");
  a0_0x5c99c1(0 + _0x2ca242 / 1.5 - this.rPer * 2, _0x37a0c3, Math.max(0, this.innerRad - 22.5 + _0x37a0c3 / 11), "#353860");
  var _0x11caf6 = a0_0x3d5ac5[a0_0x1c918d];
  if (_0x11caf6 && _0x11caf6.lastHidingHoleID == this.id) {
    if (this.alpha == undefined) {
      this.alpha = 0;
    }
    if (_0x11caf6.flag_inHidingHole) {
      this.alpha += (0.1 + this.alpha) * 0.1;
    } else {
      this.alpha -= this.alpha * 0.1;
    }
    if (this.alpha > 1) {
      this.alpha = 1;
    } else if (this.alpha < 0) {
      this.alpha = 0;
    }
    a0_0x4ef4f3.globalAlpha = this.alpha;
    var _0x4fc2a2 = this.rad;
    this.drawOutlinedCircle("", "#4A549D", _0x4fc2a2);
    if (a0_0x1d703e != a0_0x30b084) {
      a0_0x5c99c1(0 + _0x2ca242 / 2 - this.rPer, 0 + _0x37a0c3 / 2 - this.rPer, Math.max(0, _0x4fc2a2 - 6), "#444C8B");
    }
    a0_0x5c99c1(0 + _0x2ca242 / 4.5 + this.rPer, 1 + _0x37a0c3 / 1.5, Math.max(0, _0x4fc2a2 - 14), "#4A549D");
    _0x4fc2a2 = _0x4fc2a2 * 0.9;
    a0_0x4ef4f3.globalAlpha = this.alpha * 0.6;
    a0_0x5c99c1(0 + _0x2ca242 / 3.5 - this.rPer * 2, _0x37a0c3, Math.max(0, _0x4fc2a2 - 18.5 + _0x37a0c3 / 5), "#3F4477");
    _0x4fc2a2 = _0x4fc2a2 * 0.7;
    a0_0x4ef4f3.globalAlpha = this.alpha * 0.3;
    a0_0x5c99c1(0 + _0x2ca242 / 6.5 - this.rPer * 2, _0x37a0c3, Math.max(0, _0x4fc2a2 - 22.5 + _0x37a0c3 / 11), "#353860");
  }
};
function a0_0x411098() {
  a0_0x411098.superClass.call(this, a0_0x1344db);
  this.doesDrawEffectScale = false;
  this.drawEffectScale_Slow = false;
}
window.OceanHidinghole = a0_0x411098;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x411098, a0_0x1344db);
var a0_0x58d04c = a0_0x12658e;
a0_0x53d8ad.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x53d8ad.prototype.constructor = a0_0x53d8ad;
a0_0x53d8ad.superClass = a0_0x58d04c;
a0_0x53d8ad.prototype.playerID = 0;
a0_0x53d8ad.prototype.shellState = 0;
a0_0x53d8ad.prototype.cracksCount = 0;
a0_0x53d8ad.prototype.updateZ = function () {
  if (this.shellState == 0) {
    this.z = this.rad;
  } else {
    this.z = -153;
  }
};
a0_0x53d8ad.prototype.isEdibleOutlined = function () {
  if (this.playerID == a0_0x1c918d) {
    return false;
  }
  return a0_0x5ebad0.superClass.prototype.isEdibleOutlined.call(this);
};
a0_0x53d8ad.prototype.nextShakeEndT = 0;
a0_0x53d8ad.prototype.nextShakeStartT = 0;
a0_0x53d8ad.prototype.drawScaleEffect = function () {
  if (this.shellState != 1) {
    this.drawNickName(1);
  }
  if (this.shellState == 0) {
    if (a0_0x4f736f > this.nextShakeEndT) {
      this.nextShakeEndT = +new Date() + a0_0x1da5bb(2500, 4500);
      this.nextShakeStartT = this.nextShakeEndT - a0_0x1da5bb(1000, 1500);
    }
    if (a0_0x4f736f > this.nextShakeStartT && a0_0x4f736f < this.nextShakeEndT) {
      var _0xb47528 = 0.02;
      var _0x36873d = (a0_0x4f736f - this.spawnTime) / 1000;
      var _0xfc32bd = 0.1;
      var _0x1ffc99 = this.rad * _0xb47528;
      var _0x55ff6d = _0x1ffc99 * Math.sin(Math.PI * 2 / _0xfc32bd * _0x36873d);
      var _0xfc32bd = 0.15;
      var _0x1ffc99 = this.rad * _0xb47528;
      var _0x3d37f7 = _0x1ffc99 * Math.cos(Math.PI * 2 / _0xfc32bd * _0x36873d);
      a0_0x4ef4f3.translate(-_0x55ff6d, -_0x3d37f7);
    }
  }
};
a0_0x53d8ad.prototype.customDraw = function (_0xd8c6f0) {
  var _0x47f540 = "upgradeshell";
  if (this.shellState == 0) {
    if (this.cracksCount > 0 && this.cracksCount <= 10) {
      _0x47f540 = "egg_crack" + this.cracksCount;
    } else {
      _0x47f540 += "" + this.shellState;
    }
  } else {
    _0x47f540 += "" + this.shellState;
  }
  var _0x42e998 = this.getSkinImageObj("img/upgradeshell/" + _0x47f540 + ".png");
  var _0x1ecaea = this.getSkinImageObj("img/upgradeshell/outline" + this.curBiome + ".png");
  var _0x24471d = this.rad;
  var _0x3ccd47 = this.rPer * Math.PI * 2;
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(_0x3ccd47);
  if (_0x42e998) {
    a0_0x4ef4f3.drawImage(_0x42e998, -_0x24471d, -_0x24471d * 1.1, _0x24471d * 2, _0x24471d * 2.2);
    if (this.shellState == 0 && _0x1ecaea) {
      a0_0x4ef4f3.drawImage(_0x1ecaea, -_0x24471d, -_0x24471d * 1.1, _0x24471d * 2, _0x24471d * 2.21);
    }
  }
  a0_0x4ef4f3.restore();
};
a0_0x53d8ad.prototype.getNameSize = function () {
  return 6;
};
a0_0x53d8ad.prototype.setNick = function (_0x3725f1) {
  this.nickName = _0x3725f1;
  if (this.nickTXT == null) {
    this.nickTXT = new a0_0x3d10bd(this.getNameSize(), "#FFFFFF");
    this.nickTXT.strokeW = 1.5;
    this.nickTXT.renderScale = 5;
    this.nickTXT.setText(this.nickName);
  } else {
    this.nickTXT.setFontSize(this.getNameSize());
    this.nickTXT.setText(this.nickName);
  }
};
a0_0x53d8ad.prototype.drawNickName = function (_0x4fe96c) {
  if (this.nickName && this.nickTXT && !a0_0x36b495) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = _0x4fe96c;
    this.nickTXT.x = 0;
    this.nickTXT.y = this.rad + 5;
    this.nickTXT.draw();
    a0_0x4ef4f3.restore();
  }
};
a0_0x53d8ad.prototype.readCustomData_onNewlyVisible = function (_0x3f7482) {
  a0_0x53d8ad.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x3f7482);
  this.playerID = _0x3f7482.readUInt32();
  if (this.playerID > 0) {
    var _0x4e5bf9 = _0x3f7482.readString();
    this.setNick(_0x4e5bf9 ? _0x4e5bf9 : "mope.io");
  }
  this.readUpdatedProperty(a0_0x4a19f0, _0x3f7482);
  this.readUpdatedProperty(a0_0x5969f9, _0x3f7482);
};
a0_0x53d8ad.prototype.readUpdatedProperty = function (_0x19bef9, _0x2722ff) {
  if (_0x19bef9 == a0_0x4a19f0) {
    this.shellState = _0x2722ff.readUInt8();
  } else if (_0x19bef9 == a0_0x5969f9) {
    this.cracksCount = _0x2722ff.readUInt8();
  }
};
var a0_0x260492 = 152;
function a0_0x53d8ad() {
  a0_0x53d8ad.superClass.call(this, a0_0x260492);
}
window.UpgradeShell = a0_0x53d8ad;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x53d8ad, a0_0x260492);
var a0_0x58d04c = a0_0x12658e;
a0_0x26ffc5.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x26ffc5.prototype.constructor = a0_0x26ffc5;
a0_0x26ffc5.superClass = a0_0x58d04c;
a0_0x26ffc5.prototype.playerID = 0;
a0_0x26ffc5.prototype.shellState = 0;
a0_0x26ffc5.prototype.cracksCount = 0;
a0_0x26ffc5.prototype.updateZ = function () {
  this.z = 100000;
};
a0_0x26ffc5.prototype.customDraw = function (_0x5d60b7) {
  switch (this.speciesType) {
    case a0_0x260492:
      {
        var _0x7e60d6 = this.getSkinImageObj("img/upgradeshell/shellpart" + this.speciesSubType + ".png");
        var _0x1cee71 = this.rad;
        var _0x211b78 = this.rPer * Math.PI * 2;
        if (_0x7e60d6) {
          a0_0x4ef4f3.save();
          a0_0x4ef4f3.rotate(_0x211b78);
          a0_0x4ef4f3.drawImage(_0x7e60d6, -_0x1cee71, -_0x1cee71, _0x1cee71 * 2, _0x1cee71 * 2);
          a0_0x4ef4f3.restore();
        }
        break;
      }
    default:
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 0.1;
      a0_0x5c99c1(0, 0, this.rad, "black");
      a0_0x4ef4f3.restore();
      break;
  }
};
var a0_0xf28cf7 = 153;
function a0_0x26ffc5() {
  a0_0x26ffc5.superClass.call(this, a0_0xf28cf7);
}
window.Particle = a0_0x26ffc5;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x26ffc5, a0_0xf28cf7);
var a0_0x2011f1 = a0_0x17156d;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x17156d.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x17156d.prototype.customDraw = function (_0x489af8) {
  this.drawEffectScale_Slow = true;
  this.doesDrawEffectScale = true;
  a0_0x4ef4f3.globalAlpha = 0.2;
  a0_0x5c99c1(0, 0, this.rad * 0.85, "white");
  var _0x23a531 = this.isGreenTarget ? "_e" : "";
  var _0x45f9a5 = this.getSkinImageObj("img/target" + _0x23a531 + ".png");
  if (_0x45f9a5) {
    var _0x1f5410 = this.rad;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = 0.5;
    a0_0x4ef4f3.drawImage(_0x45f9a5, -_0x1f5410, -_0x1f5410, _0x1f5410 * 2, _0x1f5410 * 2);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.save();
  if (this.hasTimer && this.timerTxt != null) {
    a0_0x4ef4f3.globalAlpha = 1;
    this.timerTxt.x = 0;
    this.timerTxt.y = 0;
    this.timerTxt.draw();
  }
  a0_0x4ef4f3.restore();
};
a0_0x17156d.prototype.worldUpd_readMsgNewlyVisible = function (_0x224e35, _0x4aa2b3, _0x1a11b2) {
  this.setObjTypes(_0x4aa2b3, _0x1a11b2);
  this.id = _0x224e35.readUInt32();
  var _0x195865 = _0x224e35.readUInt16() / 4;
  var _0x23abda = _0x224e35.readUInt16() / 4;
  var _0x158d61 = _0x224e35.readUInt16() / 4;
  this.ox = this.x = this.nx = _0x23abda;
  this.oy = this.y = this.ny = _0x158d61;
  this.nRad = _0x195865;
  this.oRad = this.rad = 0;
  this.setMovedToPos(_0x23abda, _0x158d61);
  this.setNewRad(_0x195865);
  this.hasTimer = _0x224e35.readUInt8() == 1;
  this.readUpdatedProperty(a0_0x46b48e, _0x224e35);
  this.readUpdatedProperty(a0_0x403267, _0x224e35);
  this.mopeSeasonID = 1;
};
a0_0x17156d.prototype.readUpdatedProperty = function (_0x4f8cd8, _0x31dcd7) {
  if (_0x4f8cd8 == a0_0x560144) {
    this.timer = _0x31dcd7.readUInt16() / 100;
    if (this.timer < 30) {
      this.updateTimer();
    }
  } else if (_0x4f8cd8 == a0_0x403267) {
    this.targetText = _0x31dcd7.readString();
    this.hasTimer = true;
    this.setTimer(this.targetText);
  } else if (_0x4f8cd8 == a0_0x196eb0) {
    this.hasVictim = true;
    var _0x3551e2 = _0x31dcd7.readUInt16() / 4;
    var _0x5e95e0 = _0x31dcd7.readUInt16() / 4;
    this.spider_ox = this.victimX;
    this.spider_oy = this.victimY;
    this.spider_nx = _0x3551e2;
    this.spider_ny = _0x5e95e0;
  } else if (_0x4f8cd8 == a0_0x46b48e) {
    this.isGreenTarget = _0x31dcd7.readUInt8() == 1;
  }
};
a0_0x17156d.prototype.isGreenTarget = false;
a0_0x17156d.prototype.hasVictim = false;
a0_0x17156d.prototype.victimX = null;
a0_0x17156d.prototype.victimY = null;
a0_0x17156d.prototype.onLerpUpdate = function (_0x51b5d5) {
  if (this.hasVictim) {
    this.victimX = _0x51b5d5 * (this.spider_nx - this.spider_ox) + this.spider_ox;
    this.victimY = _0x51b5d5 * (this.spider_ny - this.spider_oy) + this.spider_oy;
  }
};
a0_0x17156d.prototype.beforeCustomDraw = function (_0x4beb0e) {
  if (this.hasVictim) {
    console.log("beforeCustomDraw");
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.strokeStyle = "white";
    a0_0x4ef4f3.globalAlpha = 1;
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.moveTo(this.x, this.y);
    a0_0x4ef4f3.lineTo(this.victimX, this.victimY);
    a0_0x4ef4f3.stroke();
    a0_0x4ef4f3.restore();
  }
};
a0_0x17156d.prototype.updateTimer = function () {
  this.timer = Math.round(this.timer);
  var _0x120bf5 = this.timer;
  this.setTimer(_0x120bf5);
};
a0_0x17156d.prototype.timerTxt = null;
a0_0x17156d.prototype.setTimer = function (_0x171d38) {
  var _0xfb6079 = "" + _0x171d38;
  if (this.timerTxt == null) {
    this.timerTxt = new a0_0x3d10bd(20, "#FFFFFF");
    this.timerTxt.strokeW = 2;
    this.timerTxt.multiLine = true;
    this.timerTxt.renderScale = 5;
    this.timerTxt.setText(_0xfb6079);
  } else {
    this.timerTxt.setFontSize(20);
    this.timerTxt.setText(_0xfb6079);
  }
};
function a0_0x17156d() {
  a0_0x17156d.superClass.call(this);
}
window.TargetCircle = a0_0x17156d;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x17156d, a0_0x20e6c5, a0_0x1733da);
var a0_0x58d04c = a0_0x12658e;
a0_0x290c20.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x290c20.prototype.constructor = a0_0x290c20;
a0_0x290c20.superClass = a0_0x58d04c;
a0_0x290c20.prototype.stoneIncentive = 0;
a0_0x290c20.prototype.teamID = 0;
a0_0x290c20.prototype.lastHurtByTeamID = 0;
a0_0x290c20.prototype.coolDownTime = 0;
a0_0x290c20.prototype.isDefended = false;
a0_0x290c20.prototype.updateZ = function () {
  this.z = 1002;
};
a0_0x290c20.prototype.customDraw = function (_0x28c375) {
  let _0x29dcd7 = this.teamID;
  if (this.teamID == 0) {
    if (this.lastHurtByTeamID != 0) {
      _0x29dcd7 += "_" + this.lastHurtByTeamID;
    } else if (this.coolDownTime > 0.1) {
      _0x29dcd7 += "_0";
    }
  }
  var _0x84bfd2 = this.getSkinImageObj("gameobj/" + this.oType + "/stone" + _0x29dcd7 + ".png");
  if (_0x84bfd2) {
    var _0x2919c1 = this.rad * 1.25;
    a0_0x4ef4f3.drawImage(_0x84bfd2, -_0x2919c1, -_0x2919c1, _0x2919c1 * 2, _0x2919c1 * 2);
  }
  if (!this.isDefended) {
    var _0x1eadb0 = this.getSkinImageObj("gameobj/" + this.oType + "/stone_undefended.png");
    if (_0x1eadb0) {
      var _0x2919c1 = this.rad * 1.25;
      a0_0x4ef4f3.drawImage(_0x1eadb0, -_0x2919c1, -_0x2919c1, _0x2919c1 * 2, _0x2919c1 * 2);
    }
  }
  var _0xfd6761 = this.getSkinImageObj("gameobj/" + this.oType + "/incentive/" + this.stoneIncentive + ".png");
  if (_0xfd6761) {
    var _0x2919c1 = this.rad / 4;
    a0_0x4ef4f3.drawImage(_0xfd6761, -_0x2919c1, -_0x2919c1, _0x2919c1 * 2, _0x2919c1 * 2);
  }
};
a0_0x290c20.prototype.setIncentiveText = function () {
  if (this.incentiveTxt == null) {
    this.incentiveTxt = new a0_0x3d10bd(10, "#FFFFFF");
    this.incentiveTxt.strokeW = 1.5;
    this.incentiveTxt.multiLine = true;
    this.incentiveTxt.renderScale = 5;
    this.incentiveTxt.setText(this.nickName);
  } else {
    this.incentiveTxt.setFontSize(10);
    this.incentiveTxt.multiLine = true;
    let _0x158a1f = "";
    if (this.coolDownTime > 0.1) {
      _0x158a1f = "\ncooldown: " + this.coolDownTime + "s";
    }
    this.incentiveTxt.setText(this.nickName + _0x158a1f);
  }
};
a0_0x290c20.prototype.drawIncentiveText = function (_0x2f6329) {
  if (this.incentiveTxt && !a0_0x36b495) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.globalAlpha = _0x2f6329;
    this.incentiveTxt.x = -this.rad / 2;
    this.incentiveTxt.y = -this.rad / 2;
    this.incentiveTxt.draw();
    a0_0x4ef4f3.restore();
  }
};
a0_0x290c20.prototype.readCustomData_onNewlyVisible = function (_0x35049d) {
  a0_0x290c20.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x35049d);
  this.stoneIncentive = _0x35049d.readUInt8();
  this.readUpdatedProperty(a0_0x5b4728, _0x35049d);
  this.readUpdatedProperty(a0_0x41580c, _0x35049d);
  this.readUpdatedProperty(a0_0x39b6fe, _0x35049d);
  this.readUpdatedProperty(a0_0x1ba735, _0x35049d);
};
a0_0x290c20.prototype.readUpdatedProperty = function (_0x3664ea, _0x5064eb) {
  if (_0x3664ea == a0_0x5b4728) {
    this.teamID = _0x5064eb.readUInt8();
  } else if (_0x3664ea == a0_0x41580c) {
    this.lastHurtByTeamID = _0x5064eb.readUInt8();
  } else if (_0x3664ea == a0_0x1ba735) {
    this.isDefended = _0x5064eb.readUInt8() == 1;
  } else if (_0x3664ea == a0_0x39b6fe) {
    this.coolDownTime = _0x5064eb.readUInt16() / 100;
  }
};
a0_0x290c20.prototype.onHurt = function () {};
var a0_0x44bd21 = 78;
function a0_0x290c20() {
  a0_0x290c20.superClass.call(this, a0_0x44bd21);
}
window.TeamStone = a0_0x290c20;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x290c20, a0_0x44bd21);
const a0_0x33d7f1 = 1;
const a0_0x2ad259 = 2;
const a0_0x558f45 = 3;
const a0_0x1a995b = 4;
const a0_0x373321 = 5;
const a0_0x3374a6 = 6;
const a0_0x50ab90 = 7;
const a0_0x12e087 = 8;
const a0_0x2b497b = 9;
const a0_0x51d493 = 10;
const a0_0x2350ef = 11;
const a0_0x52e919 = 12;
const a0_0x1c0402 = 13;
var a0_0x58d04c = a0_0x12658e;
a0_0x3867b6.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x3867b6.prototype.constructor = a0_0x3867b6;
a0_0x3867b6.superClass = a0_0x58d04c;
a0_0x3867b6.prototype.updateZ = function () {
  this.z = this.hasImpact ? this.rad : 100000000000;
};
let a0_0x1457a9 = 1.5;
a0_0x3867b6.prototype.frame = 0;
a0_0x3867b6.prototype.customDraw = function (_0x3c31d7) {
  if (!this.hasImpact) {
    this.frame = Math.trunc(a0_0x4f736f / 120) % 6;
  } else {
    this.frame = 0;
  }
  var _0x54a28c = "gameobj/" + this.oType + "/" + this.oType + "_" + this.frame + ".png";
  var _0x56f68a = this.getSkinImageObj(_0x54a28c);
  if (_0x56f68a) {
    a0_0x4ef4f3.save();
    var _0x456f0f = this.rad * 2;
    if (!this.hasImpact) {
      a0_0x4ef4f3.shadowColor = "rgba(0,0,0,0.05)";
      a0_0x4ef4f3.shadowBlur = 0;
      a0_0x4ef4f3.shadowOffsetX = this.shadowDistance;
      a0_0x4ef4f3.shadowOffsetY = this.shadowDistance;
      a0_0x4ef4f3.rotate(this.angle);
      a0_0x4ef4f3.drawImage(_0x56f68a, -_0x456f0f / 2, -_0x456f0f * a0_0x1457a9, _0x456f0f, _0x456f0f * 2);
    } else {
      _0x54a28c = "gameobj/" + this.oType + "/meteorite.png";
      _0x56f68a = null;
      _0x56f68a = this.getSkinImageObj(_0x54a28c);
      if (_0x56f68a) {
        a0_0x4ef4f3.rotate(this.angle);
        _0x456f0f = this.rad;
        a0_0x4ef4f3.drawImage(_0x56f68a, -_0x456f0f, -_0x456f0f, _0x456f0f * 2, _0x456f0f * 2);
      }
    }
    a0_0x4ef4f3.restore();
  }
};
a0_0x3867b6.prototype.readCustomData_onNewlyVisible = function (_0x30aa44) {
  a0_0x3867b6.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x30aa44);
  this.readUpdatedProperty(a0_0x2d5395, _0x30aa44);
  this.readUpdatedProperty(a0_0x5a5765, _0x30aa44);
};
a0_0x3867b6.prototype.shadowDistance = 0;
a0_0x3867b6.prototype.hasImpact = false;
a0_0x3867b6.prototype.readUpdatedProperty = function (_0x1737e5, _0x53ffab) {
  if (_0x1737e5 == a0_0x5a5765) {
    let _0xe1b7c7 = _0x53ffab.readUInt16() / 10;
    this.shadowDistance = _0xe1b7c7;
  } else if (_0x1737e5 == a0_0x2d5395) {
    this.hasImpact = _0x53ffab.readUInt8() == 1;
  }
};
const a0_0x4bdecc = 154;
function a0_0x3867b6() {
  a0_0x3867b6.superClass.call(this, a0_0x4bdecc);
}
window.Meteor = a0_0x3867b6;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x3867b6, a0_0x4bdecc);
var a0_0x58d04c = a0_0x12658e;
a0_0x2d18b8.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2d18b8.prototype.constructor = a0_0x2d18b8;
a0_0x2d18b8.superClass = a0_0x58d04c;
a0_0x2d18b8.prototype.updateZ = function () {
  this.z = -101;
};
a0_0x2d18b8.prototype.customDraw = function (_0x2a8755) {
  skin = "gameobj/" + this.oType + "/" + this.oType + ".png";
  var _0x184b94 = this.getSkinImageObj(skin);
  if (_0x184b94) {
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle);
    rad = this.rad * 1.5;
    a0_0x4ef4f3.drawImage(_0x184b94, -rad, -rad, rad * 2, rad * 2);
    a0_0x4ef4f3.restore();
  }
};
const a0_0x4e84ba = 155;
function a0_0x2d18b8() {
  a0_0x2d18b8.superClass.call(this, a0_0x4e84ba);
}
window.MeteorCrater = a0_0x2d18b8;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2d18b8, a0_0x4e84ba);
var a0_0x58d04c = a0_0x12658e;
a0_0x10baca.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x10baca.prototype.constructor = a0_0x10baca;
a0_0x10baca.superClass = a0_0x58d04c;
a0_0x10baca.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x10baca.prototype.customDraw = function (_0x44a1b5) {
  this.frame = Math.trunc(a0_0x4f736f / 120) % 5;
  var _0x25ae07 = "gameobj/" + this.oType + "/" + this.oType + "_" + this.frame + ".png";
  var _0x39ad46 = this.getSkinImageObj(_0x25ae07);
  if (_0x39ad46) {
    var _0x4c7f54 = this.rad;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x39ad46, -_0x4c7f54, -_0x4c7f54, _0x4c7f54 * 2, _0x4c7f54 * 2);
    a0_0x4ef4f3.restore();
  }
};
const a0_0x14808a = 157;
function a0_0x10baca() {
  a0_0x10baca.superClass.call(this, a0_0x14808a);
}
window.MeteorShockwave = a0_0x10baca;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x10baca, a0_0x14808a);
const a0_0x247098 = 0;
const a0_0x51809a = 1;
const a0_0x491051 = 2;
const a0_0x2db0df = 3;
var a0_0x58d04c = a0_0x12658e;
a0_0x2fd963.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2fd963.prototype.constructor = a0_0x2fd963;
a0_0x2fd963.superClass = a0_0x58d04c;
a0_0x2fd963.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x2fd963.prototype.customDraw = function (_0x4d04b8) {
  var _0x5ab4fb = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.oType + "_" + this.speciesType + (this.isEdibleOutlined() ? "_e" : "") + ".png");
  if (_0x5ab4fb) {
    var _0x241935 = this.rad;
    a0_0x4ef4f3.drawImage(_0x5ab4fb, -_0x241935, -_0x241935, _0x241935 * 2, _0x241935 * 2);
  }
};
var a0_0xb2c922 = 158;
a0_0x2fd963.prototype.readCustomData_onNewlyVisible = function (_0x303147) {
  a0_0x2fd963.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x303147);
  this.speciesType = _0x303147.readUInt16();
  this.speciesSubType = _0x303147.readUInt16();
};
function a0_0x2fd963() {
  a0_0x2fd963.superClass.call(this, a0_0xb2c922);
}
window.HalloweenFood = a0_0x2fd963;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2fd963, a0_0xb2c922);
var a0_0x2bd3cd = a0_0x2bd3cd;
var a0_0x58d04c = a0_0x45645e;
a0_0x2bd3cd.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2bd3cd.prototype.constructor = a0_0x2bd3cd;
a0_0x2bd3cd.superClass = a0_0x58d04c;
a0_0x2bd3cd.prototype.animalInfo = function () {
  var _0x5c055e = {};
  switch (this.animalSpecies) {
    case 0:
      _0x5c055e.aniName = "Swinehoe";
      break;
    case 1:
      _0x5c055e.aniName = "Golden Pheasant";
      break;
  }
  _0x5c055e.aniCol = "#FF9000";
  _0x5c055e.skinName = this.getSkinName();
  _0x5c055e.upgradeText = "UPGRADED to " + _0x5c055e.aniName + "!\nHold W to fly around. ";
  return _0x5c055e;
};
a0_0x2bd3cd.prototype.getSkinName = function () {
  return this.getSpeciesPath() + this.getSubSpecies() + "/pheasant" + (this.specType == 0 ? "" : this.specType);
};
a0_0x2bd3cd.prototype.getSpeciesPath = function () {
  return "forest/pheasant/" + this.animalSpecies;
};
a0_0x2bd3cd.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x2bd3cd.prototype.getWing = function (_0x4e3fc2, _0xffd0b0, _0x407fd5) {
  var _0x14cc4b = "skins/" + this.getSpeciesPath() + "/";
  _0x14cc4b += _0x4e3fc2 + "_wing" + _0xffd0b0 + ".png";
  return _0x14cc4b;
};
a0_0x2bd3cd.prototype.getHead = function (_0x53f79b, _0x23415e) {
  var _0x2b58ca = "skins/" + this.getSpeciesPath() + "/";
  _0x2b58ca += _0x53f79b + "_head.png";
  return _0x2b58ca;
};
a0_0x2bd3cd.prototype.theFrame = 0;
a0_0x2bd3cd.prototype.drawUnderSkinImg = function () {
  this.setSkinScale();
  var _0x223576 = -0.7;
  var _0x321509 = 0.9;
  var _0x1498f9 = "skins/" + this.getSpeciesPath() + "/tail.png";
  var _0x4e9f9c = this.getSkinImageObj(_0x1498f9);
  if (_0x4e9f9c) {
    if (this.flag_usingAbility) {
      _0x321509 = 1.1;
    }
    var _0x282e66 = this.skinScale;
    var _0x3f742b = this.rad - this.outlineW;
    a0_0x4ef4f3.drawImage(_0x4e9f9c, -_0x3f742b * _0x282e66 * _0x321509, (-_0x3f742b + _0x3f742b * _0x223576) * _0x282e66 * _0x321509, _0x3f742b * 2 * _0x282e66 * _0x321509, _0x3f742b * 2 * _0x282e66 * _0x321509);
  }
};
a0_0x2bd3cd.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility) {
    if (this.flag_flying) {
      var _0x5bf3cd = "skins";
      {
        var _0xe38061 = 500 / 340;
        if (this.flag_flying && !this.flag_isGrabbed) {
          a0_0x4ef4f3.save();
          var _0x3ac85f = a0_0x232cc7("bird", this.spawnTime);
          if (_0x3ac85f !== undefined && _0x3ac85f != null) {
            this.theFrame = _0x3ac85f;
          }
          var _0x2c2323 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
          var _0x2cec4c = this.getSkinImageObj(this.getWing("pheasant", 1, true));
          if (_0x2cec4c) {
            a0_0x4ef4f3.save();
            var _0x503915 = -(-0.2 + _0x2c2323) * a0_0x2b691e;
            var _0x4278a6 = this.rad * 0.8;
            a0_0x4ef4f3.rotate(a0_0x28bda2 + _0x503915);
            var _0x268293 = 0;
            var _0x5ba69b = this.rad;
            var _0x21fcda = _0x4278a6 * 2 * 0.62;
            var _0x5e135c = _0x4278a6 * 2.5;
            var _0x390ca7 = 0.2;
            var _0x1628e7 = 1.7;
            a0_0x4ef4f3.drawImage(_0x2cec4c, _0x268293 + _0x21fcda * -_0x390ca7, _0x5ba69b + _0x5e135c * -_0x1628e7, _0x21fcda, _0x5e135c);
            a0_0x4ef4f3.restore();
          }
          var _0x2cec4c = this.getSkinImageObj(this.getWing("pheasant", 2, true));
          if (_0x2cec4c) {
            a0_0x4ef4f3.save();
            var _0x503915 = -(-0.2 + _0x2c2323) * a0_0x844a6b(-90);
            var _0x4278a6 = this.rad * 0.8;
            a0_0x4ef4f3.rotate(a0_0x844a6b(-45) + _0x503915);
            var _0x268293 = 0;
            var _0x5ba69b = this.rad;
            var _0x21fcda = _0x4278a6 * 2 * 0.62;
            var _0x5e135c = _0x4278a6 * 2.5;
            var _0x390ca7 = 0.8;
            var _0x1628e7 = 1.7;
            a0_0x4ef4f3.drawImage(_0x2cec4c, _0x268293 + _0x21fcda * -_0x390ca7, _0x5ba69b + _0x5e135c * -_0x1628e7, _0x21fcda, _0x5e135c);
            a0_0x4ef4f3.restore();
          }
          a0_0x4ef4f3.restore();
        }
        if (this.specType != 0 && this.specType != undefined) {
          var _0x4b6695 = this.getSkinImageObj(this.getHead("pheasant", true));
          if (_0x4b6695) {
            a0_0x4ef4f3.save();
            var _0x4278a6 = this.rad;
            var _0x4cf6b2 = 0.2;
            a0_0x4ef4f3.drawImage(_0x4b6695, -_0x4278a6 * _0xe38061, (-_0x4278a6 + _0x4278a6 * _0x4cf6b2) * _0xe38061, _0x4278a6 * 2 * _0xe38061, _0x4278a6 * 2 * _0xe38061);
            a0_0x4ef4f3.restore();
          }
        }
      }
    } else {
      var _0xe38061 = 500 / 340;
      if (this.flag_usingAbility) {
        a0_0x4ef4f3.save();
        var _0x2c2323 = 0;
        var _0x2cec4c = this.getSkinImageObj(this.getWing("pheasant", 1, true));
        if (_0x2cec4c) {
          a0_0x4ef4f3.save();
          var _0x503915 = -(-0.2 + _0x2c2323) * a0_0x844a6b(15);
          var _0x4278a6 = this.rad * 0.8;
          a0_0x4ef4f3.rotate(a0_0x844a6b(15) + _0x503915);
          var _0x268293 = 0;
          var _0x5ba69b = this.rad;
          var _0x21fcda = _0x4278a6 * 2 * 0.7;
          var _0x5e135c = _0x4278a6 * 2.2;
          var _0x390ca7 = 0;
          var _0x1628e7 = 1.5;
          a0_0x4ef4f3.drawImage(_0x2cec4c, _0x268293 + _0x21fcda * -_0x390ca7, _0x5ba69b + _0x5e135c * -_0x1628e7, _0x21fcda, _0x5e135c);
          a0_0x4ef4f3.restore();
        }
        var _0x2cec4c = this.getSkinImageObj(this.getWing("pheasant", 2, true));
        if (_0x2cec4c) {
          a0_0x4ef4f3.save();
          var _0x503915 = -(-0.2 + _0x2c2323) * a0_0x844a6b(-15);
          var _0x4278a6 = this.rad * 0.8;
          a0_0x4ef4f3.rotate(a0_0x844a6b(-15) + _0x503915);
          var _0x268293 = 0;
          var _0x5ba69b = this.rad;
          var _0x21fcda = _0x4278a6 * 2 * 0.7;
          var _0x5e135c = _0x4278a6 * 2.2;
          var _0x390ca7 = 1;
          var _0x1628e7 = 1.5;
          a0_0x4ef4f3.drawImage(_0x2cec4c, _0x268293 + _0x21fcda * -_0x390ca7, _0x5ba69b + _0x5e135c * -_0x1628e7, _0x21fcda, _0x5e135c);
          a0_0x4ef4f3.restore();
        }
        var _0x4b6695 = this.getSkinImageObj(this.getHead("pheasant", true));
        if (_0x4b6695) {
          a0_0x4ef4f3.save();
          var _0x4278a6 = this.rad * 1;
          var _0x345617 = -this.rad * 0.1;
          a0_0x4ef4f3.drawImage(_0x4b6695, -_0x4278a6 * _0xe38061, -_0x4278a6 + _0x345617 * _0xe38061, _0x4278a6 * 2 * _0xe38061, _0x4278a6 * 2 * _0xe38061);
          a0_0x4ef4f3.restore();
        }
        a0_0x4ef4f3.restore();
      }
    }
  }
};
function a0_0x2bd3cd() {
  a0_0x2bd3cd.superClass.call(this, a0_0x1370b8);
}
window.Pheasant = a0_0x2bd3cd;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2bd3cd, a0_0x1370b8, a0_0x3ce38d);
var a0_0x58d04c = a0_0x45645e;
a0_0x4b9448.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x4b9448.prototype.constructor = a0_0x4b9448;
a0_0x4b9448.superClass = a0_0x58d04c;
a0_0x4b9448.prototype.getSkinName = function () {
  return this.getSpeciesPath() + this.getSubSpecies() + "/flyinglizard" + (this.flag_usingAbility ? "_body" : "");
};
a0_0x4b9448.prototype.getSpeciesPath = function () {
  return "forest/flyinglizard/" + this.animalSpecies;
};
a0_0x4b9448.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x4b9448.prototype.animalInfo = function () {
  var _0x46f4fa = {};
  switch (this.animalSpecies) {
    case 0:
      _0x46f4fa.aniName = "Flying Lizard!";
      break;
  }
  _0x46f4fa.skinName = this.getSkinName();
  _0x46f4fa.aniDesc = "";
  _0x46f4fa.upgradeText = "UPGRADED to " + _0x46f4fa.aniName + "!\n";
  _0x46f4fa.aniCol = "#FF9D43";
  return _0x46f4fa;
};
a0_0x4b9448.prototype.getAbilityInfo = function (_0x2fc1ac) {
  var _0x58db5a = {
    abilName: "Ability",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x58db5a;
};
a0_0x4b9448.prototype.getAsset = function (_0x59d623) {
  var _0x134517 = "skins/" + this.getSpeciesPath() + "/flyinglizard";
  _0x134517 += "_" + _0x59d623 + ".png";
  return _0x134517;
};
a0_0x4b9448.prototype.backOffset = -0.4;
a0_0x4b9448.prototype.armsOffset = 0.16;
a0_0x4b9448.prototype.headOffset = 0.3;
a0_0x4b9448.prototype.wingsOffset = -0.5;
a0_0x4b9448.prototype.wingsScale = 1.5;
a0_0x4b9448.prototype.backScale = 1.1;
a0_0x4b9448.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility) {
    var _0x3f7bf4 = 500 / 340;
    this.drawAsset(_0x3f7bf4, "arms", this.armsOffset);
    this.drawAsset(_0x3f7bf4, "wings", this.wingsOffset, _0x3f7bf4 * this.wingsScale);
    this.drawAsset(_0x3f7bf4, "back", this.backOffset, _0x3f7bf4 * this.backScale);
    this.drawAsset(_0x3f7bf4, "head", this.headOffset);
  }
};
a0_0x4b9448.prototype.drawAsset = function (_0x109d5b, _0x37f793, _0x182998, _0x5920fe) {
  var _0x5409ae = this.getSkinImageObj(this.getAsset(_0x37f793));
  if (_0x5409ae) {
    if (_0x182998 === undefined) {
      _0x182998 = 0;
    }
    if (_0x5920fe === undefined) {
      _0x5920fe = _0x109d5b;
    }
    a0_0x4ef4f3.save();
    var _0x37a500 = this.rad;
    a0_0x4ef4f3.drawImage(_0x5409ae, -_0x37a500 * _0x109d5b, (-_0x37a500 + _0x37a500 * _0x182998) * _0x109d5b, _0x37a500 * 2 * _0x109d5b, _0x37a500 * 2 * _0x5920fe);
    a0_0x4ef4f3.restore();
  }
};
function a0_0x4b9448() {
  a0_0x4b9448.superClass.call(this, a0_0x1370b8);
}
const a0_0x2d3411 = 121;
window.FlyingLizard = a0_0x4b9448;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4b9448, a0_0x1370b8, a0_0x2d3411);
var a0_0x58d04c = a0_0x45645e;
a0_0xd389ae.prototype = Object.create(a0_0x58d04c.prototype);
a0_0xd389ae.prototype.constructor = a0_0xd389ae;
a0_0xd389ae.superClass = a0_0x58d04c;
a0_0xd389ae.prototype.getSpeciesPath = function (_0x589d18) {
  return "forest/" + _0x589d18 + "/" + this.animalSpecies;
};
a0_0xd389ae.prototype.animalInfo = function () {
  var _0x535b47 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x535b47.aniName = "Tarsier!";
      break;
  }
  _0x535b47.skinName = this.getSkinName();
  _0x535b47.aniDesc = "";
  _0x535b47.upgradeText = "UPGRADED to " + _0x535b47.aniName + "!";
  _0x535b47.aniCol = "#FF9D43";
  return _0x535b47;
};
a0_0xd389ae.prototype.getSkinName = function () {
  return this.getSpeciesPath() + this.getSubSpecies() + "/tarsier";
};
a0_0xd389ae.prototype.getSpeciesPath = function () {
  return "forest/tarsier/" + this.animalSpecies;
};
a0_0xd389ae.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0xd389ae() {
  a0_0xd389ae.superClass.call(this, a0_0x1370b8);
}
const a0_0xd06802 = 113;
window.Tarsier = a0_0xd389ae;
a0_0xa5d548.setCustomClassForGameObjType(a0_0xd389ae, a0_0x1370b8, a0_0xd06802);
var a0_0x58d04c = a0_0x45645e;
a0_0x259538.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x259538.prototype.constructor = a0_0x259538;
a0_0x259538.superClass = a0_0x58d04c;
a0_0x259538.prototype.getSpeciesPath = function (_0x52ebe1) {
  return "forest/" + _0x52ebe1 + "/" + this.animalSpecies;
};
a0_0x259538.prototype.animalInfo = function () {
  var _0x33c5e4 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x33c5e4.aniName = "Chukar!";
      break;
  }
  _0x33c5e4.skinName = this.getSkinName();
  _0x33c5e4.aniDesc = "";
  _0x33c5e4.upgradeText = "UPGRADED to " + _0x33c5e4.aniName + "!\n Hold W to fly around.";
  _0x33c5e4.aniCol = "#FF9D43";
  return _0x33c5e4;
};
a0_0x259538.prototype.getSkinName = function () {
  return this.getSpeciesPath() + this.getSubSpecies() + "/chukar" + (this.specType == 0 ? "" : this.specType);
};
a0_0x259538.prototype.getSpeciesPath = function () {
  return "forest/chukar/" + this.animalSpecies;
};
a0_0x259538.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x259538.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  {
    var _0x3a14c6 = 500 / 340;
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x4ef4f3.save();
      var _0x289f0e = a0_0x232cc7("bird", this.spawnTime);
      if (_0x289f0e !== undefined && _0x289f0e != null) {
        this.theFrame = _0x289f0e;
      }
      var _0x4a2e7a = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      var _0x15eb8e = this.getSkinImageObj(this.getAsset("wing1"));
      if (_0x15eb8e) {
        a0_0x4ef4f3.save();
        var _0x1afc70 = -(-0.2 + _0x4a2e7a) * a0_0x2b691e;
        var _0x461621 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x28bda2 + _0x1afc70);
        var _0x19cbef = 0;
        var _0x113a4c = this.rad;
        var _0x48dbca = _0x461621 * 2 * 0.62;
        var _0x140e1d = _0x461621 * 2.5;
        var _0x119173 = 0.2;
        var _0x4f68da = 1.7;
        a0_0x4ef4f3.drawImage(_0x15eb8e, _0x19cbef + _0x48dbca * -_0x119173, _0x113a4c + _0x140e1d * -_0x4f68da, _0x48dbca, _0x140e1d);
        a0_0x4ef4f3.restore();
      }
      var _0x15eb8e = this.getSkinImageObj(this.getAsset("wing2"));
      if (_0x15eb8e) {
        a0_0x4ef4f3.save();
        var _0x1afc70 = -(-0.2 + _0x4a2e7a) * a0_0x844a6b(-90);
        var _0x461621 = this.rad * 0.8;
        a0_0x4ef4f3.rotate(a0_0x844a6b(-45) + _0x1afc70);
        var _0x19cbef = 0;
        var _0x113a4c = this.rad;
        var _0x48dbca = _0x461621 * 2 * 0.62;
        var _0x140e1d = _0x461621 * 2.5;
        var _0x119173 = 0.8;
        var _0x4f68da = 1.7;
        a0_0x4ef4f3.drawImage(_0x15eb8e, _0x19cbef + _0x48dbca * -_0x119173, _0x113a4c + _0x140e1d * -_0x4f68da, _0x48dbca, _0x140e1d);
        a0_0x4ef4f3.restore();
      }
      a0_0x4ef4f3.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0xcd30fa = this.getSkinImageObj(this.getAsset("head"));
      if (_0xcd30fa) {
        a0_0x4ef4f3.save();
        var _0x461621 = this.rad;
        a0_0x4ef4f3.drawImage(_0xcd30fa, -_0x461621 * _0x3a14c6, (-_0x461621 + _0x461621 * 0.1) * _0x3a14c6, _0x461621 * 2 * _0x3a14c6, _0x461621 * 2 * _0x3a14c6);
        a0_0x4ef4f3.restore();
      }
    }
  }
};
a0_0x259538.prototype.getAsset = function (_0x87478) {
  var _0x144e9c = "skins/" + this.getSpeciesPath() + "/chukar";
  _0x144e9c += "_" + _0x87478 + ".png";
  return _0x144e9c;
};
function a0_0x259538() {
  a0_0x259538.superClass.call(this, a0_0x1370b8);
}
const a0_0x258c5d = 114;
window.Chukar = a0_0x259538;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x259538, a0_0x1370b8, a0_0x258c5d);
var a0_0x58d04c = a0_0x12658e;
a0_0x1edb2c.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1edb2c.prototype.constructor = a0_0x1edb2c;
a0_0x1edb2c.superClass = a0_0x58d04c;
a0_0x1edb2c.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x1edb2c.prototype.customDraw = function (_0x5f1f09) {
  var _0x2e3ad5 = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.oType + "_" + this.speciesType + (this.isEdibleOutlined() ? "_e" : "") + ".png");
  if (_0x2e3ad5) {
    var _0x496037 = this.rad;
    a0_0x4ef4f3.drawImage(_0x2e3ad5, -_0x496037, -_0x496037, _0x496037 * 2, _0x496037 * 2);
  }
};
var a0_0x3e6245 = 159;
a0_0x1edb2c.prototype.readCustomData_onNewlyVisible = function (_0x52bdd5) {
  a0_0x1edb2c.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x52bdd5);
  this.speciesType = _0x52bdd5.readUInt16();
  this.speciesSubType = _0x52bdd5.readUInt16();
};
function a0_0x1edb2c() {
  a0_0x1edb2c.superClass.call(this, a0_0x3e6245);
}
window.ThanksgivingFood = a0_0x1edb2c;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1edb2c, a0_0x3e6245);
var a0_0x58d04c = a0_0x12658e;
a0_0x50104d.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x50104d.prototype.constructor = a0_0x50104d;
a0_0x50104d.prototype.rAngle = 0;
a0_0x50104d.prototype.rAngleF = 0.005;
a0_0x50104d.prototype.rAngleDirection = 1;
a0_0x50104d.superClass = a0_0x58d04c;
a0_0x50104d.prototype.updateZ = function () {
  if (this.isSnowFlake) {
    this.z = 11000;
  } else if (this.isStickingOnObject) {
    this.z = 1 + this.stickingOnObjectZIndex;
  } else {
    this.z = this.rad;
  }
};
a0_0x50104d.prototype.customDraw = function (_0x45dcb) {
  if (this.isSnowFlake) {
    a0_0x4ef4f3.globalAlpha = 0.9;
    a0_0x4ef4f3.globalAlpha = 1;
    var _0x5629db = "gameobj/" + this.oType + "/snow-flake.png";
    var _0x3820e5 = this.getSkinImageObj(_0x5629db);
    if (_0x3820e5) {
      a0_0x4ef4f3.save();
      var _0x317560 = this.rad * 1;
      this.rAngle += this.rAngleF * this.rAngleDirection;
      a0_0x4ef4f3.rotate(this.rAngle);
      a0_0x4ef4f3.drawImage(_0x3820e5, -_0x317560, -_0x317560, _0x317560 * 2, _0x317560 * 2);
      a0_0x4ef4f3.restore();
    }
  } else {
    a0_0x4ef4f3.globalAlpha = 1;
    var _0x5629db = "gameobj/" + this.oType + "/" + this.oType + ".png";
    var _0x3820e5 = this.getSkinImageObj(_0x5629db);
    if (_0x3820e5) {
      a0_0x4ef4f3.save();
      var _0x317560 = this.rad * 1;
      a0_0x4ef4f3.rotate(this.rPer * 2 * Math.PI);
      a0_0x4ef4f3.drawImage(_0x3820e5, -_0x317560, -_0x317560, _0x317560 * 2, _0x317560 * 2);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x50104d.prototype.isSnowFlake = true;
a0_0x50104d.prototype.isStickingOnObject = false;
a0_0x50104d.prototype.stickingOnObjectZIndex = 0;
a0_0x50104d.prototype.readUpdatedProperty = function (_0xe96c49, _0x4a626f) {
  a0_0x50104d.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x4a626f);
  if (_0xe96c49 == a0_0x1581d8) {
    this.isSnowFlake = _0x4a626f.readUInt8() == 1;
  } else if (_0xe96c49 == a0_0x503b51) {
    this.isStickingOnObject = _0x4a626f.readUInt8() == 1;
  } else if (_0xe96c49 == a0_0x10bf48) {
    let _0x434c8b = _0x4a626f.readUInt32();
    let _0x26d1e5 = a0_0x3d5ac5[_0x434c8b];
    if (_0x26d1e5) {
      this.stickingOnObjectZIndex = _0x26d1e5.z;
    }
  }
};
a0_0x50104d.prototype.readCustomData_onNewlyVisible = function (_0x52283e) {
  this.readUpdatedProperty(a0_0x1581d8, _0x52283e);
  this.readUpdatedProperty(a0_0x503b51, _0x52283e);
  this.readUpdatedProperty(a0_0x10bf48, _0x52283e);
};
function a0_0x50104d() {
  a0_0x50104d.superClass.call(this, a0_0xdc6575);
  this.rAngleDirection = a0_0x1da5bb(0, 1) == 0 ? 1 : -1;
}
window.Snow = a0_0x50104d;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x50104d, a0_0xdc6575);
var a0_0x58d04c = a0_0x12658e;
a0_0x377b41.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x377b41.prototype.constructor = a0_0x377b41;
a0_0x377b41.superClass = a0_0x58d04c;
a0_0x377b41.prototype.foodType = 0;
a0_0x377b41.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x377b41.prototype.customDraw = function (_0x2a053e) {
  a0_0x4ef4f3.save();
  var _0x377417 = "gameobj/" + this.oType + "/" + this.oType + "_" + this.foodType + "" + (this.isEdibleOutlined() ? "_e" : "") + ".png";
  var _0x159bdf = this.getSkinImageObj(_0x377417);
  if (_0x159bdf) {
    var _0x9cfc40 = this.rad;
    a0_0x4ef4f3.save();
    a0_0x4ef4f3.rotate(this.rPer * 0.5 * Math.PI * 2);
    a0_0x4ef4f3.drawImage(_0x159bdf, -_0x9cfc40, -_0x9cfc40, _0x9cfc40 * 2, _0x9cfc40 * 2);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
a0_0x377b41.prototype.readCustomData_onNewlyVisible = function (_0x493e09) {
  this.foodType = _0x493e09.readUInt8();
};
var a0_0x29226b = 160;
function a0_0x377b41() {
  a0_0x377b41.superClass.call(this, a0_0x29226b);
  this.doesDrawEffectScale = true;
}
window.ValentineFood = a0_0x377b41;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x377b41, a0_0x29226b);
var a0_0x58d04c = a0_0x12658e;
a0_0x384fde.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x384fde.prototype.constructor = a0_0x384fde;
a0_0x384fde.superClass = a0_0x58d04c;
a0_0x384fde.prototype.updateZ = function () {
  this.z = 1000000;
};
a0_0x384fde.prototype.customDraw = function (_0x38689c) {
  console.log("sand storm created...");
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 0.4;
  a0_0x5c99c1(0, 0, this.rad, "#000");
  a0_0x4ef4f3.restore();
};
a0_0x384fde.prototype.readCustomData_onNewlyVisible = function (_0x5efd7c) {
  this.alpha = _0x5efd7c.readUInt8() / 100;
};
a0_0x384fde.prototype.readUpdatedProperty = function (_0x4ad61d, _0x2d9aa8) {
  if (_0x4ad61d == a0_0x10c2f0) {
    this.alpha = _0x2d9aa8.readUInt8() / 100;
  }
};
const a0_0x23f9af = 161;
function a0_0x384fde() {
  a0_0x384fde.superClass.call(this, a0_0x23f9af);
  this.alpha = 9;
}
window.SandStorm = a0_0x384fde;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x384fde, a0_0x23f9af);
var a0_0x2011f1 = a0_0x4b7800;
var a0_0x58d04c = a0_0x12658e;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x4b7800.prototype.customDraw = function (_0x2b8ce4) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x5c99c1(0, 0, this.rad, this.color);
  a0_0x4ef4f3.restore();
};
a0_0x4b7800.prototype.updateZ = function () {
  this.z = 10000 + this.rad;
};
const a0_0x33b578 = 162;
function a0_0x4b7800() {
  a0_0x4b7800.superClass.call(this);
  this.color = a0_0x1da5bb(0, 1) == 1 ? "#D2B48C" : "#F0E68C";
  this.spawnTime = a0_0x4f736f;
}
window.SandShard = a0_0x4b7800;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x4b7800, a0_0x33b578);
var a0_0x522526 = a0_0x522526;
var a0_0x58d04c = a0_0x45645e;
a0_0x522526.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x522526.prototype.constructor = a0_0x522526;
a0_0x522526.superClass = a0_0x58d04c;
a0_0x522526.prototype.getSkinName = function () {
  var _0x26c80c = this.getSpeciesPath("land/birdmonster") + "/birdmonster";
  _0x26c80c += this.specType == 0 ? "" : this.specType;
  return _0x26c80c;
};
a0_0x522526.prototype.animalInfo = function () {
  var _0x533831 = {};
  var _0x1361d5 = "";
  switch (this.animalSpecies) {
    case 0:
      _0x533831.aniName = "Bird Monster";
      break;
  }
  _0x533831.upgradeText = "UPGRADED to " + _0x533831.aniName + "! \nPress W to Fly, and do a powerful Electro Swoop attack! Aim it well.\nPress S to create Gale charge and Electro Tornado" + _0x1361d5;
  _0x533831.aniCol = "#FF9000";
  var _0x1352c9 = "" + (this.specType == 0 ? "" : this.specType);
  if (this.specType2 == 4) {
    _0x1352c9 += "4";
  }
  _0x533831.skinName = "land/birdmonster/" + this.animalSpecies + "/birdmonster" + _0x1352c9;
  return _0x533831;
};
a0_0x522526.prototype.getWing = function (_0x2664bc, _0x10f464, _0x1693b6) {
  _0x1693b6 = true;
  var _0x73d855 = "skins/land/" + (_0x1693b6 ? this.getSpeciesPath(_0x2664bc) + "/" : _0x2664bc + "/");
  _0x73d855 += _0x2664bc + "_wing" + _0x10f464 + ".png";
  return _0x73d855;
};
a0_0x522526.prototype.getHead = function (_0x4bcd1c, _0x239939, _0x5dd2e0) {
  _0x5dd2e0 = true;
  headType = this.specType;
  if (this.specType2 == 1) {
    headType = 4;
  }
  var _0x524996 = "skins/land/" + (_0x5dd2e0 ? this.getSpeciesPath(_0x4bcd1c) + "/" : _0x4bcd1c + "/");
  _0x524996 += _0x4bcd1c + "_head" + headType + ".png";
  return _0x524996;
};
a0_0x522526.prototype.getWindImage = function (_0x3223ae) {
  hasSpecies = true;
  var _0xa9e062 = "skins/land/" + (hasSpecies ? this.getSpeciesPath("birdmonster") + "/" : "birdmonster/");
  _0xa9e062 += "tailwind/" + _0x3223ae + ".png";
  return _0xa9e062;
};
a0_0x522526.prototype.getElectroChargeImage = function (_0x123408) {
  hasSpecies = true;
  var _0x14bb5d = "skins/land/" + (hasSpecies ? this.getSpeciesPath("birdmonster") + "/" : "birdmonster/");
  _0x14bb5d += "charge/" + _0x123408 + ".png";
  return _0x14bb5d;
};
a0_0x522526.prototype.getAbilityInfo = function (_0x3c30eb) {
  var _0x5c7d3b = {
    abilName: "Electro Swoop & Gale Charge",
    abilImg: "skins/land/birdmonster/0/birdmonster_ability.png",
    speciesType: this.animalSpecies,
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x5c7d3b;
};
var a0_0x5b6acf = 20;
var a0_0x4b7044 = 1;
var a0_0x42a83 = 1;
var a0_0x532efe = 0;
var a0_0x3f6700 = undefined;
a0_0x522526.prototype.drawTopEffects = function () {
  a0_0x522526.superClass.prototype.drawTopEffects.call(this);
  this.drawElectroChargeEffect();
};
a0_0x522526.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    a0_0x3f6700 = undefined;
    return;
  }
  var _0x5033d2 = 500 / 340;
  if (!this.flag_flying) {
    var _0xb9d5a9 = a0_0x232cc7("bird", this.spawnTime);
    if (_0xb9d5a9 !== undefined && _0xb9d5a9 != null) {
      this.theFrame = _0xb9d5a9;
    }
    var _0x1d4438 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
    var _0x55d754 = this.rad * a0_0x5c4b2b;
    a0_0x26574e = -0.2;
    a0_0x2eb045 = 1.4;
    a0_0x42a83 = 0.25;
    var _0x1ac472 = 270;
    var _0x58a95b = 6;
    var _0x294767 = 0;
    if (a0_0x3f6700 == undefined) {
      a0_0x3f6700 = a0_0x4f736f;
    } else {
      let _0x5cfd63 = (a0_0x4f736f - a0_0x3f6700) / 1000;
      _0x294767 = _0x5cfd63 / _0x58a95b * _0x1ac472;
    }
    if (_0x294767 > _0x1ac472) {
      _0x294767 = _0x1ac472;
    }
    var _0x48b41d;
    var _0x2a5873;
    var _0x3dcf57;
    _0x48b41d = a0_0x844a6b(_0x294767);
    _0x2a5873 = 0;
    _0x3dcf57 = true;
    this.drawImageCustom("birdmonster", 13, _0x1d4438, _0x55d754, _0x48b41d, _0x2a5873, _0x3dcf57);
    this.drawImageCustom("birdmonster", 23, _0x1d4438, _0x55d754, -_0x48b41d, 1, _0x3dcf57);
  } else if (this.flag_flying && !this.flag_isGrabbed) {
    a0_0x5b6acf = 20;
    a0_0x4b7044 = 1;
    a0_0x42a83 = 1;
    a0_0x532efe = 0;
    var _0xb9d5a9 = a0_0x232cc7("bird", this.spawnTime);
    if (_0xb9d5a9 !== undefined && _0xb9d5a9 != null) {
      this.theFrame = _0xb9d5a9;
    }
    var _0x1d4438 = a0_0x1d703e != a0_0x30b084 && !a0_0x1528ea ? this.theFrame : this.birdNoAnimationFlyWingAngle;
    var _0x55d754 = this.rad * a0_0x5c4b2b;
    var _0x48b41d;
    var _0x2a5873;
    var _0x3dcf57;
    if (this.specType == 1) {
      a0_0x4b7044 = 1.1;
      a0_0x42a83 = 0.25;
      a0_0x532efe = 180;
      _0x48b41d = a0_0x844a6b(60 + a0_0x532efe);
      _0x2a5873 = 0;
      _0x3dcf57 = false;
    } else if (this.specType == 2) {
      _0x1d4438 = 0;
      _0x48b41d = a0_0x844a6b(25);
      _0x2a5873 = 0;
      _0x3dcf57 = false;
    } else if (this.specType == 3) {
      _0x48b41d = a0_0x844a6b(45);
      _0x2a5873 = 0;
      _0x3dcf57 = true;
    }
    this.drawImageCustom("birdmonster", 1, _0x1d4438, _0x55d754, _0x48b41d, _0x2a5873, _0x3dcf57);
    this.drawImageCustom("birdmonster", 2, _0x1d4438, _0x55d754, -_0x48b41d, 1, _0x3dcf57);
  }
  if (this.specType != 0 && this.specType != undefined) {
    var _0x4ab74e = this.getSkinImageObj(this.getHead("/birdmonster", true));
    if (_0x4ab74e) {
      var _0x111810 = 0.9;
      a0_0x4ef4f3.save();
      var _0x55d754 = this.rad * _0x111810;
      var _0x32ee31 = _0x55d754 * a0_0x26574e;
      a0_0x4ef4f3.drawImage(_0x4ab74e, -_0x55d754 * _0x5033d2, (-_0x55d754 + _0x32ee31) * _0x5033d2, _0x55d754 * 2 * _0x5033d2, _0x55d754 * 2 * _0x5033d2);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x522526.prototype.flag_eff_electroCharged = false;
a0_0x522526.prototype.drawElectroChargeEffect = function () {
  if (this.flag_eff_electroCharged === true) {
    var _0x364799 = Math.trunc(a0_0x4f736f / 250) % 4;
    var _0x439e54 = this.getSkinImageObj(this.getElectroChargeImage(_0x364799));
    if (_0x439e54) {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = a0_0x1c918d == this.id ? 0.7 : 1;
      var _0x4de941 = this.rad * 1.2;
      a0_0x4ef4f3.rotate(this.angle);
      a0_0x4ef4f3.drawImage(_0x439e54, -_0x4de941, -_0x4de941, _0x4de941 * 2, _0x4de941 * 2);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x522526.prototype.drawImageCustom = function (_0x346da2, _0x277fce, _0x52bb8f, _0x541f5e, _0x26fd94, _0x41f203, _0x447c5a) {
  var _0x51dfe9 = this.getSkinImageObj(this.getWing(_0x346da2, _0x277fce, _0x447c5a));
  if (_0x51dfe9) {
    a0_0x4ef4f3.save();
    _0x26fd94 = -(-0.2 + _0x52bb8f * a0_0x42a83) * _0x26fd94;
    a0_0x4ef4f3.rotate(_0x26fd94 * a0_0x4b7044);
    var _0x595ea0 = 0;
    var _0xca5503 = this.rad;
    var _0x2c59bc = _0x541f5e * 2 * a0_0x5c4b2b;
    var _0x1879d4 = _0x541f5e * 2.5;
    var _0x1e6c00 = a0_0x2eb045;
    a0_0x4ef4f3.drawImage(_0x51dfe9, _0x595ea0 + _0x2c59bc * -_0x41f203, _0xca5503 + _0x1879d4 * -_0x1e6c00, _0x2c59bc, _0x1879d4);
    a0_0x4ef4f3.restore();
  }
};
var a0_0x2eb045 = 1.5;
var a0_0x5c4b2b = 0.8;
var a0_0x4d23f3 = 1;
var a0_0x421e52 = 1.6;
a0_0x522526.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  var _0x49a365 = this.skinScale;
  var _0x27bcd4 = this.getAniRadius(this.skinRad);
  var _0x268ba5 = 0.5;
  var _0x3a7fe6 = 0.8;
  var _0x2def94 = 1.2;
  if (this.loadedSkinImg) {
    a0_0x4ef4f3.drawImage(this.loadedSkinImg, -_0x27bcd4 - _0x27bcd4 * _0x268ba5, -_0x27bcd4 - _0x27bcd4 * _0x3a7fe6, _0x27bcd4 * 2 * _0x49a365, _0x27bcd4 * 2 * (_0x49a365 * _0x2def94));
  }
};
a0_0x522526.prototype.drawUnderSkinImgOutline = function () {
  a0_0x522526.superClass.prototype.drawUnderSkinImgOutline.call(this);
  if (this.flag_usingAbility && this.flag_flying && this.specType == 2) {
    var _0x2c0067 = 0;
    var _0x20856d = -2;
    var _0x57d7f6 = 1;
    var _0x5886a6 = 2;
    var _0x3504f5 = 1 + Math.trunc(a0_0x4f736f / 120) % 5;
    var _0x1ebcfa = this.getSkinImageObj(this.getWindImage(_0x3504f5));
    if (_0x1ebcfa) {
      a0_0x4ef4f3.save();
      var _0x256bae = this.rad * _0x57d7f6;
      var _0x5cd3dd = _0x256bae * _0x20856d;
      var _0x392113 = _0x256bae * _0x2c0067;
      a0_0x4ef4f3.drawImage(_0x1ebcfa, -_0x256bae + _0x392113, -_0x256bae + _0x5cd3dd * _0x5886a6, _0x256bae * 2, _0x256bae * 2 * _0x5886a6);
      a0_0x4ef4f3.restore();
    }
  }
};
a0_0x522526.prototype.customUpdatedProperty = function (_0x32c88b, _0x43dab5) {
  if (_0x32c88b == a0_0x1b6e23) {
    this.flag_eff_electroCharged = _0x43dab5.readUInt8() == 1;
  } else if (_0x32c88b == a0_0x1d5438) {
    var _0xb7eec5 = this.activeAbility;
    this.activeAbility = _0x43dab5.readUInt16();
    if (_0xb7eec5 != this.activeAbility) {
      this.onAbilityChanged(_0xb7eec5);
    }
  }
};
var a0_0x26574e = 0.3;
a0_0x522526.prototype.activeAbility = 0;
a0_0x522526.prototype.onAbilityChanged = function (_0x1673c4) {
  console.log("prev ability: " + _0x1673c4);
  console.log("curr ability: " + this.activeAbility);
  if (this.activeAbility == 0) {
    a0_0x26574e = 0.3;
    a0_0x2eb045 = 1.5;
    a0_0x5c4b2b = 0.8;
    a0_0x4d23f3 = 1;
    a0_0x421e52 = 1.6;
  }
};
a0_0x522526.prototype.readCustomData_onNewlyVisible = function (_0x24b369) {
  a0_0x522526.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x24b369);
  this.customUpdatedProperty(a0_0x1b6e23, _0x24b369);
};
function a0_0x522526() {
  a0_0x522526.superClass.call(this, a0_0x1370b8);
}
window.BirdMonster = a0_0x522526;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x522526, a0_0x1370b8, a0_0x322c99);
var a0_0x2011f1 = a0_0x2d648e;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x2d648e.prototype.customDraw = function (_0x36d6c7) {
  a0_0x4ef4f3.save();
  var _0x2a08f3 = a0_0x4ef4f3.globalAlpha;
  a0_0x4ef4f3.globalAlpha = _0x2a08f3 * 0.05;
  a0_0x5c99c1(0, 0, this.rad, "#E4E7C8");
  var _0x4541f3 = "crater" + this.curBiome;
  console.log("birdmonster crater: " + _0x4541f3);
  a0_0x4ef4f3.globalAlpha = _0x2a08f3 * 1;
  var _0x3157d2 = "skins/land/birdmonster/" + this.speciesType + "/" + _0x4541f3 + ".png";
  var _0x4897ba = this.getSkinImageObj(_0x3157d2);
  if (_0x4897ba) {
    a0_0x4ef4f3.save();
    var _0x20f4bc = this.rad;
    a0_0x4ef4f3.drawImage(_0x4897ba, -_0x20f4bc, -_0x20f4bc, _0x20f4bc * 2, _0x20f4bc * 2);
    a0_0x4ef4f3.restore();
  }
  a0_0x4ef4f3.restore();
};
a0_0x2d648e.prototype.getSkinImageObj = function (_0x30424d) {
  var _0x51b923 = this.speciesType === 1 || this.speciesType === 2 || this.speciesType === 201 ? 1 : 2;
  var _0x4e2c88 = "./assets/s/" + _0x51b923 + "/" + _0x30424d;
  if (this.skinThemeID > 0) {
    _0x4e2c88 = "./assets/t/" + this.skinThemeID + "/" + _0x30424d;
  }
  return a0_0x2cc313(_0x4e2c88, function (_0x3ef50b) {
    console.log(_0x3ef50b.src);
  });
};
a0_0x2d648e.prototype.readCustomData_onNewlyVisible = function (_0x395a99) {
  a0_0x2d648e.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x395a99);
};
a0_0x2d648e.prototype.readCustomData_onUpdate = function (_0x4354b9) {
  a0_0x2d648e.superClass.prototype.readCustomData_onUpdate.call(this, _0x4354b9);
};
function a0_0x2d648e() {
  a0_0x2d648e.superClass.call(this);
}
window.BirdMonsterCrater = a0_0x2d648e;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x2d648e, a0_0x20e6c5, a0_0x326735);
var a0_0x58d04c = a0_0x12658e;
a0_0x5e064a.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x5e064a.prototype.constructor = a0_0x5e064a;
a0_0x5e064a.superClass = a0_0x58d04c;
a0_0x5e064a.prototype.updateZ = function () {
  this.z = 10000 + this.rad;
};
a0_0x5e064a.prototype.customDraw = function (_0x472633) {
  var _0x14a45a = "skins/land/birdmonster/" + this.speciesType + "/tornado.png";
  var _0x1c1584 = this.getSkinImageObj(_0x14a45a);
  if (_0x1c1584) {
    var _0x3696f8 = this.rad * 1.1;
    if (!a0_0x1528ea && a0_0x1d703e != a0_0x30b084) {
      var _0x5f372b = 1;
      var _0x4a6835 = 1000 / _0x5f372b;
      var _0x568cb8 = (a0_0x4f736f - this.spawnTime) % _0x4a6835 / _0x4a6835;
      var _0x11d972 = _0x568cb8 * 2 * Math.PI;
      var _0x5f372b = 30 / 60;
      var _0x4a6835 = 1000 / _0x5f372b;
      var _0x568cb8 = (a0_0x4f736f - this.spawnTime) % _0x4a6835 / _0x4a6835;
      var _0x114fd4 = _0x568cb8 * 2 * Math.PI;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.rotate(_0x11d972);
      var _0x237516 = a0_0x4ef4f3.globalAlpha;
      a0_0x4ef4f3.globalAlpha = _0x237516 * 1;
      var _0x3f1f84 = (a0_0x4f736f - this.spawnTime) / 1000;
      var _0x48765e = 2.2;
      var _0x209b4f = Math.cos(Math.PI * 2 / _0x48765e * _0x3f1f84) * 6.5;
      var _0x92eb48 = Math.sin(Math.PI * 2 / _0x48765e * _0x3f1f84) * 6.5;
      a0_0x4ef4f3.globalAlpha = 0.3;
      a0_0x4ef4f3.drawImage(_0x1c1584, -_0x3696f8 - _0x209b4f / 2.2, -_0x3696f8, _0x3696f8 * 2, _0x3696f8 * 2);
      a0_0x4ef4f3.restore();
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 0.7;
      a0_0x4ef4f3.rotate(_0x114fd4);
      a0_0x4ef4f3.drawImage(_0x1c1584, -_0x3696f8 - _0x209b4f / 2.2, -_0x3696f8, _0x3696f8 * 2, _0x3696f8 * 2);
      a0_0x4ef4f3.restore();
    } else {
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = 0.7;
      a0_0x4ef4f3.drawImage(_0x1c1584, -_0x3696f8, -_0x3696f8, _0x3696f8 * 2, _0x3696f8 * 2);
      a0_0x4ef4f3.restore();
    }
  }
};
const a0_0x2d8b30 = 163;
function a0_0x5e064a() {
  a0_0x5e064a.superClass.call(this, a0_0x2d8b30);
  this.doesDrawEffectScale = false;
  this.drawEffectScale_Slow = true;
}
window.ElectroTornado = a0_0x5e064a;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x5e064a, a0_0x2d8b30);
var a0_0x58d04c = a0_0x12658e;
a0_0x1703df.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x1703df.prototype.constructor = a0_0x1703df;
a0_0x1703df.superClass = a0_0x58d04c;
a0_0x1703df.prototype.updateZ = function () {
  this.z = 10000 + this.rad;
};
a0_0x1703df.prototype.customDraw = function (_0x2d5441) {
  var _0x4617db = "skins/land/birdmonster/" + this.speciesType + "/electric-charge.png";
  var _0x5a9be9 = this.getSkinImageObj(_0x4617db);
  if (_0x5a9be9) {
    a0_0x4ef4f3.save();
    var _0x4c4c16 = this.rad * 1;
    a0_0x4ef4f3.rotate(this.angle);
    a0_0x4ef4f3.drawImage(_0x5a9be9, -_0x4c4c16, -_0x4c4c16, _0x4c4c16 * 2, _0x4c4c16 * 2);
    a0_0x4ef4f3.restore();
  }
};
const a0_0x510fca = 164;
function a0_0x1703df() {
  a0_0x1703df.superClass.call(this, a0_0x510fca);
}
window.ElectricCharge = a0_0x1703df;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x1703df, a0_0x510fca);
var a0_0x2011f1 = a0_0x58dfc0;
var a0_0x58d04c = a0_0x299c27;
a0_0x2011f1.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x2011f1.prototype.constructor = a0_0x2011f1;
a0_0x2011f1.superClass = a0_0x58d04c;
a0_0x58dfc0.prototype.customDraw = function (_0x3ff2f6) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.rotate(this.angle);
  var _0xe6af6f = a0_0x4ef4f3.globalAlpha;
  a0_0x4ef4f3.globalAlpha = this.alpha < 0.7 ? this.alpha : 0.7;
  var _0x116c48 = "skins/land/birdmonster/" + this.speciesType + "/wind.png";
  var _0x223b4f = this.getSkinImageObj(_0x116c48);
  if (_0x223b4f) {
    var _0x24c13d = this.rad * 1.25;
    a0_0x4ef4f3.drawImage(_0x223b4f, -_0x24c13d, -_0x24c13d, _0x24c13d * 2, _0x24c13d * 2);
  }
  a0_0x4ef4f3.restore();
};
a0_0x58dfc0.prototype.updateZ = function () {
  this.z = 10000 - this.rad;
};
a0_0x58dfc0.prototype.readCustomData_onNewlyVisible = function (_0x13bf73) {
  this.alpha = _0x13bf73.readUInt8() / 100;
};
a0_0x58dfc0.prototype.readUpdatedProperty = function (_0x5e09cd, _0x579236) {
  if (_0x5e09cd == a0_0x10c2f0) {
    this.alpha = _0x579236.readUInt8() / 100;
  }
};
function a0_0x58dfc0() {
  a0_0x58dfc0.superClass.call(this);
  this.spawnTime = a0_0x4f736f;
  this.alpha = 0;
}
window.GaleCharge = a0_0x58dfc0;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x58dfc0, a0_0x20e6c5, a0_0x89ae20);
var a0_0x58d04c = a0_0x12658e;
a0_0x155dad.prototype = Object.create(a0_0x58d04c.prototype);
a0_0x155dad.prototype.constructor = a0_0x155dad;
a0_0x155dad.superClass = a0_0x58d04c;
a0_0x155dad.prototype.lookAngle = 0;
a0_0x155dad.prototype.frameNumber = 0;
a0_0x155dad.prototype.isRolling = false;
a0_0x155dad.prototype.biomeType = false;
a0_0x155dad.prototype.updateZ = function () {
  this.z = 1002;
};
a0_0x155dad.prototype.customDraw = function (_0x1c32b4) {
  var _0xf2806c = this.rad - 10;
  var _0x1561ef = 1;
  var _0x4e3d70 = 0.15;
  var _0x5115c4 = 0.8;
  var _0x2d18be = (_0x5115c4 - _0x4e3d70) * 0.5;
  var _0x5a4f51 = _0x4e3d70 + _0x2d18be + _0x2d18be * Math.sin(Math.PI * 2 / _0x1561ef * (a0_0x4f736f / 1000));
  var _0x1561ef = 1;
  var _0x4e3d70 = 0.85;
  var _0x5115c4 = 1;
  var _0x2d18be = (_0x5115c4 - _0x4e3d70) * 0.5;
  var _0x20aab8 = 1;
  if (this.isRolling) {
    this.frameNumber = Math.trunc(a0_0x4f736f / 166) % 6;
  }
  var _0x1cd5cc = "gameobj/" + this.oType + "/" + this.biomeType + "/" + this.frameNumber + ".png";
  var _0x7977f = this.getSkinImageObj(_0x1cd5cc);
  if (_0x7977f) {
    var _0x12fac3 = 0;
    var _0x5bfb55 = this.rad;
    var _0xc404f5 = this.rad * 2.5;
    imH = this.rad * 2.5;
    var _0x5c79e4 = 0.5;
    var _0x2cb52c = 0.95;
    a0_0x4ef4f3.save();
    {
      a0_0x4ef4f3.globalAlpha *= this.onFireEffA * _0x20aab8;
      a0_0x4ef4f3.rotate(this.angle + a0_0x441370);
      a0_0x4ef4f3.drawImage(_0x7977f, _0x12fac3 + _0xc404f5 * -_0x5c79e4, _0x5bfb55 + imH * -_0x2cb52c, _0xc404f5, imH);
    }
    a0_0x4ef4f3.restore();
  }
};
a0_0x155dad.prototype.isFloating = false;
a0_0x155dad.prototype.isRolling = false;
a0_0x155dad.prototype.readUpdatedProperty = function (_0x3f12f2, _0x4baeda) {
  if (_0x3f12f2 == a0_0x7780d0) {
    this.isFloating = _0x4baeda.readUInt8() == 1;
  } else if (_0x3f12f2 == a0_0x5bcdd7) {
    this.isRolling = _0x4baeda.readUInt8() == 1;
  }
};
a0_0x155dad.prototype.readCustomData_onNewlyVisible = function (_0x42eefa) {
  this.biomeType = _0x42eefa.readUInt8();
  this.isRolling = _0x42eefa.readUInt8() == 1;
  this.isFloating = _0x42eefa.readUInt8() == 1;
};
function a0_0x155dad() {
  a0_0x155dad.superClass.call(this, a0_0xac1751);
  this.lookAngle = 0;
  this.isRolling = false;
  this.biomeType = false;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
var a0_0xac1751 = 165;
window.MopeBall = a0_0x155dad;
a0_0xa5d548.setCustomClassForGameObjType(a0_0x155dad, a0_0xac1751);
var a0_0x5be67c = 0;
function a0_0x2a8a64() {
  var _0x221958 = a0_0x3fed03("audio/click.mp3");
  if (_0x221958) {
    try {
      _0x221958.play();
    } catch (_0x42683c) {}
  }
}
a0_0x3fed03("audio/click.mp3");
a0_0x2e715b();
a0_0xbf47e6();
var a0_0x29725d = [];
function a0_0x4f8c54(_0x23aa98) {
  switch (_0x23aa98) {
    case a0_0x3e3fb1:
    case a0_0x225e01:
    case a0_0x38253a:
    case a0_0x18b147:
    case a0_0x579937:
    case a0_0x1344db:
    case a0_0x9b2337:
    case a0_0x2d0828:
    case a0_0x585d48:
    case a0_0x1fa0cc:
    case a0_0x11bb63:
    case a0_0x206d63:
    case a0_0x3aca93:
    case a0_0x343756:
    case a0_0x572e20:
    case a0_0x2ecc74:
      return true;
  }
  return false;
}
var a0_0x1d89a7 = null;
var a0_0x5b0010 = null;
const a0_0xe24bcf = function (_0x11a253) {
  var _0xfb50fb = _0x11a253.readBitGroup();
  var _0x419dd0 = _0xfb50fb.getBool();
  if (_0x419dd0) {
    var _0x23b945 = _0xfb50fb.getBool();
    if (_0x23b945) {
      vID = _0x11a253.readUInt32();
      if (a0_0x5b0010 == null) {
        a0_0x5b0010 = {
          id: vID
        };
        a0_0x5b0010._ox = a0_0x5b0010.X = a0_0x5b0010._nx = 0;
        a0_0x5b0010._oy = a0_0x5b0010.Y = a0_0x5b0010._ny = 0;
      }
      var _0x4ef7e5 = _0x11a253.readUInt32() / 100;
      var _0x3eeea9 = _0x11a253.readUInt32() / 100;
      a0_0x5b0010._ox = a0_0x5b0010.X;
      a0_0x5b0010._oy = a0_0x5b0010.Y;
      a0_0x5b0010._nx = _0x4ef7e5;
      a0_0x5b0010._ny = _0x3eeea9;
    } else {
      a0_0x5b0010 = null;
    }
  } else {
    a0_0x5b0010 = null;
  }
};
const a0_0x48604c = function () {
  var _0x5a1535 = a0_0x3d5ac5[a0_0x1c918d];
  if (a0_0x5b0010 == null || !_0x5a1535) {
    return;
  }
  a0_0x228781();
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.strokeStyle = "white";
  a0_0x4ef4f3.globalAlpha = 1;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.moveTo(_0x5a1535.x, _0x5a1535.y);
  a0_0x4ef4f3.lineTo(a0_0x5b0010.X, a0_0x5b0010.Y);
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.restore();
};
const a0_0x228781 = function () {
  var _0x2abf47 = 0.1;
  a0_0x5b0010.X = _0x2abf47 * (a0_0x5b0010._nx - a0_0x5b0010._ox) + a0_0x5b0010._ox;
  a0_0x5b0010.Y = _0x2abf47 * (a0_0x5b0010._ny - a0_0x5b0010._oy) + a0_0x5b0010._oy;
};
var a0_0x520a42 = new Array();
const a0_0x3ea2b8 = function (_0x425108) {
  var _0x11fa4e = _0x425108.readUInt8();
  a0_0x520a42 = new Array();
  for (i = 0; i < _0x11fa4e; i++) {
    var _0x43fc19 = _0x425108.readUInt16();
    var _0x41dffe = _0x425108.readUInt8();
    if (_0x41dffe > 0) {
      for (s = 0; s < _0x41dffe; s++) {
        var _0x2ff86c = _0x425108.readUInt16() / 4;
        var _0x5e6772 = _0x425108.readUInt16() / 4;
        if (_0x43fc19 == a0_0x4a208d) {
          var _0x3d8a6a = _0x425108.readUInt8() == 1;
          var _0x1ba6b3 = _0x425108.readUInt8();
          a0_0x520a42.push({
            oType: _0x43fc19,
            specType: _0x1ba6b3,
            x: _0x2ff86c,
            y: _0x5e6772,
            rad: 2,
            droppedInHole: _0x3d8a6a
          });
        } else if (_0x43fc19 == a0_0x5d1ea1) {
          var _0x1ba6b3 = _0x425108.readUInt8();
          a0_0x520a42.push({
            oType: _0x43fc19,
            specType: _0x1ba6b3,
            x: _0x2ff86c,
            y: _0x5e6772,
            rad: 2
          });
        } else {
          a0_0x520a42.push({
            oType: _0x43fc19,
            x: _0x2ff86c,
            y: _0x5e6772,
            rad: 2
          });
        }
      }
    }
  }
  var _0x41dffe = _0x425108.readUInt8();
  for (s = 0; s < _0x41dffe; s++) {
    var _0x405a8e = _0x425108.readUInt16();
    var _0x3f885a = _0x425108.readUInt16() / 4;
    var _0x2ff86c = _0x425108.readUInt16() / 4;
    var _0x5e6772 = _0x425108.readUInt16() / 4;
    a0_0x520a42.push({
      oType: a0_0x20e6c5,
      abil: _0x405a8e,
      x: _0x2ff86c,
      y: _0x5e6772,
      angle: _0x3f885a,
      rad: 2
    });
  }
};
const a0_0x598259 = function (_0x27bf91) {
  a0_0x105431 = {};
  var _0x2cf4e5 = _0x27bf91.readUInt8() == 1;
  if (_0x2cf4e5) {
    var _0x1ddb65 = _0x27bf91.readUInt8();
    a0_0x105431 = {};
    a0_0x105431.treesCount = _0x1ddb65;
    for (i = 0; i < _0x1ddb65; i++) {
      a0_0x105431[_0x27bf91.readUInt32()] = 1;
    }
  }
};
function a0_0x7bf3ba(_0x502a57) {
  var _0x555c59 = [];
  _0x555c59.rank = _0x502a57.readUInt16();
  _0x555c59.topRank = _0x502a57.readUInt16();
  _0x555c59.timeAlive = _0x502a57.readUInt16();
  _0x555c59.totalKills = _0x502a57.readUInt16();
  _0x555c59.maxXP = _0x502a57.readUInt32();
  return _0x555c59;
}
var a0_0x277e88 = null;
var a0_0x5d4115 = 0;
function a0_0x14fb16(_0x275b0d) {
  a0_0x5d4115 = a0_0x8379e6 * 0.6;
  if (a0_0x277e88 == null) {
    a0_0x277e88 = document.createElement("canvas");
  }
  var _0x1eafdd = a0_0x277e88.getContext("2d");
  var _0xb27a03 = 55;
  var _0x4b82b5 = 40;
  var _0x4d80b9 = 5;
  var _0x283175 = 200;
  var _0x3cbbf6 = 420;
  _0xb27a03 = _0x283175 + _0x4d80b9 * 2;
  a0_0x277e88.width = _0x3cbbf6 + _0x4d80b9 * 2;
  a0_0x277e88.height = _0xb27a03;
  _0x1eafdd.globalAlpha = 0.2;
  _0x1eafdd.fillStyle = "#000000";
  _0x1eafdd.fillRect(0, 0, a0_0x277e88.width, a0_0x277e88.height);
  _0x1eafdd.fillStyle = "#000000";
  _0x1eafdd.fillRect(_0x4d80b9, _0x4d80b9, a0_0x277e88.width - _0x4d80b9 * 2, a0_0x277e88.height - _0x4d80b9 * 2);
  var _0x351d2e = 55 + _0x4d80b9;
  _0x1eafdd.globalAlpha = 1;
  _0x1eafdd.fillStyle = "#FFFFFF";
  _0x1eafdd.font = "30px Arial";
  var _0x48dde8 = "YOU DIED!";
  _0x1eafdd.font = "30px Arial";
  _0x1eafdd.fillText(_0x48dde8, a0_0x277e88.width / 2 - _0x1eafdd.measureText(_0x48dde8).width / 2, _0x351d2e);
  _0x1eafdd.font = "20px Arial";
  _0x351d2e += 45;
  _0x48dde8 = "You were #" + _0x275b0d.rank;
  _0x1eafdd.fillText(_0x48dde8, a0_0x277e88.width / 2 - _0x1eafdd.measureText(_0x48dde8).width / 2, _0x351d2e);
  _0x351d2e += 40;
  var _0x521772 = a0_0x3d4b84(_0x275b0d.timeAlive);
  var _0x4cd556 = _0x4d80b9 + 15;
  a0_0x4d940a(_0x1eafdd, "Time Alive", _0x521772, _0x4cd556, _0x351d2e);
  _0x4cd556 += 210;
  a0_0x4d940a(_0x1eafdd, "Total Kills", _0x275b0d.totalKills, _0x4cd556, _0x351d2e);
  _0x351d2e += 40;
  _0x4cd556 = _0x4d80b9 + 15;
  a0_0x4d940a(_0x1eafdd, "Top rank", _0x275b0d.topRank, _0x4cd556, _0x351d2e);
  _0x4cd556 += 210;
  a0_0x4d940a(_0x1eafdd, "Max XP", a0_0x4cf280(_0x275b0d.maxXP), _0x4cd556, _0x351d2e);
}
function a0_0x165516(_0x1b7acf, _0x26e560, _0x496077, _0x16b681, _0x3f8788, _0x497c8f) {
  if (a0_0x1d703e == 2) {
    return;
  }
  a0_0x4ef4f3.save();
  var _0x51cf9f = _0x496077 - _0x1b7acf;
  var _0x2dcb9a = _0x16b681 - _0x26e560;
  var _0x3b9f53 = 0;
  var _0x377af6 = a0_0x11866b / 2 / a0_0x19baa9;
  var _0x169577 = a0_0x8379e6 / 2 / a0_0x19baa9;
  _0x1b7acf = Math.max(_0x1b7acf, a0_0xaeda51 - _0x377af6 - _0x3f8788 + _0x3b9f53);
  _0x26e560 = Math.max(_0x26e560, a0_0xfc3cb9 - _0x169577 - _0x497c8f + _0x3b9f53);
  _0x496077 = Math.min(_0x496077, a0_0xaeda51 + _0x377af6 - _0x3f8788 - _0x3b9f53);
  _0x16b681 = Math.min(_0x16b681, a0_0xfc3cb9 + _0x169577 - _0x497c8f - _0x3b9f53);
  a0_0x4ef4f3.strokeStyle = "black";
  a0_0x4ef4f3.globalAlpha = 0.055;
  var _0x4b5ba5 = 30;
  var _0x1e7951 = _0x496077 - _0x1b7acf;
  fillH = _0x16b681 - _0x26e560;
  for (var _0x52e923 = -0.5 + _0x1b7acf + (_0x51cf9f - _0x1b7acf) % _0x4b5ba5; _0x52e923 < _0x1b7acf + _0x1e7951; _0x52e923 += _0x4b5ba5) {
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.moveTo(_0x52e923, _0x26e560);
    a0_0x4ef4f3.lineTo(_0x52e923, _0x26e560 + fillH);
    a0_0x4ef4f3.stroke();
  }
  for (dy = -0.5 + _0x26e560 + (_0x2dcb9a - _0x26e560) % _0x4b5ba5; dy < _0x26e560 + fillH; dy += _0x4b5ba5) {
    a0_0x4ef4f3.beginPath();
    a0_0x4ef4f3.moveTo(_0x1b7acf, dy);
    a0_0x4ef4f3.lineTo(_0x1b7acf + _0x1e7951, dy);
    a0_0x4ef4f3.stroke();
  }
  a0_0x4ef4f3.restore();
}
async function a0_0x32f727() {
  var _0x376d2e = document.getElementById("optionsDiv");
  _0x376d2e.style.display = "none";
  a0_0x12b93();
  try {
    var _0x183c41 = new Audio("audio/click.mp3");
    _0x183c41.play();
  } catch (_0x3c3694) {}
  if (a0_0x45fe31) {
    return;
  }
  if (await a0_0x1b01f2()) {
    a0_0x1a0b07();
  } else {
    a0_0x3b4acc(false);
  }
}
document.getElementById("startButton").onclick = a0_0x32f727;
document.getElementById("btnSpectate").onclick = function () {
  a0_0x17bdb1();
};
const a0_0x17bdb1 = function () {
  if (!a0_0x39882a) {
    var _0x6f0916 = new a0_0x49f976(1);
    _0x6f0916.writeUInt8(a0_0x1bc050);
    a0_0x217e77(_0x6f0916);
  }
};
var a0_0x1ec8af = false;
var a0_0x2ca781 = false;
let a0_0xa31135 = false;
function a0_0x3f6736(_0x47b7c0) {
  var _0x5e6308 = document.getElementById("chatinput");
  switch (_0x47b7c0.key) {
    case "ArrowLeft":
      if (_0x47b7c0.ctrlKey) {
        var _0x50f84f = _0x5e6308.style.width;
        _0x50f84f = _0x50f84f.replace("px", "");
        _0x50f84f = Number(_0x50f84f) - 5;
        _0x5e6308.style.width = _0x50f84f + "px";
      } else {
        var _0x50f84f = _0x5e6308.style.left;
        _0x50f84f = _0x50f84f.replace("px", "");
        _0x50f84f = Number(_0x50f84f) - 5;
        _0x5e6308.style.left = _0x50f84f + "px";
      }
      break;
    case "ArrowRight":
      if (_0x47b7c0.ctrlKey) {
        var _0x50f84f = _0x5e6308.style.width;
        _0x50f84f = _0x50f84f.replace("px", "");
        _0x50f84f = Number(_0x50f84f) + 5;
        _0x5e6308.style.width = _0x50f84f + "px";
      } else {
        var _0x50f84f = _0x5e6308.style.left;
        _0x50f84f = _0x50f84f.replace("px", "");
        _0x50f84f = Number(_0x50f84f) + 5;
        _0x5e6308.style.left = _0x50f84f + "px";
      }
      break;
    case "ArrowUp":
      var _0x50f84f = _0x5e6308.style.top;
      _0x50f84f = _0x50f84f.replace("px", "");
      _0x50f84f = Number(_0x50f84f) - 5;
      _0x5e6308.style.top = _0x50f84f + "px";
      break;
    case "ArrowDown":
      var _0x50f84f = _0x5e6308.style.top;
      _0x50f84f = _0x50f84f.replace("px", "");
      _0x50f84f = Number(_0x50f84f) + 5;
      _0x5e6308.style.top = _0x50f84f + "px";
      break;
  }
}
var a0_0x1aa833 = false;
var a0_0x14354e = true;
function a0_0x1c3eed(_0x28df9c) {
  if (_0x28df9c.indexOf("/anim-switch:") != -1) {
    var _0x40adef = _0x28df9c.replace("/anim-switch:", "");
    switch (_0x40adef) {
      case "honeybee":
        a0_0x252e67 = !a0_0x252e67;
        return true;
      case "phoenix":
        a0_0x56691c = !a0_0x56691c;
        return true;
    }
  }
  return a0_0x5f182c(_0x28df9c);
}
var a0_0x363ebf = false;
const a0_0x5f182c = function (_0x5dbbf9) {
  if (!a0_0x8418ab && !a0_0x1696ee) {
    return false;
  }
  if (_0x5dbbf9.indexOf("chatbox:") != -1) {
    var _0x44dcc1 = _0x5dbbf9.replace("chatbox:", "");
    switch (_0x44dcc1) {
      case "edit:start":
        a0_0x1aa833 = true;
        break;
      case "edit:end":
        var _0x5cc5a6 = document.getElementById("chatinput");
        var _0xafde5a = {
          autoLoad: a0_0x14354e,
          left: _0x5cc5a6.style.left,
          top: _0x5cc5a6.style.top,
          width: _0x5cc5a6.style.width
        };
        localStorage.setItem("chatbox", JSON.stringify(_0xafde5a));
        a0_0x1aa833 = false;
        break;
      case "set:autoload":
        a0_0x14354e = true;
        break;
      case "load":
        var _0x5cc5a6 = document.getElementById("chatinput");
        var _0xafde5a = JSON.parse(localStorage.getItem("chatbox"));
        _0x5cc5a6.style.left = _0xafde5a.left;
        _0x5cc5a6.style.top = _0xafde5a.top;
        _0x5cc5a6.style.width = _0xafde5a.width;
        break;
      case "reset":
        var _0x5cc5a6 = document.getElementById("chatinput");
        _0x5cc5a6.style.left = "";
        _0x5cc5a6.style.right = "";
        _0x5cc5a6.style.width = "";
        break;
    }
    return;
  }
  switch (_0x5dbbf9) {
    case "show:interface":
      a0_0xacaa8 = true;
      a0_0x102063 = true;
      a0_0x2f3184 = true;
      a0_0x55c235 = true;
      a0_0x2ee2b0 = true;
      a0_0x5acfd9 = true;
      a0_0x363ebf = false;
      return true;
    case "hide:interface":
      a0_0xacaa8 = false;
      a0_0x102063 = false;
      a0_0x2f3184 = false;
      a0_0x55c235 = false;
      a0_0x2ee2b0 = false;
      a0_0x5acfd9 = false;
      a0_0x363ebf = true;
      return true;
    case "show:map":
      a0_0xacaa8 = true;
      return true;
    case "show:xpbar":
      a0_0x2f3184 = true;
      return true;
    case "show:board":
      a0_0x102063 = true;
      return true;
    case "show:waterbar":
      a0_0x55c235 = true;
      return true;
    case "show:1v1":
      a0_0x5acfd9 = true;
      return true;
    case "show:ability":
      a0_0x2ee2b0 = true;
      return true;
    case "hide:map":
      a0_0xacaa8 = false;
      return true;
    case "hide:xpbar":
      a0_0x2f3184 = false;
      return true;
    case "hide:board":
      a0_0x102063 = false;
      return true;
    case "hide:waterbar":
      a0_0x55c235 = false;
      return true;
    case "hide:1v1":
      a0_0x5acfd9 = false;
      return true;
    case "hide:ability":
      a0_0x2ee2b0 = false;
      return true;
  }
  return false;
};
function a0_0x50fde7(_0x219346) {
  if (a0_0x185235) {
    var _0x144ec3 = JSON.parse(localStorage.getItem("chatbox"));
    if (_0x219346 && _0x144ec3 && _0x144ec3.autoLoad) {
      var _0x5df4ef = document.getElementById("chatinput");
      _0x5df4ef.style.left = _0x144ec3.left;
      _0x5df4ef.style.top = _0x144ec3.top;
      _0x5df4ef.style.width = _0x144ec3.width;
    }
  }
}
a0_0x50fde7(true);
const a0_0x5043b2 = function () {
  if (!a0_0x368ea0 && !a0_0x5a2030) {
    a0_0x1fcf24("You must login to chat!", "success", 5);
    return;
  }
  var _0x29a909 = document.getElementById("chatinput");
  if (!a0_0x1ec8af && a0_0x290640) {
    _0x29a909.style.visibility = "visible";
    _0x29a909.focus();
    a0_0x1ec8af = true;
    if (a0_0x1696ee) {
      _0x29a909.maxLength = 100;
    }
    _0x29a909.onblur = function () {
      if (a0_0x1ec8af) {
        a0_0x5043b2();
      }
    };
  } else if (a0_0x1ec8af) {
    var _0x59d04 = _0x29a909.value + "";
    a0_0x1ec8af = false;
    _0x29a909.style.visibility = "hidden";
    if (_0x59d04.length > 0 && a0_0x290640) {
      if (!a0_0x1c3eed(_0x59d04)) {
        newMsg = new a0_0x49f976(3 + a0_0x5162d0(_0x59d04).length);
        newMsg.writeUInt8(19);
        newMsg.writeString(_0x59d04);
        a0_0x217e77(newMsg);
      }
    }
    _0x29a909.value = "";
  }
};
var a0_0x3a3d1a = 1000;
var a0_0x3510c5 = 1000;
function a0_0x3b767c() {
  a0_0x22650f = 250;
}
function a0_0x3e8b56() {
  a0_0x3a3d1a = window.innerWidth;
  a0_0x3510c5 = window.innerHeight;
  if (a0_0x952d77) {
    a0_0x3a3d1a = document.body.clientWidth;
    a0_0x3510c5 = document.body.clientHeight;
  }
  switch (a0_0x1d703e) {
    case a0_0x30b084:
    case a0_0x4db98f:
      a0_0x24bc92 = window.devicePixelRatio * 0.6;
      break;
    case 3:
      a0_0x24bc92 = window.devicePixelRatio;
      break;
    default:
      console.log("Unknown graphics level " + a0_0x1d703e);
  }
  a0_0x11866b = a0_0x3a3d1a * a0_0x24bc92;
  a0_0x8379e6 = a0_0x3510c5 * a0_0x24bc92;
  a0_0xba590d = a0_0x24bc92 * 0.85 * Math.max(a0_0x3a3d1a / 1920, a0_0x3510c5 / 1080);
}
function a0_0x2e715b() {
  a0_0x3e8b56();
  a0_0x55b5b8 = null;
  a0_0x43318e.width = a0_0x11866b;
  a0_0x43318e.height = a0_0x8379e6;
  a0_0x43318e.style.width = a0_0x3a3d1a + "px";
  a0_0x43318e.style.height = a0_0x3510c5 + "px";
  var _0x6ec044 = document.getElementById("chatinput");
  _0x6ec044.style.marginTop = a0_0x3510c5 / 2 - 50 + "px";
  a0_0xc8a0f8();
  if (a0_0x14ed4d()) {
    mes = new a0_0x49f976(7);
    mes.writeUInt8(17);
    mes.writeUInt16(a0_0x11866b);
    mes.writeUInt16(a0_0x8379e6);
    a0_0x3b767c();
    mes.writeUInt16(a0_0x22650f);
    a0_0x217e77(mes);
  }
  if (a0_0x4ff181 != null) {
    a0_0x4ff181.onResize();
  }
  a0_0x449c86(a0_0x49d687);
}
window.onresize = a0_0x2e715b;
var a0_0x1ef8d7 = 1;
var a0_0x19264d = 2;
var a0_0x2b7c14 = 3;
var a0_0x29b7e = 4;
var a0_0x2e399b = 5;
var a0_0xa3cc6d = 6;
var a0_0x1ccc80 = 7;
function a0_0x42f350(_0x557d11) {
  var _0xe48beb = new a0_0x49f976(2);
  _0xe48beb.writeUInt8(21);
  _0xe48beb.writeUInt8(_0x557d11 ? 1 : 0);
  a0_0x217e77(_0xe48beb);
}
function a0_0x448dc4(_0x37e503, _0x30d58c) {
  switch (_0x37e503) {
    case a0_0x1ef8d7:
      {
        if (a0_0x561d8a != _0x30d58c) {
          if (a0_0x14ed4d() && a0_0x290640) {
            if (_0x30d58c) {
              a0_0x189757();
            }
            a0_0x42f350(_0x30d58c);
            if (a0_0x3326d1 > 0) {
              var _0x38d49b = new a0_0x49f976(5);
              _0x38d49b.writeUInt8(a0_0x45b869);
              _0x38d49b.writeUInt32(a0_0x3326d1);
              a0_0x217e77(_0x38d49b);
              a0_0x3326d1 = 0;
            }
          }
        }
        a0_0x561d8a = _0x30d58c;
      }
      break;
    case a0_0x19264d:
      {
        if (a0_0x27bdd2 != _0x30d58c) {
          if (a0_0x14ed4d() && a0_0x290640) {
            if (_0x30d58c) {
              a0_0x189757();
            }
            var _0x38d49b = new a0_0x49f976(2);
            _0x38d49b.writeUInt8(20);
            _0x38d49b.writeUInt8(_0x30d58c ? 1 : 0);
            a0_0x217e77(_0x38d49b);
          }
        }
        a0_0x27bdd2 = _0x30d58c;
      }
      break;
    case a0_0x2b7c14:
      {
        if ((a0_0x8418ab || a0_0x1696ee) && a0_0x290640) {
          var _0x38d49b = new a0_0x49f976(1);
          _0x38d49b.writeUInt8(26);
          a0_0x217e77(_0x38d49b);
        }
      }
      break;
    case a0_0x29b7e:
      {
        if ((a0_0x8418ab || a0_0x1696ee) && a0_0x290640) {
          var _0x38d49b = new a0_0x49f976(1);
          _0x38d49b.writeUInt8(27);
          a0_0x217e77(_0x38d49b);
        }
      }
      break;
    case a0_0x2e399b:
      {
        if (a0_0x290640) {
          var _0x38d49b = new a0_0x49f976(2);
          _0x38d49b.writeUInt8(28);
          _0x38d49b.writeUInt8(_0x30d58c ? 1 : 0);
          a0_0x217e77(_0x38d49b);
        }
      }
      break;
    case a0_0xa3cc6d:
      {
        if (a0_0x290640 && a0_0x1696ee) {
          var _0x38d49b = new a0_0x49f976(2);
          _0x38d49b.writeUInt8(30);
          _0x38d49b.writeUInt8(_0x30d58c ? 1 : 0);
          a0_0x217e77(_0x38d49b);
        }
      }
      break;
    case a0_0x1ccc80:
      {
        if (a0_0x290640 && a0_0x1696ee) {
          var _0x38d49b = new a0_0x49f976(2);
          _0x38d49b.writeUInt8(29);
          _0x38d49b.writeUInt8(_0x30d58c ? 1 : 0);
          a0_0x217e77(_0x38d49b);
        }
      }
      break;
  }
}
function a0_0x44511b() {
  if (!a0_0x1ec8af && a0_0x290640) {
    if (document.activeElement && document.activeElement != a0_0x43318e) {
      if (a0_0x43318e) {
        console.log("canvas is focused now!");
        a0_0x43318e.focus();
      }
    } else {}
  }
}
a0_0x43318e.onblur = function (_0x5956fd) {
  a0_0x2f06c7(_0x5956fd);
};
window.onfocus = function (_0x263ed2) {
  a0_0x380eef(_0x263ed2);
};
function a0_0x2f06c7(_0x10ed92) {
  if (a0_0x27bdd2 || a0_0x561d8a) {
    return;
  }
  a0_0x448dc4(a0_0x1ef8d7, false);
  a0_0x448dc4(a0_0x19264d, false);
}
function a0_0x380eef(_0x573c1e) {
  a0_0x12b93();
}
document.oncontextmenu = document.body.oncontextmenu = function () {
  return !a0_0x290640;
};
function a0_0x36f64f() {
  var _0x30a308 = a0_0x11866b / 2;
  var _0x325915 = a0_0x8379e6 / 2;
  a0_0x5c2f2b = (a0_0x37bc1c - (_0x30a308 - a0_0xaeda51 * a0_0x19baa9)) / a0_0x19baa9;
  a0_0x50fcd3 = (a0_0x46dbb3 - (_0x325915 - a0_0xfc3cb9 * a0_0x19baa9)) / a0_0x19baa9;
}
function a0_0x38cdab(_0x4661de) {
  return _0x4661de * a0_0x19baa9 + (a0_0x11866b / 2 - a0_0xaeda51 * a0_0x19baa9);
}
function a0_0x182133(_0x4f7794) {
  return _0x4f7794 * a0_0x19baa9 + (a0_0x8379e6 / 2 - a0_0xfc3cb9 * a0_0x19baa9);
}
function a0_0x5c684e(_0xae8c3) {
  return (_0xae8c3 - (a0_0x11866b / 2 - a0_0xaeda51 * a0_0x19baa9)) / a0_0x19baa9;
}
function a0_0x365eca(_0x453c24) {
  return (_0x453c24 - (a0_0x8379e6 / 2 - a0_0xfc3cb9 * a0_0x19baa9)) / a0_0x19baa9;
}
function a0_0x189757() {
  if (a0_0x2ca781 || a0_0x45f685) {
    var _0x2465bf = a0_0x3d5ac5[a0_0x1c918d];
    if (_0x2465bf) {
      a0_0x5c2f2b = _0x2465bf.x;
      a0_0x50fcd3 = _0x2465bf.y + 2;
    } else {
      return;
    }
  }
  if (a0_0x14ed4d() && (a0_0x290640 || a0_0x55b7b5)) {
    if (Math.abs(a0_0x45d875 - a0_0x5c2f2b) > 0.1 || Math.abs(a0_0x488897 - a0_0x50fcd3) > 0.1) {
      a0_0x45d875 = a0_0x5c2f2b;
      a0_0x488897 = a0_0x50fcd3;
      mes = new a0_0x49f976(a0_0x3f5e0d + 2);
      mes.writeUInt8(5);
      mes.writeInt16(a0_0x5c2f2b);
      mes.writeInt16(a0_0x50fcd3);
      a0_0x217e77(mes);
    }
  }
}
setInterval(a0_0x189757, 10);
setInterval(a0_0x4987c4, 5000);
var a0_0x478314 = "mope.io";
function a0_0xbf47e6() {
  a0_0x2e715b();
  a0_0x2943a2 = 0;
  a0_0x3d5ac5 = {};
  a0_0x13f254 = [];
  a0_0x45e0de = [];
  a0_0x51b69f = 25;
  a0_0x3ce8a6 = a0_0x1eb910 = 0;
  a0_0x5b69a3(a0_0x3ce8a6);
  curBarPerc_n = a0_0x552e19 = 100;
  a0_0x3296b0 = a0_0x44a2d1 = a0_0x24cc63 = 0;
  a0_0x249c78(a0_0x24cc63);
  a0_0x3e3656 = null;
  a0_0x39882a = false;
  a0_0x235d38 = null;
  a0_0x58f640 = "";
  a0_0x1baca6();
  a0_0x409384 = false;
  a0_0x2666f4 = 0;
  a0_0x1dec92 = [];
  a0_0x5bc21a = false;
  a0_0x95c20e = [];
  a0_0x316bf2 = 0;
  a0_0x46d806 = 0;
  isInfected = a0_0x1528ea = false;
  a0_0x548917 = 0;
  a0_0x5557b5 = false;
  a0_0x48255a = 0;
  a0_0x3fd275 = [];
  if (a0_0x314917 != null) {
    a0_0x314917.isVisible = false;
  }
  a0_0x314917 = null;
  a0_0x136a54 = false;
  a0_0x537e7e = 0;
  a0_0x25413a = 0;
  a0_0x1696ee = false;
  a0_0x55b7b5 = false;
  a0_0x277e88 = null;
}
const a0_0x570184 = document.getElementById("nickInput");
a0_0x570184.onchange = () => {
  let _0x43ce5b = a0_0x570184.value;
  if (typeof a0_0x478314 !== "undefined") {
    a0_0x478314 = _0x43ce5b;
    if (window.localStorage) {
      try {
        window.localStorage.setItem("nick", _0x43ce5b);
      } catch (_0x28dc98) {}
    }
  }
};
window.onload = function () {
  a0_0x2e715b();
  if (window.localStorage) {
    var _0x213ea1 = a0_0x570184;
    a0_0x478314 = window.localStorage.getItem("nick");
    _0x213ea1.value = a0_0x478314;
    _0x213ea1.setSelectionRange(0, _0x213ea1.value.length);
    if (!a0_0x15377d) {
      _0x213ea1.focus();
    }
  }
};
if (a0_0x43318e.addEventListener) {
  a0_0x43318e.addEventListener("mousewheel", a0_0x8e2f6a);
  a0_0x43318e.addEventListener("DOMMouseScroll", a0_0x8e2f6a);
} else {
  a0_0x43318e.attachEvent("onmousewheel", a0_0x8e2f6a);
}
var a0_0x1f3e64 = 0;
var a0_0x3a7cd2 = 1;
function a0_0x8e2f6a(_0x35a511) {
  var _0x35a511 = window.event || _0x35a511;
  var _0x18db67 = Math.max(-1, Math.min(1, _0x35a511.wheelDelta || -_0x35a511.detail));
  if (_0x18db67 == 1) {
    a0_0x1f3e64 += 1;
  } else {
    a0_0x1f3e64 -= 0.1;
  }
  a0_0x1f3e64 = Math.max(0, a0_0x1f3e64);
  a0_0x1f3e64 = Math.min(10, a0_0x1f3e64);
  if (a0_0x5e3eb6) {
    var _0x49b41d = Math.abs(a0_0x1f3e64) * 100;
    var _0x4a3eaa = new a0_0x49f976(4);
    _0x4a3eaa.writeUInt8(a0_0x404b8d);
    _0x4a3eaa.writeUInt8(_0x18db67 == -1 ? 0 : 1);
    _0x4a3eaa.writeInt16(_0x49b41d);
    a0_0x217e77(_0x4a3eaa);
  }
}
var a0_0x4ff181 = null;
function a0_0x55dea9() {
  a0_0x4140b0();
  if (a0_0x4ff181 != null) {
    a0_0x4ff181.interfaceReset();
  }
  a0_0x4ff181 = null;
  console.log("setting game mode interface:" + a0_0xe92752);
  if (a0_0xe92752 == a0_0x556707) {
    a0_0x4ff181 = new a0_0x23609a(a0_0xe92752);
    a0_0x4ff181.state = a0_0x417918;
  } else if (a0_0xe92752 == a0_0x342dbf) {
    a0_0x4ff181 = new a0_0x7b7abd(a0_0xe92752);
    a0_0x4ff181.state = a0_0x417918;
  } else if (a0_0xe92752 == a0_0x5bd4ac) {
    a0_0x4ff181 = new a0_0x4044e4(a0_0xe92752);
    a0_0x4ff181.state = a0_0x417918;
  } else if (a0_0xe92752 == a0_0x16237b) {
    a0_0x4ff181 = new a0_0x1640f9();
    a0_0x4ff181.state = a0_0x417918;
  } else if (a0_0xe92752 == a0_0x2a4d6d) {
    a0_0x4ff181 = new a0_0x3b7151(a0_0xe92752);
    a0_0x4ff181.state = a0_0x417918;
  }
  console.log(a0_0x4ff181);
}
function a0_0x5724f5(_0x593754, _0x15fa51, _0x10517c) {
  var _0x414162 = _0x593754.x + _0x15fa51 * Math.cos(_0x10517c);
  var _0x4e886d = _0x593754.y + _0x15fa51 * Math.sin(_0x10517c);
  return {
    x: _0x414162,
    y: _0x4e886d
  };
}
function a0_0x289c76(_0xbc8f55, _0x3f40b2, _0x46ebea, _0x250b9f, _0x4cca2d) {
  a0_0x4ef4f3.save();
  a0_0x4ef4f3.globalAlpha = _0x4cca2d;
  a0_0x4ef4f3.beginPath();
  a0_0x4ef4f3.translate(_0xbc8f55, _0x3f40b2);
  a0_0x4ef4f3.rotate(_0x46ebea);
  a0_0x4ef4f3.moveTo(-5, -5);
  a0_0x4ef4f3.lineTo(-5, 5);
  a0_0x4ef4f3.lineTo(5, 5);
  a0_0x4ef4f3.lineWidth = 1.5;
  a0_0x4ef4f3.strokeStyle = _0x250b9f;
  a0_0x4ef4f3.fillStyle = _0x250b9f;
  a0_0x4ef4f3.stroke();
  a0_0x4ef4f3.restore();
}
function a0_0x47720b() {
  var _0x1665e9 = a0_0x3d5ac5[a0_0x1c918d];
  if (_0x1665e9) {
    for (d = 0; d < a0_0x13f254.length; d++) {
      var _0x1d23c1 = a0_0x13f254[d];
      if (_0x1665e9.id != _0x1d23c1.id) {
        if (_0x1d23c1.oType === a0_0x1370b8) {
          var _0x1726e0 = _0x1d23c1.getOutlineColor();
          var _0x28301a = false;
          if (_0x1726e0 == a0_0x75ca18 || _0x1726e0 == a0_0x237aea) {
            _0x28301a = true;
          }
          if (_0x28301a) {
            a0_0x4d0634(_0x1665e9, _0x1d23c1, _0x1726e0);
          }
        }
      }
    }
  }
}
function a0_0xe35d24(_0x23cc24, _0x56e42c) {
  var _0x4c6a5e = _0x23cc24.x - _0x56e42c.x;
  var _0x56b526 = _0x23cc24.y - _0x56e42c.y;
  var _0x424a30 = Math.sqrt(_0x4c6a5e * _0x4c6a5e + _0x56b526 * _0x56b526);
  return _0x424a30;
}
function a0_0x4d0634(_0x5d8ed4, _0x365920, _0x1ba0dc) {
  var _0x2d7420 = a0_0x11866b / 2;
  var _0x51ede6 = a0_0x8379e6 / 2;
  var _0x576b17 = a0_0x1fdaa8(_0x365920.x, _0x365920.y, _0x5d8ed4.x, _0x5d8ed4.y);
  var _0x498d72 = a0_0x38cdab(_0x365920.x);
  var _0x1b9202 = a0_0x182133(_0x365920.y);
  var _0x5388eb = _0x365920.rad * a0_0x19baa9;
  var _0x4edbc6 = Math.min(Math.abs(_0x498d72 - _0x5388eb - 0), Math.abs(_0x498d72 + _0x5388eb - a0_0x11866b));
  var _0x482b25 = Math.min(Math.abs(_0x1b9202 - _0x5388eb - 0), Math.abs(_0x1b9202 + _0x5388eb - a0_0x8379e6));
  var _0x75648d = -50 - _0x5d8ed4.rad;
  var _0x1e04d7 = a0_0x5724f5({
    x: _0x5d8ed4.x,
    y: _0x5d8ed4.y
  }, _0x75648d, _0x576b17);
  var _0xf45514 = a0_0xe35d24({
    x: _0x1e04d7.x,
    y: _0x1e04d7.y
  }, {
    x: _0x365920.x,
    y: _0x365920.y
  });
  if (_0x365920.rad < 100 && _0xf45514 < _0x365920.rad * 0.5 || _0xf45514 < 200) {
    return;
  }
  _0x576b17 += a0_0x844a6b(45);
  var _0x413a4c = 1;
  var _0x221e5e = 20;
  a0_0x289c76(_0x1e04d7.x, _0x1e04d7.y, _0x576b17, _0x1ba0dc, _0x413a4c);
}
function a0_0x4140b0() {
  a0_0x4b95c7(true);
}
function a0_0x20db97() {
  if (a0_0x3a86ef == a0_0x257f12) {
    if (a0_0x4be2c8 == null) {
      var _0x1d1e6d = new a0_0x49f976(2);
      _0x1d1e6d.writeUInt8(a0_0x33f136);
      a0_0x217e77(_0x1d1e6d);
    } else {
      var _0x1d1e6d = new a0_0x49f976(2);
      _0x1d1e6d.writeUInt8(a0_0x33f136);
      a0_0x217e77(_0x1d1e6d);
      a0_0x4be2c8.updateExpiry();
    }
  }
}
var a0_0x4e2534 = 5;
var a0_0x3721c7 = 5;
var a0_0x217136 = 10;
var a0_0x63fbd1 = 0;
var a0_0x2d6128 = 0;
var a0_0xbe2c6c = null;
var a0_0x933904 = 0;
var a0_0x4dac63 = null;
var a0_0x2591d0 = 0;
var a0_0x288336 = 15;
var a0_0xb3901 = 0;
var a0_0x4be2c8 = null;
function a0_0x3ffb61() {
  if (a0_0x4be2c8 != null) {
    a0_0x4be2c8.display();
  }
}
function a0_0x189632() {
  if (a0_0x4dac63 == null) {
    a0_0xb3901 = 0;
    a0_0xbe2c6c = null;
    return;
  }
  if (a0_0xbe2c6c == null) {
    a0_0xbe2c6c = document.createElement("canvas");
  }
  if (a0_0xbe2c6c == null) {
    return;
  }
  if (a0_0xb3901 == 0) {
    a0_0xb3901 = a0_0x4f736f;
  }
  var _0x4b8dc6 = a0_0xbe2c6c.getContext("2d");
  var _0xf6c98d = 55;
  var _0x1f4a7e = 5;
  var _0x37ba02 = 0;
  var _0x2de731 = a0_0xba590d * 80;
  var _0x5f4dd1 = 130 + (_0x2de731 + 10) * 5;
  var _0x5f4dd1 = a0_0xba590d * 700;
  var _0x46ee9a = a0_0xba590d * 700;
  console.log("inferface scale " + a0_0xba590d + " borad_height " + _0x5f4dd1);
  _0xf6c98d = _0x5f4dd1 + _0x1f4a7e * 2;
  a0_0xbe2c6c.width = _0x46ee9a + _0x1f4a7e * 2;
  a0_0xbe2c6c.height = _0xf6c98d;
  var _0x1fc496 = 200;
  a0_0x933904 = _0x1fc496;
  _0x4b8dc6.globalAlpha = 0.1;
  var _0x15053c = _0x1f4a7e;
  _0x4b8dc6.globalAlpha = 1;
  _0x4b8dc6.fillStyle = "#FFFFFF";
  _0x4b8dc6.font = "30px Arial";
  _0x15053c += 45;
  var _0x4deecc = "APEX KILLS";
  _0x4b8dc6.font = "30px Arial";
  _0x4b8dc6.fillText(_0x4deecc, a0_0xbe2c6c.width / 2 - _0x4b8dc6.measureText(_0x4deecc).width / 2, _0x15053c);
  _0x1fc496 = 100;
  _0x15053c += _0x2de731;
  var _0x3f8373 = 360 / a0_0x4dac63.anis.length;
  var _0x2c60e8 = a0_0xba590d * 250;
  var _0x428d09 = a0_0xbe2c6c.width / 2;
  var _0xf8f1f1 = a0_0xbe2c6c.height / 2;
  _0x4b8dc6.fillStyle = "black";
  _0x4b8dc6.globalAlpha = 0.1;
  _0x4b8dc6.beginPath();
  _0x4b8dc6.arc(_0x428d09, _0x428d09, _0x2c60e8 - _0x2de731 / 2, 0, Math.PI * 2, false);
  _0x4b8dc6.arc(_0x428d09, _0x428d09, _0x2c60e8 + _0x2de731 / 2, Math.PI * 2, 0, true);
  _0x4b8dc6.fill();
  _0x4b8dc6.globalAlpha = 0.5;
  _0x4b8dc6.beginPath();
  _0x4b8dc6.arc(_0x428d09, _0x428d09, _0x2c60e8 + _0x2de731 / 2, Math.PI * 2, 0);
  _0x4b8dc6.stroke();
  var _0x456ff0 = Math.PI * 2 / a0_0x4dac63.anis.length;
  var _0x447350 = 0;
  var _0x29e8f4 = (a0_0x4f736f - a0_0xb3901) / 1000;
  var _0x221899 = 2;
  var _0x5c98fe = 8;
  _0x447350 = _0x5c98fe * Math.sin(Math.PI * 2 / _0x221899 * _0x29e8f4);
  for (r = 0; r < a0_0x4dac63.anis.length; r++) {
    var _0x498034 = _0xf8f1f1 + Math.sin(_0x3f8373 * r * (Math.PI / 180) - a0_0x844a6b(90)) * _0x2c60e8;
    var _0x4d7685 = _0x428d09 + Math.cos(_0x3f8373 * r * (Math.PI / 180) - a0_0x844a6b(90)) * _0x2c60e8;
    var _0x457229 = r * _0x456ff0 - a0_0x844a6b(90) - _0x456ff0 / 2;
    var _0x5c6ff0 = _0x457229 + _0x456ff0;
    ani = a0_0x4dac63.anis[r];
    var _0xee22fd = a0_0x434fde(ani);
    var _0x96137b = a0_0x2cc313(_0xee22fd);
    if (_0x96137b) {
      var _0x58eca9 = a0_0x4dac63[ani] > 0;
      _0x4b8dc6.save();
      _0x4b8dc6.globalAlpha = _0x58eca9 ? 1 : 0.3;
      var _0x485fd6 = _0x2de731;
      if (_0x58eca9) {
        _0x4b8dc6.shadowOffsetX = 0;
        _0x4b8dc6.shadowOffsetY = 0;
        _0x4b8dc6.shadowColor = "black";
        _0x4b8dc6.shadowBlur = 8;
        _0x485fd6 -= _0x447350;
      }
      _0x4b8dc6.drawImage(_0x96137b, _0x4d7685 - _0x485fd6 / 2, _0x498034 - _0x485fd6 / 2, _0x485fd6, _0x485fd6);
      _0x4b8dc6.restore();
      _0x4b8dc6.save();
      if (_0x58eca9) {
        _0x4b8dc6.shadowOffsetX = 0;
        _0x4b8dc6.shadowOffsetY = 0;
        _0x4b8dc6.shadowColor = "black";
        _0x4b8dc6.shadowBlur = 8;
      }
      _0x4b8dc6.strokeStyle = _0x58eca9 ? "#ff6e00" : "black";
      var _0xbfccae = _0x58eca9 ? 5 : 1;
      _0x4b8dc6.lineWidth = _0xbfccae;
      _0x4b8dc6.globalAlpha = _0x58eca9 ? 1 : 0.5;
      _0x4b8dc6.beginPath();
      _0x4b8dc6.arc(_0x428d09, _0x428d09, _0x2c60e8 - (_0xbfccae - 2) - _0x2de731 / 2, _0x457229, _0x5c6ff0);
      _0x4b8dc6.stroke();
    }
  }
  if (a0_0xbe2c6c != null) {
    if (a0_0xbe2c6c.width) {
      var _0x2faade = (a0_0x4f736f - a0_0xb3901) / 600;
      var _0xafc85 = (a0_0x2591d0 - a0_0x4f736f) / 600;
      if (_0xafc85 < 1) {
        _0x2faade = Math.max(0, _0xafc85);
      }
      var _0x337c45 = Math.min(1, _0x2faade);
      var _0x14e99b = a0_0xbe2c6c.width * _0x337c45;
      var _0x168f7b = a0_0xbe2c6c.height * _0x337c45;
      a0_0x4ef4f3.save();
      a0_0x4ef4f3.globalAlpha = _0x337c45;
      a0_0x4ef4f3.drawImage(a0_0xbe2c6c, a0_0x11866b / 2 - _0x14e99b / 2, a0_0x8379e6 / 2 - _0x168f7b / 2, _0x14e99b, _0x168f7b);
      a0_0x4ef4f3.restore();
      if (a0_0x4f736f > a0_0x2591d0 || !a0_0x290640) {
        a0_0x4dac63 = null;
        a0_0xb3901 = 0;
      }
    }
  }
}
function a0_0x434fde(_0x184b1e) {
  switch (_0x184b1e) {
    case a0_0x257f12:
      return "./skins/volcano/blackdragon/0/blackdragon.png";
    case a0_0x15fd74:
      return "./skins/land/dinomonster/0/dinomonster.png";
    case a0_0x415f2f:
      return "./skins/arctic/icemonster/0/icemonster.png";
    case a0_0x1b4846:
      return "./skins/volcano/landmonster/0/0/landmonster.png";
    case a0_0x30bc31:
      return "./skins/ocean/seamonster/0/seamonster.png";
    case a0_0x527dbe:
      return "./skins/desert/scorpion/0/giantscorpion.png";
    case a0_0x38090e:
      return "./skins/arctic/yeti/0/wolf.png";
    case a0_0x256160:
      return "./skins/land/dragon/0/0/dragon.png";
    case a0_0xbf4f2c:
      return "./skins/land/trex/0/trex.png";
    case a0_0x4e6cde:
      return "./skins/ocean/kraken/0/0/kraken.png";
    case a0_0x5f3a6f:
      return "./skins/ocean/kingcrab/0/kingcrab.png";
    case a0_0x472c8a:
      return "./skins/phoenix/phoenix.png";
    case a0_0x47c97f:
      return "./skins/desert/pterodactyl/0/pterodactyl_ability.png";
  }
}
document.addEventListener("keydown", function (_0x47b13c) {
  if (_0x47b13c.ctrlKey == true && (_0x47b13c.code == "Minus" || _0x47b13c.key == "Equal" || _0x47b13c.code == "NumpadSubtract" || _0x47b13c.key == "NumpadAdd")) {
    _0x47b13c.preventDefault();
  }
}, {
  passive: false
});
let a0_0x1df596 = null;
function a0_0x559386(_0x157418) {
  return new Promise((_0x57145f, _0x30541f) => {
    let _0x3a8357 = document.body.querySelector("#turnstile");
    if (_0x3a8357) {
      _0x3a8357.style.removeProperty("display");
    } else {
      _0x3a8357 = document.createElement("div");
      _0x3a8357.setAttribute("id", "turnstile");
      _0x3a8357.addEventListener("click", _0x453d5b => {
        if (_0x453d5b.target === _0x453d5b.currentTarget) {
          a0_0x2efe71();
        }
      });
      document.body.append(_0x3a8357);
    }
    a0_0x1df596 = turnstile.render(_0x3a8357, {
      sitekey: _0x157418,
      callback: _0x255415 => {
        a0_0x2efe71();
        _0x57145f(_0x255415);
      },
      "error-callback": _0xcbf203 => {
        a0_0x2efe71();
        _0x30541f(_0xcbf203);
      }
    });
  });
}
function a0_0x2efe71() {
  let _0x5c0951 = document.body.querySelector("#turnstile");
  if (_0x5c0951) {
    _0x5c0951.style.setProperty("display", "none");
    turnstile.remove(a0_0x1df596);
  }
}
